,all_awardings,allow_live_comments,author,author_flair_css_class,author_flair_richtext,author_flair_text,author_flair_type,author_fullname,author_is_blocked,author_patreon_flair,author_premium,awarders,can_mod_post,contest_mode,created_utc,domain,full_link,gildings,id,is_created_from_ads_ui,is_crosspostable,is_meta,is_original_content,is_reddit_media_domain,is_robot_indexable,is_self,is_video,link_flair_background_color,link_flair_richtext,link_flair_text_color,link_flair_type,locked,media_only,no_follow,num_comments,num_crossposts,over_18,parent_whitelist_status,permalink,pinned,post_hint,preview,pwls,retrieved_on,score,selftext,send_replies,spoiler,stickied,subreddit,subreddit_id,subreddit_subscribers,subreddit_type,thumbnail,title,total_awards_received,treatment_tags,upvote_ratio,url,whitelist_status,wls,link_flair_template_id,link_flair_text,url_overridden_by_dest,thumbnail_height,thumbnail_width,media_metadata,removed_by_category,gallery_data,is_gallery,crosspost_parent,crosspost_parent_list,media,media_embed,secure_media,secure_media_embed,author_flair_background_color,author_flair_text_color,collections,author_cakeday,edited
0.0,[],False,yairchu,,[],,text,t2_33msg,False,False,False,[],False,False,1648561061,self.haskell,https://www.reddit.com/r/haskell/comments/tqzxy1/now_that_stackage_supports_ghc_92_is_it_easy_to/,{},tqzxy1,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tqzxy1/now_that_stackage_supports_ghc_92_is_it_easy_to/,False,self,"{'enabled': False, 'images': [{'id': 'nfayPavSUB5ngYv6-19UHNBThsXfcLIDQl4HkEe3Cv0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b1c8a90e5690a7186afdb269ad05279551994d09', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=533bd055cdae7998d1b8f9cd9d7dedabc1715bda', 'width': 216}], 'source': {'height': 316, 'url': 'https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?auto=webp&amp;s=8cd5e918e2bde6ca72d4445d6fc007f203689799', 'width': 316}, 'variants': {}}]}",6,1648561072,1,"Being that native ARM executables should perform faster than emulated Intel, is it simple and easy yet to build ARM executables on macOS using stack?

Also asked [on StackOverflow](https://stackoverflow.com/questions/69143043/how-to-create-native-arm-executables-on-macos-using-ghc-stack) but didn't receive answers there.",True,False,False,haskell,t5_2qh36,69579,public,self,"Now that Stackage supports GHC 9.2, is it easy to build ARM executables on macOS?",0,[],1.0,https://www.reddit.com/r/haskell/comments/tqzxy1/now_that_stackage_supports_ghc_92_is_it_easy_to/,all_ads,6,,,,,,,,,,,,,,,,,,,,
1.0,[],False,flavortownXpress,,[],,text,t2_dxklpceb,False,False,False,[],False,False,1648557532,self.haskell,https://www.reddit.com/r/haskell/comments/tqytst/when_i_cabal_install_anything_why_is_it/,{},tqytst,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tqytst/when_i_cabal_install_anything_why_is_it/,False,,,6,1648557542,1,"Anything I cabal install is unavailable in my actual .hs file - it tells me ""could not find module xxx"". I'm using VSCode by the way. But it's accessible in the repl, no problem",True,False,False,haskell,t5_2qh36,69578,public,self,when I cabal install anything why is it accessible only in the REPL?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tqytst/when_i_cabal_install_anything_why_is_it/,all_ads,6,,,,,,,,,,,,,,,,,,,,
2.0,[],False,emilypii,,[],,text,t2_rs0av,False,False,False,[],False,False,1648508706,self.haskell,https://www.reddit.com/r/haskell/comments/tqltwe/ann_base160320_base320220_base640424/,{},tqltwe,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tqltwe/ann_base160320_base320220_base640424/,False,,,6,1648508717,1,"Hello All,

I'm pleased to announce that `base16`, `base32`, and `base64` have been updated to support GHC 9.2.x. In the most recent versions, due to GHC issue #20338 in which `targetByteOrder` was incorrect on Big Endian architectures, the required GHC version lower bound has been upped to GHC 8.10.x. In this version, GHC 8.10.x was silently patched to fix this behavior. 

Cheers,
Emily",True,False,False,haskell,t5_2qh36,69575,public,self,"[ANN] base16-0.3.2.0, base32-0.2.2.0, base64-0.4.2.4",0,[],1.0,https://www.reddit.com/r/haskell/comments/tqltwe/ann_base160320_base320220_base640424/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
3.0,[],False,g_difolco,,[],,text,t2_735ekc4l,False,False,False,[],False,False,1648500965,self.haskell,https://www.reddit.com/r/haskell/comments/tqj5ki/ann_bloodhound01900/,{},tqj5ki,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tqj5ki/ann_bloodhound01900/,False,,,6,1648500975,1,"As the new maintainer of [bloodhound](https://hackage.haskell.org/package/bloodhound) (a library to access to [ElasticSearch 7.x](https://www.elastic.co/elasticsearch/)), I'm proud to announce the `0.19.0.0`.

The change log is short but the highlights are:
 * GHC 9.0.1 &amp; GHC 9.2.1 support
 * Migration to `aeson2`

That's a modest restart.

I'll try to be reactive to any feedback/contributions.",True,False,False,haskell,t5_2qh36,69575,public,self,[ANN] bloodhound-0.19.0.0,0,[],1.0,https://www.reddit.com/r/haskell/comments/tqj5ki/ann_bloodhound01900/,all_ads,6,,,,,,,,,,,,,,,,,,,,
4.0,[],False,sridfr,,[],,text,t2_f1wkk8ou,False,False,False,[],False,False,1648479814,eli.thegreenplace.net,https://www.reddit.com/r/haskell/comments/tqbba5/more_thoughts_on_the_expression_problem_in_haskell/,{},tqbba5,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tqbba5/more_thoughts_on_the_expression_problem_in_haskell/,False,,,6,1648479824,1,,True,False,False,haskell,t5_2qh36,69574,public,default,More thoughts on the Expression Problem in Haskell,0,[],1.0,https://eli.thegreenplace.net/2018/more-thoughts-on-the-expression-problem-in-haskell/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://eli.thegreenplace.net/2018/more-thoughts-on-the-expression-problem-in-haskell/,,,,,,,,,,,,,,,,,
5.0,[],False,ricnorr,,[],,text,t2_17kso8nb,False,False,False,[],False,False,1648464903,self.haskell,https://www.reddit.com/r/haskell/comments/tq6myc/searching_for_opensource_project_for_training/,{},tq6myc,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tq6myc/searching_for_opensource_project_for_training/,False,,,6,1648464913,1,"Hi, I ended my Haskell course in the university and what to train/develop my skills in some opensource. I tried to contribute Pandoc, but writing one line-fixes is not interesting. Probably are there any beginners (or not) like me, who makes an opensource and developing is still alive? I could collaborate with you. I also hope, that you have a slack/telegram chat, to communicate about the project.",True,False,False,haskell,t5_2qh36,69571,public,self,Searching for opensource project for training skills,0,[],1.0,https://www.reddit.com/r/haskell/comments/tq6myc/searching_for_opensource_project_for_training/,all_ads,6,,,,,,,,,,,,,,,,,,,,
6.0,[],False,Odd-Fox-8410,,[],,text,t2_7pefb5kd,False,False,False,[],False,False,1648451819,self.haskell,https://www.reddit.com/r/haskell/comments/tq3p9p/what_do_i_need_to_start_writing_an_extension_or/,{},tq3p9p,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tq3p9p/what_do_i_need_to_start_writing_an_extension_or/,False,,,6,1648451830,1,"I've tried to look for tutorials on this, but I am quickly humbled by its difficulty. It seems to assume a lot of previous knowledge of writing programming languages. I am quite green in that area, so any resource suggestions should aim at a beginner.

Have I just not found the right tutorial?

What do I need to read, before I can understand the tutorials?

This is one of the tutorials I tried to read: [https://wiki.haskell.org/A\_practical\_Template\_Haskell\_Tutorial](https://wiki.haskell.org/A_practical_Template_Haskell_Tutorial)",True,False,False,haskell,t5_2qh36,69569,public,self,What do I need to start writing an Extension or Template Haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tq3p9p/what_do_i_need_to_start_writing_an_extension_or/,all_ads,6,,,,,,,,,,,,,,,,,,,,
7.0,[],False,Iceland_jack,,[],,text,t2_3qjdu,False,False,False,[],False,False,1648437221,self.haskell,https://www.reddit.com/r/haskell/comments/tpzy07/generic_applicative/,{},tpzy07,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tpzy07/generic_applicative/,False,self,"{'enabled': False, 'images': [{'id': '31ur9GDECSaFIAG26ZoSyNMCQ--9kdWNjZbxEUTlHcw', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/cw8SMwlYGr_7GA2sC92Kg-71VepbqiVrPg4yk0dS-BE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=876ebcaa54107f9189482f5964c2498f3cb0d29e', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/cw8SMwlYGr_7GA2sC92Kg-71VepbqiVrPg4yk0dS-BE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=5c7bcb02e3eccb7ad8fe0cfd30ad604c8fcf9e6b', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/cw8SMwlYGr_7GA2sC92Kg-71VepbqiVrPg4yk0dS-BE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=fd236098b710394e2f9d068360adae66a7ad46d8', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/cw8SMwlYGr_7GA2sC92Kg-71VepbqiVrPg4yk0dS-BE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=dca74380a25c7a78acb98b7c965bc7fd6b8ac9ee', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/cw8SMwlYGr_7GA2sC92Kg-71VepbqiVrPg4yk0dS-BE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=9ad76423a9be34a03295636486372b13e9ec03ec', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/cw8SMwlYGr_7GA2sC92Kg-71VepbqiVrPg4yk0dS-BE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=0ea330d8dad8a0a852a2cb1ed04c02bcc7ccae59', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/cw8SMwlYGr_7GA2sC92Kg-71VepbqiVrPg4yk0dS-BE.jpg?auto=webp&amp;s=fcd0dc49ab5524bcdea5976f1a619cf3a32fa9a0', 'width': 1200}, 'variants': {}}]}",6,1648437231,1,"The next release of base (4.17) will include the [`Generically1`](https://github.com/ghc/ghc/blob/master/libraries/base/changelog.md) newtype which can be used to derive `Applicative` and I really want to discuss challenges in pushing beyond that.

This is an example of how to use `Generically1` to derive an instance:

    type Foo :: Type -&gt; Type
    data Foo a = Foo [a] a (Int -&gt; Int -&gt; Maybe a)
      deriving stock Generic1
      deriving (Functor, Applicative) via Generically1 Foo

By the magic  of `Applicative` we get a backwards instance as a twofer via [`Backwards (Generically1 Foo)`](https://hackage.haskell.org/package/transformers-0.6.0.4/docs/Control-Applicative-Backwards.html). It runs the applicative effects in reverse order but this means that we always have at least two options unlike `DeriveFunctor` where the [instance is unique](https://stackoverflow.com/questions/19774904/are-functor-instances-unique).

`Generically1` works for a lot of simple `Applicative`s but it does not work for sum types. This is disappointing because it leaves out lists, `ZipList`s, `NonEmpty`-lists, `Maybe`, `Either a` and `Free f`-like functors. None of them can be derived because it turns out to be very difficult to come up with an instance for [`Applicative (Sum f g)`](https://hackage.haskell.org/package/base-4.16.1.0/docs/Data-Functor-Sum.html)!

This is discussed in the decade old blogpost [Abstracting with Applicatives](http://comonad.com/reader/2012/abstracting-with-applicatives/):

&gt; The Functor instance is straightforward for Sum, but the applicative instance is puzzling. What should ""pure"" do? It needs to inject into either the left or the right, so clearly we need some form of ""bias"" in the instance. What we really need is the capacity to ""work in"" one side of the sum until compelled to switch over to the other, at which point we're stuck there. If two functors, F and G are in a relationship such that we can always send `f x -&gt; g x` in a way that ""respects"" fmap (that is to say, such that (`fmap f . fToG == ftoG . fmap f`) then we call this a natural transformation. The action that sends f to g is typically called ""eta"". (We actually want something slightly stronger called a ""monoidal natural transformation"" that respects not only the functorial action `fmap` but the applicative action `&lt;*&gt;`, but we can ignore that for now).
&gt;
&gt; Now we can assert that as long as there is a natural transformation between g and f, then Sum f g can be made an Applicative, like so:
&gt; 
&gt;     class Natural f g where
&gt;       eta :: f a -&gt; g a
&gt;     
&gt;     instance (Applicative f, Applicative g, Natural g f) =&gt; Applicative (Sum f g) where
&gt;       pure x = InR $ pure x
&gt;       InL f &lt;*&gt; InL x = InL (f &lt;*&gt; x)
&gt;       InR g &lt;*&gt; InR y = InR (g &lt;*&gt; y)
&gt;       InL f &lt;*&gt; InR x = InL (f &lt;*&gt; eta x)
&gt;       InR g &lt;*&gt; InL x = InL (eta g &lt;*&gt; x)

This complicates the design space because these applicative morphisms overlap and clash with the Haskell typeclass system. What's the best way to model this? I'm not sure.

/u/Syrak came up with a brilliant mechanism that not only derives `Applicative` but `Monad` for any free monad: [Generic free monad](https://gist.github.com/Lysxia/d1e8442bdb5552b373a98daef289dba1), featuring advanced use of [*generic-data-surgery*](https://hackage.haskell.org/package/generic-data-surgery). The bias is resolved by passing the name of the `pure` construtor as a type-level string. 

    type Pipe :: Type -&gt; Type -&gt; Type -&gt; Type
    data Pipe i o a
      = Input (i -&gt; Pipe i o a)
      | Output o (Pipe i o a)
      | Return a
      deriving stock Generic1

      deriving (Functor, Applicative, Monad)
      via GenericFreeMonad ""Return"" (Pipe i o)

It is clear that `Applicative` requires more nuance than we are generally used to in deriving. The question is what interface should be presented. Do we expect users to micromanage applicative morphisms by hand or is it better to have specialised newtypes like `GenericFreeMonad ""Return""` that tackle one problem with minimal configuration.

See also:

* [Why is there no `-XDeriveApplicative` extension?](https://stackoverflow.com/questions/18861231/why-is-there-no-xderiveapplicative-extension/68650832)",True,False,False,haskell,t5_2qh36,69568,public,self,Generic Applicative,0,[],1.0,https://www.reddit.com/r/haskell/comments/tpzy07/generic_applicative/,all_ads,6,,,,,,,,,,,,,,,,,,,,
8.0,[],False,kvanberendonck,,[],,text,t2_du6nz,False,False,False,[],False,False,1648433729,github.com,https://www.reddit.com/r/haskell/comments/tpyxmy/githubwebhooks0160_released/,{},tpyxmy,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tpyxmy/githubwebhooks0160_released/,False,link,"{'enabled': False, 'images': [{'id': 'Q_R8x-IBfOu8iaKaa1ipOgK0pSJ8KZxPZnmovTEM4sU', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/ZiDRSdST9YJ4AWZwBX516xSwiK2pZS-dV7gd1v2kNzk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e90ef99e1d825735a5d2bffb4260c42478b2d350', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/ZiDRSdST9YJ4AWZwBX516xSwiK2pZS-dV7gd1v2kNzk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=83e9dad61825409955e610da342820057b4c56fb', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/ZiDRSdST9YJ4AWZwBX516xSwiK2pZS-dV7gd1v2kNzk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3e4f928b798f2e3efc355038fa63403af73fbcd9', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/ZiDRSdST9YJ4AWZwBX516xSwiK2pZS-dV7gd1v2kNzk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=22b91aacb93d047c849c9098b64ed19bd2a01777', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/ZiDRSdST9YJ4AWZwBX516xSwiK2pZS-dV7gd1v2kNzk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=7840b3d6021dcc8cb02e2f3179fbc12edda36907', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/ZiDRSdST9YJ4AWZwBX516xSwiK2pZS-dV7gd1v2kNzk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=f1ee2393b9052ee37f92e89e3752d8d0852752e4', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/ZiDRSdST9YJ4AWZwBX516xSwiK2pZS-dV7gd1v2kNzk.jpg?auto=webp&amp;s=fa92c5d8119ea077373c84ade69c306e1260161a', 'width': 1200}, 'variants': {}}]}",6,1648433739,1,,True,False,False,haskell,t5_2qh36,69568,public,default,github-webhooks-0.16.0 released,0,[],1.0,https://github.com/cuedo/github-webhooks/releases/tag/0.16.0,all_ads,6,,,https://github.com/cuedo/github-webhooks/releases/tag/0.16.0,70.0,140.0,,,,,,,,,,,,,,,
9.0,[],False,Droneslut,,[],,text,t2_wee7b,False,False,True,[],False,False,1648412573,self.haskell,https://www.reddit.com/r/haskell/comments/tpsbti/new_early_access_book_functional_programming_for/,{},tpsbti,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tpsbti/new_early_access_book_functional_programming_for/,False,self,"{'enabled': False, 'images': [{'id': '9yAgeDh7pAWG9bSM4g2zWB0h9RVnxODuJGruOT6mKEk', 'resolutions': [{'height': 142, 'url': 'https://external-preview.redd.it/wBeUovtugjCFBaki6Td2HIuCMPRYlnhkyfo1LKwmkhk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a9a41e22ee95bcb3c32ec645507f3ab864782307', 'width': 108}, {'height': 285, 'url': 'https://external-preview.redd.it/wBeUovtugjCFBaki6Td2HIuCMPRYlnhkyfo1LKwmkhk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c40fad3daaaecc5f41ebadf4ae684ff71505c9fd', 'width': 216}, {'height': 422, 'url': 'https://external-preview.redd.it/wBeUovtugjCFBaki6Td2HIuCMPRYlnhkyfo1LKwmkhk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c3de3d76e0976c3aa2f28cbc0e612d11178270bf', 'width': 320}], 'source': {'height': 630, 'url': 'https://external-preview.redd.it/wBeUovtugjCFBaki6Td2HIuCMPRYlnhkyfo1LKwmkhk.jpg?auto=webp&amp;s=97085379aea11488b8c0338facd730283514d136', 'width': 477}, 'variants': {}}]}",6,1648412584,1,"There is a new Haskell book being published by No Starch Press called [Functional Programming for Physics Geeks](https://nostarch.com/functional-programming-physics-geeks) which just recently went into early access. The book is the culmination of the author's decades of experience teaching computational physics using functional programming and it covers Newtonian mechanics and electromagnetism all in Haskell, with emphasis on using strong static typing and compositionality to implement the core ideas of kinematics and dynamics. The author also has a library of code used in the book on Hackage [here](https://hackage.haskell.org/package/learn-physics).

Personally I love books using Haskell in application areas that are outside the field of software engineering, like [van Eijck and Unger's Computational Semantics with Functional Programming](https://www.cambridge.org/core/books/computational-semantics-with-functional-programming/0D3BAC27C39751AE4FF7F08FCC1C1364), so I am very much looking forward to this book and I thought others might be too. Relive the horrors of undergrad physics, but this time in Haskell!

I know that the author has written about using Haskell to teach physics before and has been working on this book for a while so maybe people have seen it before but didn't know it was slated to come out this year. The page for the book had been live for a little bit last year but then it disappeared. However it seems to be back up now because early access for the book has opened. The last time I talked to the author he said the goal date for publication was in May, but it seems to be pushed back to October this year.

(NB I'm not involved in any way with the book, I'm just excited for it and hadn't seen it mentioned yet.)",False,False,False,haskell,t5_2qh36,69561,public,self,New Early Access Book: Functional Programming for Physics Geeks,0,[],1.0,https://www.reddit.com/r/haskell/comments/tpsbti/new_early_access_book_functional_programming_for/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
10.0,[],False,apshrestha,,[],,text,t2_33agbs09,False,False,False,[],False,False,1648408450,self.haskell,https://www.reddit.com/r/haskell/comments/tpqvm7/mindra_diagrams_and_gloss_for_the_masses/,{},tpqvm7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/tpqvm7/mindra_diagrams_and_gloss_for_the_masses/,False,self,"{'enabled': False, 'images': [{'id': 'hglFoxWXmwkFD9WpBl_rgkEJ3_wixw8Wnab_oGrUB2s', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/ElqMNJzfdJ1AngqEv-TNQJsB1QirwllYNAtjEjKFIWM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=58afab326c3bb3d59c5873e987a356e7ce0ee061', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/ElqMNJzfdJ1AngqEv-TNQJsB1QirwllYNAtjEjKFIWM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3bf40bb88cf02205fb4289b2b005ada704fcfaad', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/ElqMNJzfdJ1AngqEv-TNQJsB1QirwllYNAtjEjKFIWM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=8e7597261111a56bf2f810429581bd0035937955', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/ElqMNJzfdJ1AngqEv-TNQJsB1QirwllYNAtjEjKFIWM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=643baeb5d7dd5f34ff65c9b6650a0c27e4450b9e', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/ElqMNJzfdJ1AngqEv-TNQJsB1QirwllYNAtjEjKFIWM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=bbb717767b25c903f1be630352d7316acf7a2042', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/ElqMNJzfdJ1AngqEv-TNQJsB1QirwllYNAtjEjKFIWM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=24c804e96a1dc6583ed350226657337251376aa6', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/ElqMNJzfdJ1AngqEv-TNQJsB1QirwllYNAtjEjKFIWM.jpg?auto=webp&amp;s=acc2ca8fcc7c9fee01d8a34ac8af840bffdf3186', 'width': 1200}, 'variants': {}}]}",6,1648408461,1,"https://github.com/rorokimdim/mindra

I love Diagrams and Gloss libraries in haskell. I wanted to try making something that will enable anyone/me to use it in other programming languages for quick scripts – for drawing simple geometric shapes and animations.

mindra talks via stdin/stdout, so integrating with it should be easy. So far I have one client library ([https://github.com/rorokimdim/mindra-clj](https://github.com/rorokimdim/mindra-clj)) for Clojure.

I’m at the beginner level in haskell. I’d appreciate any kind of feedback (either on mindra or the haskell code in general). Thanks for reading!",True,False,False,haskell,t5_2qh36,69562,public,self,mindra: Diagrams and Gloss for the masses?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tpqvm7/mindra_diagrams_and_gloss_for_the_masses/,all_ads,6,,,,,,,,,,,,,,,,,,,,
11.0,[],False,tomejaguar,,[],,text,t2_45sug,False,False,False,[],False,False,1648400598,self.haskell,https://www.reddit.com/r/haskell/comments/tpo6u8/breakage_and_deprecation_cycle_policies/,{},tpo6u8,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tpo6u8/breakage_and_deprecation_cycle_policies/,False,,,6,1648400609,1,"I've just published [Opaleye's API breakage policy](http://h2.jaguarpaw.co.uk/posts/opaleyes-api-breakage-policy/) inspired by @chrisdone's article on his [Immutable Publishing Policy](https://chrisdone.com/posts/ipp/).

Does anyone know of any other articles on API breakage and deprecation cycle policies, in Haskell or any other language?  It would be great to collect them together so we can learn from them and reduce the costs of change on Haskell users.",True,False,False,haskell,t5_2qh36,69564,public,self,Breakage and deprecation cycle policies,0,[],1.0,https://www.reddit.com/r/haskell/comments/tpo6u8/breakage_and_deprecation_cycle_policies/,all_ads,6,,,,,,,,,,,,,,,,,,,,
12.0,[],False,BrunoBasher,,[],,text,t2_k39yslmw,False,False,False,[],False,False,1648353374,self.haskell,https://www.reddit.com/r/haskell/comments/tpby52/recursive_factorial_function_error/,{},tpby52,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tpby52/recursive_factorial_function_error/,False,,,6,1648353385,1," I am getting the error on line 23:

Couldn't match expected type ‘Maybe Int’ with actual type ‘Int’ 

    safeFact :: Int -&gt; Maybe Int
    safeFact n
        | n &lt; 0 = Nothing
        | n == 0 = Just 1
        | n == 1 = Just 1
        | otherwise = n * safeFact (n - 1)",True,False,False,haskell,t5_2qh36,69556,public,self,Recursive Factorial Function Error,0,[],1.0,https://www.reddit.com/r/haskell/comments/tpby52/recursive_factorial_function_error/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
13.0,[],False,ittsopu,,[],,text,t2_5c1a9yed,False,False,False,[],False,False,1648310170,self.haskell,https://www.reddit.com/r/haskell/comments/tou97i/how_do_you_count_the_occurences_of_a_digit_n_in_a/,{},tou97i,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tou97i/how_do_you_count_the_occurences_of_a_digit_n_in_a/,False,,,6,1648310180,1,,True,False,False,haskell,t5_2qh36,69544,public,self,How do you count the occurences of a digit (n) in a list [1..x] ?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tou97i/how_do_you_count_the_occurences_of_a_digit_n_in_a/,all_ads,6,ebb4b74c-16d0-11eb-9ff6-0e5aacb57bb7,homework,,,,,,,,,,,,,,,,,,
14.0,[],False,zsome,,[],,text,t2_gvnql7,False,False,False,[],False,False,1648279014,self.haskell,https://www.reddit.com/r/haskell/comments/toj7lo/which_nosql/,{},toj7lo,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/toj7lo/which_nosql/,False,,,6,1648279025,1,"Hi,

I start a new small project for learning purpose.

I would like to use a nosql db (I know the mongodb because of my company's projects).

maximum \~5000 record / day 

What I saw is cassandra, redis, acid-state.

What kind of nosql is used frequently in cloud with haskell ?  

Please advice a nosql db for me :)",True,False,False,haskell,t5_2qh36,69541,public,self,Which nosql,0,[],1.0,https://www.reddit.com/r/haskell/comments/toj7lo/which_nosql/,all_ads,6,,,,,,,,,,,,,,,,,,,,
15.0,[],False,theKGS,,[],,text,t2_eubyx,False,False,False,[],False,False,1648237836,self.haskell,https://www.reddit.com/r/haskell/comments/tnxhwf/i_need_some_beginner_help_with_actually_compiling/,{},tnxhwf,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tnxhwf/i_need_some_beginner_help_with_actually_compiling/,False,,,6,1648237846,1,"I've had to move my developing of Haskell code from a system that I did not maintain myself, to my own laptop. The thing is: on the old system whoever set that thing up made it so that all Haskell libraries were available. I could just include them and run ghci and it would run without a hassle and I could do this without fiddling around with Cabal. Just compile and run any file without bothering about project configs and whatever.

Since moving to my laptop and trying to do the same here, I consistently get messages about missing modules.

Example:

""Could not find module ‘Control.Monad.Par’""

I've tried reading about how to do it, but introductory guides to Cabal all talk about setting up project stuff, which was not at all necessary on the old system. On the old system I could create a .hs file wherever I wanted and compile it with ghc/ghci easily. I did not need to set up Cabal projects to do it.",True,False,False,haskell,t5_2qh36,69530,public,self,I need some beginner help with actually compiling code with ghci,0,[],1.0,https://www.reddit.com/r/haskell/comments/tnxhwf/i_need_some_beginner_help_with_actually_compiling/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
16.0,[],False,n00bomb,,[],,text,t2_fhy7z,False,False,False,[],False,False,1648228425,haskell.foundation,https://www.reddit.com/r/haskell/comments/tnrsg7/the_haskell_interlude_11_simon_peyton_jones/,{},tnrsg7,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tnrsg7/the_haskell_interlude_11_simon_peyton_jones/,False,,,6,1648228435,1,,False,False,False,haskell,t5_2qh36,69531,public,default,The Haskell Interlude 11 - Simon Peyton Jones,0,[],1.0,https://haskell.foundation/podcast/11/,all_ads,6,,,https://haskell.foundation/podcast/11/,,,,,,,,,,,,,,,,,
17.0,[],False,rhl120,,[],,text,t2_6cjrymqf,False,False,False,[],False,False,1648217221,self.haskell,https://www.reddit.com/r/haskell/comments/tnmpe1/commands_mapped_to_some_functions_in_a_repl/,{},tnmpe1,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tnmpe1/commands_mapped_to_some_functions_in_a_repl/,False,,,6,1648217232,1,"Hi, 

I am trying to write a sort of repl for a hex editor. The work of the hex editor is irrelevent. I have some functions all of them return an Either String (String, Core) where Core contains information about the current state of the program. In order to execute those functions, I store the functions and the commands that correspond to them in a Map String (String -&gt; Either String (String, Core)) but this doesn't work that well because the user may want to load a file into the program meaning that some functions may be IOs so what would be a better way to do what I want (without having to make everything IO)?

Thanks",True,False,False,haskell,t5_2qh36,69529,public,self,Commands mapped to some functions in a REPL,0,[],1.0,https://www.reddit.com/r/haskell/comments/tnmpe1/commands_mapped_to_some_functions_in_a_repl/,all_ads,6,,,,,,,,,,,,,,,,,,,,
18.0,[],False,cjduncana,,[],,text,t2_75wvr,False,False,False,[],False,False,1648216834,self.haskell,https://www.reddit.com/r/haskell/comments/tnmkpe/defining_the_eq_instance_for_a_class/,{},tnmkpe,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/tnmkpe/defining_the_eq_instance_for_a_class/,False,,,6,1648216844,1,"I have the following class:

    class Entity a id where
      getId :: a -&gt; id

I use this class to represent data that have an identity, so for example:

    data Person = Person
      { id :: Int,
        name :: String
      }
    
    instance Entity Person Int where
      getId = Person.id

This instance allows me to compare Persons even if they changed their name. What I have noticed is that in several places in my code, I'm repeating the same comparison:

    (getId personInThePast) == (getId samePerson)

It would be great if I could write the following:

    personInThePast === samePerson

The idea would be that the compiler would know it should just compare their IDs. I can make an `Eq` instance of `Person`, but if I follow that path, I would repeat the same code for all my `Entity`. Since I know how to equate any `Entity`, I thought that I could write an `Eq` instance for my `Entity` class, but the compiler complains that `Entity` is a constraint, so now I don't know how to implement this. Any help?",True,False,False,haskell,t5_2qh36,69530,public,self,Defining the Eq instance for a class,0,[],1.0,https://www.reddit.com/r/haskell/comments/tnmkpe/defining_the_eq_instance_for_a_class/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
19.0,[],False,oskargreda,,[],,text,t2_fi2s2co8,False,False,False,[],False,False,1648216481,self.haskell,https://www.reddit.com/r/haskell/comments/tnmgbd/mlabs_is_now_over_a_100_people_if_you_are_looking/,{},tnmgbd,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tnmgbd/mlabs_is_now_over_a_100_people_if_you_are_looking/,False,self,"{'enabled': False, 'images': [{'id': 'GnuOK9IWNyfPHXokumwalY9XRYCi5oSA4uOxJlBNBp4', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f6c520b66a9e4cf15ae1b4b79af413002418a97e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=78ce6df2b94f79b0ccb5ac2b1439fdbd87be5a53', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d0ed86839ce6deb3d5d37506ef62434b8a77baf3', 'width': 320}], 'source': {'height': 500, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?auto=webp&amp;s=562a0dfc197f2356edb2e6c70d03e94ba27414cf', 'width': 500}, 'variants': {}}]}",6,1648216492,1,"We are one of the leading Haskell consultancies in the fintech, blockchain and AI space, with a passion for Haskell and open source software. We are looking for a remote Haskeller to join our team. 

We are currently experiencing fantastic growth and now have a team of **over a 100 people**. We are looking to continue growing and would love to have more Haskellers on board with us!

If you are excited about Haskell, about robust and clean software and are up for a new challenge, you’ve come to the right place!

We have developer roles from Junior to Senior, as well as roles in Delivery Management.

**As a Haskell Developer your role may include:**

\- Building and testing smart contracts, traditional applications

\- Helping to define best practices with new application architectures

\- Building tools and libraries to support application development

\- Working in emerging technologies

\- For Senior and Intermediates: Systems Design, Formal Verification, Security and Performance analysis.

**As a Delivery Manager your role may include:**

\- Research and design of financial protocols

\- Providing continuity of care to customers across product lifecycles

\- Escalating issues that arise beyond the scope of a single project/department/client scope

\- Steering products toward MVP, delivery targets, audit-readiness and getting required resources in place to do so.

Requirements

* Strong Haskell skills
* Strong software engineering and architecture skills
* Strong problem solving and analytical skills
* Basic knowledge of security, concurrency, backend systems, system scaling and databases
* Version control (git)
* Strong verbal skills in English
* Experience with blockchain, smart contracts, compilers, nix and/or purescript is a bonus

Benefits

* Focus on learning and individual growth in Haskell and Computer Science
* Work with other great Haskellers, open source contributors and computer scientists
* Interesting and challenging projects
* Talk with anyone in the organization, regardless of team
* Remote work
* Flexible working hours
* 6 weeks of paid vacation
* Competitive salary

We have a variety of projects to work on at any time, ranging from payment stacks to smart contracts and blockchain to open source libraries, DSLs and compilers.

If you like Haskell and challenging projects, MLabs is the place for you, so please apply now via [https://apply.workable.com/mlabs/j/63DAAA4AEF/](https://apply.workable.com/mlabs/j/63DAAA4AEF/)

If you have any questions please direct these to jobs@mlabs.city",True,False,False,haskell,t5_2qh36,69530,public,self,MLabs is now over a 100 people! If you are looking for a Fully Remote Haskell Developer role -Come join us! Paid internships are also available!,0,[],1.0,https://www.reddit.com/r/haskell/comments/tnmgbd/mlabs_is_now_over_a_100_people_if_you_are_looking/,all_ads,6,,,,,,,,,,,,,,,,,,,,
20.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1648215151,haskellweekly.news,https://www.reddit.com/r/haskell/comments/tnm0s4/issue_308_haskell_weekly_newsletter/,{},tnm0s4,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tnm0s4/issue_308_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1648215161,1,,True,False,False,haskell,t5_2qh36,69530,public,default,Issue 308 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/308.html,all_ads,6,,,https://haskellweekly.news/issue/308.html,140.0,140.0,,,,,,,,,,,,,,,
21.0,[],False,ChrisWohlert,,[],,text,t2_v8h3i,False,False,False,[],False,False,1648207133,self.haskell,https://www.reddit.com/r/haskell/comments/tnjnrz/does_a_reverse_of_tuple_sections_exist/,{},tnjnrz,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tnjnrz/does_a_reverse_of_tuple_sections_exist/,False,,,6,1648207143,1,"With Tuple Sections, `(, ""I"", , , ""Love"", , 1337)` becomes  `\a b c d -&gt; (a, ""I"", b, c, ""Love"", d, 1337)` 

That's brilliant, but is there a way to reverse this?

Say I have this:

    data Person = Person {personId :: Int, personName :: T.Text, personAge :: Int}
 deriving (Show)

mapToPerson :: (Int, T.Text, Int) -&gt; Person
mapToPerson (a, b, c) = Person a b c

I want to generalize `uncurry` to any arguments, could I then do something like:

`mapToPerson = ~(,,) . Person`",True,False,False,haskell,t5_2qh36,69531,public,self,Does a reverse of Tuple sections exist?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tnjnrz/does_a_reverse_of_tuple_sections_exist/,all_ads,6,,,,,,,,,,,,,,,,,,,,
22.0,[],False,Irish-Green,,[],,text,t2_jg1yr5z0,False,False,False,[],False,False,1648203146,self.haskell,https://www.reddit.com/r/haskell/comments/tnipf5/im_trying_to_learn_how_to_use_haskell_and_not/,{},tnipf5,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tnipf5/im_trying_to_learn_how_to_use_haskell_and_not/,False,,,6,1648203156,1,"&amp;#x200B;

When I use the inc function it works perfectly, none of the others work however, I don't fully understand what I am doing wrong? Can anyone guide me as to what my issue is please?

&amp;#x200B;

https://preview.redd.it/4647prsa8ip81.png?width=869&amp;format=png&amp;auto=webp&amp;s=b84d15c56c66de7d8306431c2f7bacbf55b4ad5a

&amp;#x200B;

This is what I aim to try get, but its not happening!

&amp;#x200B;

&amp;#x200B;

https://preview.redd.it/avjn230n8ip81.png?width=260&amp;format=png&amp;auto=webp&amp;s=382133bc5de3092e1d787bd56d946a88e1375c19",True,False,False,haskell,t5_2qh36,69531,public,self,I'm trying to learn how to use Haskell and not sure why I am getting this issue?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tnipf5/im_trying_to_learn_how_to_use_haskell_and_not/,all_ads,6,,,,140.0,140.0,"{'4647prsa8ip81': {'e': 'Image', 'id': '4647prsa8ip81', 'm': 'image/png', 'p': [{'u': 'https://preview.redd.it/4647prsa8ip81.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=2093180660f2430b24e40335f0bfe8c8b47c1fd1', 'x': 108, 'y': 117}, {'u': 'https://preview.redd.it/4647prsa8ip81.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=636d23adaeb56dfb7919a68d8f237247eb09106b', 'x': 216, 'y': 235}, {'u': 'https://preview.redd.it/4647prsa8ip81.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=ab8a5b488dd7e82803632ffe2a0d90dd95a62845', 'x': 320, 'y': 349}, {'u': 'https://preview.redd.it/4647prsa8ip81.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=80307b46360afaedd9166e664c257d2884e888c7', 'x': 640, 'y': 698}], 's': {'u': 'https://preview.redd.it/4647prsa8ip81.png?width=869&amp;format=png&amp;auto=webp&amp;s=b84d15c56c66de7d8306431c2f7bacbf55b4ad5a', 'x': 869, 'y': 949}, 'status': 'valid'}, 'avjn230n8ip81': {'e': 'Image', 'id': 'avjn230n8ip81', 'm': 'image/png', 'p': [{'u': 'https://preview.redd.it/avjn230n8ip81.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=69c473d903305971f71239a1811a0c034f65933c', 'x': 108, 'y': 55}, {'u': 'https://preview.redd.it/avjn230n8ip81.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=989886cbb595414248fbfe839da443ac8dc6c365', 'x': 216, 'y': 111}], 's': {'u': 'https://preview.redd.it/avjn230n8ip81.png?width=260&amp;format=png&amp;auto=webp&amp;s=382133bc5de3092e1d787bd56d946a88e1375c19', 'x': 260, 'y': 134}, 'status': 'valid'}}",,,,,,,,,,,,,,
23.0,[],False,Kindly_Signature2408,,[],,text,t2_ktfv3tgk,False,False,False,[],False,False,1648193989,self.haskell,https://www.reddit.com/r/haskell/comments/tngqtp/parsing_with_parsec_command_line_arguments_of/,{},tngqtp,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tngqtp/parsing_with_parsec_command_line_arguments_of/,False,,,6,1648193999,1,[removed],True,False,False,haskell,t5_2qh36,69530,public,self,Parsing with Parsec: command line arguments of different types parsing,0,[],1.0,https://www.reddit.com/r/haskell/comments/tngqtp/parsing_with_parsec_command_line_arguments_of/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
24.0,[],False,EffectiveMedia4002,,[],,text,t2_l405zdd4,False,False,False,[],False,False,1648190909,self.haskell,https://www.reddit.com/r/haskell/comments/tng22e/q_how_to_stop_hopping_around_languages/,{},tng22e,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tng22e/q_how_to_stop_hopping_around_languages/,False,,,6,1648190919,1,[removed],True,False,False,haskell,t5_2qh36,69528,public,self,[Q] How to stop hopping around languages?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tng22e/q_how_to_stop_hopping_around_languages/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
25.0,[],False,rbrucesp,,[],,text,t2_cascywq,False,False,False,[],False,False,1648190677,self.haskell,https://www.reddit.com/r/haskell/comments/tng0a9/embedding_system_f_omega_with_gadts/,{},tng0a9,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tng0a9/embedding_system_f_omega_with_gadts/,False,,,6,1648190688,1,"Hello,

&amp;#x200B;

i tried to write an parser and an interpreter for System F Omega in Haskell. My goal is not to write the Functions for Substitution myself but use Haskell Functions , but I don't know if that is possible.

I've seen this Code in my FP-Lecture an I would  also like to write an interpreter that is safe and easy and doesn't needs  much Code. 

    data FExp e a where
      Con :: a -&gt; FExp e a
      App :: FExp e (a -&gt; b) -&gt; FExp e a -&gt; FExp e b
      Lam :: FExp (a, e) b -&gt; FExp e (a -&gt; b)
      Var :: Nat e a -&gt; FExp e a
    
    data Nat e a where
      Zero :: Nat (a, b) a
      Succ :: Nat e a -&gt; Nat (b, e) a
    
    type Program a = FExp () a
    
    lookupNat :: Nat e a -&gt; e -&gt; a
    lookupNat Zero (a, b) = a
    lookupNat (Succ p) (_, b) = lookupNat p b
    
    feval :: e -&gt; FExp e a -&gt; a
    feval e (Con v) = v
    feval e (App f x) = (feval e f) (feval e x)
    feval e (Lam b) = \x -&gt; feval (x, e) b
    feval e (Var p) = lookupNat p e
    

I've rad *Stitch*: The *Sound* Type-*Indexed* Type Checker and wrote something similar myself. That was not too difficult, but it is hard for me to do something similar for a more  complex language.

I have also seen [https://www.cis.upenn.edu/\~plclub/blog/2020-06-26-Strongly-typed-System-F/](https://www.cis.upenn.edu/~plclub/blog/2020-06-26-Strongly-typed-System-F/) this Talk about System F. I really liked it, but my goal is to write less Code and to allow different Kinds.

&amp;#x200B;

This is my current Code:

    
    import           Data.Kind
    import           Data.Type.Equality
    
    
    data Nat = Z | S Nat
    
    data Kind = Star | Kfun Kind Kind
        deriving Eq
    
    data SKind :: Kind -&gt; Type where
        SStar ::SKind Star
        SKfun ::SKind a -&gt; SKind b -&gt;SKind (Kfun a b)
    
    data TyVarDB :: [Kind] -&gt; Kind -&gt; Type where
        ZK ::TyVarDB (k ': ks) k
        SK ::TyVarDB ks k -&gt; TyVarDB (k' ': ks) k
    
    data HTyList  (g :: [Kind]) where
        HTyNil  ::HTyList '[]
        HTyCons ::Type' ks k -&gt; HTyList g -&gt; HTyList (k:g)
    
    
    
    
    data Idx'' :: forall (g :: [Kind]) (ks :: [Kind]) (k::Kind) . HTyList g -&gt; Type' ks k -&gt; Type where
       Z''' ::Idx'' (HTyCons t g) t
       S''' ::Idx'' g t -&gt; Idx'' (u`HTyCons`g) t
    
    
    
    data Idx' (g :: [Type' ks k]) (t::Type' ks k) :: Type where
        Z'' ::Idx' (t:g) t
        S'' ::Idx' g t -&gt; Idx' (u:g) t
    
    
    
    data Type' :: [Kind] -&gt; Kind -&gt; Type where 
        TyVar ::TyVarDB ks k -&gt; Type' ks k
        TyApp  ::Type' ks (k1`Kfun` k2)  -&gt; Type' ks k1 -&gt;  Type' ks k2
        TyArr ::Type' ks Star -&gt; Type'  ks Star -&gt; Type'  ks Star
        --TyLam ::SKind k1 -&gt;  Type' (k1:ks) k2 -&gt; Type'  ks (Kfun k1 k2) 
    
    -- not in the Paper
        TyLam :: Type' (k1:ks) k2 -&gt; Type'  ks (Kfun k1 k2) -- not in the Paper
        -- TyForall ::SKind k1 -&gt; Type' (k1:ks) Star -&gt; Type'  ks Star
        TyForall ::Type' (k1:ks) Star -&gt; Type'  ks Star
        TyNat ::Type' ks Star
    
    
    -- -- should ks ~ g ?                                          
    -- kindVar, typeVars, Type
    
    data FExp   ::  forall (ks :: [Kind]) (k::Kind) (g:: [Kind]). [Kind] -&gt; HTyList g -&gt; Type' ks k -&gt; Type  where
             AppT ::FExp ks  e (TyArr a  b) -&gt; FExp  ks e a -&gt; FExp ks e b
             LamT ::FExp  ks (HTyCons a  e) b -&gt; FExp ks  e (TyArr a b)         --
             VarT :: Idx'' e a -&gt; FExp ks e a
             IntT ::Integer  -&gt; FExp ks e  TyNat
             TyLam'  ::FExp (k:ks) e a  -&gt; FExp ks e  (TyForall a)
    
    
    type family Interp (t :: Type' ks Star) where
        Interp TyNat = Integer
        Interp (TyArr t1 t2) = Interp t1 -&gt; Interp t2
    
    
    eval :: forall (g :: [Kind]) (ks :: [Kind])  (a :: [Kind])(b :: HTyList g) (c :: Type' ks Star) p. FExp a b c -&gt; Interp c
    eval (IntT n) = n
    eval (AppT f x) = eval f $ eval x

I think, the Type' Definition makes sense but I think everything else has its flaws.

I don't even now what the type of the final interpreter should be and I have no idea, how I can continue. Can you please point me in the right direction.",True,False,False,haskell,t5_2qh36,69528,public,self,Embedding System F Omega with GADTS,0,[],1.0,https://www.reddit.com/r/haskell/comments/tng0a9/embedding_system_f_omega_with_gadts/,all_ads,6,,,,,,,,,,,,,,,,,,,,
26.0,[],False,Limp_Step_6774,,[],,text,t2_6wlxzw83,False,False,False,[],False,False,1648177065,self.haskell,https://www.reddit.com/r/haskell/comments/tnch6b/ihaskell_integration_with_hls/,{},tnch6b,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tnch6b/ihaskell_integration_with_hls/,False,,,6,1648177075,1,"I'm really liking using a jupyter notebook for Haskell (via IHaskell), and running it in VSCode. But it would be even better if I had HLS functionality in the notebook (mousing over types, code suggestions, etc). Is that available?",True,False,False,haskell,t5_2qh36,69523,public,self,IHaskell integration with HLS,0,[],1.0,https://www.reddit.com/r/haskell/comments/tnch6b/ihaskell_integration_with_hls/,all_ads,6,,,,,,,,,,,,,,,,,,,,
27.0,[],False,Limp_Step_6774,,[],,text,t2_6wlxzw83,False,False,False,[],False,False,1648176881,self.haskell,https://www.reddit.com/r/haskell/comments/tncf7m/plotting_libraries/,{},tncf7m,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tncf7m/plotting_libraries/,False,,,6,1648176891,1,"I'm currently using hvega to make some data science plots. It's pretty full-featured, but kind of hard to learn, and not very strongly typed. Do people have experience with other options that they'd recommend?

(Sidenote: I'm using IHaskell for the first time, and displaying plots in a jupyter notebook is working great!)",True,False,False,haskell,t5_2qh36,69523,public,self,Plotting libraries,0,[],1.0,https://www.reddit.com/r/haskell/comments/tncf7m/plotting_libraries/,all_ads,6,,,,,,,,,,,,,,,,,,,,
28.0,[],False,favoritz,,[],,text,t2_1mw3loyi,False,False,False,[],False,False,1648173398,reddit.com,https://www.reddit.com/r/haskell/comments/tnbd4r/haskell_beginner_issue_with_learning_recursion/,{},tnbd4r,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tnbd4r/haskell_beginner_issue_with_learning_recursion/,False,,,6,1648173408,1,,True,False,False,haskell,t5_2qh36,69523,public,default,HASKELL BEGINNER! issue with learning recursion,0,[],1.0,https://www.reddit.com/gallery/tnbd4r,all_ads,6,,,https://www.reddit.com/gallery/tnbd4r,140.0,140.0,"{'ey9bjyhwrfp81': {'e': 'Image', 'id': 'ey9bjyhwrfp81', 'm': 'image/png', 'p': [{'u': 'https://preview.redd.it/ey9bjyhwrfp81.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=b9ea89a4d10ae5a258c6e7da95904e09b0ee51ea', 'x': 108, 'y': 73}, {'u': 'https://preview.redd.it/ey9bjyhwrfp81.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=a43bfe03cd1e822cb19e3a9782bb072ff3941b89', 'x': 216, 'y': 146}, {'u': 'https://preview.redd.it/ey9bjyhwrfp81.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=76982cbbbbfdd0d2a04e2f150639c8234dfddca2', 'x': 320, 'y': 216}, {'u': 'https://preview.redd.it/ey9bjyhwrfp81.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=2576fdda0825714ee6e002f73bdad0749a833507', 'x': 640, 'y': 433}, {'u': 'https://preview.redd.it/ey9bjyhwrfp81.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=293a0a012efabfc2d09bfa1e6095fd960f77698f', 'x': 960, 'y': 650}, {'u': 'https://preview.redd.it/ey9bjyhwrfp81.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9e71bcd0e23c75382b5d39dacd321651405a4499', 'x': 1080, 'y': 732}], 's': {'u': 'https://preview.redd.it/ey9bjyhwrfp81.png?width=1292&amp;format=png&amp;auto=webp&amp;s=40e85986e97027cf0ece8213ce206f750cb58433', 'x': 1292, 'y': 876}, 'status': 'valid'}, 'go9yr6hwrfp81': {'e': 'Image', 'id': 'go9yr6hwrfp81', 'm': 'image/png', 'p': [{'u': 'https://preview.redd.it/go9yr6hwrfp81.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=2c5db88688fa0a56931ab13ac20601038c609d97', 'x': 108, 'y': 149}, {'u': 'https://preview.redd.it/go9yr6hwrfp81.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=51d75a04ac28955b877e4f84e761285b301b9b63', 'x': 216, 'y': 299}, {'u': 'https://preview.redd.it/go9yr6hwrfp81.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=5771cb28d566fdc7ff25fcd252e3a505c34f829e', 'x': 320, 'y': 443}, {'u': 'https://preview.redd.it/go9yr6hwrfp81.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=1e515c7117363856c5fcd06220f14d6438931cc1', 'x': 640, 'y': 886}], 's': {'u': 'https://preview.redd.it/go9yr6hwrfp81.png?width=850&amp;format=png&amp;auto=webp&amp;s=d9b8ba3f21e02d308d37958dc22e9ac81c4d2775', 'x': 850, 'y': 1178}, 'status': 'valid'}, 'w4m5b5hwrfp81': {'e': 'Image', 'id': 'w4m5b5hwrfp81', 'm': 'image/png', 'p': [{'u': 'https://preview.redd.it/w4m5b5hwrfp81.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=c7f1749479b58fd47368e4ea2174529b20147142', 'x': 108, 'y': 68}, {'u': 'https://preview.redd.it/w4m5b5hwrfp81.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=7c84e7593eab56d15689fc60212fa39f18c956eb', 'x': 216, 'y': 136}, {'u': 'https://preview.redd.it/w4m5b5hwrfp81.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=8a771ffc1123434343f1a6dc671bd01d626ebc90', 'x': 320, 'y': 201}, {'u': 'https://preview.redd.it/w4m5b5hwrfp81.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=80e3b7ba8b42ad40a9d8da161bb7854f3cd1daaf', 'x': 640, 'y': 403}], 's': {'u': 'https://preview.redd.it/w4m5b5hwrfp81.png?width=924&amp;format=png&amp;auto=webp&amp;s=5be315f8414523875ca71abaedc41d2632d16576', 'x': 924, 'y': 582}, 'status': 'valid'}}",,"{'items': [{'id': 124221337, 'media_id': 'go9yr6hwrfp81'}, {'id': 124221338, 'media_id': 'w4m5b5hwrfp81'}, {'caption': ""I cannot understand how to do the numPizza function. I've made a start on it, and tried to make helper functions but im quite unsure how to proceed. VERY new to haskell. "", 'id': 124221339, 'media_id': 'ey9bjyhwrfp81'}]}",True,,,,,,,,,,,
29.0,[],False,jship__,,[],,text,t2_j4qmdzi7,False,False,False,[],False,False,1648158206,github.com,https://www.reddit.com/r/haskell/comments/tn6c93/s3k_do_more_with_stack_by_typing_less/,{},tn6c93,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tn6c93/s3k_do_more_with_stack_by_typing_less/,False,link,"{'enabled': False, 'images': [{'id': 'KTKVbyltUnMP3xQ85fJBkbwDebCtHGCwuSO6KGhpZho', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/zqB3EU6FrKVQPV_gDFalvPUPNkmlkS20IZIn1u9OMPE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=bee901ad06a6e7225bce8d2bd299ae95857e3fda', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/zqB3EU6FrKVQPV_gDFalvPUPNkmlkS20IZIn1u9OMPE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=98d857363f9612d2181b3b5168c948185ea9a815', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/zqB3EU6FrKVQPV_gDFalvPUPNkmlkS20IZIn1u9OMPE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4299283183cd0be908a4ff7b7861ba6e37e14e2a', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/zqB3EU6FrKVQPV_gDFalvPUPNkmlkS20IZIn1u9OMPE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=89ae852c5de39cd46eb372d5b913f675a41f2dc9', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/zqB3EU6FrKVQPV_gDFalvPUPNkmlkS20IZIn1u9OMPE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=85e05fb997c6945bf030430711f30a93c01e25f3', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/zqB3EU6FrKVQPV_gDFalvPUPNkmlkS20IZIn1u9OMPE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9014fb01ead99d6ef3958aa0fa7d189bb18d3d3e', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/zqB3EU6FrKVQPV_gDFalvPUPNkmlkS20IZIn1u9OMPE.jpg?auto=webp&amp;s=88412331dcd572ccdcfc9b13fa5469b8a5be9169', 'width': 1200}, 'variants': {}}]}",6,1648158216,1,,True,False,False,haskell,t5_2qh36,69519,public,default,s3k: Do more with stack by typing less!,0,[],1.0,https://github.com/jship/s3k,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://github.com/jship/s3k,70.0,140.0,,,,,,,,,,,,,,,
30.0,[],False,EtaDaPiza,,[],,text,t2_7d2w43ax,False,False,False,[],False,False,1648156887,self.haskell,https://www.reddit.com/r/haskell/comments/tn5tny/why_am_i_getting_this_parse_error_on_input/,{},tn5tny,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tn5tny/why_am_i_getting_this_parse_error_on_input/,False,,,6,1648156897,1,"```haskell
sqrtHelp :: Integer -&gt; Integer -&gt; Integer -&gt; Integer -&gt; Integer 
-- * sqrtHelp n i j ret
-- * binary search for a ret = floor(sqrt(n)) in (i .. j)
sqrtHelp n i j ret =
    if n == 2 then 2
    if i &gt; j then ret else
        let x = div (i + j) 2
        in
        if (x ^ 2 == n) then x
        else if (x ^ 2 &lt; n)
            then sqrtHelp n (x + 1) j x
        else sqrtHelp n i (x - 1) x


squareRoot :: Integer -&gt; Integer
-- * squareRoot n = floor(sqrt(n))
squareRoot n = sqrtHelp n 1 (div n 2) 0
```

Error:
```
parse error on input ‘squareRoot’
```",True,False,False,haskell,t5_2qh36,69518,public,self,"Why am I getting this ""parse error on input""",0,[],1.0,https://www.reddit.com/r/haskell/comments/tn5tny/why_am_i_getting_this_parse_error_on_input/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
31.0,[],False,organicwolf786,,[],,text,t2_g4278ygc,False,False,False,[],False,False,1648144219,twitter.com,https://www.reddit.com/r/haskell/comments/tmr5g3/by_changing_the_vector_definition_to_use_a_clever/,{},tmr5g3,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tmr5g3/by_changing_the_vector_definition_to_use_a_clever/,False,,,6,1648144230,1,,True,False,False,haskell,t5_2qh36,69518,public,default,"By changing the Vector definition to use a clever self-type trick, Kind's case-of syntax magically became aware of sizes and stopped demanding the nil branch of non-empty vectors.",0,[],1.0,https://twitter.com/MaiaVictr/status/1407884642166968320,all_ads,6,,,https://twitter.com/MaiaVictr/status/1407884642166968320,,,,,,,,,,,,,,,,,
32.0,[],False,Leading_Dog_1733,,[],,text,t2_hs4uamcx,False,False,False,[],False,False,1648142730,self.haskell,https://www.reddit.com/r/haskell/comments/tmpfct/haskell_important_libraries/,{},tmpfct,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tmpfct/haskell_important_libraries/,False,,,6,1648142741,1,"So, I've been working for Python for a long time and wanted to work with Haskell. 

What are the important libraries that folks use in Haskell? The ones that I should definitely memorize because they'll be around in 5-10 years and I will use them actively.",True,False,False,haskell,t5_2qh36,69518,public,self,Haskell - Important Libraries,0,[],1.0,https://www.reddit.com/r/haskell/comments/tmpfct/haskell_important_libraries/,all_ads,6,,,,,,,,,,,,,,,,,,,,
33.0,[],False,fumieval,,[],,text,t2_fwirv,False,False,False,[],False,False,1648128578,github.com,https://www.reddit.com/r/haskell/comments/tma69s/ghc_proposal_wincompletefieldbinds_and/,{},tma69s,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tma69s/ghc_proposal_wincompletefieldbinds_and/,False,,,6,1648128589,1,,True,False,False,haskell,t5_2qh36,69518,public,default,GHC Proposal: -Wincomplete-field-binds and RecordDontCarePatterns,0,[],1.0,https://github.com/fumieval/ghc-proposals/blob/incomplete-field-binds/proposals/0494-incomplete-field-binds.md,all_ads,6,,,https://github.com/fumieval/ghc-proposals/blob/incomplete-field-binds/proposals/0494-incomplete-field-binds.md,,,,,,,,,,,,,,,,,
34.0,[],False,n00bomb,,[],,text,t2_fhy7z,False,False,False,[],False,False,1648127602,well-typed.com,https://www.reddit.com/r/haskell/comments/tm900v/new_largerecords_release_now_with_100_fewer_quotes/,{},tm900v,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tm900v/new_largerecords_release_now_with_100_fewer_quotes/,False,,,6,1648127613,1,,False,False,False,haskell,t5_2qh36,69518,public,default,New large-records release: now with 100% fewer quotes,0,[],1.0,https://well-typed.com/blog/2022/03/large-records-without-the-quotes/,all_ads,6,,,https://well-typed.com/blog/2022/03/large-records-without-the-quotes/,,,,,,,,,,,,,,,,,
35.0,[],False,theeJoker11,,[],,text,t2_2dc9hpiq,False,False,False,[],False,False,1648124373,self.haskell,https://www.reddit.com/r/haskell/comments/tm53ap/help_in_understanding_the_cause_of_error_while/,{},tm53ap,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tm53ap/help_in_understanding_the_cause_of_error_while/,False,,,6,1648124383,1,"when I write 
```
 createList :: String -&gt; [String]
 createList """" = []
 createList a = [takeWhile (/= ' ') a] ++ tempTest a
 
 tempTest = createList . dropWhile (== ' ') . dropWhile (/= ' ') 

```

everything runs fine

but when I replace the function call with actual function content like

```
 createList :: String -&gt; [String]
 createList """" = []
 createList a = [takeWhile (/= ' ') a] ++ createList . dropWhile (== ' ') . dropWhile (/= ' ') a
```


suddenly error starts coming

```
 TakeWhileDropWhile.hs:3:42: error:
     • Couldn't match expected type '[[Char]]'
                   with actual type 'a0 -&gt; [String]'
     • Probable cause: '(.)' is applied to too few arguments
       In the second argument of '(++)', namely
         'createList . dropWhile (== ' ') . dropWhile (/= ' ') a'
       In the expression:
         [takeWhile (/= ' ') a]
           ++ createList . dropWhile (== ' ') . dropWhile (/= ' ') a
       In an equation for 'createList':
           createList a
             = [takeWhile (/= ' ') a]
                 ++ createList . dropWhile (== ' ') . dropWhile (/= ' ') a
   |
 3 | createList a = [takeWhile (/= ' ') a] ++ createList . dropWhile (== ' ') . dropWhile (/= ' ') a
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
 TakeWhileDropWhile.hs:3:76: error:
     • Couldn't match expected type 'a0 -&gt; [Char]'
                   with actual type '[Char]'
     • Possible cause: 'dropWhile' is applied to too many arguments
       In the second argument of '(.)', namely 'dropWhile (/= ' ') a'
       In the second argument of '(.)', namely
         'dropWhile (== ' ') . dropWhile (/= ' ') a'
       In the second argument of '(++)', namely
         'createList . dropWhile (== ' ') . dropWhile (/= ' ') a'
   |
 3 | createList a = [takeWhile (/= ' ') a] ++ createList . dropWhile (== ' ') . dropWhile (/= ' ') a
   |                                                                            ^^^^^^^^^^^^^^^^^^^^
 Failed, no modules loaded.
```

can anyone please help me with this

P.S. I am very new with haskell and I don't know all the FP terms",True,False,False,haskell,t5_2qh36,69518,public,self,Help in understanding the cause of error while using point free vs non point free.,0,[],1.0,https://www.reddit.com/r/haskell/comments/tm53ap/help_in_understanding_the_cause_of_error_while/,all_ads,6,,,,,,,,,,,,,,,,,,,,
36.0,[],False,dskippy,,[],,text,t2_2nw9r,False,False,False,[],False,False,1648089599,self.haskell,https://www.reddit.com/r/haskell/comments/tlvopj/looking_for_svg_library_recommendations/,{},tlvopj,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tlvopj/looking_for_svg_library_recommendations/,False,,,6,1648089610,1,"Hey everyone,

I'm trying to accomplish some SVG drawing with Haskell. Any language, really, but my go to is Haskell. I'm not really opposed to another language if anyone has a really great library in another language but that's perhaps off topic. I'm having trouble finding a library that really does everything I want.

What I'm trying to do is draw a series of SVGs that are all varied but similar in many ways. So code sharing is important, which is why I can't do this in SVG and I need a programming language to generate them. I need to load in SVGs that I'm using from other sources as icons and also fonts and things like that. 

This is what I've looked into and found.

[svg-tree](https://hackage.haskell.org/package/svg-tree) seems to be the library with the ability to read in SVG files and parse them into internal docs to manipulate.

[lucid-svg](https://hackage.haskell.org/package/lucid-svg), which is recommended by svg-tree for doing actual drawing, doesn't seem to have this, but is much better for providing a drawing API, which I'll be using a lot of.

[blaze-svg](https://hackage.haskell.org/package/blaze-svg) seems to not have any parser either, have much less documentation, and have a less nice API for drawing.

I don't think the svg-tree data types are compatible with lucid-svg, but that'd be nice if they were based on each other.

Does anyone know of a good setup for what I'm trying to do?",True,False,False,haskell,t5_2qh36,69516,public,self,Looking for SVG library recommendations,0,[],1.0,https://www.reddit.com/r/haskell/comments/tlvopj/looking_for_svg_library_recommendations/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
37.0,[],False,ysangkok,,[],,text,t2_4qktt,False,False,False,[],False,False,1648064445,github.com,https://www.reddit.com/r/haskell/comments/tl9zhp/usability_of_smart_constructors_and_large_records/,{},tl9zhp,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tl9zhp/usability_of_smart_constructors_and_large_records/,False,link,"{'enabled': False, 'images': [{'id': 'O6VO0H4JUams3yAnx3irEgT5KDHWJLUACon8ugPUDEQ', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/mk3hYGu9syDLSmk8u-HoOsOFZa6mg1RawRJQnykaB3o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e1a451db4dc8627de165d8cfd2048129d4ff56ae', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/mk3hYGu9syDLSmk8u-HoOsOFZa6mg1RawRJQnykaB3o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d5c1ae5ac35c53b47a66afbd670cba93f22f7fb2', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/mk3hYGu9syDLSmk8u-HoOsOFZa6mg1RawRJQnykaB3o.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a4effa035f6997992733e1ebc853966ba634d961', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/mk3hYGu9syDLSmk8u-HoOsOFZa6mg1RawRJQnykaB3o.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f1f543db74cb8cb0734b524776a6aeae57a23ede', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/mk3hYGu9syDLSmk8u-HoOsOFZa6mg1RawRJQnykaB3o.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=7b87494bcfb75f53de8da7a499b379f2e7d881ef', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/mk3hYGu9syDLSmk8u-HoOsOFZa6mg1RawRJQnykaB3o.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=bb1cfc4abbc9568fd27be46beabe112401bca63a', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/mk3hYGu9syDLSmk8u-HoOsOFZa6mg1RawRJQnykaB3o.jpg?auto=webp&amp;s=718a2f1ba2d0507608db852f8b0bcd903d992287', 'width': 1200}, 'variants': {}}]}",6,1648064456,1,,True,False,False,haskell,t5_2qh36,69512,public,default,"Usability of smart constructors and large records with required, optional, and default parameters",0,[],1.0,https://github.com/brendanhay/amazonka/issues/762,all_ads,6,,,https://github.com/brendanhay/amazonka/issues/762,70.0,140.0,,reddit,,,,,,,,,,,,,
38.0,[],False,DmitryTsepelev,,[],,text,t2_21cqe56c,False,False,False,[],False,False,1648026483,dmitrytsepelev.dev,https://www.reddit.com/r/haskell/comments/tkpt4c/im_a_rubyist_and_try_to_learn_haskellheres_my/,{},tkpt4c,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tkpt4c/im_a_rubyist_and_try_to_learn_haskellheres_my/,False,,,6,1648026493,1,,True,False,False,haskell,t5_2qh36,69506,public,default,I'm a Rubyist and try to learn Haskell—here's my sailor journal 🙂,0,[],1.0,https://dmitrytsepelev.dev/haskell-adventures,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://dmitrytsepelev.dev/haskell-adventures,,,,,,,,,,,,,,,,,
39.0,[],False,man-vs-spider,,[],,text,t2_5by84,False,False,False,[],False,False,1647965710,self.haskell,https://www.reddit.com/r/haskell/comments/tk6kxo/can_the_haskell_ffi_pass_functions_on_lists_to_c/,{},tk6kxo,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tk6kxo/can_the_haskell_ffi_pass_functions_on_lists_to_c/,False,,,6,1647965720,1,"I have been testing out the FFI to transfer code between Haskell and C. 

I haven't seen this example but is it possible to pass a Haskell function to C with the type

`myfunc :: [CDouble] -&gt; [CDouble]` ?

I suspect that directly passing a function on lists is not possible. What about functions on storable vectors?

`myfunc :: SV.Vector Double -&gt; SV.Vector Double` ?

From what I've seen, transforming Haskell functions for C is handled by a ""wrapper"" function, I'm not sure what the limits of this conversion are.",True,False,False,haskell,t5_2qh36,69496,public,self,Can the Haskell FFI pass functions on lists to C?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tk6kxo/can_the_haskell_ffi_pass_functions_on_lists_to_c/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
40.0,[],False,Serokell,,[],,text,t2_fvl0rbg,False,False,False,[],False,False,1647953476,serokell.io,https://www.reddit.com/r/haskell/comments/tk2ar7/algebraic_data_types_in_haskell/,{},tk2ar7,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/tk2ar7/algebraic_data_types_in_haskell/,False,link,"{'enabled': False, 'images': [{'id': 'NVhCbiPg_fHTo7UuuoCSuQlSjfbqzusvFdm6ecA_t5A', 'resolutions': [{'height': 64, 'url': 'https://external-preview.redd.it/Mnfsk7lU_pt5y-MnEG3vAIj12wMLOfoMeWgnoK7B9_k.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d75af30978d7d7e04f74d5608f3727c626c0e48c', 'width': 108}, {'height': 129, 'url': 'https://external-preview.redd.it/Mnfsk7lU_pt5y-MnEG3vAIj12wMLOfoMeWgnoK7B9_k.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2f3be83aaa647c6f5beaff781784ce7e24de081d', 'width': 216}, {'height': 192, 'url': 'https://external-preview.redd.it/Mnfsk7lU_pt5y-MnEG3vAIj12wMLOfoMeWgnoK7B9_k.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b4a891fd0b7a4f4e8faae35d093c1cb71d5c4e3e', 'width': 320}, {'height': 384, 'url': 'https://external-preview.redd.it/Mnfsk7lU_pt5y-MnEG3vAIj12wMLOfoMeWgnoK7B9_k.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d02c238fb1e3cf2b8b403ae42f5efda072acd04d', 'width': 640}, {'height': 576, 'url': 'https://external-preview.redd.it/Mnfsk7lU_pt5y-MnEG3vAIj12wMLOfoMeWgnoK7B9_k.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=723ae40899b97c6602d14da4be9ec101a6b8529a', 'width': 960}, {'height': 648, 'url': 'https://external-preview.redd.it/Mnfsk7lU_pt5y-MnEG3vAIj12wMLOfoMeWgnoK7B9_k.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ec0a2786d877cf14fb9ec11999a8e8dc5e4da63e', 'width': 1080}], 'source': {'height': 720, 'url': 'https://external-preview.redd.it/Mnfsk7lU_pt5y-MnEG3vAIj12wMLOfoMeWgnoK7B9_k.jpg?auto=webp&amp;s=465908e232be335b9ac8e417a9a6eaed20274d38', 'width': 1200}, 'variants': {}}]}",6,1647953487,1,,True,False,False,haskell,t5_2qh36,69495,public,default,Algebraic Data Types in Haskell,0,[],1.0,https://serokell.io/blog/algebraic-data-types-in-haskell,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://serokell.io/blog/algebraic-data-types-in-haskell,84.0,140.0,,,,,,,,,,,,,,,
41.0,[],False,gilgamec,,[],,text,t2_10h5agrx,False,False,False,[],False,False,1647951162,self.haskell,https://www.reddit.com/r/haskell/comments/tk1khp/reactivebanana_controlling_behavior_caching/,{},tk1khp,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tk1khp/reactivebanana_controlling_behavior_caching/,False,,,6,1647951172,1,"I've been writing a simple GUI app using `reactive-banana`, and I've run into a problem. The GUI displays one of two meshes: mesh A or mesh B; the user can switch between them by clicking a checkbox. My event network looks like this:

    ---checkbox---+
                  |
    -------A------+---AorB---+
                  |          |
    -------B------+          +---mesh---
                             |
    --------drawParams-------+

The problem is that every time I click the checkbox, the mesh now being visualized (either A or B) is regenerated, which takes quite a while. The event network doesn't trigger it -- `changes A` shows no activity -- but a `trace` in the (pure) generation function shows that the mesh being activated is being regenerated.

(It used to be worse; before switching with `switchB`, I was generating AorB with, essentially, `liftA3 ifThenElse`, which made *both* of the meshes regenerate every time the checkbox was clicked!)

I note, however, that merely changing the draw parameters does *not* result in a rebuilding of the mesh; apparently the value of AorB is cached in some way. Is there a way in `reactive-banana` to request this behaviour; that is, to tell it to cache the value of some Behavior so it doesn't have to recompute it when using it further down the network?",True,False,False,haskell,t5_2qh36,69495,public,self,reactive-banana: Controlling Behavior caching?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tk1khp/reactivebanana_controlling_behavior_caching/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
42.0,[],False,bedobi,,[],,text,t2_k155g,False,False,False,[],False,False,1647934181,self.haskell,https://www.reddit.com/r/haskell/comments/tjxh34/property_testing_am_i_missing_something/,{},tjxh34,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tjxh34/property_testing_am_i_missing_something/,False,,,6,1647934191,1,"Seems like Haskellers using QuickCheck are the most avid and knowledgable proponents of property testing, so posting this here in /r/Haskell with the hope that y'all can overlook that my immediate context is Kotlin and not Haskell (my problem and question remains the same)

---

property testing is definitely cool but as much I hate to say it I can't really think of many use cases where we would benefit from it in a straightforward way

intuitively it would be awesome to be able to do eg

```
    @Property
    fun `validate email`(@ForAll @Email email: String) {
        val validRequest = PatchUserRequest(
            emailAddress = email
        )

        Assertions
            .assertThat(
                resourceExtension
                    .validator
                    //this just triggers the validation annotations on the PatchUserRequest
                    .validate(validRequest)
            ).isEmpty() //empty set of errors
    }
```

where `@Email` is a generator rolled with jqwik, one of the libraries I'm looking at

however it results in outcomes like this

```WARN  [2022-03-22 16:32:52,523] net.jqwik.engine.properties.shrinking.PropertyShrinker: Shrinking timeout reached after 10 seconds.
  You can switch on full shrinking with '@Property(shrinking = ShrinkingMode.FULL)'
timestamp = 2022-03-22T16:32:52.559110, PatchUserResourceValidationPropertyTest:validate email =
  java.lang.AssertionError:
    Expecting empty but was:&lt;[ConstraintViolationImpl{interpolatedMessage='size must be between 0 and 132', propertyPath=emailAddress, rootBeanClass=class com.expedia.www.pc.user.profiles.service.feature.user.patch.PatchUserRequest, messageTemplate='{javax.validation.constraints.Size.message}'}]&gt;

                              |-------------------jqwik-------------------
tries = 5                     | # of calls to property
checks = 5                    | # of not rejected calls
generation = RANDOMIZED       | parameters are randomly generated
after-failure = PREVIOUS_SEED | use the previous seed
when-fixed-seed = ALLOW       | fixing the random seed is allowed
edge-cases#mode = MIXIN       | edge cases are mixed in
edge-cases#total = 6          | # of all combined edge cases
edge-cases#tried = 0          | # of edge cases tried in current run
seed = -6017398359074343523   | random seed to reproduce generated values

Shrunk Sample (173 steps)
-------------------------
  email:
    ""a@a.aaaaaaaaaaaaaa.aaaaaaaaaaaaaaaaaaa.aaaaaaaaaaaaaaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.aa""

Original Sample
---------------
  email:
    ""LYjj.!eU~/4uNo@LiORmZphysW9TWedM8juSCWt.a.k6okOmM32It3Xa5-0SAvx0Q-PkT69zwTcAwUk.6zhDh6KkeWMLMU7ygGUapowVxHAqhJwe.uEF8RGsqbgk8ZgdwKAYG.YlzIFZuXFxHVmiJBMuD.8gFl6qsh1xg6Lh.p.nUFeFU9aV.aC""

  Original Error
  --------------
  java.lang.AssertionError:
    Expecting empty but was:&lt;[ConstraintViolationImpl{interpolatedMessage='size must be between 0 and 132', propertyPath=emailAddress, rootBeanClass=class com.expedia.www.pc.user.profiles.service.feature.user.patch.PatchUserRequest, messageTemplate='{javax.validation.constraints.Size.message}'}]&gt;```


because, while the jqwik email generator is possibly far more ""correct"" than our validators, our validators look the way they do because of a hodgepodge of legacy requirements and limitations

```
    @get:Email
    //^^^ doesn't filter out whitespace or invisible separator or invisible control characters or unused code points
    //so let's filter them out manually: [] ""any match on any contents"", ^ negative, \\p{Z} separators \\p{C} controls
    //see http://www.regular-expressions.info/unicode.html
    @get:Pattern(regexp = ""[^\\p{Z}\\p{C}]*"", message = ""not a well-formed email address"")
    @get:Size(max = DB_MAX_EMAIL_LENGTH)
    val emailAddress: String? = null
```

the same is true for eg our unicodename field (jqwik has a unicode generator but we in fact don't allow all unicode chars + we have length requirements etc etc) (length requirements are trivially customizable in all property testing libraries, just saying, our requirements are quirky)

```
private const val ALLOWED_CHARACTERS = ""^(?:[\\p{L}\\p{Mn}'\\x{2019}]+[\\p{Zs}\\p{Pd}\\.,'\\x{2019}]*)+\$""

@Retention(AnnotationRetention.RUNTIME)
@Target(AnnotationTarget.PROPERTY_GETTER)
@MustBeDocumented
@Constraint(validatedBy = [UnicodeNameValidator::class])
annotation class ValidUnicodeName(
    val message: String = """",
    val groups: Array&lt;KClass&lt;out Any&gt;&gt; = [],
    val payload: Array&lt;KClass&lt;out Payload&gt;&gt; = [],
    val maxSize: Int = UNICODE_NAME_LENGTH,
    val minSize: Int = 1,
    val regExp: String = ALLOWED_CHARACTERS
)

class UnicodeNameValidator :
    ConstraintValidator&lt;ValidUnicodeName, String&gt;,
    NameValidator&lt;ValidUnicodeName&gt;() {

    override fun initialize(constraint: ValidUnicodeName) {
        this.maxSize = constraint.maxSize
        this.minSize = constraint.minSize
        this.regExp = Pattern.compile(constraint.regExp)
    }
}
```

and our asciiname (likewise jqwik has an asciigenerator but our asciiregex is a bit different from actual ascii + has length requirements etc etc) (length requirements are trivially customizable in all property testing libraries, just saying, our requirements are quirky)

etc etc you can see where this is going

intuitively I would hope the property testing libraries came with regex based string generators

but they don't (or at least jqwik doesn't https://github.com/jlink/jqwik/issues/68)

even if they did, it's kind of pointless - we know regex ""works"" - property testing a regex validator configured with a regex that is also used for a property testing regex generator seems nonsensical as the only time there would be a problem would be if the libraries did something different from each other, which we can't really help anyway

it would be the same for property testing our property ids etc etc

fundamentally the problem is our requirements are quirky and we use regex for validation for a lot if not most of our validators (which isn't great, but it is what it is)

and basically it seems like for that reason while property testing is great for a lot of things but it may not be super applicable for our use cases - for us it's likely that our handwritten unit tests that test that eg an email address we expect our regex to fail fails is kind of enough (even if we unlike a property testing engine don't actually test millions of potential values)",True,False,False,haskell,t5_2qh36,69497,public,self,Property testing - am I missing something?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tjxh34/property_testing_am_i_missing_something/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
43.0,[],False,RandsLC,,[],,text,t2_142hzo,False,False,False,[],False,False,1647915874,self.haskell,https://www.reddit.com/r/haskell/comments/tjsna2/need_the_basics_down_in_one_week_where_to_start/,{},tjsna2,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tjsna2/need_the_basics_down_in_one_week_where_to_start/,False,self,"{'enabled': False, 'images': [{'id': 'JBPQiWVGR6kNtMrBuEAnCd7XMUsW6ikoMImTzEy6ttg', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/HLgCYPQUdVE06p_3C5WCDsaEEdIgY1CsHAylheZ5ZPs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4313f548946149a845a4e88862014e5e0547385e', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/HLgCYPQUdVE06p_3C5WCDsaEEdIgY1CsHAylheZ5ZPs.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=fa59e00db1b7712ad44ea3c99de0b100dc0ce99d', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/HLgCYPQUdVE06p_3C5WCDsaEEdIgY1CsHAylheZ5ZPs.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=637d8520eb366e8845c5d2d68a2aaaec461cd61d', 'width': 320}], 'source': {'height': 450, 'url': 'https://external-preview.redd.it/HLgCYPQUdVE06p_3C5WCDsaEEdIgY1CsHAylheZ5ZPs.jpg?auto=webp&amp;s=c180de1cebe2df44e728258e930e4f9df347f3e3', 'width': 600}, 'variants': {}}]}",6,1647915885,1,"For brief background, I am an experienced programmer, senior year in university. I am going to take a  compilers class in a week where they use Haskell to build the compiler. I have some exposure to Haskell before in a prior class but I have forgot most of the stuff. Haskall programming from first principles is too long and verbose and I fall asleep reading it as it seems to be a lot of explanations compared to exercises. I want to get ramped up quick, reviewing some of the material I forgot but also be prepared literally next Monday when the compilers class start. I am looking into reading the lecture notes and doing the exercises from this [https://www.seas.upenn.edu/%7Ecis194/spring13/lectures/01-intro.html](https://www.seas.upenn.edu/%7Ecis194/spring13/lectures/01-intro.html)

&amp;#x200B;

then reading yet another yet another monad tutorial and call it a day. Thoughts?",True,False,False,haskell,t5_2qh36,69490,public,self,Need the basics down in one week. Where to start.,0,[],1.0,https://www.reddit.com/r/haskell/comments/tjsna2/need_the_basics_down_in_one_week_where_to_start/,all_ads,6,,,,,,,,,,,,,,,,,,,,
44.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1647910516,github.com,https://www.reddit.com/r/haskell/comments/tjqw7a/seeking_community_feedback_on_datalist/,{},tjqw7a,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/tjqw7a/seeking_community_feedback_on_datalist/,False,link,"{'enabled': False, 'images': [{'id': 'V5cL7LbSeNd62xaAdaMhsI4APJUlxrx9AMGlR1aoQW0', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/ypy1ngfoil2vyCQhwcx750o6bJOkXj3YjaQzhNL4RoA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=44650fd20707825908e4bc7cd06a635ebd80b1c5', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/ypy1ngfoil2vyCQhwcx750o6bJOkXj3YjaQzhNL4RoA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c9ae7847b10e851a199e0067c6499af83a99ea44', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/ypy1ngfoil2vyCQhwcx750o6bJOkXj3YjaQzhNL4RoA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1fa1061e333883ac34c203074ccd0eacfb0e464d', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/ypy1ngfoil2vyCQhwcx750o6bJOkXj3YjaQzhNL4RoA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=83dd5553e6295adfb6fdc86c8fdc8288559002b1', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/ypy1ngfoil2vyCQhwcx750o6bJOkXj3YjaQzhNL4RoA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=cba25b95aeb6755edf4c5c218ffe4b4347d17507', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/ypy1ngfoil2vyCQhwcx750o6bJOkXj3YjaQzhNL4RoA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d6a25656c0ef30d9259cae33203dff50982a9067', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/ypy1ngfoil2vyCQhwcx750o6bJOkXj3YjaQzhNL4RoA.jpg?auto=webp&amp;s=3912b8ae6dbc05699c0101a83c07a744213f6d38', 'width': 1200}, 'variants': {}}]}",6,1647910527,1,,True,False,False,haskell,t5_2qh36,69491,public,default,Seeking community feedback on Data.List monomorphisation,0,[],1.0,https://github.com/haskell/core-libraries-committee/issues/22#issuecomment-1074567260,all_ads,6,a01b58a0-6553-11eb-b2eb-0eb19e8d97a5,RFC,https://github.com/haskell/core-libraries-committee/issues/22#issuecomment-1074567260,70.0,140.0,,,,,,,,,,,,,,,
45.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1647910046,github.com,https://www.reddit.com/r/haskell/comments/tjqqnp/proposal_add_controlexceptionthrowioleft/,{},tjqqnp,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/tjqqnp/proposal_add_controlexceptionthrowioleft/,False,link,"{'enabled': False, 'images': [{'id': 'vgd1AUQw8pojfvi4akNE3q9_yj9ZPBOyGE3b-998YT8', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/hrrprXr5Ai_rVKQng872usLsKr42mrWZXw59PwHoKy4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e05f9cfedc62e0cdd6cd1f9784312fd98622405b', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/hrrprXr5Ai_rVKQng872usLsKr42mrWZXw59PwHoKy4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2f1487bd1e4a03dec5534ab48ddfe2de2ebe6174', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/hrrprXr5Ai_rVKQng872usLsKr42mrWZXw59PwHoKy4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b5ab6e8f22446c8ad8b53cfa847021a49e5f15b5', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/hrrprXr5Ai_rVKQng872usLsKr42mrWZXw59PwHoKy4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=2f7ee6f3057219506c2240c47aa7d104c06fe617', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/hrrprXr5Ai_rVKQng872usLsKr42mrWZXw59PwHoKy4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=63c03e241fc4199498870c6a7044d4bb9f0cd7a0', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/hrrprXr5Ai_rVKQng872usLsKr42mrWZXw59PwHoKy4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=cc367e8ab1a4c25156bf9eabae58681ed34ff634', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/hrrprXr5Ai_rVKQng872usLsKr42mrWZXw59PwHoKy4.jpg?auto=webp&amp;s=6e5e00580d8496f2790468d2768d8cb87e7d9e79', 'width': 1200}, 'variants': {}}]}",6,1647910056,1,,True,False,False,haskell,t5_2qh36,69491,public,default,Proposal: add Control.Exception.throwIOLeft,0,[],1.0,https://github.com/haskell/core-libraries-committee/issues/46,all_ads,6,a01b58a0-6553-11eb-b2eb-0eb19e8d97a5,RFC,https://github.com/haskell/core-libraries-committee/issues/46,70.0,140.0,,,,,,,,,,,,,,,
46.0,[],False,Billy_everett,,[],,text,t2_93hinyay,False,False,False,[],False,False,1647897695,self.haskell,https://www.reddit.com/r/haskell/comments/tjmcwy/assignment/,{},tjmcwy,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tjmcwy/assignment/,False,,,6,1647897706,1,Hi is someone able to have a look at an assignment brief with me and go through and explain it a bit further at all? Thanks,True,False,False,haskell,t5_2qh36,69490,public,self,Assignment,0,[],1.0,https://www.reddit.com/r/haskell/comments/tjmcwy/assignment/,all_ads,6,,,,,,,,,,,,,,,,,,,,
47.0,[],False,goldfirere,,[],,text,t2_culpc,False,False,False,[],False,False,1647896707,self.haskell,https://www.reddit.com/r/haskell/comments/tjm0ga/ghc_proposal_breakage_should_we_proceed/,{},tjm0ga,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tjm0ga/ghc_proposal_breakage_should_we_proceed/,False,self,"{'enabled': False, 'images': [{'id': 'OJG748ShJcFDJ1aWUIBvxdQKSwqQpav1jNgx_cbSqzU', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/zFYyEXfToS9NBphNoIF3g6VL_-Qt-cUv5v1vkvWJnfA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ba28f0ba7d471524cd469d586b1a2fd3d274dabd', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/zFYyEXfToS9NBphNoIF3g6VL_-Qt-cUv5v1vkvWJnfA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ab37cbd4c026676488469e87039f24e75ec740c5', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/zFYyEXfToS9NBphNoIF3g6VL_-Qt-cUv5v1vkvWJnfA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=82a01ec4a0ddb9ca540293666e158df558958770', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/zFYyEXfToS9NBphNoIF3g6VL_-Qt-cUv5v1vkvWJnfA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f50f93d4aeac850bfa9a07bb7c8c6224dbe65639', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/zFYyEXfToS9NBphNoIF3g6VL_-Qt-cUv5v1vkvWJnfA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c3f22e1cae5e9276de920868b0fbfe7bd88ec028', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/zFYyEXfToS9NBphNoIF3g6VL_-Qt-cUv5v1vkvWJnfA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=13921346b13fd4c8a37f0fca5aeb29bb1a676b2e', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/zFYyEXfToS9NBphNoIF3g6VL_-Qt-cUv5v1vkvWJnfA.jpg?auto=webp&amp;s=c18eafc26ebc361886caf004b5fe8638ecde926b', 'width': 1200}, 'variants': {}}]}",6,1647896718,1,[removed],True,False,False,haskell,t5_2qh36,69490,public,self,GHC Proposal breakage: should we proceed?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tjm0ga/ghc_proposal_breakage_should_we_proceed/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
48.0,[],False,xeltius,,[],,text,t2_4mwj7,False,False,False,[],False,False,1647894223,self.haskell,https://www.reddit.com/r/haskell/comments/tjl2sg/what_does_your_workflow_look_like/,{},tjl2sg,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tjl2sg/what_does_your_workflow_look_like/,False,,,6,1647894234,1,"How do you reason about problems? How do you take notes? Do you use diagrams, mind maps, etc. What little quality of life hacks do you use? Etc.",True,False,False,haskell,t5_2qh36,69490,public,self,What does your workflow look like?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tjl2sg/what_does_your_workflow_look_like/,all_ads,6,,,,,,,,,,,,,,,,,,,,
49.0,[],False,crisoagf,,[],,text,t2_aw38c,False,False,False,[],False,False,1647886534,self.haskell,https://www.reddit.com/r/haskell/comments/tji67i/are_monoidalproductprofunctor_and_traversing/,{},tji67i,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tji67i/are_monoidalproductprofunctor_and_traversing/,False,,,6,1647886544,1,"Hi all,

I am trying to wrap my head around the Profunctor typeclasses.

Notably, I am trying to find out why there isn't a lot of code around using something like `Monoidal`/`ProductProfuctor` and instead there seems to have been a decision to go for `Traversing` and similar typeclasses.

I have been looking mostly at [this discussion](https://www.reddit.com/r/haskell/comments/73tlhs/dont_fear_the_profunctor_optics) from a couple of years ago that has the following:

- davemenendez says that you can implement `wander` using the `Monoidal` typeclass (which, as far as I can tell, is only true if your profunctor is representable?)
- ekmett says that `Monoidal` is _implemented_ via `Traversing` in the `profunctors` lib (which doesn't make sense to me, because I don't see how one can write one in terms of the other)

There's the [glassery](http://oleg.fi/gists/posts/2017-04-18-glassery.html#t:Monoidal) blog post from Oleg that also mentions `Monoidal`, but with disappointment because it doesn't bring much on top of `Choice`, if I understand correctly (but I don't see e.g. `Costar` mentioned in the table where this conclusion is reached).

I have spent a couple of hours trying to implement `Monoidal` in terms of `Traversing` and vice-versa and gone nowhere unless I also bring `Representable` to the table, but there are some good examples for non-representable instances of `Monoidal` so I don't want to do this.

Either I am missing some cool trick in my bag of tricks or I really don't understand what's happening here.

Anyone got some illuminating text or notes or something?",True,False,False,haskell,t5_2qh36,69491,public,self,Are Monoidal/ProductProfunctor and Traversing?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tji67i/are_monoidalproductprofunctor_and_traversing/,all_ads,6,,,,,,,,,,,,,,,,,,,,
50.0,[],False,rhl120,,[],,text,t2_6cjrymqf,False,False,False,[],False,False,1647879920,self.haskell,https://www.reddit.com/r/haskell/comments/tjforr/writing_proper_haskell_code/,{},tjforr,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tjforr/writing_proper_haskell_code/,False,,,6,1647879930,1,"Hi,

I have recently learned Haskell and have written some code but I feel like I am just writing pure functions in a procedural and I am not taking advantage of the abstractions offered by Haskell. It is not that I don't know about these abstractions it is because I don't think about them when I am writing code so my question is do you have any suggestions on how to actually write code that takes complete advantage of Haskell's awesomeness? Feel free to point me to any book/articles/videos that talk about this subject. Thanks!

PS: In order to learn Haskell I have read Learn you a Haskell for great good and Haskell from first principles.",True,False,False,haskell,t5_2qh36,69490,public,self,Writing proper Haskell code,0,[],1.0,https://www.reddit.com/r/haskell/comments/tjforr/writing_proper_haskell_code/,all_ads,6,,,,,,,,,,,,,,,,,,,,
51.0,[],False,lazygoose152,,[],,text,t2_g3bhhkot,False,False,False,[],False,False,1647878237,leanprover.github.io,https://www.reddit.com/r/haskell/comments/tjf1gv/leans_do_notation/,{},tjf1gv,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tjf1gv/leans_do_notation/,False,,,6,1647878248,1,,True,False,False,haskell,t5_2qh36,69490,public,default,Lean's do notation.,0,[],1.0,https://leanprover.github.io/lean4/doc/do.html,all_ads,6,,,https://leanprover.github.io/lean4/doc/do.html,,,,reddit,,,,,,,,,,,,,
52.0,[],False,Asleep-Pen935,,[],,text,t2_kys6yc6a,False,False,False,[],False,False,1647870638,self.haskell,https://www.reddit.com/r/haskell/comments/tjc9qw/basic_funtions_types/,{},tjc9qw,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tjc9qw/basic_funtions_types/,False,,,6,1647870649,1,[removed],True,False,False,haskell,t5_2qh36,69484,public,self,basic funtions types,0,[],1.0,https://www.reddit.com/r/haskell/comments/tjc9qw/basic_funtions_types/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
53.0,[],False,xieyuheng,,[],,text,t2_cuza9,False,False,False,[],False,False,1647852909,lambda.cicada-lang.org,https://www.reddit.com/r/haskell/comments/tj7be8/an_online_playground_of_lambda_calculus/,{},tj7be8,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tj7be8/an_online_playground_of_lambda_calculus/,False,,,6,1647852919,1,,True,False,False,haskell,t5_2qh36,69481,public,default,An online playground of lambda calculus.,0,[],1.0,https://lambda.cicada-lang.org/playground/KGRlZmluZSAodHJ1ZSB0IGYpIHQpCihkZWZpbmUgKGZhbHNlIHQgZikgZikKCihkZWZpbmUgKGlmIHAgdCBmKSAocCB0IGYpKQoKKGRlZmluZSAoYW5kIHggeSkgKGlmIHggeSBmYWxzZSkpCihkZWZpbmUgKG9yIHggeSkgKGlmIHggdHJ1ZSB5KSkKKGRlZmluZSAobm90IHgpIChpZiB4IGZhbHNlIHRydWUpKQoKKGFuZCB0cnVlIGZhbHNlKQoobm90IChub3QgKG9yIHRydWUgZmFsc2UpKSk,all_ads,6,,,https://lambda.cicada-lang.org/playground/KGRlZmluZSAodHJ1ZSB0IGYpIHQpCihkZWZpbmUgKGZhbHNlIHQgZikgZikKCihkZWZpbmUgKGlmIHAgdCBmKSAocCB0IGYpKQoKKGRlZmluZSAoYW5kIHggeSkgKGlmIHggeSBmYWxzZSkpCihkZWZpbmUgKG9yIHggeSkgKGlmIHggdHJ1ZSB5KSkKKGRlZmluZSAobm90IHgpIChpZiB4IGZhbHNlIHRydWUpKQoKKGFuZCB0cnVlIGZhbHNlKQoobm90IChub3QgKG9yIHRydWUgZmFsc2UpKSk,,,,reddit,,,,,,,,,,,,,
54.0,[],False,SleezyROM,,[],,text,t2_7meizuh9,False,False,False,[],False,False,1647850311,self.haskell,https://www.reddit.com/r/haskell/comments/tj6prl/pure_vs_return_what_do_you_use/,{},tj6prl,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tj6prl/pure_vs_return_what_do_you_use/,False,,,6,1647850321,1,"I've seen a lot of different places use either or the other. I *personally* think that when thinking about Monadic actions `pure` makes more? Return in my brain brain (coming from the mainstream C like programming style) just means stop the function and return a value. Not wrap into a computation. 

Maybe it's the difference from `lift`? Not sure, what does the community think?",True,False,False,haskell,t5_2qh36,69481,public,self,pure VS return: What do you use?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tj6prl/pure_vs_return_what_do_you_use/,all_ads,6,,,,,,,,,,,,,,,,,,,,
55.0,[],False,SleezyROM,,[],,text,t2_7meizuh9,False,False,False,[],False,False,1647850128,self.haskell,https://www.reddit.com/r/haskell/comments/tj6o6z/eli5_why_return_over_pure_vice_versa_etc/,{},tj6o6z,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tj6o6z/eli5_why_return_over_pure_vice_versa_etc/,False,,,6,1647850138,1,"I've seen a lot of different places use either or the other. I *personally* think that when thinking about Monadic actions `pure` makes more? Return in my brain brain (coming from the mainstream C like programming style) just means stop the function and return a value. Not wrap into a computation. 

Maybe it's the difference from \`lift\`? Not sure, what does the community think?",True,False,False,haskell,t5_2qh36,69481,public,self,"ELI5: Why `return` over `pure`? (Vice versa, etc)",0,[],1.0,https://www.reddit.com/r/haskell/comments/tj6o6z/eli5_why_return_over_pure_vice_versa_etc/,all_ads,6,,,,,,,,,,,,,,,,,,,,
56.0,[],False,flavortownXpress,,[],,text,t2_dxklpceb,False,False,False,[],False,False,1647845571,self.haskell,https://www.reddit.com/r/haskell/comments/tj5lcz/best_resources_for_highlevel_explanations_of/,{},tj5lcz,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tj5lcz/best_resources_for_highlevel_explanations_of/,False,,,6,1647845581,1,"After reading LYAH what I'd love is something like an article to help me make some connections between higher level concepts in haskell, anything to help connect the dots in my brain.

Any good resources ? 

Thanks",True,False,False,haskell,t5_2qh36,69480,public,self,Best resources for high-level explanations of concepts in haskell /FP?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tj5lcz/best_resources_for_highlevel_explanations_of/,all_ads,6,,,,,,,,,,,,,,,,,,,,
57.0,[],False,runclub95,,[],,text,t2_a39n3rtd,False,False,False,[],False,False,1647825821,stackage.org,https://www.reddit.com/r/haskell/comments/tj0496/stack_lts_19_release_and_nightly_on_ghc92/,{},tj0496,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tj0496/stack_lts_19_release_and_nightly_on_ghc92/,False,link,"{'enabled': False, 'images': [{'id': '4QAIFGORf3PCsbD5d-aii0UcJPVe_lHONhYGizjt_ik', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/-fBJQ6cT4DlQY0UhYE6y6nJpTCtDsr3td5RBU-j3AxE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d88357a71a2ac23b5c8eda62a494f6210b23ee91', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/-fBJQ6cT4DlQY0UhYE6y6nJpTCtDsr3td5RBU-j3AxE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=850519e6944f34a918b6da29ef62c65ef7f5897c', 'width': 216}], 'source': {'height': 222, 'url': 'https://external-preview.redd.it/-fBJQ6cT4DlQY0UhYE6y6nJpTCtDsr3td5RBU-j3AxE.jpg?auto=webp&amp;s=5282af427989ef51a95fff90c3fc8d321cd3863e', 'width': 222}, 'variants': {}}]}",6,1647825832,1,,True,False,False,haskell,t5_2qh36,69480,public,default,Stack LTS 19 release and Nightly on ghc-9.2,0,[],1.0,https://www.stackage.org/blog/2022/03/announce-lts-19-nightly-ghc9.2,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://www.stackage.org/blog/2022/03/announce-lts-19-nightly-ghc9.2,140.0,140.0,,,,,,,,,,,,,,,
58.0,[],False,dreixel,,[],,text,t2_378rf,False,False,False,[],False,False,1647791259,discourse.haskell.org,https://www.reddit.com/r/haskell/comments/tinwvw/haskell_internships_with_standard_chartered_bank/,{},tinwvw,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tinwvw/haskell_internships_with_standard_chartered_bank/,False,link,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1647791270,1,,True,False,False,haskell,t5_2qh36,69477,public,default,Haskell internships with Standard Chartered Bank in the UK,0,[],1.0,https://discourse.haskell.org/t/haskell-internships-with-standard-chartered-bank-in-the-uk/4235,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,https://discourse.haskell.org/t/haskell-internships-with-standard-chartered-bank-in-the-uk/4235,140.0,140.0,,,,,,,,,,,,,,,
59.0,[],False,epoberezkin,,[],,text,t2_13t18x,False,False,False,[],False,False,1647784239,self.haskell,https://www.reddit.com/r/haskell/comments/tilhpz/haskell_network_library_tcp_keepalive_parameters/,{},tilhpz,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tilhpz/haskell_network_library_tcp_keepalive_parameters/,False,,,6,1647784249,1,"Maybe somebody here can help me out...

How can I configure TCP keep alive parameters per-socket, specifically TCP\_KEEPCNT, TCP\_KEEPIDLE and TCP\_KEEPINTVL? This is based on this doc for context.

[network](https://hackage.haskell.org/package/network-3.1.2.7/docs/Network-Socket.html#g:7) library exposes SO\_KEEPALIVE parameter that as I understand enables/disables it, but not the three parameters above? Even with that parameter, when I print its value after setting it to 1 in the client I get 64 and in the server I get 8 – so I am not sure if I am setting it correctly...

There is also [keep-alive](https://hackage.haskell.org/package/keep-alive-0.2.0.0/docs/Network-Socket-KeepAlive.html) library that seems to allow configuring TCP\_KEEPIDLE and TCP\_KEEPINTVL per socket, but it doesn't compile on Mac.

I would really appreciate any suggestions here - thank you!",True,False,False,haskell,t5_2qh36,69475,public,self,Haskell network library TCP keep-alive parameters,0,[],1.0,https://www.reddit.com/r/haskell/comments/tilhpz/haskell_network_library_tcp_keepalive_parameters/,all_ads,6,,,,,,,,,,,,,,,,,,,,
60.0,[],False,xieyuheng,,[],,text,t2_cuza9,False,False,False,[],False,False,1647781040,github.com,https://www.reddit.com/r/haskell/comments/tikh8f/github_cicadalanglambda_an_implementation_of/,{},tikh8f,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tikh8f/github_cicadalanglambda_an_implementation_of/,False,link,"{'enabled': False, 'images': [{'id': 'h22shGjpIlJACDb-LHBI4e3A1SNB47qVXlllsByHKKk', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/qF-5oa7EcG1zm_v1-2X-a6HqrwLtuIHxQUxeQzd5roY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=90cf88a2fcb9f8b6ffa74cd272b2c5dc4f8cfb8b', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/qF-5oa7EcG1zm_v1-2X-a6HqrwLtuIHxQUxeQzd5roY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b3fda23f822cb3589eb5512e8ba21d275ce99575', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/qF-5oa7EcG1zm_v1-2X-a6HqrwLtuIHxQUxeQzd5roY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9ebd71cfa72375af8b74d4ea7d5deaa57e826982', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/qF-5oa7EcG1zm_v1-2X-a6HqrwLtuIHxQUxeQzd5roY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e077f29b1139cd6ea46a4965ea75880f6d6fd9a9', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/qF-5oa7EcG1zm_v1-2X-a6HqrwLtuIHxQUxeQzd5roY.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=325fb3b38834a892e52dc54eae1569ee17abc7ed', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/qF-5oa7EcG1zm_v1-2X-a6HqrwLtuIHxQUxeQzd5roY.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=7be0bce3577c89de3bcc4cb45fc282be665ff9eb', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/qF-5oa7EcG1zm_v1-2X-a6HqrwLtuIHxQUxeQzd5roY.jpg?auto=webp&amp;s=32559264d7dc643c86984d33eb507207ed660fad', 'width': 1200}, 'variants': {}}]}",6,1647781050,1,,True,False,False,haskell,t5_2qh36,69473,public,default,GitHub - cicada-lang/lambda: An implementation of (Untyped) Lambda Calculus in JavaScript.,0,[],1.0,https://github.com/cicada-lang/lambda,all_ads,6,,,https://github.com/cicada-lang/lambda,70.0,140.0,,,,,,,,,,,,,,,
61.0,[],False,sullyj3,,[],,text,t2_5b0kp,False,False,False,[],False,False,1647766137,self.haskell,https://www.reddit.com/r/haskell/comments/tigsot/confused_about_design_of_yesod_form_api/,{},tigsot,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tigsot/confused_about_design_of_yesod_form_api/,False,,,6,1647766147,1,"I understand that this might come across as rude, and I apologise in advance if it does, but is anyone able to give me some rationale for why the Yesod forms API is the way it is? It seems to me to be incredibly overcomplicated. There's a mess of boilerplate, what with creating a data type and generating a widget from it, even if you need all of two fields, as in the case of a login form. In particular, controlling the layout and appearance of the form seems to be extremely cumbersome. The applicative API seems basically useless, given that you don't have any control over appearance - as soon as you want to do something as simple as tweak the label font size you have to drop to the monadic API.

I'm coming from Flask here, so my reference point that you just write your form in a jinja2 template, in which you have full and straightforward control over the form's layout and appearance, then you access the form data from a request like so:

```
@app.route(""/login"", methods=(""GET"", ""POST""))
def login():
    """"""Log in a registered user by adding the user id to the session.""""""
    if request.method == ""POST"":
        username = request.form[""username""]
        password = request.form[""password""]

        # do things with username and password
```

Why not have something similar in Yesod, simply write the form as a Hamlet widget, and access the form data by name, instead of all this stuff with creating a datatype and generating the widget from it using `generateFormPost` and `runFormPost`? I'm new to Yesod, so I understand I'm probably missing a lot of information. But I don't think I require much expertise to state that I'm finding the API pretty unpleasant to use.",True,False,False,haskell,t5_2qh36,69471,public,self,Confused about design of Yesod form API,0,[],1.0,https://www.reddit.com/r/haskell/comments/tigsot/confused_about_design_of_yesod_form_api/,all_ads,6,,,,,,,,,,,,,,,,,,,,
62.0,[],False,man-vs-spider,,[],,text,t2_5by84,False,False,False,[],False,False,1647737308,self.haskell,https://www.reddit.com/r/haskell/comments/ti9c0n/what_is_a_good_data_type_for_doing_initial_value/,{},ti9c0n,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ti9c0n/what_is_a_good_data_type_for_doing_initial_value/,False,,,6,1647737318,1,"I'm making an ODE solver using Runge-Kutta. Implementing with lists is pretty easy but I was wondering if lists are the best container to be using.

ODE's solved in this way start with an initial condition and are solved by advancing by a time-step (if time is the relevant parameter) based on the current state. This is nicely solved using the `iterate` function. 

I was initially planning on switching to a vector type or similar, but maybe that is not necessary?

Any thoughts on if it's worth trying different container types?",True,False,False,haskell,t5_2qh36,69474,public,self,What is a good data type for doing initial value ODE's?,0,[],1.0,https://www.reddit.com/r/haskell/comments/ti9c0n/what_is_a_good_data_type_for_doing_initial_value/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
63.0,[],False,NNOTM,,[],,text,t2_6ztbu,False,False,False,[],False,False,1647723346,self.haskell,https://www.reddit.com/r/haskell/comments/ti4nci/utility_to_print_anything_with_a_data_instance/,{},ti4nci,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ti4nci/utility_to_print_anything_with_a_data_instance/,False,,,6,1647723357,1,"I don't know how often this particular situation comes up in other contexts, but when working with GHC and trying to print the Haskell expression ASTs it produces, I've run into a problem:  
They don't have a `Show` instance.

Now, I expect you'll say ""But /u/NNOTM"", just add a standalone deriving instance!""

I thought the same. However, it's such a complex graph of dependencies involving type families and similar that I gave up after 20 minutes of trying to add deriving instances for some types and finding workarounds for others where that's not possible.

Conveniently, however, GHC's expressions do have `Data` instances, and as it turns out, you can use those to convert them to Strings:

    {-# LANGUAGE AllowAmbiguousTypes #-}
    {-# LANGUAGE MonadComprehensions #-}
    {-# LANGUAGE ScopedTypeVariables #-}

    import Data.Data
    import Control.Applicative
    import Data.Functor
    import Data.Maybe
    import Data.List

    genericShow :: forall a . Data a =&gt; a -&gt; String
    genericShow a = catchAll `fromMaybe` asum [tryShow @String]
      where
        tryShow :: forall e . (Show e, Typeable e) =&gt; Maybe String
        tryShow = cast @_ @e a &lt;&amp;&gt; show
        catchAll :: String
        catchAll | null rest = ctr
                 | otherwise = ""("" &lt;&gt; intercalate "" "" (ctr : gmapQ genericShow a) &lt;&gt; "")""
          where rest = gmapQ genericShow a
                ctr = show (toConstr a)

    data Example = Node String Int Char Example
                 | Empty
                 deriving Data

    main :: IO ()
    main = putStrLn . genericShow $ Node ""foo"" 1 'a' $ Node ""bar"" 42 'b' Empty

    -- Output:
    -- (Node ""foo"" 1 'a' (Node ""bar"" 42 'b' Empty))

Caveats:  
It's possible that there's situations that I haven't run into where this breaks down.
You can see that I special-cased `String` so that `""foo""` isn't shown as `(:) 'f' ((:) 'o' ((:) 'o' []))` - If there are other types that shouldn't use the generic way of showing it, they'd have to be similarly special-cased.

Anyway, I thought I'd post this here in case it's useful for someone.",True,False,False,haskell,t5_2qh36,69469,public,self,Utility to print anything with a Data instance (but no Show instance),0,[],1.0,https://www.reddit.com/r/haskell/comments/ti4nci/utility_to_print_anything_with_a_data_instance/,all_ads,6,,,,,,,,,,,,,,,,,,,,
64.0,[],False,skyb0rg,,[],,text,t2_83z9i,False,False,False,[],False,False,1647717012,self.haskell,https://www.reddit.com/r/haskell/comments/ti2eaa/intuition_for_comonads/,{},ti2eaa,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ti2eaa/intuition_for_comonads/,False,,,6,1647717023,1,"In Haskell all the Comonads (at least the ones defined in the comonads package) are duals of transformers Monad Transformers. This is taken by changing the occurrence of the “state parameter” from positive to negative occurrence ((,) s &lt;-&gt; (-&gt;) s). 

For example (in pseudocode)

    —- m is Monad, w is Comonad

    —- Writer and Co-writer
    WriterT s m a ~ m ((,) s a)
    TracedT s w a ~ w ((-&gt;) s a)

    —- Reader and Co-reader
    ReaderT s m a ~ (-&gt;) s (m a)
    EnvT s w a ~ (,) s (w a)

    —- State and Co-State
    StateT s m a ~ (-&gt;) s (m ((,) s a))
    StoreT s w a ~ (,) s (w ((-&gt;) s a))

However this is also a pretty restricted notion of duality. I wanted to know if there is a more intuition as to why this is the case, and then to what the dual of something like `MaybeT`, `SelectT`, and `ContT` (or is there?). Or why (-&gt;) and (,) are duals (because one is the exponential, and the other is the product); why aren’t the duals Either and (,)?

    MaybeT m a ~ m (Maybe a)
               ~ m (1 + a)
    CoMaybeT w a ~ w (Void, a)
                 ~ w (0 * a)
    —- Note that CoMaybeT is uninhabited when w is a Comonad",True,False,False,haskell,t5_2qh36,69468,public,self,Intuition for Comonads,0,[],1.0,https://www.reddit.com/r/haskell/comments/ti2eaa/intuition_for_comonads/,all_ads,6,,,,,,,,,,,,,,,,,,,,
65.0,[],False,fumieval,,[],,text,t2_fwirv,False,False,False,[],False,False,1647691347,github.com,https://www.reddit.com/r/haskell/comments/thtrew/wordcompat_supporting_word8_and_the_like_with_no/,{},thtrew,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/thtrew/wordcompat_supporting_word8_and_the_like_with_no/,False,link,"{'enabled': False, 'images': [{'id': 'nS759pFTg0syIo3LiRqDdAZyXPj60WgSpjh_bgOPz0s', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/Ou0EHgX3MbHpEBn9AbrHoRCFxb7qvIgwZnsaspcj-jo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1a53851ea9bdcbc010ae42c69327f568d293cda0', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/Ou0EHgX3MbHpEBn9AbrHoRCFxb7qvIgwZnsaspcj-jo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c8db2cffd94c120fcebfc5a895f05e0c6af3dd87', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/Ou0EHgX3MbHpEBn9AbrHoRCFxb7qvIgwZnsaspcj-jo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=81388064c2e5e708714dfe0ebfcf1ae91cf7e96e', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/Ou0EHgX3MbHpEBn9AbrHoRCFxb7qvIgwZnsaspcj-jo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=bc37b8b7a7221ba974af8e3d133b7423bcb41e1c', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/Ou0EHgX3MbHpEBn9AbrHoRCFxb7qvIgwZnsaspcj-jo.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=36c372428930b25a1e20038681c7c8465adef94c', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/Ou0EHgX3MbHpEBn9AbrHoRCFxb7qvIgwZnsaspcj-jo.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=92874c63f1ad9d37694a2abeda79fa382cf2fbc7', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/Ou0EHgX3MbHpEBn9AbrHoRCFxb7qvIgwZnsaspcj-jo.jpg?auto=webp&amp;s=2eeed188c0177aaa9e6f74f7d3148e7d95e519c9', 'width': 1200}, 'variants': {}}]}",6,1647691357,1,,True,False,False,haskell,t5_2qh36,69471,public,default,word-compat: supporting Word8# and the like with no bother,0,[],1.0,https://github.com/fumieval/word-compat,all_ads,6,,,https://github.com/fumieval/word-compat,70.0,140.0,,,,,,,,,,,,,,,
66.0,[],False,AbjectBasket7,,[],,text,t2_2w3bst51,False,False,False,[],False,False,1647628679,self.haskell,https://www.reddit.com/r/haskell/comments/thby6s/an_audit_monad/,{},thby6s,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/thby6s/an_audit_monad/,False,,,6,1647628690,1,[http://www.jerf.org/iri/post/2958](http://www.jerf.org/iri/post/2958) this article discusses a hypothetical AuditableData Monad that records historic results.  Can such a monad be created that obeys the  monad identity laws?,True,False,False,haskell,t5_2qh36,69465,public,self,An audit Monad,0,[],1.0,https://www.reddit.com/r/haskell/comments/thby6s/an_audit_monad/,all_ads,6,,,,,,,,,,,,,,,,,,,,
67.0,[],False,Innf107,,[],,text,t2_3hk0np9x,False,False,False,[],False,False,1647627084,prophetlabs.de,https://www.reddit.com/r/haskell/comments/thaqi6/faking_local_instances_with_unsafecoerce_dict/,{},thaqi6,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/thaqi6/faking_local_instances_with_unsafecoerce_dict/,False,,,6,1647627094,1,,True,False,False,haskell,t5_2qh36,69465,public,default,Faking Local Instances with unsafeCoerce Dict,0,[],1.0,https://prophetlabs.de/posts/unsafeCoerceDict.html,all_ads,6,,,https://prophetlabs.de/posts/unsafeCoerceDict.html,,,,,,,,,,,,,,,,,
68.0,[],False,Innf107,,[],,text,t2_3hk0np9x,False,False,False,[],False,False,1647627008,self.haskell,https://www.reddit.com/r/haskell/comments/thamn2/faking_local_instances_with_unsafecoerce_dict/,{},thamn2,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/thamn2/faking_local_instances_with_unsafecoerce_dict/,False,,,6,1647627019,1,,True,False,False,haskell,t5_2qh36,69465,public,self,Faking Local Instances with unsafeCoerce Dict,0,[],1.0,https://www.reddit.com/r/haskell/comments/thamn2/faking_local_instances_with_unsafecoerce_dict/,all_ads,6,,,,,,,,,,,,,,,,,,,,
69.0,[],False,ysangkok,,[],,text,t2_4qktt,False,False,False,[],False,False,1647623692,stackage.org,https://www.reddit.com/r/haskell/comments/th6zme/stackage_lts_190_is_released_with_ghc_902/,{},th6zme,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/th6zme/stackage_lts_190_is_released_with_ghc_902/,False,,,6,1647623703,1,,True,False,False,haskell,t5_2qh36,69465,public,default,Stackage LTS 19.0 is released with GHC 9.0.2,0,[],1.0,https://www.stackage.org/lts-19.0,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://www.stackage.org/lts-19.0,,,,reddit,,,,,,,,,,,,,
70.0,[],False,mirkeau,,[],,text,t2_2rafjlo8,False,False,False,[],False,False,1647619605,self.haskell,https://www.reddit.com/r/haskell/comments/th4twn/understanding_tolistof_with_van_laarhoven/,{},th4twn,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/th4twn/understanding_tolistof_with_van_laarhoven/,False,,,6,1647619616,1,"As a voluntary exercise I try to implement van Laarhoven lenses, prisms, traversals, folds and isos. For me, it’s all very abstract, but I feel like I’m making slow progress. Sometimes the intuition doesn’t work for me, then I try to let me guide by the types. When implementing `toListOf` I get stuck because “type tetris” doesn’t help anymore:

They start with

    toListOf :: Traversal s s a a -&gt; (s -&gt; [a])

where a `Traversal s t a b` s is a function

    forall f. Applicative f =&gt; (a -&gt; f b) -&gt; (s -&gt; f t)

Then, they generalize `Traversal s s a a` to

    (a -&gt; Const (Endo [a]) a) -&gt; (s -&gt; Const (Endo [a]) s)

and this is the resulting function I try to implement:

    toListOf :: ((a -&gt; Const (Endo [a]) a) -&gt; (s -&gt; Const (Endo [a]) s)) -&gt; (s -&gt; [a])
    toListOf t x = undefined

`t` is the ""Traversal"", `x` is of type `s` and we expect a result of type `[a]`.

My baby steps:

* `t` expects a function from `a` to `Const (Endo [a]) a`, the only one I could think of is `Const . Endo . map . const`.
* After applying `t` to it, I get a function

&amp;#8203;

    foo = t $ Const . Endo . map . const :: s -&gt; Const (Endo [a]) s

* Then I have `x` as a value of type `s` and apply `foo x`, extract the value with `getConst` and finally get an `Endo [a]`.

I have no idea how an `Endo [a]`, a function `[a] -&gt; [a]` helps me to get a final `[a]` value without having an initial list of `a` values. Of course I tried to use `[]`, but as the following running but failing test shows, my implementation doesn't do ""the right thing"":

    module TinyLens where
    
    import Data.Functor.Const ( Const(Const), getConst )
    import Data.Semigroup ( Endo(Endo), appEndo )
    import Test.QuickCheck ( quickCheck )
    
    elements :: (Traversable t, Applicative f) =&gt; (a -&gt; f b) -&gt; (t a -&gt; f (t b))
    elements = traverse
    
    toListOf :: ((a -&gt; Const (Endo [a]) a) -&gt; (s -&gt; Const (Endo [a]) s)) -&gt; (s -&gt; [a])
    toListOf t x =  let foo = t $ Const . Endo . map . const
                        bar = getConst $ foo x
                    in  appEndo bar []
    
    propSameList :: [Int] -&gt; Bool
    propSameList xs = toListOf elements xs == xs
    
    main = quickCheck propSameList

Can somebody give me some hints or point out mistakes I made before?

Thanks for your time!",True,False,False,haskell,t5_2qh36,69464,public,self,Understanding toListOf with van Laarhoven traversals,0,[],1.0,https://www.reddit.com/r/haskell/comments/th4twn/understanding_tolistof_with_van_laarhoven/,all_ads,6,,,,,,,,,,,,,,,,,,,,
71.0,[],False,xieyuheng,,[],,text,t2_cuza9,False,False,False,[],False,False,1647618475,github.com,https://www.reddit.com/r/haskell/comments/th4dk0/an_implementation_of_interaction_nets_not_only/,{},th4dk0,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/th4dk0/an_implementation_of_interaction_nets_not_only/,False,link,"{'enabled': False, 'images': [{'id': '09EHM42AOM7LN0X8EgKaVMW4kgKklcqK-fiE5IcjZzw', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/gag6cI_g5UjP1LRdbhRmqQbzR0wFGaS0m98weAC__uo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66957109bca56a114bb1ea9f8525fd0707dbc605', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/gag6cI_g5UjP1LRdbhRmqQbzR0wFGaS0m98weAC__uo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=5b480e0a1a113c8bc3b45017fd235cac46d81b8e', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/gag6cI_g5UjP1LRdbhRmqQbzR0wFGaS0m98weAC__uo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f7915fa3a5dbf2daf039635d3db9fa1a723393b9', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/gag6cI_g5UjP1LRdbhRmqQbzR0wFGaS0m98weAC__uo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0c032e454f78ba5f0b0788939d839f536078edb2', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/gag6cI_g5UjP1LRdbhRmqQbzR0wFGaS0m98weAC__uo.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=cf75b13f34f7657c2378beb8013df46498c02307', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/gag6cI_g5UjP1LRdbhRmqQbzR0wFGaS0m98weAC__uo.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=357b6a3a1da08fe23b3479ae284f4101b8e615f7', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/gag6cI_g5UjP1LRdbhRmqQbzR0wFGaS0m98weAC__uo.jpg?auto=webp&amp;s=f8364491f725b3ebcc2edd05453e9ce170f35085', 'width': 1200}, 'variants': {}}]}",6,1647618485,1,,True,False,False,haskell,t5_2qh36,69465,public,default,"An implementation of Interaction Nets (not only deterministic on computation result, but also the computation is unique, up to trivial commutations).",0,[],1.0,https://github.com/cicada-lang/inet,all_ads,6,,,https://github.com/cicada-lang/inet,70.0,140.0,,,,,,,,,,,,,,,
72.0,[],False,rbrucesp,,[],,text,t2_cascywq,False,False,False,[],False,False,1647611437,self.haskell,https://www.reddit.com/r/haskell/comments/th1sco/conversion_to_tagless_style/,{},th1sco,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/th1sco/conversion_to_tagless_style/,False,,,6,1647611447,1,"Hello, I have read about Typed Tagless Final Interpeters ([https://okmij.org/ftp/tagless-final/index.html#course-oxford](https://okmij.org/ftp/tagless-final/index.html#course-oxford)) and found the conversion from untyped ASTs or strings to this representation very difficult ([https://okmij.org/ftp/tagless-final/course/TypeCheck.hs](https://okmij.org/ftp/tagless-final/course/TypeCheck.hs)).

&amp;#x200B;

I tried to use the Equality Package for that, because I saw that it works very good with GADTS, but I couldn't get it work with a tagless style. 

&amp;#x200B;

    {-# LANGUAGE GADTs #-}
    {-# LANGUAGE Rank2Types  #-}
    {-# LANGUAGE FunctionalDependencies #-}
    {-# LANGUAGE AllowAmbiguousTypes #-}
    {-# LANGUAGE FlexibleInstances #-}
    {-# LANGUAGE UndecidableInstances #-}
    
    import Data.Data ((:~:)(Refl))
    import Data.Type.Equality (TestEquality(testEquality))
    
    
    class Symantics repr where
        int :: Int -&gt; repr h Int                -- int literal
        add :: repr h Int -&gt; repr h Int -&gt; repr h Int
    
        z   :: repr (a,h) a                 -- variables: z and s ... (s z)
        s   :: repr h a -&gt; repr (any,h) a
        lam :: repr (a,h) b  -&gt; repr h (a-&gt;b)
        app :: repr h (a-&gt;b) -&gt; repr h a -&gt; repr h b
    
    
    data ExpN = LamN String ExpN | VarN String | AppN ExpN ExpN | IntN Int
    data DynTerm repr h = forall a. DynTerm (Ty a) (repr h a)
    
    data VarDesc t = 
        VarDesc (Ty t) VarName
    
    data Ty a where
        TyInt :: Ty Int 
        TyArr :: Ty a -&gt; Ty b -&gt; Ty (a-&gt;b)
    
    instance TestEquality Ty where
        testEquality  TyInt TyInt = return  Refl 
        testEquality (TyArr t1 t2) (TyArr t1' t2') = do Refl &lt;- testEquality t1 t1'
                                                        Refl &lt;- testEquality t2 t2'
                                                        return Refl 
        testEquality _ _ = Nothing
    
    type VarName = String 
    
    class Var gamma h | gamma -&gt; h where
        findvar :: Symantics repr =&gt;
            VarName -&gt; gamma -&gt; Either String (DynTerm repr h)
    
    
    
    instance Var () () where
        findvar name _ = Left $ ""Unbound variable: "" ++ name
    
    instance Var gamma h =&gt; Var (VarDesc t,gamma) (t,h) where
        findvar name (VarDesc tr name',_) | name == name' =
             return $ DynTerm tr z
    
        findvar name (_,gamma) = do
             DynTerm tr v &lt;- findvar name gamma
             return $ DynTerm tr (s v)
    
    
    typeCheck ::(Symantics repr, Var gamma h)=&gt; t -&gt; ExpN -&gt; Maybe (DynTerm repr h)
    typeCheck gamma (IntN n) = return $  DynTerm TyInt (int n)
    typeCheck gamma (AppN fN xN) = do DynTerm (TyArr ty1F ty2F )  f &lt;- typeCheck gamma fN
                                      DynTerm (tyX) x &lt;- typeCheck gamma xN
                                      Refl  &lt;- testEquality (ty2F) (tyX)
                                      return $ DynTerm ty2F  (app f x)
    
    

I get the following error:

    • Could not deduce (Symantics repr1)
        arising from a use of ‘typeCheck’
      from the context: (Symantics repr, Var gamma h)
        bound by the type signature for:
                   typeCheck :: forall (repr :: * -&gt; * -&gt; *) gamma h t.
                                (Symantics repr, Var gamma h) =&gt;
                                t -&gt; ExpN -&gt; Maybe (DynTerm repr h)
        at 60:1-79
      The type variable ‘repr1’ is ambiguous
    • In a stmt of a 'do' block:
        DynTerm (TyArr ty1F ty2F) f &lt;- typeCheck gamma fN
      In the expression:
        do DynTerm (TyArr ty1F ty2F) f &lt;- typeCheck gamma fN
           DynTerm (tyX) x &lt;- typeCheck gamma xN
           Refl &lt;- testEquality (ty2F) (tyX)
           return $ DynTerm ty2F (app f x)
      In an equation for ‘typeCheck’:
          typeCheck gamma (AppN fN xN)
            = do DynTerm (TyArr ty1F ty2F) f &lt;- typeCheck gamma fN
                 DynTerm (tyX) x &lt;- typeCheck gamma xN
                 Refl &lt;- testEquality (ty2F) (tyX)
                 ....

Can you please say me what I am doing wrong?

Is there a simple way to do this?",True,False,False,haskell,t5_2qh36,69463,public,self,Conversion to Tagless Style,0,[],1.0,https://www.reddit.com/r/haskell/comments/th1sco/conversion_to_tagless_style/,all_ads,6,,,,,,,,,,,,,,,,,,,,
73.0,[],False,RegularTetragon,,[],,text,t2_149g35,False,False,False,[],False,False,1647581332,self.haskell,https://www.reddit.com/r/haskell/comments/tgu4fy/im_having_issues_with_applicative_effects/,{},tgu4fy,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tgu4fy/im_having_issues_with_applicative_effects/,False,,,6,1647581343,1,"My code:
```haskell
data Counter a = Counter Integer a | Increment
instance Functor Counter where
    fmap f (Counter count x) = Counter count (f x)
    fmap f Increment = Increment

instance Applicative Counter where
    pure x = Counter 0 x
    (&lt;*&gt;) (Counter count1 f) (Counter count2 x) = Counter (count1 + count2) (f x)
    (&lt;*&gt;) Increment (Counter count x) = Counter (count + 1) x
    --Unsure if these two follow applicative laws tbh
    (&lt;*&gt;) (Counter count f) Increment = Increment
    (&lt;*&gt;) Increment Increment = Increment
```
My error:
```sh
&lt;interactive&gt;:121:41: error:
    * Couldn't match type `a' with `b'
      Expected: Counter b
        Actual: Counter a
      `a' is a rigid type variable bound by
        the type signature for:
          (Prelude.&lt;*&gt;) :: forall a b.
                           Counter (a -&gt; b) -&gt; Counter a -&gt; Counter b
        at &lt;interactive&gt;:120:5-9
      `b' is a rigid type variable bound by
        the type signature for:
          (Prelude.&lt;*&gt;) :: forall a b.
                           Counter (a -&gt; b) -&gt; Counter a -&gt; Counter b
        at &lt;interactive&gt;:120:5-9
    * In the expression: Counter (count + 1) x
      In an equation for `Prelude.&lt;*&gt;':
          (Prelude.&lt;*&gt;) Increment (Counter count x) = Counter (count + 1) x
      In the instance declaration for `Applicative Counter'
    * Relevant bindings include
        x :: a (bound at &lt;interactive&gt;:121:36)
        (&lt;*&gt;) :: Counter (a -&gt; b) -&gt; Counter a -&gt; Counter b
          (bound at &lt;interactive&gt;:120:5)
```
Alright, so for my own personal education I'm trying to figure out how applicatives relate to effects outside of monads.

My interpretation of an effect is something which changes the data structure, but is not affected by `fmap`

The solution I came up with was to put the effect data as part of the ""main"" constructor, and the effect action as a union'd constructor. Thing is this type error is messing with me, and I'm not sure how to resolve it. First of all, is my interpretation of what an effect is wrong? Secondly, why is `Counter a /= Counter b` in this error message? They're both generic, so why is it having trouble with a = b?",True,False,False,haskell,t5_2qh36,69462,public,self,I'm having issues with Applicative Effects,0,[],1.0,https://www.reddit.com/r/haskell/comments/tgu4fy/im_having_issues_with_applicative_effects/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
74.0,[],False,Alice_in_world_war,,[],,text,t2_7ep1383u,False,False,False,[],False,False,1647577887,self.haskell,https://www.reddit.com/r/haskell/comments/tgt88x/someone_explain_this_code_please/,{},tgt88x,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tgt88x/someone_explain_this_code_please/,False,,,6,1647577897,1,[removed],True,False,False,haskell,t5_2qh36,69462,public,self,Someone explain this code please,0,[],1.0,https://www.reddit.com/r/haskell/comments/tgt88x/someone_explain_this_code_please/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,reddit,,,,,,,,,,,,,
75.0,[],False,thomasjm4,,[],,text,t2_ye2d7h4,False,False,False,[],False,False,1647577287,self.haskell,https://www.reddit.com/r/haskell/comments/tgt2bb/ann_servanttypescript_typescript_client/,{},tgt2bb,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/tgt2bb/ann_servanttypescript_typescript_client/,False,self,"{'enabled': False, 'images': [{'id': 'cHyVRnksY_Erx0cvKQCXs8EZl05V7bfMkl7nbffRzkA', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/pdhe8FTDrvX7d7WuPPiCpvSETNIyB6sekVI3-VKXY-A.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d7e867d3a5383a2fe8b4e57d51555bf7735a1a36', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/pdhe8FTDrvX7d7WuPPiCpvSETNIyB6sekVI3-VKXY-A.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2419ac91d8305c9b45bbea26f43df7985cea20b1', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/pdhe8FTDrvX7d7WuPPiCpvSETNIyB6sekVI3-VKXY-A.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=34b0706d3dda7d6406a2495dbcc3b53f6f414896', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/pdhe8FTDrvX7d7WuPPiCpvSETNIyB6sekVI3-VKXY-A.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=067d3e21fa9c691d7e39c839c2a209a75d2eabea', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/pdhe8FTDrvX7d7WuPPiCpvSETNIyB6sekVI3-VKXY-A.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b791f16be6518d0d9a098409613536d33175475d', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/pdhe8FTDrvX7d7WuPPiCpvSETNIyB6sekVI3-VKXY-A.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=bbd1a155b3c34dd8a8824e9b12e70afe33673c8d', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/pdhe8FTDrvX7d7WuPPiCpvSETNIyB6sekVI3-VKXY-A.jpg?auto=webp&amp;s=366ac5cc234a4cde3f29883c2462ac0487db5e4c', 'width': 1200}, 'variants': {}}]}",6,1647577297,1,"This library packages up the approach I've been using for a while to generate TypeScript client libraries for Servant by building upon [aeson-typescript](https://github.com/codedownio/aeson-typescript/).

Hope someone finds it useful! You can find it on Hackage and here:

[https://github.com/codedownio/servant-typescript](https://github.com/codedownio/servant-typescript)",True,False,False,haskell,t5_2qh36,69461,public,self,"[ANN]: servant-typescript, TypeScript client generation for Servant",0,[],1.0,https://www.reddit.com/r/haskell/comments/tgt2bb/ann_servanttypescript_typescript_client/,all_ads,6,,,,,,,,,,,,,,,,,,,,
76.0,[],False,leighscullyyang,,[],,text,t2_jddda4f8,False,False,False,[],False,False,1647557850,self.haskell,https://www.reddit.com/r/haskell/comments/tgmr1x/the_imperative_bit_in_functional_programming_is/,{},tgmr1x,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tgmr1x/the_imperative_bit_in_functional_programming_is/,False,,,6,1647557860,1,"Hi all, learning FP and Haskell.

I'm confused by the claim in FP that FP programming is about the ""what"" and not the ""how"" (see 2nd paragraph in [wiki](https://en.wikipedia.org/wiki/Declarative_programming)). How could you possible write a computer program without telling the computer what to do (the how)?

The closest answer I've gathered is that FP is essentially about term rewriting systems (using beta reduction in particular). A rewriting step is analogous to a state transition step in turing machines. So then that means the compiler handles all the control flow for you, rather than FP somehow magically eliminating the need for control flow and other imperative ideas.

Is this understanding correct? What am I missing?",True,False,False,haskell,t5_2qh36,69460,public,self,"The ""imperative bit"" in functional programming is the compiler's rewriting strategy?",0,[],1.0,https://www.reddit.com/r/haskell/comments/tgmr1x/the_imperative_bit_in_functional_programming_is/,all_ads,6,,,,,,,,,,,,,,,,,,,,
77.0,[],False,EntrepreneurAmazing4,,[],,text,t2_812xilv1,False,False,False,[],False,False,1647548144,self.haskell,https://www.reddit.com/r/haskell/comments/tgj6ko/making_my_haskell_function_more_readable/,{},tgj6ko,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tgj6ko/making_my_haskell_function_more_readable/,False,,,6,1647548155,1,"I've got this recursive function with loads of guards. What i've tried to do is converting a python function of mine into a haskell function. 

This python function is a simple recursive function with an if statement with multiple nested if statements within it. 

The problem is when I converted this code to haskell I used guards and it's very much unreadable. Just to give as an example, this is one of my guards:

    | indexTxt &lt; length txt &amp;&amp; pat !! indexPat == txt !! indexTxt &amp;&amp; (indexPat + 1) == length pat = findPat txt pat (indexTxt + 1) (calcPrefix pat 1 0 [] !! indexPat + 1) (mIndexes ++ [(indexTxt + 1) - (indexPat + 1)]) 

It doesn't really fit on the screen as you can see.

Is there any way to make my function more readable? I imagine I need to find some other way to makes this code more readable and preferably smaller, but I have no idea what my options are.

Any help/tips/guidance would be appreciated.",True,False,False,haskell,t5_2qh36,69458,public,self,Making my haskell function more readable,0,[],1.0,https://www.reddit.com/r/haskell/comments/tgj6ko/making_my_haskell_function_more_readable/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
78.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1647526826,haskellweekly.news,https://www.reddit.com/r/haskell/comments/tgbbz3/issue_307_haskell_weekly_newsletter/,{},tgbbz3,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tgbbz3/issue_307_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1647526837,1,,True,False,False,haskell,t5_2qh36,69455,public,default,Issue 307 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/307.html,all_ads,6,,,https://haskellweekly.news/issue/307.html,140.0,140.0,,,,,,,,,,,,,,,
79.0,[],False,ARFASOFTECH,,[],,text,t2_d4eadx3j,False,False,False,[],False,False,1647507719,arfasoftech.com,https://www.reddit.com/r/haskell/comments/tg5ve3/comprehensive_guide_to_cloud_based_application/,{},tg5ve3,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tg5ve3/comprehensive_guide_to_cloud_based_application/,False,,,6,1647507730,1,,True,False,False,haskell,t5_2qh36,69453,public,default,COMPREHENSIVE GUIDE TO CLOUD BASED APPLICATION DEVELOPMENT 2022,0,[],1.0,https://www.arfasoftech.com/blog/COMPREHENSIVE-GUIDE-TO-CLOUD-BASED-APPLICATION-DEVELOPMENT-2022,all_ads,6,,,https://www.arfasoftech.com/blog/COMPREHENSIVE-GUIDE-TO-CLOUD-BASED-APPLICATION-DEVELOPMENT-2022,,,,reddit,,,,,,,,,,,,,
80.0,[],False,oskargreda,,[],,text,t2_fi2s2co8,False,False,False,[],False,False,1647459573,self.haskell,https://www.reddit.com/r/haskell/comments/tfr47h/mlabs_is_hiring_a_haskell_developer_100_remote/,{},tfr47h,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tfr47h/mlabs_is_hiring_a_haskell_developer_100_remote/,False,self,"{'enabled': False, 'images': [{'id': 'GnuOK9IWNyfPHXokumwalY9XRYCi5oSA4uOxJlBNBp4', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f6c520b66a9e4cf15ae1b4b79af413002418a97e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=78ce6df2b94f79b0ccb5ac2b1439fdbd87be5a53', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d0ed86839ce6deb3d5d37506ef62434b8a77baf3', 'width': 320}], 'source': {'height': 500, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?auto=webp&amp;s=562a0dfc197f2356edb2e6c70d03e94ba27414cf', 'width': 500}, 'variants': {}}]}",6,1647459583,1,"We are one of the leading Haskell consultancies in the fintech, blockchain and AI space, with a passion for Haskell and open source software. We are looking for a remote Haskeller to join our team.

We are currently experiencing fantastic growth and now have a team of **over a 100 people**. We are looking to continue growing and would love to have more Haskellers on board with us! 

If you are excited about Haskell, about robust and clean software and are up for a new challenge, you’ve come to the right place!

We have developer roles from Junior to Senior, as well as roles in Delivery Management.

**As a Haskell Developer your role may include:**  


\- Building and testing smart contracts, traditional applications

\- Helping to define best practices with new application architectures

\- Building tools and libraries to support application development

\- Working in emerging technologies

\- For Senior and Intermediates: Systems Design, Formal Verification, Security and Performance analysis.

**As a Delivery Manager your role may include:**

\- Research and design of financial protocols

\- Providing continuity of care to customers across product lifecycles

\- Escalating issues that arise beyond the scope of a single project/department/client scope

\- Steering products toward MVP, delivery targets, audit-readiness and getting required resources in place to do so.

#### Requirements

* Strong Haskell skills
* Strong software engineering and architecture skills
* Strong problem solving and analytical skills
* Basic knowledge of security, concurrency, backend systems, system scaling and databases
* Version control (git)
* Strong verbal skills in English
* Experience with blockchain, smart contracts, compilers, nix and/or purescript is a bonus

#### Benefits

* Focus on learning and individual growth in Haskell and Computer Science
* Work with other great Haskellers, open source contributors and computer scientists
* Interesting and challenging projects
* Talk with anyone in the organization, regardless of team
* Remote work
* Flexible working hours
* 6 weeks of paid vacation
* Competitive salary

We have a variety of projects to work on at any time, ranging from payment stacks to smart contracts and blockchain to open source libraries, DSLs and compilers.

If you like Haskell and challenging projects, MLabs is the place for you, so please apply now via [https://apply.workable.com/mlabs/j/63DAAA4AEF/](https://apply.workable.com/mlabs/j/63DAAA4AEF/)",True,False,False,haskell,t5_2qh36,69444,public,self,"MLabs is Hiring a Haskell Developer (100% Remote, Worldwide)",0,[],1.0,https://www.reddit.com/r/haskell/comments/tfr47h/mlabs_is_hiring_a_haskell_developer_100_remote/,all_ads,6,,,,,,,,,,,,,,,,,,,,
81.0,[],False,Defrigeration,,[],,text,t2_ghrwv,False,False,False,[],False,False,1647458696,self.haskell,https://www.reddit.com/r/haskell/comments/tfqpeg/liftm_destroys_laziness/,{},tfqpeg,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tfqpeg/liftm_destroys_laziness/,False,,,6,1647458706,1,"Hello, everyone. I am learning about programming with monads. I discovered the following while traversing a data structure with a State monad, but it's easier to demonstrate with the IO monad. 

If I use boolean operators, they will only evaluate the arguments that they need. e.g.: 

    Prelude&gt; False &amp;&amp; undefined
    False
    Prelude&gt; True &amp;&amp; undefined
    *** Exception: Prelude.undefined

So far, so good. This is what you'd expect. However, if I use the `liftM` group of functions to lift `&amp;&amp;` to a monad, this no longer works. e.g.:

    falsify :: IO Bool
    falsify = putStrLn ""It is a falsehood."" &gt;&gt; return False
    verify :: IO Bool
    verify = putStrLn ""Verily, it is so."" &gt;&gt; return True
    liftedAnd :: Monad m =&gt; m Bool -&gt; m Bool -&gt; m Bool
    liftedAnd = liftM2 (&amp;&amp;)

Then, calling it in ghci:

    *Main&gt; falsify `liftedAnd` verify
    It is a falsehood.
    Verily, it is so.
    False

So, you can't use `liftedAnd` for flow control. It's easy enough to write an AND function that behaves properly:

    mAnd :: Monad m =&gt; m Bool -&gt; m Bool -&gt; m Bool
    mAnd x y = x &gt;&gt;= \b -&gt; if b then y else return False

Now, in ghci:

    *Main&gt; falsify `mAnd` verify
    It is a falsehood.
    False

So, my questions are:

1. Would someone please explain *why* `liftM2` behaves this way?
2. Is there somewhere in the standard libraries to look for properly behaved `&amp;&amp; || if/then/else` etc. for monads?
3. Am I missing some key fact about `liftM2`? Perhaps I am not using it in the intended way.",True,False,False,haskell,t5_2qh36,69444,public,self,liftM destroys laziness,0,[],1.0,https://www.reddit.com/r/haskell/comments/tfqpeg/liftm_destroys_laziness/,all_ads,6,,,,,,,,,,,,,,,,,,,,
82.0,[],False,CoBuddha,,[],,text,t2_12byxs,False,False,False,[],False,False,1647447871,self.haskell,https://www.reddit.com/r/haskell/comments/tflwqq/which_optimizations_does_unsafeperformio_block/,{},tflwqq,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tflwqq/which_optimizations_does_unsafeperformio_block/,False,,,6,1647447881,1,"People often say that `unsafePerformIO` interacts poorly with the optimizer, but what does this actually mean? What kind of inspection is blocked by it? What optimizations can I expect to still work?
For example, if I `unsafePerformIO` a primop, does that not cause any issue given that there's nothing ""inside"" it to optimize? Or does it also block fusion from the outside?

Any resources on this would be great, thanks!",True,False,False,haskell,t5_2qh36,69442,public,self,Which optimizations does unsafePerformIO block?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tflwqq/which_optimizations_does_unsafeperformio_block/,all_ads,6,,,,,,,,,,,,,,,,,,,,
83.0,[],False,thefybe,,[],,text,t2_118sdr,False,False,False,[],False,False,1647445525,self.haskell,https://www.reddit.com/r/haskell/comments/tfkteo/is_there_a_better_pattern_for_return_just_some/,{},tfkteo,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tfkteo/is_there_a_better_pattern_for_return_just_some/,False,,,6,1647445535,1,"Lately I've had to write a lot of functions that need to check, whether some predicate holds and if it does return `Just some_value` otherwise return `Nothing`.

The pattern that I've come up with so far is `some_value &lt;$ guard condition`. For example:

    divSafe :: Rational -&gt; Rational -&gt; Maybe Rational
    divSafe p q = (p/q) &lt;$ guard (q /= 0)

Is there a better way to do this sort of stuff? But as of writing this I realized, this might be as good as it's going to get.",True,False,False,haskell,t5_2qh36,69442,public,self,Is there a better pattern for return `Just` some value if a predicate holds?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tfkteo/is_there_a_better_pattern_for_return_just_some/,all_ads,6,,,,,,,,,,,,,,,,,,,,
84.0,[],False,NixOverSlicedBread,,[],,text,t2_1s3ukhhs,False,False,False,[],False,False,1647436394,self.haskell,https://www.reddit.com/r/haskell/comments/tfhdpm/tooling_support_for_automatically_putting_lines/,{},tfhdpm,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tfhdpm/tooling_support_for_automatically_putting_lines/,False,self,"{'enabled': False, 'images': [{'id': '0Evd6UWXs4A11yT0I3bSUdOWKNqr9Az0qWvc-WhxMes', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a559bb4d890ff015d6259a06083f8cea81389ab2', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b67964ddc7f6a4e974672b382f7c786c8d3526fe', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=61e37c5f638b0d156c5fdcbc1a5335a3bdbb8729', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=298dca15f47ae031413bbd031ffd301b05793915', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=81eb47deb6039cc11cc169b056aee661e37b1789', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3b60b078d6771ef7f153290885f77a8f50774cdb', 'width': 1080}], 'source': {'height': 4096, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?auto=webp&amp;s=6803e63008eaa75aac55167a9225dd6c2f0316a7', 'width': 4096}, 'variants': {}}]}",6,1647436404,1,"Check out the great blog post https://www.tweag.io/blog/2020-01-30-haskell-profiling/ where he talks about factoring out code into separate functions, marking them with `{-# SCC #-}`, and adding the `-fno-prof-auto` compiler flag. This allows me to reliably find time bottlenecks in my code.

The problem is that I have to manually factor out my code into all these separate `{-# SCC #-}` functions.

Are there any plans to do what I suggested in the title? It would be cool if I could select lines of code and have them marked to automatically get factored out into a function of name e.g. `func_{FILENAME:LINE}`.

Can anyone here add this? (How much would this cost?)",False,False,False,haskell,t5_2qh36,69443,public,self,Tooling support for automatically putting lines of code into a separate `{-# SCC #-}` function,0,[],1.0,https://www.reddit.com/r/haskell/comments/tfhdpm/tooling_support_for_automatically_putting_lines/,all_ads,6,,,,,,,,,,,,,,,,,,,,
85.0,[],False,epoberezkin,,[],,text,t2_13t18x,False,False,False,[],False,False,1647435034,self.haskell,https://www.reddit.com/r/haskell/comments/tfgxnv/use_authenticated_git_with_cabal/,{},tfgxnv,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/tfgxnv/use_authenticated_git_with_cabal/,False,,,6,1647435049,1,"Does anybody know how to configure cabal to use public key that is normally used with git?

It seems GitHub no longer supports unauthenticated git from yesterday so dependencies on GitHub configured via cabal.project no longer build:

    The unauthenticated git protocol on port 9418 is no longer supported.
    Please see https://github.blog/2021-09-01-improving-git-protocol-security-github/ for more information.

Thank you!",True,False,False,haskell,t5_2qh36,69442,public,self,Use authenticated git with cabal,0,[],1.0,https://www.reddit.com/r/haskell/comments/tfgxnv/use_authenticated_git_with_cabal/,all_ads,6,,,,,,,,,,,,,,,,,,,,
86.0,[],False,zsome,,[],,text,t2_gvnql7,False,False,False,[],False,False,1647427163,self.haskell,https://www.reddit.com/r/haskell/comments/tfep9q/advice_a_project/,{},tfep9q,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/tfep9q/advice_a_project/,False,,,6,1647427173,1,"Hi,

Could you advice an opensource project where I can start to use my haskell knowledge ?

I'm interested in web3 + haskell now but any advice is okay for me :)",True,False,False,haskell,t5_2qh36,69437,public,self,Advice a project,0,[],1.0,https://www.reddit.com/r/haskell/comments/tfep9q/advice_a_project/,all_ads,6,,,,,,,,,,,,,,,,,,,,
87.0,[],False,figblu3,,[],,text,t2_7y32jd26,False,False,False,[],False,False,1647397129,self.haskell,https://www.reddit.com/r/haskell/comments/tf6x0r/i_have_cabal_installed_cpsa_installed_but_it_is/,{},tf6x0r,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tf6x0r/i_have_cabal_installed_cpsa_installed_but_it_is/,False,,,6,1647397140,1,"I am on a mac OS, and I think this might be an environmental path issue- but I have cabal and cpsa which I downloaded with the following commands

&amp;#x200B;

brew install cabal-install

cabal install cpsa

&amp;#x200B;

I can run cabal, but cpsa doesn't seem to be working. I just want to be able to run ""cpsa -h"" but I get an error that cpsa is not a recognized command. Any advice how to be able to run this?

I have cpsa stored in \~/Users/Li/.cabal/cpsa.",True,False,False,haskell,t5_2qh36,69426,public,self,"I have Cabal installed, cpsa installed- but it is not recognizing cpsa as a command?",0,[],1.0,https://www.reddit.com/r/haskell/comments/tf6x0r/i_have_cabal_installed_cpsa_installed_but_it_is/,all_ads,6,ebb4b74c-16d0-11eb-9ff6-0e5aacb57bb7,homework,,,,,,,,,,,,,,,,,,
88.0,[],False,pm_me_r34_r34,,[],,text,t2_vdd44hm,False,False,False,[],False,False,1647376781,self.rust,https://www.reddit.com/r/haskell/comments/tezr5y/comparison_of_targeted_strengths_between_rust_go/,{},tezr5y,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tezr5y/comparison_of_targeted_strengths_between_rust_go/,False,,,6,1647376792,1,,True,False,False,haskell,t5_2qh36,69423,public,default,"Comparison of ""targeted strengths"" between Rust, Go, and Hasekll from a newbie -- is this roughly the right sense?",0,[],1.0,/r/rust/comments/tezoil/comparison_of_targeted_strengths_between_rust_go/,all_ads,6,,,/r/rust/comments/tezoil/comparison_of_targeted_strengths_between_rust_go/,,,,,,,t3_tezoil,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'pm_me_r34_r34', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_vdd44hm', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1647376576.0, 'created_utc': 1647376576.0, 'discussion_type': None, 'distinguished': None, 'domain': 'self.rust', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 'tezoil', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': True, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_tezoil', 'no_follow': True, 'num_comments': 0, 'num_crossposts': 1, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/rust/comments/tezoil/comparison_of_targeted_strengths_between_rust_go/', 'pinned': False, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 1, 'secure_media': None, 'secure_media_embed': {}, 'selftext': 'I am laymen to programming and was deciding which of the main ""new"" languages to start off with learning.\n\nAfter surveying various discussions and comparisons, as well as having gone through introductory tutorials of most of them, I\'ve settled that these three each have orthogonal strengths that compliment each other that is worth learning at the same time. \n\nThe following is my very condensed summary of what the three\'s design paradigms implicitly aims to stand out in, I\'m wondering if the picture I\'m getting is adequately accurate:\n\n\n    Rust    : needs to be really good for  system, easy reliability by default (focused on specifying when to do rather than where, need very little code to memory-manage it)\n    Go      : needs to be really good for service, easy concurrency by default (focused on specifying how  to do rather than when, need very little code to parallelize it)\n    Haskell : needs to be really good for compute, easy abstraction by default (focused on specifying what to do rather than how, need very little code to represent it)', 'selftext_html': '&lt;!-- SC_OFF --&gt;&lt;div class=""md""&gt;&lt;p&gt;I am laymen to programming and was deciding which of the main &amp;quot;new&amp;quot; languages to start off with learning.&lt;/p&gt;\n\n&lt;p&gt;After surveying various discussions and comparisons, as well as having gone through introductory tutorials of most of them, I&amp;#39;ve settled that these three each have orthogonal strengths that compliment each other that is worth learning at the same time. &lt;/p&gt;\n\n&lt;p&gt;The following is my very condensed summary of what the three&amp;#39;s design paradigms implicitly aims to stand out in, I&amp;#39;m wondering if the picture I&amp;#39;m getting is adequately accurate:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Rust    : needs to be really good for  system, easy reliability by default (focused on specifying when to do rather than where, need very little code to memory-manage it)\nGo      : needs to be really good for service, easy concurrency by default (focused on specifying how  to do rather than when, need very little code to parallelize it)\nHaskell : needs to be really good for compute, easy abstraction by default (focused on specifying what to do rather than how, need very little code to represent it)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;', 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'rust', 'subreddit_id': 't5_2s7lj', 'subreddit_name_prefixed': 'r/rust', 'subreddit_subscribers': 172691, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'self', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'Comparison of ""targeted strengths"" between Rust, Go, and Hasekll from a newbie -- is this roughly the right sense?', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 1, 'upvote_ratio': 1.0, 'url': 'https://www.reddit.com/r/rust/comments/tezoil/comparison_of_targeted_strengths_between_rust_go/', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
89.0,[],False,AdOdd5690,,[],,text,t2_77ggiprk,False,False,False,[],False,False,1647353848,self.haskell,https://www.reddit.com/r/haskell/comments/teq0tw/what_are_the_current_challenges_in_numerical/,{},teq0tw,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/teq0tw/what_are_the_current_challenges_in_numerical/,False,self,"{'enabled': False, 'images': [{'id': 'oI8w2IHKnCB7EPuSQ10tHZbhrdUeSyEn5h8Pr90185A', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/2WEgrvXjcGbm-J0uo4cBIjZ6L1qi_P7xI5eJIh3Ar64.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e5e07d24e52fe7be44a90c8aae25ca8d456867aa', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/2WEgrvXjcGbm-J0uo4cBIjZ6L1qi_P7xI5eJIh3Ar64.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7c5ab79bbe5542019afbdeca369bb2a8fce4c91c', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/2WEgrvXjcGbm-J0uo4cBIjZ6L1qi_P7xI5eJIh3Ar64.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f39d4fb99be735c4fb8526514d049bea6ed03a90', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/2WEgrvXjcGbm-J0uo4cBIjZ6L1qi_P7xI5eJIh3Ar64.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ce793d7a2a9fa9706de611f134bc7f7e11254b49', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/2WEgrvXjcGbm-J0uo4cBIjZ6L1qi_P7xI5eJIh3Ar64.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=3a695a814fe2191f257eecee540472615713a401', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/2WEgrvXjcGbm-J0uo4cBIjZ6L1qi_P7xI5eJIh3Ar64.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3acc336f0e6f8627c4cb9ae2216a0aabf79868c2', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/2WEgrvXjcGbm-J0uo4cBIjZ6L1qi_P7xI5eJIh3Ar64.jpg?auto=webp&amp;s=7d03ed0c0d7555c4b3dc6c284c12baa382ac1eb8', 'width': 1200}, 'variants': {}}]}",6,1647353859,1,"Recently saw [this repo](https://github.com/Gabriel439/post-rfc/blob/main/sotu.md) that shows the state of Haskell in a lot of programming applications. It classifies it as Immature for Numerical Programming; I would like to know what are the challenges in it.

More importantly what (packages, libraries) would Haskellers love to have?",True,False,False,haskell,t5_2qh36,69422,public,self,What are the current challenges in Numerical Programming for Haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/teq0tw/what_are_the_current_challenges_in_numerical/,all_ads,6,,,,,,,,,,,,,,,,,,,,
90.0,[],False,jfraudeau,,[],,text,t2_h41h2t11,False,False,False,[],False,False,1647352099,self.haskell,https://www.reddit.com/r/haskell/comments/tepetq/hiring_aletiq_is_a_senior_software_engineer_in/,{},tepetq,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tepetq/hiring_aletiq_is_a_senior_software_engineer_in/,False,self,"{'enabled': False, 'images': [{'id': 'Vn3WZI7qVMiCvI9W4dxOQu2Q1_ZueCz3QyRyWdwvF6U', 'resolutions': [{'height': 56, 'url': 'https://external-preview.redd.it/y_2fo5IvaH6tCLq0uUnqG7Gk8FNDgWhmOV15okowEVw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8682d22caa8f3856ddc0fa8a99d9e0ff5f4e235d', 'width': 108}, {'height': 112, 'url': 'https://external-preview.redd.it/y_2fo5IvaH6tCLq0uUnqG7Gk8FNDgWhmOV15okowEVw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3a59a4ab27381aaf6cf832abebd9631c7b6fa4f5', 'width': 216}, {'height': 167, 'url': 'https://external-preview.redd.it/y_2fo5IvaH6tCLq0uUnqG7Gk8FNDgWhmOV15okowEVw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6a6a0ece4cccc2ab7961515f68bdb01171eac3f6', 'width': 320}, {'height': 334, 'url': 'https://external-preview.redd.it/y_2fo5IvaH6tCLq0uUnqG7Gk8FNDgWhmOV15okowEVw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=18869d166214931daa675c7dd76c483305ad8928', 'width': 640}, {'height': 501, 'url': 'https://external-preview.redd.it/y_2fo5IvaH6tCLq0uUnqG7Gk8FNDgWhmOV15okowEVw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=9999e600dba2cdef0be1d16fddfe42865a724c2e', 'width': 960}, {'height': 564, 'url': 'https://external-preview.redd.it/y_2fo5IvaH6tCLq0uUnqG7Gk8FNDgWhmOV15okowEVw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a8d923981999a68dfe0f9a1bd8c88f6e44a632d4', 'width': 1080}], 'source': {'height': 627, 'url': 'https://external-preview.redd.it/y_2fo5IvaH6tCLq0uUnqG7Gk8FNDgWhmOV15okowEVw.jpg?auto=webp&amp;s=043bac1cf4784f8a4d2bf18a3eefb783aedb1476', 'width': 1200}, 'variants': {}}]}",6,1647352109,1,[removed],True,False,False,haskell,t5_2qh36,69422,public,self,[Hiring] Aletiq is a senior software engineer in Paris (France),0,[],1.0,https://www.reddit.com/r/haskell/comments/tepetq/hiring_aletiq_is_a_senior_software_engineer_in/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
91.0,[],False,usernameqwerty005,,[],,text,t2_2b0vq4qb,False,False,False,[],False,False,1647348651,self.PHP,https://www.reddit.com/r/haskell/comments/teo9ze/one_universal_dryrun_mockspy_ast_evaluator_to/,{},teo9ze,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/teo9ze/one_universal_dryrun_mockspy_ast_evaluator_to/,False,link,"{'enabled': False, 'images': [{'id': 'Koc6oGz7dRpkDf1mY12o9JALCzMzqsLHtqnWqJVL4tI', 'resolutions': [{'height': 214, 'url': 'https://external-preview.redd.it/e-BjdRR_0CVAAaUXOf-HKWw_-sUM5uESRs8XwcdeXKg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=46c9edf7dd880e4f152d5216a4b7cc7d4b4bf5b9', 'width': 108}], 'source': {'height': 371, 'url': 'https://external-preview.redd.it/e-BjdRR_0CVAAaUXOf-HKWw_-sUM5uESRs8XwcdeXKg.jpg?auto=webp&amp;s=c562b703aff7f0cf70132fe803f11c38ead15327', 'width': 187}, 'variants': {}}]}",6,1647348662,1,,False,False,False,haskell,t5_2qh36,69420,public,default,One universal dry-run mock-spy AST evaluator to rule them all (iteration 3 of an effect EDSL) [converting the tagless-final concept to OOP/PHP],0,[],1.0,/r/PHP/comments/tdyf78/one_universal_dryrun_mockspy_ast_evaluator_to/,all_ads,6,,,/r/PHP/comments/tdyf78/one_universal_dryrun_mockspy_ast_evaluator_to/,,,,reddit,,,t3_tdyf78,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'usernameqwerty005', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_2b0vq4qb', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1647267147.0, 'created_utc': 1647267147.0, 'discussion_type': None, 'distinguished': None, 'domain': 'self.PHP', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': False, 'id': 'tdyf78', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': True, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': '', 'link_flair_richtext': [{'e': 'text', 't': 'Discussion'}], 'link_flair_template_id': '26934ed6-84db-11ec-8f20-b68594c379a4', 'link_flair_text': 'Discussion', 'link_flair_text_color': 'dark', 'link_flair_type': 'richtext', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_tdyf78', 'no_follow': False, 'num_comments': 3, 'num_crossposts': 1, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/PHP/comments/tdyf78/one_universal_dryrun_mockspy_ast_evaluator_to/', 'pinned': False, 'post_hint': 'self', 'preview': {'enabled': False, 'images': [{'id': 'Koc6oGz7dRpkDf1mY12o9JALCzMzqsLHtqnWqJVL4tI', 'resolutions': [{'height': 214, 'url': 'https://external-preview.redd.it/e-BjdRR_0CVAAaUXOf-HKWw_-sUM5uESRs8XwcdeXKg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=46c9edf7dd880e4f152d5216a4b7cc7d4b4bf5b9', 'width': 108}], 'source': {'height': 371, 'url': 'https://external-preview.redd.it/e-BjdRR_0CVAAaUXOf-HKWw_-sUM5uESRs8XwcdeXKg.jpg?auto=webp&amp;s=c562b703aff7f0cf70132fe803f11c38ead15327', 'width': 187}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 7, 'secure_media': None, 'secure_media_embed': {}, 'selftext': 'Motivating example (from [here](https://blog.ploeh.dk/2016/09/26/decoupling-decisions-from-effects/)):\n\n    public static string GetUpperText(string path)\n    {\n        if (!File.Exists(path)) return ""DEFAULT"";\n        var text = File.ReadAllText(path);\n        return text.ToUpperInvariant();\n    }\n\nIn PHP with the effect EDSL:\n\n    function getUpperText(string $file, St $st)\n    {\n        $result = \'DEFAULT\';\n        $st\n            -&gt;if(fileExists($file))\n            -&gt;then(set($result, fileGetContents($file)))\n            ();\n        return strtoupper($result);\n    }\n\nIn PHP with a mockable class:\n\n    function getUpperText(string $file, IO $io)\n    {\n        $result = \'DEFAULT\';\n        if ($io-&gt;fileExists($file)) {\n            $result = $io-&gt;fileGetContents($file);\n        }\n        return strtoupper($result);\n    }\n\nThe St class will build an abstract-syntax tree, which is then evaluated when invoked. It can be injected with either a live evaluator, or a dry-run evaluator which works as both mock, stub and spy.\n\nSt can also be used to delay or defer effects - just omit the invoke until later.\n\nThe unit test looks like this:\n\n    // Instead of mocking return types, set the return values\n    $returnValues = [\n        true,\n        \'Some example file content, bla bla bla\'\n    ];\n    $ev = new DryRunEvaluator($returnValues);\n    $st = new St($ev);\n    $text = getUpperText(\'moo.txt\', $st);\n    // Output: string(38) ""SOME EXAMPLE FILE CONTENT, BLA BLA BLA""\n    var_dump($text);\n    // Instead of a spy, you can inspect the dry-run log\n    var_dump($ev-&gt;log);\n    /* Output:\n       array(5) {\n       [0] =&gt;\n       string(13) ""Evaluating if""\n       [1] =&gt;\n       string(27) ""File exists: arg1 = moo.txt""\n       [2] =&gt;\n       string(15) ""Evaluating then""\n       [3] =&gt;\n       string(33) ""File get contents: arg1 = moo.txt""\n       [4] =&gt;\n       string(50) ""Set var to: Some example file content, bla bla bla""\n       }\n     */\n\nThe St class scales differently than mocking, so it\'s not always sensible to use.\n\nFull code: https://gist.github.com/olleharstedt/e18004ad82e57e18047690596781a05a', 'selftext_html': '&lt;!-- SC_OFF --&gt;&lt;div class=""md""&gt;&lt;p&gt;Motivating example (from &lt;a href=""https://blog.ploeh.dk/2016/09/26/decoupling-decisions-from-effects/""&gt;here&lt;/a&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;public static string GetUpperText(string path)\n{\n    if (!File.Exists(path)) return &amp;quot;DEFAULT&amp;quot;;\n    var text = File.ReadAllText(path);\n    return text.ToUpperInvariant();\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In PHP with the effect EDSL:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function getUpperText(string $file, St $st)\n{\n    $result = &amp;#39;DEFAULT&amp;#39;;\n    $st\n        -&amp;gt;if(fileExists($file))\n        -&amp;gt;then(set($result, fileGetContents($file)))\n        ();\n    return strtoupper($result);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;In PHP with a mockable class:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function getUpperText(string $file, IO $io)\n{\n    $result = &amp;#39;DEFAULT&amp;#39;;\n    if ($io-&amp;gt;fileExists($file)) {\n        $result = $io-&amp;gt;fileGetContents($file);\n    }\n    return strtoupper($result);\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The St class will build an abstract-syntax tree, which is then evaluated when invoked. It can be injected with either a live evaluator, or a dry-run evaluator which works as both mock, stub and spy.&lt;/p&gt;\n\n&lt;p&gt;St can also be used to delay or defer effects - just omit the invoke until later.&lt;/p&gt;\n\n&lt;p&gt;The unit test looks like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;// Instead of mocking return types, set the return values\n$returnValues = [\n    true,\n    &amp;#39;Some example file content, bla bla bla&amp;#39;\n];\n$ev = new DryRunEvaluator($returnValues);\n$st = new St($ev);\n$text = getUpperText(&amp;#39;moo.txt&amp;#39;, $st);\n// Output: string(38) &amp;quot;SOME EXAMPLE FILE CONTENT, BLA BLA BLA&amp;quot;\nvar_dump($text);\n// Instead of a spy, you can inspect the dry-run log\nvar_dump($ev-&amp;gt;log);\n/* Output:\n   array(5) {\n   [0] =&amp;gt;\n   string(13) &amp;quot;Evaluating if&amp;quot;\n   [1] =&amp;gt;\n   string(27) &amp;quot;File exists: arg1 = moo.txt&amp;quot;\n   [2] =&amp;gt;\n   string(15) &amp;quot;Evaluating then&amp;quot;\n   [3] =&amp;gt;\n   string(33) &amp;quot;File get contents: arg1 = moo.txt&amp;quot;\n   [4] =&amp;gt;\n   string(50) &amp;quot;Set var to: Some example file content, bla bla bla&amp;quot;\n   }\n */\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The St class scales differently than mocking, so it&amp;#39;s not always sensible to use.&lt;/p&gt;\n\n&lt;p&gt;Full code: &lt;a href=""https://gist.github.com/olleharstedt/e18004ad82e57e18047690596781a05a""&gt;https://gist.github.com/olleharstedt/e18004ad82e57e18047690596781a05a&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;', 'send_replies': False, 'spoiler': False, 'stickied': False, 'subreddit': 'PHP', 'subreddit_id': 't5_2qh38', 'subreddit_name_prefixed': 'r/PHP', 'subreddit_subscribers': 147412, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'self', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'One universal dry-run mock-spy AST evaluator to rule them all (iteration 3 of an effect EDSL)', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 7, 'upvote_ratio': 0.73, 'url': 'https://www.reddit.com/r/PHP/comments/tdyf78/one_universal_dryrun_mockspy_ast_evaluator_to/', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
92.0,[],False,Odd-Fox-8410,,[],,text,t2_7pefb5kd,False,False,False,[],False,False,1647343031,self.haskell,https://www.reddit.com/r/haskell/comments/temn9b/generate_typescript_from_servant_api/,{},temn9b,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/temn9b/generate_typescript_from_servant_api/,False,self,"{'enabled': False, 'images': [{'id': 'wWF1Q5eo7AAO-6L28iubApUJelJKHAV6QRym3mhRqS4', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/7JxDWMnWDobRXMJasbqA3vY7T4iDmFJ2sZCTMaaEzV0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=147aff3cfda0cd3928cb2875ce53a2d77537e581', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/7JxDWMnWDobRXMJasbqA3vY7T4iDmFJ2sZCTMaaEzV0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=661caffd7bf10a28a05b3f6e6f2b2ff74500ab3d', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/7JxDWMnWDobRXMJasbqA3vY7T4iDmFJ2sZCTMaaEzV0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a012eec8f03b23d4a6b97218b8f1eeedab089886', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/7JxDWMnWDobRXMJasbqA3vY7T4iDmFJ2sZCTMaaEzV0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=2e03b063b092a5a76130a2e34b497ae6e176d694', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/7JxDWMnWDobRXMJasbqA3vY7T4iDmFJ2sZCTMaaEzV0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=90321da092e91dd18fcefebb175b1f84d3d57a4e', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/7JxDWMnWDobRXMJasbqA3vY7T4iDmFJ2sZCTMaaEzV0.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=95f78470565393b50a2db3482366b6d207dd5f3f', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/7JxDWMnWDobRXMJasbqA3vY7T4iDmFJ2sZCTMaaEzV0.jpg?auto=webp&amp;s=a774b8b1f55a4d0e0b2a1f8643b240aeb924a5cb', 'width': 1200}, 'variants': {}}]}",6,1647343041,1,"I googled how to do this, and found [https://github.com/smaccoun/servant-ts](https://github.com/smaccoun/servant-ts). I doesn't seem to be on Stackage however. How do I work around this, or does another package exist?",True,False,False,haskell,t5_2qh36,69415,public,self,Generate Typescript from Servant API,0,[],1.0,https://www.reddit.com/r/haskell/comments/temn9b/generate_typescript_from_servant_api/,all_ads,6,,,,,,,,,,,,,,,,,,,,
93.0,[],False,yourdigitalvoice,,[],,text,t2_4fjkjj7g,False,False,False,[],False,False,1647338191,/r/haskell/comments/telf9t/haskellers_functional_conf_2022_is_online_and/,https://www.reddit.com/r/haskell/comments/telf9t/haskellers_functional_conf_2022_is_online_and/,{},telf9t,False,True,False,False,False,True,False,True,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/telf9t/haskellers_functional_conf_2022_is_online_and/,False,hosted:video,"{'enabled': False, 'images': [{'id': 'tQVnAfXWSbB-Mdxs6xaswwyX0YeLiuevtbvacNNRLAY', 'resolutions': [{'height': 60, 'url': 'https://external-preview.redd.it/GyY6bz7OHjpuJj0utONx7lnS7Es9nzmC5s60YDvnH6g.png?width=108&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=7dcf75a81a7ec65a06c0a2bc5d667a0585116201', 'width': 108}, {'height': 121, 'url': 'https://external-preview.redd.it/GyY6bz7OHjpuJj0utONx7lnS7Es9nzmC5s60YDvnH6g.png?width=216&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=d6e6694437dfe2899a3e17d24a029653dee3f242', 'width': 216}, {'height': 180, 'url': 'https://external-preview.redd.it/GyY6bz7OHjpuJj0utONx7lnS7Es9nzmC5s60YDvnH6g.png?width=320&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=aa37b4188b51dc55cbffa64eebb0e470b5087251', 'width': 320}, {'height': 360, 'url': 'https://external-preview.redd.it/GyY6bz7OHjpuJj0utONx7lnS7Es9nzmC5s60YDvnH6g.png?width=640&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=a6420b03e54cae7cafc6fc16279c4d77fed8a1ef', 'width': 640}, {'height': 540, 'url': 'https://external-preview.redd.it/GyY6bz7OHjpuJj0utONx7lnS7Es9nzmC5s60YDvnH6g.png?width=960&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=29a6d6cbca77bc03119815c2a4d6e7664acae4a4', 'width': 960}, {'height': 607, 'url': 'https://external-preview.redd.it/GyY6bz7OHjpuJj0utONx7lnS7Es9nzmC5s60YDvnH6g.png?width=1080&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=6bec87adc1bf1145609934711ea9fe431fd5a3d3', 'width': 1080}], 'source': {'height': 1080, 'url': 'https://external-preview.redd.it/GyY6bz7OHjpuJj0utONx7lnS7Es9nzmC5s60YDvnH6g.png?format=pjpg&amp;auto=webp&amp;s=14e1206ac598581105517606b6b8fc6a936a0ddb', 'width': 1920}, 'variants': {}}]}",6,1647338202,1,,True,False,False,haskell,t5_2qh36,69414,public,default,"Haskellers, Functional Conf 2022 is online and less than a week away - don't miss out on these great talks including a keynote from Bartosz Milewski. Register here: https://confng.in/0BaNCNpG",0,[],1.0,https://v.redd.it/ivjiybzlrin81,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://v.redd.it/ivjiybzlrin81,78.0,140.0,,,,,,,,,,,,,,,
94.0,[],False,Dasher38,,[],,text,t2_25jago8f,False,False,False,[],False,False,1647294879,self.haskell,https://www.reddit.com/r/haskell/comments/te8tn1/why_are_monad_transformer_types_not_wrapping/,{},te8tn1,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/te8tn1/why_are_monad_transformer_types_not_wrapping/,False,,,6,1647294890,1,"Since monads can be seen as some sort of ""container"" (functor), you might expect monad transformers to ""contain"" a value of the base monad. It's the opposite though: 
https://hackage.haskell.org/package/transformers-0.6.0.4/docs/src/Control.Monad.Trans.Maybe.html#MaybeT

    newtype MaybeT m a = MaybeT { runMaybeT :: m (Maybe a) }

I would have expected ""Maybe (m a)"" instead of ""m (Maybe a)""

All the others I checked are similar (StateT and ExcepT).

Is there a hand wavy explanation for that ? I can see that monad and transformer laws apply, but I don't really understand why it's this way.",True,False,False,haskell,t5_2qh36,69405,public,self,Why are monad transformer types not wrapping around base monad ?,0,[],1.0,https://www.reddit.com/r/haskell/comments/te8tn1/why_are_monad_transformer_types_not_wrapping/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
95.0,[],False,imihnevich,,[],,text,t2_gtbhi7wu,False,False,False,[],False,False,1647290978,self.haskell,https://www.reddit.com/r/haskell/comments/te7fso/is_it_true_that_continuation_passing_style_allows/,{},te7fso,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/te7fso/is_it_true_that_continuation_passing_style_allows/,False,,,6,1647290989,1,,True,False,False,haskell,t5_2qh36,69403,public,self,Is it true that Continuation Passing Style allows us to turn everything into Tail Calls?,0,[],1.0,https://www.reddit.com/r/haskell/comments/te7fso/is_it_true_that_continuation_passing_style_allows/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
96.0,[],False,CraftBeerMountaineer,,[],,text,t2_wf7q7,False,False,False,[],False,False,1647274411,imgur.com,https://www.reddit.com/r/haskell/comments/te13j9/mathematician_haskell_brooks_curry1904_and_1980/,{},te13j9,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/te13j9/mathematician_haskell_brooks_curry1904_and_1980/,False,link,"{'enabled': False, 'images': [{'id': 'vUcdkGJm166p9gKQ6zUxFjtw5juL4fj6u_WU4Xc9vjY', 'resolutions': [{'height': 153, 'url': 'https://external-preview.redd.it/kLpHqb6aTnA_ed7VTK0564S3bepgMt397W1ba0XDTqY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d8e35084b1a9be4e474bbdfc04a38479e619b505', 'width': 108}, {'height': 306, 'url': 'https://external-preview.redd.it/kLpHqb6aTnA_ed7VTK0564S3bepgMt397W1ba0XDTqY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=523309f0edb70b1dd59be33297f2554a30e67c90', 'width': 216}, {'height': 454, 'url': 'https://external-preview.redd.it/kLpHqb6aTnA_ed7VTK0564S3bepgMt397W1ba0XDTqY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=67decc1e3402d228fdd06a829b997a61a78e92d9', 'width': 320}, {'height': 908, 'url': 'https://external-preview.redd.it/kLpHqb6aTnA_ed7VTK0564S3bepgMt397W1ba0XDTqY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0210ca05f44862a07d10d19f1ffb1d38b7bc30ad', 'width': 640}], 'source': {'height': 960, 'url': 'https://external-preview.redd.it/kLpHqb6aTnA_ed7VTK0564S3bepgMt397W1ba0XDTqY.jpg?auto=webp&amp;s=03a0c6eff0058263fcd887e271c9a3582f1f9ca4', 'width': 676}, 'variants': {}}]}",6,1647274421,1,,True,False,False,haskell,t5_2qh36,69402,public,default,"Mathematician Haskell Brooks Curry(1904 and 1980), whom the language is named after",0,[],1.0,https://imgur.com/a/YhnEspJ/,all_ads,6,,,https://imgur.com/a/YhnEspJ/,140.0,140.0,,reddit,,,,,"{'oembed': {'description': 'Post with 0 views.', 'height': 905, 'html': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2Fa%2FYhnEspJ%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D676&amp;display_name=Imgur&amp;url=https%3A%2F%2Fimgur.com%2Fa%2FYhnEspJ&amp;image=https%3A%2F%2Fi.imgur.com%2F0IRiit7.jpg%3Ffb&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=imgur"" width=""600"" height=""905"" scrolling=""no"" title=""Imgur embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'provider_name': 'Imgur', 'provider_url': 'http://imgur.com', 'thumbnail_height': 315, 'thumbnail_url': 'https://i.imgur.com/0IRiit7.jpg?fb', 'thumbnail_width': 600, 'title': 'Imgur', 'type': 'rich', 'url': 'https://imgur.com/a/YhnEspJ', 'version': '1.0', 'width': 600}, 'type': 'imgur.com'}","{'content': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2Fa%2FYhnEspJ%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D676&amp;display_name=Imgur&amp;url=https%3A%2F%2Fimgur.com%2Fa%2FYhnEspJ&amp;image=https%3A%2F%2Fi.imgur.com%2F0IRiit7.jpg%3Ffb&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=imgur"" width=""600"" height=""905"" scrolling=""no"" title=""Imgur embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'height': 905, 'scrolling': False, 'width': 600}","{'oembed': {'description': 'Post with 0 views.', 'height': 905, 'html': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2Fa%2FYhnEspJ%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D676&amp;display_name=Imgur&amp;url=https%3A%2F%2Fimgur.com%2Fa%2FYhnEspJ&amp;image=https%3A%2F%2Fi.imgur.com%2F0IRiit7.jpg%3Ffb&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=imgur"" width=""600"" height=""905"" scrolling=""no"" title=""Imgur embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'provider_name': 'Imgur', 'provider_url': 'http://imgur.com', 'thumbnail_height': 315, 'thumbnail_url': 'https://i.imgur.com/0IRiit7.jpg?fb', 'thumbnail_width': 600, 'title': 'Imgur', 'type': 'rich', 'url': 'https://imgur.com/a/YhnEspJ', 'version': '1.0', 'width': 600}, 'type': 'imgur.com'}","{'content': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fimgur.com%2Fa%2FYhnEspJ%2Fembed%3Fpub%3Dtrue%26ref%3Dhttps%253A%252F%252Fembed.ly%26w%3D676&amp;display_name=Imgur&amp;url=https%3A%2F%2Fimgur.com%2Fa%2FYhnEspJ&amp;image=https%3A%2F%2Fi.imgur.com%2F0IRiit7.jpg%3Ffb&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=imgur"" width=""600"" height=""905"" scrolling=""no"" title=""Imgur embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'height': 905, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/te13j9', 'scrolling': False, 'width': 600}",,,,,
97.0,[],False,xkalanx,,[],,text,t2_7kgrs2sc,False,False,False,[],False,False,1647269896,self.haskell,https://www.reddit.com/r/haskell/comments/tdze8u/hiring_adeva_is_hiring_remote_haskell_developers/,{},tdze8u,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tdze8u/hiring_adeva_is_hiring_remote_haskell_developers/,False,self,"{'enabled': False, 'images': [{'id': 'I9sxyhARsI-BsORhxJX4XziLT3E7ZIOet0aCO8NXVsc', 'resolutions': [{'height': 56, 'url': 'https://external-preview.redd.it/5Kyh83oPuJOhZq8WXCOgB704FuQS4X_rB-8XmRg1yPc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a8c577521929539b4030d3e02f2492007c602e25', 'width': 108}, {'height': 112, 'url': 'https://external-preview.redd.it/5Kyh83oPuJOhZq8WXCOgB704FuQS4X_rB-8XmRg1yPc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=341ac5993bebc8634d5f4055e30ed9c3da52c4d7', 'width': 216}, {'height': 167, 'url': 'https://external-preview.redd.it/5Kyh83oPuJOhZq8WXCOgB704FuQS4X_rB-8XmRg1yPc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2ec506e1306f53c0e53a5783af3a67e16efd502b', 'width': 320}, {'height': 334, 'url': 'https://external-preview.redd.it/5Kyh83oPuJOhZq8WXCOgB704FuQS4X_rB-8XmRg1yPc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=184fe14a8621e8614183a35462f5000f8508bcf7', 'width': 640}, {'height': 501, 'url': 'https://external-preview.redd.it/5Kyh83oPuJOhZq8WXCOgB704FuQS4X_rB-8XmRg1yPc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5d5897fb18d901762ac44def6eb32632cb25ac43', 'width': 960}, {'height': 564, 'url': 'https://external-preview.redd.it/5Kyh83oPuJOhZq8WXCOgB704FuQS4X_rB-8XmRg1yPc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=467468e6097c02c64ac81d1e20493f95ba44f837', 'width': 1080}], 'source': {'height': 627, 'url': 'https://external-preview.redd.it/5Kyh83oPuJOhZq8WXCOgB704FuQS4X_rB-8XmRg1yPc.jpg?auto=webp&amp;s=a3b1da931e3ffd748a2e435b4e11d86ade50dae0', 'width': 1200}, 'variants': {}}]}",6,1647269906,1,"Adeva - a global talent network that enables work without boundaries by connecting high-scale companies with distributed tech talent across the world is hiring Haskell Engineers. The position is fully remote, time-flexible and the wages start at around 9000$ monthly.

If you are interested, you can easily apply at the following link:  
[https://adevait.com/careers/job-openings/2RlkV5WePY](https://adevait.com/careers/job-openings/2RlkV5WePY)",True,False,False,haskell,t5_2qh36,69402,public,self,[Hiring] Adeva is Hiring Remote Haskell Developers,0,[],1.0,https://www.reddit.com/r/haskell/comments/tdze8u/hiring_adeva_is_hiring_remote_haskell_developers/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,,,,,,,,,,,,,,
98.0,[],False,Puzzled-Bananas,,[],,text,t2_b66sdh32,False,False,False,[],False,False,1647269068,self.haskell,https://www.reddit.com/r/haskell/comments/tdz3dr/state_of_net_for_haskell/,{},tdz3dr,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tdz3dr/state_of_net_for_haskell/,False,,,6,1647269078,1,"Hi I’ve been wondering, we’ve got Tweag‘s inline-java. And there’s an abandoned project providing .NET bindings. The Haskell Wiki states there’s no production ready approach currently available.

I‘m immensely grateful for inline-java, and soon JVM‘s own FFI will improve over JNI, which is great in its own right. But do we have something for embedding C# code as well? Or some stable IPC to CLR or some other integrated way with little overhead that’s more robust than crude subprocessing or RPC?",True,False,False,haskell,t5_2qh36,69402,public,self,State of .NET for Haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tdz3dr/state_of_net_for_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
99.0,[],False,_query,,[],,text,t2_fjd8s,False,False,False,[],False,False,1647249020,hackage.haskell.org,https://www.reddit.com/r/haskell/comments/tdt8cb/ann_ihphsx_jsxlike_templating_syntax_for_haskell/,{},tdt8cb,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tdt8cb/ann_ihphsx_jsxlike_templating_syntax_for_haskell/,False,,,6,1647249030,1,,True,False,False,haskell,t5_2qh36,69405,public,default,[ANN] ihp-hsx: JSX-like templating syntax for Haskell,0,[],1.0,https://hackage.haskell.org/package/ihp-hsx-0.18.0,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://hackage.haskell.org/package/ihp-hsx-0.18.0,,,,,,,,,,,,,,,,,
100.0,[],False,ringingraptor,,[],,text,t2_786f2,False,False,False,[],False,False,1647227371,twitter.com,https://www.reddit.com/r/haskell/comments/tdnph8/basement_foundation_memory_and_cryptonite_updated/,{},tdnph8,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tdnph8/basement_foundation_memory_and_cryptonite_updated/,False,link,"{'enabled': False, 'images': [{'id': 'asMhKqc1pKHWL4ltbcvtIRhlvVR4RL_jzwCUqJTuc9Y', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/hr92ivPY-U2IU7ub6MYwJGzlrsH69UEKFUjvM48sd4g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=97c53a34a5aaebb715f79778f48d099272aa27ec', 'width': 108}], 'source': {'height': 140, 'url': 'https://external-preview.redd.it/hr92ivPY-U2IU7ub6MYwJGzlrsH69UEKFUjvM48sd4g.jpg?auto=webp&amp;s=2dedaf766abd933ca792dadac27a173b94d47ab5', 'width': 140}, 'variants': {}}]}",6,1647227382,1,,True,False,False,haskell,t5_2qh36,69404,public,default,"basement, foundation, memory, and cryptonite updated with GHC 9.2 support!",0,[],1.0,https://twitter.com/vincenthz/status/1502992810936762368,all_ads,6,,,https://twitter.com/vincenthz/status/1502992810936762368,140.0,140.0,,,,,,,"{'oembed': {'author_name': 'Ld. Vincent Hanquez', 'author_url': 'https://twitter.com/vincenthz', 'cache_age': 3153600000, 'height': None, 'html': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;&lt;a href=""https://twitter.com/hashtag/haskell?src=hash&amp;amp;ref_src=twsrc%5Etfw""&gt;#haskell&lt;/a&gt; new basement, foundation, memory, and cryptonite releases, with compatibility with ghc 9.2 now.&lt;br&gt;&lt;br&gt;also dropped anything GHC &amp;lt; 8.8 .. as per 3-compilers-supported-policy (I realized after the fact that meant 8.8 also)&lt;/p&gt;&amp;mdash; Ld. Vincent Hanquez (@vincenthz) &lt;a href=""https://twitter.com/vincenthz/status/1502992810936762368?ref_src=twsrc%5Etfw""&gt;March 13, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'provider_name': 'Twitter', 'provider_url': 'https://twitter.com', 'type': 'rich', 'url': 'https://twitter.com/vincenthz/status/1502992810936762368', 'version': '1.0', 'width': 350}, 'type': 'twitter.com'}","{'content': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;&lt;a href=""https://twitter.com/hashtag/haskell?src=hash&amp;amp;ref_src=twsrc%5Etfw""&gt;#haskell&lt;/a&gt; new basement, foundation, memory, and cryptonite releases, with compatibility with ghc 9.2 now.&lt;br&gt;&lt;br&gt;also dropped anything GHC &amp;lt; 8.8 .. as per 3-compilers-supported-policy (I realized after the fact that meant 8.8 also)&lt;/p&gt;&amp;mdash; Ld. Vincent Hanquez (@vincenthz) &lt;a href=""https://twitter.com/vincenthz/status/1502992810936762368?ref_src=twsrc%5Etfw""&gt;March 13, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'height': 200, 'scrolling': False, 'width': 350}","{'oembed': {'author_name': 'Ld. Vincent Hanquez', 'author_url': 'https://twitter.com/vincenthz', 'cache_age': 3153600000, 'height': None, 'html': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;&lt;a href=""https://twitter.com/hashtag/haskell?src=hash&amp;amp;ref_src=twsrc%5Etfw""&gt;#haskell&lt;/a&gt; new basement, foundation, memory, and cryptonite releases, with compatibility with ghc 9.2 now.&lt;br&gt;&lt;br&gt;also dropped anything GHC &amp;lt; 8.8 .. as per 3-compilers-supported-policy (I realized after the fact that meant 8.8 also)&lt;/p&gt;&amp;mdash; Ld. Vincent Hanquez (@vincenthz) &lt;a href=""https://twitter.com/vincenthz/status/1502992810936762368?ref_src=twsrc%5Etfw""&gt;March 13, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'provider_name': 'Twitter', 'provider_url': 'https://twitter.com', 'type': 'rich', 'url': 'https://twitter.com/vincenthz/status/1502992810936762368', 'version': '1.0', 'width': 350}, 'type': 'twitter.com'}","{'content': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;&lt;a href=""https://twitter.com/hashtag/haskell?src=hash&amp;amp;ref_src=twsrc%5Etfw""&gt;#haskell&lt;/a&gt; new basement, foundation, memory, and cryptonite releases, with compatibility with ghc 9.2 now.&lt;br&gt;&lt;br&gt;also dropped anything GHC &amp;lt; 8.8 .. as per 3-compilers-supported-policy (I realized after the fact that meant 8.8 also)&lt;/p&gt;&amp;mdash; Ld. Vincent Hanquez (@vincenthz) &lt;a href=""https://twitter.com/vincenthz/status/1502992810936762368?ref_src=twsrc%5Etfw""&gt;March 13, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/tdnph8', 'scrolling': False, 'width': 350}",,,,,
101.0,[],False,VirusReaper,,[],,text,t2_hkefi,False,False,False,[],False,False,1647207676,self.haskell,https://www.reddit.com/r/haskell/comments/tdhakm/question_can_you_filter_with_strings/,{},tdhakm,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/tdhakm/question_can_you_filter_with_strings/,False,,,6,1647207686,1,"From what I gather you can only filter with the first element of a string like 'a', 'b' etc.
But what if i had a list of strings like ['George', 'Sarah', 'John', 'Jim' ,'Jane'] and wanted to filter 'john' from the list.
Is there a way of doing this?",True,False,False,haskell,t5_2qh36,69406,public,self,Question: Can you filter with strings?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tdhakm/question_can_you_filter_with_strings/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
102.0,[],False,Billy_everett,,[],,text,t2_93hinyay,False,False,False,[],False,False,1647207060,self.haskell,https://www.reddit.com/r/haskell/comments/tdh2nn/pattern_matching_rps/,{},tdh2nn,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tdh2nn/pattern_matching_rps/,False,,,6,1647207071,1,,True,False,False,haskell,t5_2qh36,69405,public,self,Pattern matching RPS,0,[],1.0,https://www.reddit.com/r/haskell/comments/tdh2nn/pattern_matching_rps/,all_ads,6,,,,,,,,,,,,,,,,,,,,
103.0,[],False,Athas,,[],,text,t2_1rew,False,False,False,[],False,False,1647193502,youtube.com,https://www.reddit.com/r/haskell/comments/tdc5bk/accelerate_highperformance_computing_in_haskell/,{},tdc5bk,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tdc5bk/accelerate_highperformance_computing_in_haskell/,False,rich:video,"{'enabled': False, 'images': [{'id': 'OI1kS-L9p-cNOOh00kQGAwAwl594WJmVrwoTRRoBVYc', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/Bevw-_JUoAjoCN7y9J5N22A7FhnX4L9USF6oiMfQl6o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c50e386433083de8751e0c728de6df9faa3fe2bc', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/Bevw-_JUoAjoCN7y9J5N22A7FhnX4L9USF6oiMfQl6o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f230c9a456e4bcf48039865559560833803711f7', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/Bevw-_JUoAjoCN7y9J5N22A7FhnX4L9USF6oiMfQl6o.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=09ca0bec7c326a27d278a708241d21a31488ed19', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/Bevw-_JUoAjoCN7y9J5N22A7FhnX4L9USF6oiMfQl6o.jpg?auto=webp&amp;s=d6a73450386f32482928798458797b75e29cb288', 'width': 480}, 'variants': {}}]}",6,1647193512,1,,True,False,False,haskell,t5_2qh36,69402,public,image,"Accelerate - High-Performance Computing in Haskell (Gabriele Keller, Oxford Seminars on Tensor Computation 2022)",0,[],1.0,https://www.youtube.com/watch?v=BIvtP8rmlL0,all_ads,6,,,https://www.youtube.com/watch?v=BIvtP8rmlL0,105.0,140.0,,reddit,,,t3_tcnns1,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'mttd', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_6gkbb', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1647109839.0, 'created_utc': 1647109839.0, 'discussion_type': None, 'distinguished': None, 'domain': 'youtube.com', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': False, 'id': 'tcnns1', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': False, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': {'oembed': {'author_name': 'Jeremy Gibbons', 'author_url': 'https://www.youtube.com/channel/UCSMSGq2D6SazF7FZPeWTzWA', 'height': 200, 'html': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/BIvtP8rmlL0?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/BIvtP8rmlL0/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Gabriele Keller: Accelerate - High-Performance Computing in Haskell', 'type': 'video', 'version': '1.0', 'width': 267}, 'type': 'youtube.com'}, 'media_embed': {'content': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/BIvtP8rmlL0?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 267}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_tcnns1', 'no_follow': False, 'num_comments': 0, 'num_crossposts': 1, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/ProgrammingLanguages/comments/tcnns1/accelerate_highperformance_computing_in_haskell/', 'pinned': False, 'post_hint': 'rich:video', 'preview': {'enabled': False, 'images': [{'id': 'OI1kS-L9p-cNOOh00kQGAwAwl594WJmVrwoTRRoBVYc', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/Bevw-_JUoAjoCN7y9J5N22A7FhnX4L9USF6oiMfQl6o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c50e386433083de8751e0c728de6df9faa3fe2bc', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/Bevw-_JUoAjoCN7y9J5N22A7FhnX4L9USF6oiMfQl6o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f230c9a456e4bcf48039865559560833803711f7', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/Bevw-_JUoAjoCN7y9J5N22A7FhnX4L9USF6oiMfQl6o.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=09ca0bec7c326a27d278a708241d21a31488ed19', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/Bevw-_JUoAjoCN7y9J5N22A7FhnX4L9USF6oiMfQl6o.jpg?auto=webp&amp;s=d6a73450386f32482928798458797b75e29cb288', 'width': 480}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 30, 'secure_media': {'oembed': {'author_name': 'Jeremy Gibbons', 'author_url': 'https://www.youtube.com/channel/UCSMSGq2D6SazF7FZPeWTzWA', 'height': 200, 'html': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/BIvtP8rmlL0?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/BIvtP8rmlL0/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Gabriele Keller: Accelerate - High-Performance Computing in Haskell', 'type': 'video', 'version': '1.0', 'width': 267}, 'type': 'youtube.com'}, 'secure_media_embed': {'content': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/BIvtP8rmlL0?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/tcnns1', 'scrolling': False, 'width': 267}, 'selftext': '', 'selftext_html': None, 'send_replies': False, 'spoiler': False, 'stickied': False, 'subreddit': 'ProgrammingLanguages', 'subreddit_id': 't5_2qi8m', 'subreddit_name_prefixed': 'r/ProgrammingLanguages', 'subreddit_subscribers': 73416, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'image', 'thumbnail_height': 105, 'thumbnail_width': 140, 'title': 'Accelerate - High-Performance Computing in Haskell (Gabriele Keller, Oxford Seminars on Tensor Computation 2022)', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 30, 'upvote_ratio': 0.88, 'url': 'https://www.youtube.com/watch?v=BIvtP8rmlL0', 'url_overridden_by_dest': 'https://www.youtube.com/watch?v=BIvtP8rmlL0', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]","{'oembed': {'author_name': 'Jeremy Gibbons', 'author_url': 'https://www.youtube.com/channel/UCSMSGq2D6SazF7FZPeWTzWA', 'height': 200, 'html': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/BIvtP8rmlL0?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/BIvtP8rmlL0/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Gabriele Keller: Accelerate - High-Performance Computing in Haskell', 'type': 'video', 'version': '1.0', 'width': 267}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/BIvtP8rmlL0?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 267}","{'oembed': {'author_name': 'Jeremy Gibbons', 'author_url': 'https://www.youtube.com/channel/UCSMSGq2D6SazF7FZPeWTzWA', 'height': 200, 'html': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/BIvtP8rmlL0?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/BIvtP8rmlL0/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Gabriele Keller: Accelerate - High-Performance Computing in Haskell', 'type': 'video', 'version': '1.0', 'width': 267}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/BIvtP8rmlL0?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/tdc5bk', 'scrolling': False, 'width': 267}",,,,,
104.0,[],False,DAngelC,,[],,text,t2_k91ns,False,False,False,[],False,False,1647180984,self.haskell,https://www.reddit.com/r/haskell/comments/td7txq/4k_per_month_looking_for_someone_to_work_on_an/,{},td7txq,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/td7txq/4k_per_month_looking_for_someone_to_work_on_an/,False,,,6,1647180995,1,"Time split would be around 50% management, 40% dev, 10% creative / strategy. Ping me a message with your signal number if you're interested. Cheers.",True,False,False,haskell,t5_2qh36,69395,public,self,4k per month - looking for someone to work on an interesting project,0,[],1.0,https://www.reddit.com/r/haskell/comments/td7txq/4k_per_month_looking_for_someone_to_work_on_an/,all_ads,6,,,,,,,,,,,,,,,,,,,,
105.0,[],False,ocramz_,,[],,text,t2_jaolcjrr,False,False,False,[],False,False,1647170556,self.haskell,https://www.reddit.com/r/haskell/comments/td4xbd/property_testing_textbook/,{},td4xbd,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/td4xbd/property_testing_textbook/,False,self,"{'enabled': False, 'images': [{'id': 'fLxj8KwhQqTGQO_Jy5oPP5uY9RKynX09PGY_Vha6Oig', 'resolutions': [{'height': 142, 'url': 'https://external-preview.redd.it/0xjYtcFoGiHkod5vL6RA2WIsAfyXMkP2NP2o1wwFlFA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2e339d7a5a5aefdbba8102b156a80101ceee3638', 'width': 108}, {'height': 285, 'url': 'https://external-preview.redd.it/0xjYtcFoGiHkod5vL6RA2WIsAfyXMkP2NP2o1wwFlFA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=4832bfebe6cf4e268af3ef93f74d11c598fdf97b', 'width': 216}], 'source': {'height': 405, 'url': 'https://external-preview.redd.it/0xjYtcFoGiHkod5vL6RA2WIsAfyXMkP2NP2o1wwFlFA.jpg?auto=webp&amp;s=1dfea279599cf42795ec58e71ad13edc5945baf4', 'width': 306}, 'variants': {}}]}",6,1647170567,1,"(I don't work for Springer nor get an affiliate incentive out of this)

There's a new PT book coming out, with chapters on testing properties of complex objects and floating-point entities as well. Thought some people here might be interested

[https://link.springer.com/book/10.1007/978-981-16-8622-1#about](https://link.springer.com/book/10.1007/978-981-16-8622-1#about)",True,False,False,haskell,t5_2qh36,69392,public,self,Property Testing textbook,0,[],1.0,https://www.reddit.com/r/haskell/comments/td4xbd/property_testing_textbook/,all_ads,6,,,,,,,,,,,,,,,,,,,,
106.0,[],False,SleezyROM,,[],,text,t2_7meizuh9,False,False,False,[],False,False,1647158264,self.haskell,https://www.reddit.com/r/haskell/comments/td22b3/question_from_a_beginner_is_liftio_a_code_smell/,{},td22b3,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/td22b3/question_from_a_beginner_is_liftio_a_code_smell/,False,,,6,1647158275,1,"In my current code I have some `pipes` and a Consumer that logs info about incoming data, eg:

```hs
ledgerFoundInfo :: (Monad m, MonadIO m) =&gt; AtomicLRU Int Ledger -&gt; Consumer Ledger m r
ledgerFoundInfo cache = forever $ do
  msg &lt;- await
  exists &lt;- liftIO $ LRU.lookup (lLedgerIndex msg) cache
  liftIO $ infoM ""Ledger"" (""Received ledger: "" &lt;&gt; show (lLedgerIndex msg))
  liftIO $ infoM ""Ledger"" (""Has processed ledger this run: "" &lt;&gt; show (isJust exists))
  liftIO $ debugM ""Ledger"" (""Received ledger data: "" &lt;&gt; show msg)
``` 

Is this bad? How would I make this more FP style? Is there some Free Monad/type system magic I could use here?",True,False,False,haskell,t5_2qh36,69394,public,self,Question from a beginner: Is `liftIO` a code smell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/td22b3/question_from_a_beginner_is_liftio_a_code_smell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
107.0,[],False,JeffreyBenjaminBrown,,[],,text,t2_kws52,False,False,False,[],False,False,1647136958,self.haskell,https://www.reddit.com/r/haskell/comments/tcwird/sometimes_for_quickcheck_verify_that_an/,{},tcwird,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tcwird/sometimes_for_quickcheck_verify_that_an/,False,,,6,1647136968,1,"Suppose f(x) should sometimes (with positive probability) be equal to x,
and sometimes (again with positive probability) be less than x.
Can I express that idea in a QuickCheck property?",True,False,False,haskell,t5_2qh36,69392,public,self,`sometimes` for QuickCheck: Verify that an inequality is sometimes strict.,0,[],1.0,https://www.reddit.com/r/haskell/comments/tcwird/sometimes_for_quickcheck_verify_that_an/,all_ads,6,,,,,,,,,,,,,,,,,,,,
108.0,[],False,the-coot,,[],,text,t2_1t3hztq2,False,False,False,[],False,False,1647124519,coot.me,https://www.reddit.com/r/haskell/comments/tcsnnz/a_remark_on_lazy_st_monad_and_monadfix/,{},tcsnnz,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tcsnnz/a_remark_on_lazy_st_monad_and_monadfix/,False,link,"{'enabled': False, 'images': [{'id': 'zEQFDgNKFjOXfKEE0IerT7hnCpzckWW2aKZUbYraGcg', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/ingE08SM_qf0SaMXqSDeRai41_bp-ur2r9WeMvYEQV4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0c866ebcb945da331fe9e673418e6aeb6eb708ad', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/ingE08SM_qf0SaMXqSDeRai41_bp-ur2r9WeMvYEQV4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=416af56518fe939ab4ffbcce46cd3266ef02cc71', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/ingE08SM_qf0SaMXqSDeRai41_bp-ur2r9WeMvYEQV4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=56c24586fc2149357f5c1169b24883229adde45d', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/ingE08SM_qf0SaMXqSDeRai41_bp-ur2r9WeMvYEQV4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=fffc58dce644d44ede0b3e29c178e6446b754b9a', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/ingE08SM_qf0SaMXqSDeRai41_bp-ur2r9WeMvYEQV4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5de95b6981a1ddeb7cf8a12b8c5b979ace90201f', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/ingE08SM_qf0SaMXqSDeRai41_bp-ur2r9WeMvYEQV4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=df20e36d584577f6fae2533afb76417f7b874b9d', 'width': 1080}], 'source': {'height': 1280, 'url': 'https://external-preview.redd.it/ingE08SM_qf0SaMXqSDeRai41_bp-ur2r9WeMvYEQV4.jpg?auto=webp&amp;s=bfb5996804b13060187ed2bfbb5274fd2d4722db', 'width': 1280}, 'variants': {}}]}",6,1647124529,1,,True,False,False,haskell,t5_2qh36,69392,public,default,A remark on lazy ST monad and MonadFix,0,[],1.0,https://coot.me/posts/lazy-st.html,all_ads,6,,,https://coot.me/posts/lazy-st.html,140.0,140.0,,,,,,,,,,,,,,,
109.0,[],False,kepano,,[],,text,t2_872u5,False,False,False,[],False,False,1647115314,self.haskell,https://www.reddit.com/r/haskell/comments/tcpk2q/lumi_is_hiring_haskellpurescript_engineers_remote/,{},tcpk2q,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tcpk2q/lumi_is_hiring_haskellpurescript_engineers_remote/,False,self,"{'enabled': False, 'images': [{'id': 'gqk2C5nVszGYwSjSqulcCLBWJZ433JtizfNv8Gu65gA', 'resolutions': [{'height': 53, 'url': 'https://external-preview.redd.it/ufAIrWEYajNBtc87-SkG6gLhFGIGgEIdfaSmEP-5ik0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7dfd210713bc5993426c134c1ffa554c6bdf09bd', 'width': 108}, {'height': 107, 'url': 'https://external-preview.redd.it/ufAIrWEYajNBtc87-SkG6gLhFGIGgEIdfaSmEP-5ik0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=98bd23d43518c0cd48fc366a3fe25066ac33597d', 'width': 216}, {'height': 159, 'url': 'https://external-preview.redd.it/ufAIrWEYajNBtc87-SkG6gLhFGIGgEIdfaSmEP-5ik0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=da1b9293ccd5ff2ee02c8709c6869501346faab6', 'width': 320}, {'height': 318, 'url': 'https://external-preview.redd.it/ufAIrWEYajNBtc87-SkG6gLhFGIGgEIdfaSmEP-5ik0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=11e7c70d934bb3ce402d8906b51a35a7871f6a51', 'width': 640}, {'height': 477, 'url': 'https://external-preview.redd.it/ufAIrWEYajNBtc87-SkG6gLhFGIGgEIdfaSmEP-5ik0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=13148ba50c6c00278c29b34df0a846c989e7a0d3', 'width': 960}], 'source': {'height': 509, 'url': 'https://external-preview.redd.it/ufAIrWEYajNBtc87-SkG6gLhFGIGgEIdfaSmEP-5ik0.jpg?auto=webp&amp;s=516af8de8dec7be9c8225d306263b065596a68d9', 'width': 1024}, 'variants': {}}]}",6,1647115325,1,"[Lumi](https://www.lumi.com/) is looking for Haskell and PureScript engineers to grow our supply chain platform. Lumi helps manufacturers around the world make their capabilities available directly to ecommerce brands. We are open to remote candidates in the US and UK.

[https://www.lumi.com/jobs](https://www.lumi.com/jobs)

We are looking for a full-stack developers with skills in both backend and frontend development.

We use PureScript and React on the frontend and Haskell and Postgres on the backend. On the PureScript side, we use our own [purescript-react-basic](https://github.com/lumihq/purescript-react-basic) bindings, and [purescript-lumi-components](https://github.com/lumihq/purescript-lumi-components), a UI component library that we built and open-sourced. We get a lot of utility from PureScript’s type system, leveraging the compiler in order to ensure that we don’t get IDs for different entities mixed up, that all API calls are type correct, and that all form data is appropriately validated before it is used. On the Haskell side, we primarily use Servant and Esqueleto. We don’t expect candidates to have experience with all these things. We’d like to find engineers who are interested in learning more about these, and we’ll be happy to teach you.

Lumi was recently acquired by [Narvar](https://corp.narvar.com/), where we are continuing to grow the team and leveraging Narvar’s experience building the software infrastructure that powers billions of e-commerce shipments for companies like Patagonia, Nike, GAP, Home Depot, etc.",True,False,False,haskell,t5_2qh36,69394,public,self,Lumi is hiring Haskell/PureScript engineers (remote US/UK),0,[],1.0,https://www.reddit.com/r/haskell/comments/tcpk2q/lumi_is_hiring_haskellpurescript_engineers_remote/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,,,,,,,,,,,,,,
110.0,[],False,CoAnalyticSet,,[],,text,t2_8hsjqz5m,False,False,False,[],False,False,1647107448,self.haskell,https://www.reddit.com/r/haskell/comments/tcmtk2/what_is_the_point_of_solo_beginner_question/,{},tcmtk2,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tcmtk2/what_is_the_point_of_solo_beginner_question/,False,,,6,1647107458,1,"Playing around with GHCi I stumbled upon the Solo type (by looking at which types are an instance of Traversable). 

Googling tells me that Solo is a singleton tuple, but it is not clear to me what is the usefulness of having a singleton tuple over just an unwrapped value, and if the singleton tuple is important why isn't there some behind-the-scene-syntactic-sugar-magic to use the usual brackets notation for tuples also for singleton tuples?

Thanks in advance for your help!",True,False,False,haskell,t5_2qh36,69393,public,self,What is the point of Solo? (beginner question),0,[],1.0,https://www.reddit.com/r/haskell/comments/tcmtk2/what_is_the_point_of_solo_beginner_question/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
111.0,[],False,serras,,[],,text,t2_5tjnr,False,False,False,[],False,False,1647102337,leanpub.com,https://www.reddit.com/r/haskell/comments/tcjwvv/haskell_almost_standard_libraries_is_now_complete/,{},tcjwvv,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tcjwvv/haskell_almost_standard_libraries_is_now_complete/,False,link,"{'enabled': False, 'images': [{'id': 'bF7Jh1Sb5uUPbatZldWmQkNicbmLz7T9Gs1hQVYBnk4', 'resolutions': [{'height': 76, 'url': 'https://external-preview.redd.it/FV2Zfi2nQzG5FAQ8slADFxDppikfV739XQnRiIXQTNg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5f015f6282cff9b84a3a51ee51fbe94a950b42e5', 'width': 108}], 'source': {'height': 141, 'url': 'https://external-preview.redd.it/FV2Zfi2nQzG5FAQ8slADFxDppikfV739XQnRiIXQTNg.jpg?auto=webp&amp;s=7a0b5280d747bda52dd6e927cbc56d8e43c498d7', 'width': 200}, 'variants': {}}]}",6,1647102349,1,,True,False,False,haskell,t5_2qh36,69392,public,default,"""Haskell (Almost) Standard Libraries"" is now complete!",0,[],1.0,https://leanpub.com/haskell-stdlibs/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://leanpub.com/haskell-stdlibs/,98.0,140.0,,,,,,,,,,,,,,,
112.0,[],False,ess_ee_pee_aitch,,[],,text,t2_jznscb74,False,False,False,[],False,False,1647092096,self.haskell,https://www.reddit.com/r/haskell/comments/tcgibp/using_fay_with_stack/,{},tcgibp,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tcgibp/using_fay_with_stack/,False,,,6,1647092107,1,[removed],True,False,False,haskell,t5_2qh36,69389,public,self,Using Fay with stack,0,[],1.0,https://www.reddit.com/r/haskell/comments/tcgibp/using_fay_with_stack/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
113.0,[],False,ltielen,,[],,text,t2_1q2pxsi,False,False,False,[],False,False,1647071156,luctielen.com,https://www.reddit.com/r/haskell/comments/tcbdr4/calling_zig_from_haskell/,{},tcbdr4,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tcbdr4/calling_zig_from_haskell/,False,,,6,1647071166,1,,True,False,False,haskell,t5_2qh36,69387,public,default,Calling Zig from Haskell,0,[],1.0,http://luctielen.com/posts/calling_zig_from_haskell/,all_ads,6,,,http://luctielen.com/posts/calling_zig_from_haskell/,,,,,,,,,,,,,,,,,
114.0,[],False,ARFASOFTECH,,[],,text,t2_d4eadx3j,False,False,False,[],False,False,1647067927,arfasoftech.com,https://www.reddit.com/r/haskell/comments/tcamcu/the_nascent_startup_culture_and_the_grind_to_find/,{},tcamcu,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tcamcu/the_nascent_startup_culture_and_the_grind_to_find/,False,,,6,1647067937,1,,True,False,False,haskell,t5_2qh36,69388,public,default,THE NASCENT STARTUP CULTURE AND THE GRIND TO FIND NEWNESS,0,[],1.0,https://www.arfasoftech.com/blog/THE-NASCENT-STARTUP-CULTURE-AND-THE-GRIND-TO-FIND-NEWNESS,all_ads,6,,,https://www.arfasoftech.com/blog/THE-NASCENT-STARTUP-CULTURE-AND-THE-GRIND-TO-FIND-NEWNESS,,,,reddit,,,,,,,,,,,,,
115.0,[],False,CoBuddha,,[],,text,t2_12byxs,False,False,False,[],False,False,1647055899,self.haskell,https://www.reddit.com/r/haskell/comments/tc7g4q/any_haskelllike_languages_with_native_frp/,{},tc7g4q,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tc7g4q/any_haskelllike_languages_with_native_frp/,False,,,6,1647055909,1,"imo FRP is so so good. Its paradigm feels extremely natural in a way beyond the complexity of its encoding would suggest. eg looking at the implementation of `reflex` a few times, it seems to basically implement an entire runtime system on top of haskell's runtime system.

On one hand it's very cool that haskell is flexible enough to implement a runtime system as a library, but I wonder if there's gains to be made in something more wired in (eg in terms of optimization, simplifying compile times, simplifying  types, etc.) - it always struck my as a bit hacky.

I know elm used to have builtin FRP but dropped it (I don't recall exactly why - any insight here would help!)

Perhaps a proper ""dataflow"" language - though my (poorly informed) impression is that these are all way more special purpose and I've been spoiled by the full power of haskell.

What do you think?",True,False,False,haskell,t5_2qh36,69389,public,self,Any haskell-like languages with native FRP?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tc7g4q/any_haskelllike_languages_with_native_frp/,all_ads,6,,,,,,,,,,,,,,,,,,,,
116.0,[],False,some_clickhead,,[],,text,t2_xuecm,False,False,False,[],False,False,1647052157,self.haskell,https://www.reddit.com/r/haskell/comments/tc6dyw/how_do_i_specify_the_type_inside_function/,{},tc6dyw,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tc6dyw/how_do_i_specify_the_type_inside_function/,False,,,6,1647052167,1,"Title is kinda confusing, wasn't sure how to phrase this.  
I have a type Contact defined as follows :

```type Contact = (Person, State)```


I have a function in which I want to take some information about a Person to create a new Contact (with State = Good), and add it to a list of contacts, which looks like this :

```
addContact :: Person -&gt; [Contact] -&gt; [Contact]
addContact p c = c ++ (p, Good)
```

Compiler is complaining with the following message :
```Couldn't match expected type [Contact] with actual type (Person, State)```

But given that I have defined that Contact is a tuple with (Person, State), how am I supposed to declare that it is indeed a Contact? I can't seem to be able to create an instance of it because it's not a `data` type, just a `type`.",True,False,False,haskell,t5_2qh36,69388,public,self,How do I specify the type inside function definition?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tc6dyw/how_do_i_specify_the_type_inside_function/,all_ads,6,,,,,,,,,,,,,,,,,,,,
117.0,[],False,Administrator101,,[],,text,t2_12hwzhih,False,False,False,[],False,False,1647027920,self.haskell,https://www.reddit.com/r/haskell/comments/tbydrk/how_does_the_bind_operator_relate_to_binding_a/,{},tbydrk,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tbydrk/how_does_the_bind_operator_relate_to_binding_a/,False,self,"{'enabled': False, 'images': [{'id': 'nfayPavSUB5ngYv6-19UHNBThsXfcLIDQl4HkEe3Cv0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b1c8a90e5690a7186afdb269ad05279551994d09', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=533bd055cdae7998d1b8f9cd9d7dedabc1715bda', 'width': 216}], 'source': {'height': 316, 'url': 'https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?auto=webp&amp;s=8cd5e918e2bde6ca72d4445d6fc007f203689799', 'width': 316}, 'variants': {}}]}",6,1647027930,1,"Quoting from a stackoverflow answer: [https://stackoverflow.com/questions/2346872/what-does-the-symbol-mean-in-haskell](https://stackoverflow.com/questions/2346872/what-does-the-symbol-mean-in-haskell)

&gt;(and similarly a &gt;&gt;= (b &gt;&gt;= (c &gt;&gt;= d)) is equivalent to

    do r1 &lt;- a
       r2 &lt;- b r1
       r3 &lt;- c r2
       d r3

The bind operator makes a functions input be wrapped in the same thing as the output by unwrapping the value before each chained function.

E.G.

https://preview.redd.it/2cqc5bow4tm81.png?width=746&amp;format=png&amp;auto=webp&amp;s=03f8677e5be06e7eb8dc5661786cfc7d42b89ffc

Is this the reverse? It unwraps rather than wraps the output. And it only works for IO types? I've got the impression that IO is special is this unique to the io type?",True,False,False,haskell,t5_2qh36,69388,public,self,How does the bind (&gt;&gt;=) operator relate to binding a value (&lt;-) in a do block,0,[],1.0,https://www.reddit.com/r/haskell/comments/tbydrk/how_does_the_bind_operator_relate_to_binding_a/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,31.0,140.0,"{'2cqc5bow4tm81': {'e': 'Image', 'id': '2cqc5bow4tm81', 'm': 'image/png', 'p': [{'u': 'https://preview.redd.it/2cqc5bow4tm81.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=94db26b006262fd3aa793b060a2bc4b34293045d', 'x': 108, 'y': 24}, {'u': 'https://preview.redd.it/2cqc5bow4tm81.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=1ccd8a44aff9b0eafecdc9c27d52482cca6d65b7', 'x': 216, 'y': 48}, {'u': 'https://preview.redd.it/2cqc5bow4tm81.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=47430dc8488c47602680afa825a9fe725d2543f7', 'x': 320, 'y': 71}, {'u': 'https://preview.redd.it/2cqc5bow4tm81.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=0b4ada25b380cbcdd43bd5c863f37ad0290c2378', 'x': 640, 'y': 142}], 's': {'u': 'https://preview.redd.it/2cqc5bow4tm81.png?width=746&amp;format=png&amp;auto=webp&amp;s=03f8677e5be06e7eb8dc5661786cfc7d42b89ffc', 'x': 746, 'y': 166}, 'status': 'valid'}}",,,,,,,,,,,,,,
118.0,[],False,Administrator101,,[],,text,t2_12hwzhih,False,False,False,[],False,False,1647026754,self.haskell,https://www.reddit.com/r/haskell/comments/tbxyxj/does_the_operator_have_any_use_if_sideeffects_are/,{},tbxyxj,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tbxyxj/does_the_operator_have_any_use_if_sideeffects_are/,False,,,6,1647026765,1,"I'm new and have only ever used the &gt;&gt; operator implicitly in do blocks. Currently the only cases where I do not care about a functions return value are for ones with side-effects. Also Haskell has no mutable state so if you discard a value from a pure function it has no effects, right?

Is there any other use case for this operator?",True,False,False,haskell,t5_2qh36,69388,public,self,Does the &gt;&gt; operator have any use if side-effects are not generated,0,[],1.0,https://www.reddit.com/r/haskell/comments/tbxyxj/does_the_operator_have_any_use_if_sideeffects_are/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
119.0,[],False,NorfairKing2,,[],,text,t2_154rv6yi,False,False,False,[],False,False,1647025842,github.com,https://www.reddit.com/r/haskell/comments/tbxnhd/github_norfairkingfeedback_declarative_feedback/,{},tbxnhd,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tbxnhd/github_norfairkingfeedback_declarative_feedback/,False,link,"{'enabled': False, 'images': [{'id': 'zBCTC138YdPdahedmreDNDDfByQbUZtOKpvSed3hHL0', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/40lv-Q3tzlqM2C0eL1WwcaGmIZQFoNo0om53Y8kkUJQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=68e1320ae491bd80818376b17597d1bb440f27e4', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/40lv-Q3tzlqM2C0eL1WwcaGmIZQFoNo0om53Y8kkUJQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=04eef2265f5ef42f24ca70555a1ca4474d4e99f5', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/40lv-Q3tzlqM2C0eL1WwcaGmIZQFoNo0om53Y8kkUJQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=40787229b23c8df08e19f8410c6659e418aa318c', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/40lv-Q3tzlqM2C0eL1WwcaGmIZQFoNo0om53Y8kkUJQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=998dc5070dfeb1cedc4ef4c8a35eddd7fce25a75', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/40lv-Q3tzlqM2C0eL1WwcaGmIZQFoNo0om53Y8kkUJQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=918b6fd3bee6f0811aa6dcf68abe96cb52f880c7', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/40lv-Q3tzlqM2C0eL1WwcaGmIZQFoNo0om53Y8kkUJQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c0a4559620dcafc0d9a9d7556f488bb51c4af2fb', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/40lv-Q3tzlqM2C0eL1WwcaGmIZQFoNo0om53Y8kkUJQ.jpg?auto=webp&amp;s=b29bdea4089551bcdea2ffeb3a7a859a2a749af1', 'width': 1200}, 'variants': {}}]}",6,1647025853,1,,True,False,False,haskell,t5_2qh36,69388,public,default,GitHub - NorfairKing/feedback: Declarative feedback loop manager,0,[],1.0,https://github.com/NorfairKing/feedback,all_ads,6,,,https://github.com/NorfairKing/feedback,70.0,140.0,,,,,,,,,,,,,,,
120.0,[],False,LivewareIssue,,[],,text,t2_4gx6zuj6,False,False,False,[],False,False,1647018203,self.haskell,https://www.reddit.com/r/haskell/comments/tbumkw/implementing_a_json_linter_with_line_column/,{},tbumkw,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tbumkw/implementing_a_json_linter_with_line_column/,False,,,6,1647018214,1,"Hello Haskell-ers!

I'm looking to implement a JSON linter and would appreciate some library / architecture suggestions. Some examples of the kind issues i'm interested in detecting are:  


* The field ""base\_path"", if it exists, cannot use Windows paths, must be POSIX
* The field ""date\_created"" must be in ISO8601
* etc.

I'm capable of writing the linter rules (i.e. detect date formats, path formats etc.), what I need help with is the IO / initial parsing phase. I'm familiar with parser-combinators (attoparsec has been my goto previously) but never before had a use case that cares about *where* the parsing failed. I've also used aeson a couple of times for handling JSON.  
The **defining requirement** is that, once an issue has been identified, the linter must report the location of the error including line number(s) and column numbers (start and end). It can be assumed that the data is valid JSON and conforms to the expected schema (i.e. if we expect a ""date\_created"" field, it'll be there. I'm interested in format/quality issues rather than validating structure / syntax.

Otherwise, the only requirement is that it be quick / run in parallel - It must be able to run over thousands of files in a couple of minutes.

My initial plan was to use something like pipes-aeson for IO (not used a streaming library before but seems straightforward enough) however it seems that aeson is based on attoparsec and the parse-error is just a plain string without source locations.

So, finally, to some questions.  


* Anybody have recommendations for parsing JSON (quickly) while keeping track of the source-locations of each field / key / value / object etc.
* Can streaming libraries like pipes be used to process the loaded files in parallel? Pointers / articles etc. covering this would be much appreciated!",True,False,False,haskell,t5_2qh36,69388,public,self,Implementing a JSON linter with line / column numbers,0,[],1.0,https://www.reddit.com/r/haskell/comments/tbumkw/implementing_a_json_linter_with_line_column/,all_ads,6,,,,,,,,,,,,,,,,,,,,
121.0,[],False,sridfr,,[],,text,t2_f1wkk8ou,False,False,False,[],False,False,1647015275,blog.functorial.com,https://www.reddit.com/r/haskell/comments/tbtjxs/higherorder_abstract_syntax_for_cartesian_closed/,{},tbtjxs,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tbtjxs/higherorder_abstract_syntax_for_cartesian_closed/,False,,,6,1647015286,1,,True,False,False,haskell,t5_2qh36,69388,public,default,Higher-order Abstract Syntax for Cartesian Closed Categories,0,[],1.0,https://blog.functorial.com/posts/2017-10-08-HOAS-CCCs.html,all_ads,6,,,https://blog.functorial.com/posts/2017-10-08-HOAS-CCCs.html,,,,,,,,,,,,,,,,,
122.0,[],False,Auslegung,,[],,text,t2_w1gcn,False,False,False,[],False,False,1647009833,self.haskell,https://www.reddit.com/r/haskell/comments/tbrm72/associate_level_haskellelm_job/,{},tbrm72,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tbrm72/associate_level_haskellelm_job/,False,self,"{'enabled': False, 'images': [{'id': 'wqIscVPZkihsE2F18EI9tE2BOC1bydyT8TRIesXJ2yU', 'resolutions': [{'height': 61, 'url': 'https://external-preview.redd.it/8klitaENsN3GyNRKzSce0L82uY1KTxHj8hHO8vfxO1E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=730697e99cecc9acf7ab9278c535760a3cf0f01f', 'width': 108}, {'height': 123, 'url': 'https://external-preview.redd.it/8klitaENsN3GyNRKzSce0L82uY1KTxHj8hHO8vfxO1E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0efae432f8c5027672e4c2904e01ee9ce166dfb1', 'width': 216}, {'height': 182, 'url': 'https://external-preview.redd.it/8klitaENsN3GyNRKzSce0L82uY1KTxHj8hHO8vfxO1E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=365373ff9e6b5325a623be37e23808a8ad2acbd0', 'width': 320}, {'height': 365, 'url': 'https://external-preview.redd.it/8klitaENsN3GyNRKzSce0L82uY1KTxHj8hHO8vfxO1E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=5f683d7384783e4406a5421eb6cb2147a80023a4', 'width': 640}], 'source': {'height': 400, 'url': 'https://external-preview.redd.it/8klitaENsN3GyNRKzSce0L82uY1KTxHj8hHO8vfxO1E.jpg?auto=webp&amp;s=9b2bf8e90c6ceef683ffdcb1100e9ec7641d0815', 'width': 700}, 'variants': {}}]}",6,1647009844,1,"Caribou | Associate Fullstack Software Engineer (Elm, Haskell, Postgres, Event Sourcing) | $100,000-$120,000 | Remote, USA :us:

https://boards.greenhouse.io/caribou/jobs/5010812003

- 0-2 years of experience
- You don’t have to have Elm or Haskell experience, but it will help :)
- You do need to have interest in functional programming, but you probably wouldn’t be in this subreddit if you didn’t, now would you?
- Our shared working hours are 10 AM to 3 PM Eastern, you do need to be available during those hours, though we're flexible if something comes up.
- $100,000-$120,000 but do not quote me on the compensation, that is from memory for our associate level, it could be less or more by $10,000.
- The job description is for a mid-level, we don't have an associate FP job description. But just the technologies and the level are different, everything else should be the same.
  
https://boards.greenhouse.io/caribou/jobs/5010812003",True,False,False,haskell,t5_2qh36,69389,public,self,Associate level Haskell/Elm Job,0,[],1.0,https://www.reddit.com/r/haskell/comments/tbrm72/associate_level_haskellelm_job/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,,,,,,,,,,,,,,
123.0,[],False,Xodef,,[],,text,t2_14b3nok,False,False,False,[],False,False,1646997909,self.haskell,https://www.reddit.com/r/haskell/comments/tbo2ti/good_haskell_ide/,{},tbo2ti,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tbo2ti/good_haskell_ide/,False,,,6,1646997920,1,Can you recommend any? I tried InteliJ with Haskell plugin but it doesn't work well.,True,False,False,haskell,t5_2qh36,69388,public,self,Good Haskell IDE,0,[],1.0,https://www.reddit.com/r/haskell/comments/tbo2ti/good_haskell_ide/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
124.0,[],False,keijyu,,[],,text,t2_2dbw0a22,False,False,False,[],False,False,1646995234,self.haskell,https://www.reddit.com/r/haskell/comments/tbnfjv/build_issues_with_cabal/,{},tbnfjv,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tbnfjv/build_issues_with_cabal/,False,,,6,1646995245,1,"Hello,

I am learning Haskell as part of a comp-sci course at University and have come across a wired error when I try to build a package using cabal. 

When I run cabal install, the installation fails due to the package wai-logger-2.4.0 not being able to build due to the package cabal-doctest-1.0.9 being broken with the specific error: 

""Could not find module Distributive.Extra.Doctest""

How can I fix this error?

I have tried the following:
1. Reinstall cabal-doctest
2. Reinstall distributive
3. Delete and reinstall all cabal packages after running cabal update
4. Reinstall ghc

Thanks in advance.",True,False,False,haskell,t5_2qh36,69388,public,self,Build issues with cabal,0,[],1.0,https://www.reddit.com/r/haskell/comments/tbnfjv/build_issues_with_cabal/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
125.0,[],False,Swordlash,,[],,text,t2_2fpxe4mw,False,False,False,[],False,False,1646993893,self.haskell,https://www.reddit.com/r/haskell/comments/tbn46e/out_of_memory_when_building_productprofunctors/,{},tbn46e,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tbn46e/out_of_memory_when_building_productprofunctors/,False,,,6,1646993903,1,"Hi,

I'm currently creating a project which I wanted to try using `opaleye` for DB access in. I have an M1 Mac with 16GB of RAM and use ghc-8.10.7 by stack-2.7.5, both installed through ghcup.

Soon after starting to build `product-profunctors`, I get an error

    --  While building package product-profunctors-0.11.0.3 (scroll up to its section to see the error) using:
          /Users/mateusz/.stack/setup-exe-cache/aarch64-osx/Cabal-simple_mPHDZzAJ_3.2.1.0_ghc-8.10.7 --builddir=.stack-work/dist/aarch64-osx/Cabal-3.2.1.0 build --ghc-options "" -fdiagnostics-color=always""
        Process exited with code: ExitFailure (-9) (THIS MAY INDICATE OUT OF MEMORY)

When I rerun, I get the same result in a few secs. It must be very quick, as I don't see any visible spike in memory usage on monitor (it oscillates around 9-10GB). `/usr/bin/time -l` shows rss of 200MB, but I guess it's `stack`'s usage, not `ghc`'s.

That's strange to me as I compile a 300+ deps project at my work in a similar amount of RAM without problems, and I have also compiled `stack` on my 4GB Raspberry Pi (which took a lot of time, but didn't outofmemory either). Is this package really that heavy, or there's something wrong with my installation?",True,False,False,haskell,t5_2qh36,69388,public,self,Out of memory when building product-profunctors,0,[],1.0,https://www.reddit.com/r/haskell/comments/tbn46e/out_of_memory_when_building_productprofunctors/,all_ads,6,,,,,,,,,,,,,,,,,,,,
126.0,[],False,evanrelf,,[],css wrangler,text,t2_5kbcj,False,False,False,[],False,False,1646966851,self.haskell,https://www.reddit.com/r/haskell/comments/tbg051/is_there_a_workaround_these_instance_conflicts/,{},tbg051,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tbg051/is_there_a_workaround_these_instance_conflicts/,False,self,"{'enabled': False, 'images': [{'id': 'OAXSl8SY6T3JK9MGQyKxkoYbqZ71HQRYXLeB8CV0NXg', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d5811c5bda5fece1040636a6af8702ba790f0fd4', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=eee576fd4da7535eb53ceb88dd8b52f073048441', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=72872d880460efa723918c000adca0ed259cf775', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f3545b9335d763c9da9c16bf7bf9a3f907dbd6f6', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2d241ace0f1c07088fac3f8469dbad3b05d2d419', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9055f11bdc00beb0b3589e1cae5817d6070d83bc', 'width': 1080}], 'source': {'height': 640, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?auto=webp&amp;s=079a7260ec149880c73263d64811698adb22760a', 'width': 1280}, 'variants': {}}]}",6,1646966861,1,"I'm trying to write a type class that will convert one type of error into another, e.g. `Exception e =&gt; e -&gt; Error`. I'd like it to work for ""wrapped"" errors as well for convenience, e.g. `Exception e =&gt; Either e a -&gt; Either Error a`. But I can't seem to get around the problem of conflicting instances.

(if you prefer code in a gist: https://gist.github.com/evanrelf/f5773113b3a50e3aee7f44ba2cc05ea5)

The error type's implementation isn't important, so we'll use a trivial one here:

    data Error = Error
      deriving stock Show
      deriving anyclass Exception

I tried using functional dependencies:

    class ToError i o | i -&gt; o where
      toError :: i -&gt; o

    instance Exception e =&gt; ToError e Error where
      toError :: e -&gt; Error
      toError = undefined
      
    instance Exception e =&gt; ToError (Either e a) (Either Error a) where
      toError :: Either e a -&gt; Either Error a
      toError = undefined

...but I get an error:

    Functional dependencies conflict between instance declarations:
      instance Exception e =&gt; ToError e Error
      instance Exception e =&gt; ToError (Either e a) (Either Error a)

I also tried using associated type families:

    class ToError a where
      type Output a :: Type
      toError :: a -&gt; Output a

    instance Exception e =&gt; ToError e where
      type Output e = Error
      toError :: e -&gt; Error
      toError = undefined
      
    instance Exception e =&gt; ToError (Either e a) where
      type Output (Either e a) = Either Error a
      toError :: Either e a -&gt; Either Error a
      toError = undefined

...but I get an error:

    Conflicting family instance declarations:
      Output e = Error
      Output (Either e a) = Either Error a

Adding `{-# OVERLAPPING #-}` pragmas doesn't make a difference.

I believe GHC selects instances based on the instance head, not the instance context, so nothing I do on the left side of the fat arrow will make a difference.

Is there any other way I could formulate this to get my desired functionality, where the output type is determined by the input type?",True,False,False,haskell,t5_2qh36,69384,public,self,Is there a workaround these instance conflicts?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tbg051/is_there_a_workaround_these_instance_conflicts/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,dark,,,
127.0,[],False,elise11233,,[],,text,t2_49o09kl6,False,False,False,[],False,False,1646957737,self.haskell,https://www.reddit.com/r/haskell/comments/tbd5s0/question_about_parsing/,{},tbd5s0,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tbd5s0/question_about_parsing/,False,,,6,1646957748,1,"I'm a beginner in Haskell and am trying to set up a parser for formulas. I am running into the issue that my parser will parse the beginning of the string when it should give a parse error due to non-exhaustive consumption of the input string.

I'm not sure how to check that the entire input string is being consumed by the parser.",True,False,False,haskell,t5_2qh36,69384,public,self,Question about parsing,0,[],1.0,https://www.reddit.com/r/haskell/comments/tbd5s0/question_about_parsing/,all_ads,6,,,,,,,,,,,,,,,,,,,,
128.0,[],False,ctenbrinke,,[],,text,t2_da4t079,False,False,False,[],False,False,1646948184,self.haskell,https://www.reddit.com/r/haskell/comments/tb9hqr/why_is_writert_defined_as_writert_runwritert_m_a/,{},tb9hqr,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tb9hqr/why_is_writert_defined_as_writert_runwritert_m_a/,False,,,6,1646948195,1,In the latter form it seems easier to use the writer as a sort of logging mechanism. Such that e.g. `WriterT w Maybe` would still be able to `tell` something if the Maybe contained Nothing.,True,False,False,haskell,t5_2qh36,69383,public,self,"Why is WriterT defined as `WriterT { runWriterT :: m (a, w) }` and not as `WriterT { runWriterT :: (m a, w) }`?",0,[],1.0,https://www.reddit.com/r/haskell/comments/tb9hqr/why_is_writert_defined_as_writert_runwritert_m_a/,all_ads,6,,,,,,,,,,,,,,,,,,,,
129.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1646923616,haskellweekly.news,https://www.reddit.com/r/haskell/comments/tb0a8b/issue_306_haskell_weekly_newsletter/,{},tb0a8b,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tb0a8b/issue_306_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1646923626,1,,True,False,False,haskell,t5_2qh36,69381,public,default,Issue 306 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/306.html,all_ads,6,,,https://haskellweekly.news/issue/306.html,140.0,140.0,,,,,,,,,,,,,,,
130.0,[],False,TheScriptDude,,[],,text,t2_jzfnybq4,False,False,False,[],False,False,1646914064,self.haskell,https://www.reddit.com/r/haskell/comments/tax9uc/what_is_haskell_good_for/,{},tax9uc,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tax9uc/what_is_haskell_good_for/,False,,,6,1646914074,1,"I'm trying to find excuses to learn Haskell on my free time, Is there something Haskell excels in doing?",True,False,False,haskell,t5_2qh36,69378,public,self,What is Haskell good for?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tax9uc/what_is_haskell_good_for/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
131.0,[],False,jumpy_flamingo,,[],,text,t2_hhyrtamq,False,False,False,[],False,False,1646892783,self.haskell,https://www.reddit.com/r/haskell/comments/tas7m4/what_is_this_tool_used_in_this_video/,{},tas7m4,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tas7m4/what_is_this_tool_used_in_this_video/,False,,,6,1646892794,1,"Hello, I was watching this [YouTube video](https://www.youtube.com/watch?v=3kduOmZ2Wxw) about lenses and saw that the presenter was using some realtimer linter/compiler tool: https://i.imgur.com/50gjrMR.png

Does anyone know what this is? Looks very useful.",True,False,False,haskell,t5_2qh36,69373,public,self,What is this tool used in this video?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tas7m4/what_is_this_tool_used_in_this_video/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
132.0,[],False,CoBuddha,,[],,text,t2_12byxs,False,False,False,[],False,False,1646881883,self.haskell,https://www.reddit.com/r/haskell/comments/tap2nu/what_is_the_longterm_status_of_xlineartypes/,{},tap2nu,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tap2nu/what_is_the_longterm_status_of_xlineartypes/,False,,,6,1646881893,1,"imo Linear types is really cool and could revolutionize how haskell is written (eg alternatives to ""builder"" patterns, IO monad, `bracket` functions, ""move semantics"", etc.)

But! There's a few factors that seem to make it unusable except for specific safety-centric code
(I played with the ergonomics extensively last year by toying with a linear version of `prim` (eg https://github.com/daig/prim/blob/%E2%98%B8/class/Cmp.hs))

1. Basic quality of life stuff around linearity inference eg in let/where/case binding
2. Lack of effective multiplicity polymorphism.
3. Lack of sugar for `Movable` types (eg primitive numeric types, for which copy and move are identical - `Ur` is not a good solution for these basic types imo)
4. Lack of linear primops.
5. Lack of optimizations making use of linearity eg to shortcut garbage collection.
6. Lack of support for automatic lifetime management (This isn't really essential, but currently it's akin to using manual `new` and `delete` with static guarantees - which is great but still cumbersome relative to C++ RAII or Rust's lifetimes, and I believe could be inferred statically. Maybe it's actually possible just with library support for something like a linear `ResourceT` monad but that still feels a bit unsatisfying)
7. As far as I can tell, it's solely the brainchild of Tweag - which is great to have industry support, but worrying in terms of robustness and longterm support as GHC develops. Linear types really needs fairly deep integration with the rest of GHC to be most useful.


1/2/3 are the only ones really stopping me from going all-in on linearity right now, but I expect all of them to get resolved eventually so long as 7 isn't an issue.

So my question is:
What's the latest developments on linear types in haskell / who is working on it / what's the best place to keep updated?",True,False,False,haskell,t5_2qh36,69367,public,self,What is the longterm status of -XLinearTypes ?,0,[],1.0,https://www.reddit.com/r/haskell/comments/tap2nu/what_is_the_longterm_status_of_xlineartypes/,all_ads,6,,,,,,,,,,,,,,,,,,,,
133.0,[],False,benjaminhodgson,,[],,text,t2_dp6v0,False,False,False,[],False,False,1646873593,self.haskell,https://www.reddit.com/r/haskell/comments/tameau/porting_idriss_notation_to_haskell/,{},tameau,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/tameau/porting_idriss_notation_to_haskell/,False,,,6,1646873604,1,"[Idris has a nice syntax](https://docs.idris-lang.org/en/latest/tutorial/interfaces.html#notation) for a sort of ""anonymous bind"",

    main = print (!readNumber + 5)

which is syntactic sugar for

    main = do
        x &lt;- readNumber
        print (x + 5)

What's nice about `!` is that you can nest `!`s arbitrarily (and mix them with pure code) without needing to name any intermediate results; the desugaring does the sensible depth-first left-to-right evaluation you'd expect. (I'd note that `!` is more powerful than the suggestion described [here](https://stackoverflow.com/questions/33219871/haskell-version-of-idris-notation-bang-notation), since the applicative syntax doesn't neatly support nesting; complex expressions end up in a `join`/`pure` soup.)

Anyway, I was just wondering whether the GHC language design team had ever seriously considered porting this? There does seem to be demand for it: many mainstream imperative languages (even JavaScript!) have adopted `!` \- they just pronounce it `await` (and it's only applicable in their ""promise"" monad).",True,False,False,haskell,t5_2qh36,69364,public,self,Porting Idris's !-notation to Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/tameau/porting_idriss_notation_to_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
134.0,[],False,Serokell,,[],,text,t2_fvl0rbg,False,False,False,[],False,False,1646867132,serokell.io,https://www.reddit.com/r/haskell/comments/tak7g0/15_resources_to_help_you_learn_haskell_in_2022/,{},tak7g0,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/tak7g0/15_resources_to_help_you_learn_haskell_in_2022/,False,link,"{'enabled': False, 'images': [{'id': 'neKkRsgsUiEDyR_gYDEKGqjZwukTJzXBd-HZRKJOjWM', 'resolutions': [{'height': 64, 'url': 'https://external-preview.redd.it/eIHQSQbmqdS8ZkRWV18JfaTEo6LX2ebQjUNzEs1slFk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=345cd1746d8969ff1acb585f3c605880ca41cb1b', 'width': 108}, {'height': 129, 'url': 'https://external-preview.redd.it/eIHQSQbmqdS8ZkRWV18JfaTEo6LX2ebQjUNzEs1slFk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=690120d028c36e83e624dab705b6581231a88d70', 'width': 216}, {'height': 192, 'url': 'https://external-preview.redd.it/eIHQSQbmqdS8ZkRWV18JfaTEo6LX2ebQjUNzEs1slFk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d267939bd8cbd0a34f06815628bab63d0be47afd', 'width': 320}, {'height': 384, 'url': 'https://external-preview.redd.it/eIHQSQbmqdS8ZkRWV18JfaTEo6LX2ebQjUNzEs1slFk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=998028541c4c3199060f893a6c554d9f697d1460', 'width': 640}, {'height': 576, 'url': 'https://external-preview.redd.it/eIHQSQbmqdS8ZkRWV18JfaTEo6LX2ebQjUNzEs1slFk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b4c3c381dca0bebbea8b134e45b09715d5c8be35', 'width': 960}, {'height': 648, 'url': 'https://external-preview.redd.it/eIHQSQbmqdS8ZkRWV18JfaTEo6LX2ebQjUNzEs1slFk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=6e4e5afc541b2d63d01963f5fb9a12a7816b04a9', 'width': 1080}], 'source': {'height': 720, 'url': 'https://external-preview.redd.it/eIHQSQbmqdS8ZkRWV18JfaTEo6LX2ebQjUNzEs1slFk.jpg?auto=webp&amp;s=1cd31f665df17911cb31b7282f9fbdc5e652adec', 'width': 1200}, 'variants': {}}]}",6,1646867143,1,,True,False,False,haskell,t5_2qh36,69362,public,default,15 Resources to Help You Learn Haskell in 2022,0,[],1.0,https://serokell.io/blog/how-to-learn-haskell-in-10-minutes,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://serokell.io/blog/how-to-learn-haskell-in-10-minutes,84.0,140.0,,,,,,,,,,,,,,,
135.0,[],False,LSK01,,[],,text,t2_15hltr,False,False,False,[],False,False,1646839731,redbubble.com,https://www.reddit.com/r/haskell/comments/taa8s6/i_made_a_haskell_tshirt/,{},taa8s6,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/taa8s6/i_made_a_haskell_tshirt/,False,,,6,1646839741,1,,True,False,False,haskell,t5_2qh36,69354,public,default,I made a haskell t-shirt,0,[],1.0,https://www.redbubble.com/i/t-shirt/Haskell-mempty-inside-t-shirt-by-haskellLover69/103706605.WFLAH,all_ads,6,,,https://www.redbubble.com/i/t-shirt/Haskell-mempty-inside-t-shirt-by-haskellLover69/103706605.WFLAH,,,,reddit,,,,,,,,,,,,,
136.0,[],False,Dasher38,,[],,text,t2_25jago8f,False,False,False,[],False,False,1646765196,self.haskell,https://www.reddit.com/r/haskell/comments/t9nstk/transformers_alternative/,{},t9nstk,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/t9nstk/transformers_alternative/,False,,,6,1646765207,1,"Hi everyone, is there an alternative formulation of monad transformers that allow removing any reference to the base monad inside the e.g. bind definition of the transformer ? 

The reason I'm asking for that is I'm porting some Haskell transformers to Python, for which I would like to avoid chains of lift.lift.lift... 

A good way I found is simply to make a custom subclass of each transformer in the stack, so that they can be looked up for their lift by ""tag"" (the specific subclass) rather than numerical position (aka number of lift nesting). That would make composition of function using different monads very easy, even if they have not been designed to work together specifically 

This would still allows the user to use multiple transformers of the same type (e.g. StateT), since they user can create as many subclasses of StateT they want for each piece of state.

The problem with that is that is the user uses e.g. SubclassofStateT.pure(42), the base monad is not known , and has to be ""resolved"" later (when looking up the index of this class in the stack to lift appropriately). Unfortunately automatic, lifting is not enough since the definition of e.g. pure() would require the knowledge of the base monad which we don't have at this stage. Hence the need for an alternative formulation that allows delaying this knowledge to later.",True,False,False,haskell,t5_2qh36,69344,public,self,transformers alternative,0,[],1.0,https://www.reddit.com/r/haskell/comments/t9nstk/transformers_alternative/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
137.0,[],False,epoberezkin,,[],,text,t2_13t18x,False,False,False,[],False,False,1646759292,self.haskell,https://www.reddit.com/r/haskell/comments/t9ljld/simplex_chat_the_first_chat_platform_that_is_100/,{},t9ljld,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t9ljld/simplex_chat_the_first_chat_platform_that_is_100/,False,,,6,1646759303,1,"iOS &amp; Android mobile apps for  r/SimpleXChat are live 🚀 - install it via links here: [https://github.com/simplex-chat/simplex-chat…](https://github.com/simplex-chat/simplex-chat…) – please star the repo while you are there!

We built it to help all people living in oppressive regimes communicate freely with each other, without fear of persecution because of what they said and who they are connected with.

During the terrible conflict between Russia and Ukraine, people of both countries – I have friends and family there – could be at risk when sharing their opinions or just from being connected to people who were prosecuted.

Every messenger app that knows who you are can end up sharing all of your connections with undesirable third parties, either as a result of a court order or as a result of attack - so even Signal, which has strong encryption, cannot protect your connection graph.

Huge ""thank you"" 🙏 to 137 people who helped us test and improve the apps and to u/angerman who helped a lot by compiling our Haskell code to mobile platforms and getting it accepted by app stores – and we have just submitted the release than makes the app working on iPhone 7.

From our experience – building mobile apps with Haskell is non-trivial but doable – so if you have complex client-side logic that benefits from the advanced type system, then Haskell is a viable choice – we hope our project makes it a bit better for others too.

Let us know what you think about the apps and we are looking forward to releasing the new features, e.g. e2e encrypted WebRTC audio/video calls – see [the full release announcement here](https://github.com/simplex-chat/simplex-chat/blob/stable/blog/20220308-simplex-chat-mobile-apps.md).",True,False,False,haskell,t5_2qh36,69344,public,self,"SimpleX Chat - the first chat platform that is 100% private by design - it has no access to your connections graph - now as mobile apps, created with Haskell (+ native UIs)!",0,[],1.0,https://www.reddit.com/r/haskell/comments/t9ljld/simplex_chat_the_first_chat_platform_that_is_100/,all_ads,6,,,,,,,,,,,,,,,,,,,,
138.0,[],False,Suspicious-Foot6884,,[],,text,t2_99pjzn9u,False,False,False,[],False,False,1646758399,self.haskell,https://www.reddit.com/r/haskell/comments/t9l6zy/grammar/,{},t9l6zy,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t9l6zy/grammar/,False,,,6,1646758410,1,"Im trying to declare a grammar to be right associative but im getting way too many parse errors left and right, and im about to loose my mind.

Please help me!

original:

`Formula ::= 'T'`

  `| 'F'`

   `| Ident`

   `| '(' Formula ')'`

   `| '!' Formula`

   `| Formula '/\' Formula`

   `| Formula '\/' Formula`

   `| Formula '-&gt;' Formula`

   `| Formula '&lt;-&gt;' Formula`

&amp;#x200B;

Right associative:

`Formula ::= ImpTerm '&lt;-&gt;' Formula | ImpTerm`

`ImpTerm ::= OrTerm '-&gt;' Formula | OrTerm`

`OrTerm ::= AndTerm '\/' Formula | AndTerm`

`AndTerm ::= NotTerm '/\' Formula | NotTerm`

`NotTerm ::= '!' Formula | Factor`

`Factor ::= '(' F ormula ')' | 'T' | 'F' | Ident`",True,False,False,haskell,t5_2qh36,69345,public,self,Grammar,0,[],1.0,https://www.reddit.com/r/haskell/comments/t9l6zy/grammar/,all_ads,6,,,,,,,,,,,,,,,,,,,,
139.0,[],False,Sp3k7r0li7,,[],,text,t2_7e4yk,False,False,False,[],False,False,1646734240,blog.devgenius.io,https://www.reddit.com/r/haskell/comments/t9do3k/how_to_collaborate_within_vs_code_haskell_in/,{},t9do3k,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t9do3k/how_to_collaborate_within_vs_code_haskell_in/,False,link,"{'enabled': False, 'images': [{'id': 'Ym--yC2dY0OtTqLXselFrOX9-4YbrKX9EATTpVzfRAw', 'resolutions': [{'height': 56, 'url': 'https://external-preview.redd.it/XYOlJFv2ZG8D9hDIh24_IJmEYLbP-C2xX4tgXbDAjMs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0ceb4090e7594b90a1b834d82494b6580d40d9c6', 'width': 108}, {'height': 113, 'url': 'https://external-preview.redd.it/XYOlJFv2ZG8D9hDIh24_IJmEYLbP-C2xX4tgXbDAjMs.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c47d9974d1293e3c586a643e74c6229d9c69bd8b', 'width': 216}, {'height': 168, 'url': 'https://external-preview.redd.it/XYOlJFv2ZG8D9hDIh24_IJmEYLbP-C2xX4tgXbDAjMs.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d82e295b447bf9afc4ac36b756ded71b2311d8ad', 'width': 320}, {'height': 336, 'url': 'https://external-preview.redd.it/XYOlJFv2ZG8D9hDIh24_IJmEYLbP-C2xX4tgXbDAjMs.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=bf355f80ef1976fde3c6231a24764bf4e8bf9cf0', 'width': 640}], 'source': {'height': 499, 'url': 'https://external-preview.redd.it/XYOlJFv2ZG8D9hDIh24_IJmEYLbP-C2xX4tgXbDAjMs.jpg?auto=webp&amp;s=5a274368121fbc5eeef59b301a992e59b41e1164', 'width': 948}, 'variants': {}}]}",6,1646734250,1,,True,False,False,haskell,t5_2qh36,69332,public,default,How to collaborate within VS Code - (Haskell in Production)!,0,[],1.0,https://blog.devgenius.io/how-to-collaborate-within-vs-code-b70640b936d0,all_ads,6,,,https://blog.devgenius.io/how-to-collaborate-within-vs-code-b70640b936d0,73.0,140.0,,,,,t3_t9dnfb,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'Sp3k7r0li7', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_7e4yk', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1646734166.0, 'created_utc': 1646734166.0, 'discussion_type': None, 'distinguished': None, 'domain': 'blog.devgenius.io', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 't9dnfb', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': True, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': False, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_t9dnfb', 'no_follow': True, 'num_comments': 0, 'num_crossposts': 2, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/vscode/comments/t9dnfb/how_to_collaborate_within_vs_code/', 'pinned': False, 'post_hint': 'link', 'preview': {'enabled': False, 'images': [{'id': 'Ym--yC2dY0OtTqLXselFrOX9-4YbrKX9EATTpVzfRAw', 'resolutions': [{'height': 56, 'url': 'https://external-preview.redd.it/XYOlJFv2ZG8D9hDIh24_IJmEYLbP-C2xX4tgXbDAjMs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0ceb4090e7594b90a1b834d82494b6580d40d9c6', 'width': 108}, {'height': 113, 'url': 'https://external-preview.redd.it/XYOlJFv2ZG8D9hDIh24_IJmEYLbP-C2xX4tgXbDAjMs.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c47d9974d1293e3c586a643e74c6229d9c69bd8b', 'width': 216}, {'height': 168, 'url': 'https://external-preview.redd.it/XYOlJFv2ZG8D9hDIh24_IJmEYLbP-C2xX4tgXbDAjMs.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d82e295b447bf9afc4ac36b756ded71b2311d8ad', 'width': 320}, {'height': 336, 'url': 'https://external-preview.redd.it/XYOlJFv2ZG8D9hDIh24_IJmEYLbP-C2xX4tgXbDAjMs.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=bf355f80ef1976fde3c6231a24764bf4e8bf9cf0', 'width': 640}], 'source': {'height': 499, 'url': 'https://external-preview.redd.it/XYOlJFv2ZG8D9hDIh24_IJmEYLbP-C2xX4tgXbDAjMs.jpg?auto=webp&amp;s=5a274368121fbc5eeef59b301a992e59b41e1164', 'width': 948}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 1, 'secure_media': None, 'secure_media_embed': {}, 'selftext': '', 'selftext_html': None, 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'vscode', 'subreddit_id': 't5_381yu', 'subreddit_name_prefixed': 'r/vscode', 'subreddit_subscribers': 84766, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'https://b.thumbs.redditmedia.com/0vmRtMnT3Q7k6MrnwQDfT1gs2iZjqQnHOV_lOFl9HvQ.jpg', 'thumbnail_height': 73, 'thumbnail_width': 140, 'title': 'How to collaborate within VS Code.', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 1, 'upvote_ratio': 1.0, 'url': 'https://blog.devgenius.io/how-to-collaborate-within-vs-code-b70640b936d0', 'url_overridden_by_dest': 'https://blog.devgenius.io/how-to-collaborate-within-vs-code-b70640b936d0', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
140.0,[],False,Bulker3000,,[],,text,t2_8t2orbjp,False,False,False,[],False,False,1646693268,self.haskell,https://www.reddit.com/r/haskell/comments/t91tjq/if_a_type_signature_is_a_float_and_the_input_is/,{},t91tjq,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t91tjq/if_a_type_signature_is_a_float_and_the_input_is/,False,,,6,1646693279,1,,True,False,False,haskell,t5_2qh36,69328,public,self,"If a type signature is a -&gt; Float and the input is (63,22.9) would that produce an error, or is a literally anything? In this instance I thought it would have to be (a) in the type signature to not return a type error. Thoughts?",0,[],1.0,https://www.reddit.com/r/haskell/comments/t91tjq/if_a_type_signature_is_a_float_and_the_input_is/,all_ads,6,,,,,,,,,,,,,,,,,,,,
141.0,[],False,theeJoker11,,[],,text,t2_2dc9hpiq,False,False,False,[],False,False,1646684355,self.haskell,https://www.reddit.com/r/haskell/comments/t8yepe/help_required_in_understanding_point_free/,{},t8yepe,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/t8yepe/help_required_in_understanding_point_free/,False,,,6,1646684365,1,"Hi all,
I a newbie at haskell and I am trying to learn it using a book -&gt; learn haskell from first principles and in this book I came across a function

addAndDrop = const . (1+)

Can anyone please explain how is this working

Afaik (.) Operator takes two functions and compose them but the composition operator takes function that takes 1 input and one output but const take two inputs, then how is it working?",True,False,False,haskell,t5_2qh36,69326,public,self,Help required in understanding point free function implementation,0,[],1.0,https://www.reddit.com/r/haskell/comments/t8yepe/help_required_in_understanding_point_free/,all_ads,6,,,,,,,,,,,,,,,,,,,,
142.0,[],False,dewaynec23,,[],,text,t2_1xvq5lud,False,False,False,[],False,False,1646672394,self.haskell,https://www.reddit.com/r/haskell/comments/t8ts61/liqwid_labs_is_hiring_senior_haskellers/,{},t8ts61,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t8ts61/liqwid_labs_is_hiring_senior_haskellers/,False,self,"{'enabled': False, 'images': [{'id': 'VzpYkXyC6yDO3vgCZYDuLByCzAD_UoPY4IrjJFw3_Nk', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/BeOjC0jkup-ZkqkBvVr47w9WGJpz_uE-u6M7Gpz2xGI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5355e3374b28efaeb1766e98be79ec1344793cba', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/BeOjC0jkup-ZkqkBvVr47w9WGJpz_uE-u6M7Gpz2xGI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=4119b62633da83fcafe0a1231d41c28b80b8cccb', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/BeOjC0jkup-ZkqkBvVr47w9WGJpz_uE-u6M7Gpz2xGI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9a35017ad5ccb1ace5f1320697b977df3a4d1c19', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/BeOjC0jkup-ZkqkBvVr47w9WGJpz_uE-u6M7Gpz2xGI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4d69d83c8e43c181a083d94c352f2acdcd2b7d76', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/BeOjC0jkup-ZkqkBvVr47w9WGJpz_uE-u6M7Gpz2xGI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c99c0d5f9955742ac84ebd393382c2013f313e65', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/BeOjC0jkup-ZkqkBvVr47w9WGJpz_uE-u6M7Gpz2xGI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=437fdac308f2620f8163ff53a6835683836cf2d3', 'width': 1080}], 'source': {'height': 1200, 'url': 'https://external-preview.redd.it/BeOjC0jkup-ZkqkBvVr47w9WGJpz_uE-u6M7Gpz2xGI.jpg?auto=webp&amp;s=15fd9f23da059d5f4a47e7087ef337e08f347b9c', 'width': 1200}, 'variants': {}}]}",6,1646672406,1,"We are currently hiring for senior Haskell positions. Blockchain knowledge is a bonus, but not required. You can apply for our Haskell positions here:   
[https://apply.workable.com/j/93769A1C9A/?utm\_medium=social\_share\_link](https://apply.workable.com/j/93769A1C9A/?utm_medium=social_share_link)

Learn more about Liqwid Labs  
[https://liqwid.finance/](https://liqwid.finance/)  
[https://github.com/Liqwid-Labs](https://github.com/Liqwid-Labs)",True,False,False,haskell,t5_2qh36,69325,public,self,Liqwid Labs is hiring senior Haskellers,0,[],1.0,https://www.reddit.com/r/haskell/comments/t8ts61/liqwid_labs_is_hiring_senior_haskellers/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,,,,,,,,,,,,,,
143.0,[],False,woon420,,[],,text,t2_nkt6s,False,False,False,[],False,False,1646669075,self.haskell,https://www.reddit.com/r/haskell/comments/t8sisi/i_have_a_small_project_that_needs_to_be_done_in/,{},t8sisi,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t8sisi/i_have_a_small_project_that_needs_to_be_done_in/,False,,,6,1646669086,1,"Hello, it is basically a project with a couple of requirements that needs to be done, and unfortunately, I do not have the necessary knowledge for it at the moment, anyone interested in taking a closer look?

The work will be paid accordingly! 

Also, if this is not the correct sub for labor, can you please point me in the right direction, as I did not find a specific Haskell jobs sub, thanks.",True,False,False,haskell,t5_2qh36,69325,public,self,I have a small project that needs to be done in Haskell. Is this the right place to find a developer for me?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t8sisi/i_have_a_small_project_that_needs_to_be_done_in/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
144.0,[],False,aspiwack-tweag,,[],,text,t2_u65on6,False,False,False,[],False,False,1646667421,self.haskell,https://www.reddit.com/r/haskell/comments/t8rwe2/named_routes_in_servant/,{},t8rwe2,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t8rwe2/named_routes_in_servant/,False,self,"{'enabled': False, 'images': [{'id': '0Evd6UWXs4A11yT0I3bSUdOWKNqr9Az0qWvc-WhxMes', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a559bb4d890ff015d6259a06083f8cea81389ab2', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b67964ddc7f6a4e974672b382f7c786c8d3526fe', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=61e37c5f638b0d156c5fdcbc1a5335a3bdbb8729', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=298dca15f47ae031413bbd031ffd301b05793915', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=81eb47deb6039cc11cc169b056aee661e37b1789', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3b60b078d6771ef7f153290885f77a8f50774cdb', 'width': 1080}], 'source': {'height': 4096, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?auto=webp&amp;s=6803e63008eaa75aac55167a9225dd6c2f0316a7', 'width': 4096}, 'variants': {}}]}",6,1646667431,1,[removed],True,False,False,haskell,t5_2qh36,69324,public,self,Named Routes in Servant,0,[],1.0,https://www.reddit.com/r/haskell/comments/t8rwe2/named_routes_in_servant/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,,,,,reddit,,,,,,,,,,,,,
145.0,[],False,valcron1000,,[],,text,t2_hw1ys,False,False,False,[],False,False,1646666453,self.haskell,https://www.reddit.com/r/haskell/comments/t8rjhm/dispatch_function_based_on_type/,{},t8rjhm,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t8rjhm/dispatch_function_based_on_type/,False,,,6,1646666463,1,"I have the following code:

    insertOrd :: (Int, Char) -&gt; [(Int, Char)] -&gt; [(Int, Char)]
    insertOrd x xs = x : xs
    
    insertFlipped :: (Char, Int) -&gt; [(Int, Char)] -&gt; [(Int, Char)]
    insertFlipped x xs = flipped x : xs
      where
        flipped (a, b) = (b, a)

What I want to do is to define a function `insert` that will run the appropriate version of `insertXXX` based on the type of the first argument, imagine something like the following:

    insert :: pair -&gt; [(Int, Char)] -&gt; [(Int, Char)]
    insert = case pair of
      (Int, Char) -&gt; insertOrd
      (Char, Int) -&gt; insertFlipped
      _ -&gt; fail_during_compilation

Of course, that code is not valid Haskell, but I was wondering if I could achieve something like that using some type-level magic.

Thanks in advance for any suggestion!",True,False,False,haskell,t5_2qh36,69324,public,self,Dispatch function based on type,0,[],1.0,https://www.reddit.com/r/haskell/comments/t8rjhm/dispatch_function_based_on_type/,all_ads,6,,,,,,,,,,,,,,,,,,,,
146.0,[],False,LucianU,,[],,text,t2_3vve5,False,False,False,[],False,False,1646660814,elbear.com,https://www.reddit.com/r/haskell/comments/t8pksp/how_to_use_monads_without_understanding_them/,{},t8pksp,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/t8pksp/how_to_use_monads_without_understanding_them/,False,,,6,1646660825,1,,True,False,False,haskell,t5_2qh36,69322,public,default,How to Use Monads without Understanding Them,0,[],1.0,https://elbear.com/how-to-use-monads-without-understanding-them.html,all_ads,6,,,https://elbear.com/how-to-use-monads-without-understanding-them.html,,,,,,,,,,,,,,,,,
147.0,[],False,hhoeflin,,[],,text,t2_5j4ffuy9,False,False,False,[],False,False,1646639522,self.haskell,https://www.reddit.com/r/haskell/comments/t8k46o/memoization_in_haskell/,{},t8k46o,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t8k46o/memoization_in_haskell/,False,,,6,1646639532,1,"I am pretty new to Haskell and learning it for fun, coming from Python. I recently tried to solve a problem using memoization, and I was surprised how hard it is in Haskell. I read up on a few things, for example

[https://en.m.wikibooks.org/wiki/Haskell/Fix\_and\_recursion](https://en.m.wikibooks.org/wiki/Haskell/Fix_and_recursion)

that provides the basic concepts. Naively, I had assumed that pure functional programming language should make memoization \*easier\* as there are no unintended side-effects. Instead, basically every approach I found requires me rewrite the function definition itself of the function I want to memoize. 

Am I simply missing something? Are there some techniques for memoization that don't require rewriting the function? Maybe some compiler settings?

Thanks!",True,False,False,haskell,t5_2qh36,69322,public,self,Memoization in Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/t8k46o/memoization_in_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
148.0,[],False,AngstyChippy,,[],,text,t2_7498jwy0,False,False,False,[],False,False,1646621018,self.haskell,https://www.reddit.com/r/haskell/comments/t8f5i5/lazy_vs_strict_evaluation/,{},t8f5i5,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t8f5i5/lazy_vs_strict_evaluation/,False,,,6,1646621028,1,[removed],True,False,False,haskell,t5_2qh36,69321,public,self,Lazy Vs Strict Evaluation,0,[],1.0,https://www.reddit.com/r/haskell/comments/t8f5i5/lazy_vs_strict_evaluation/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
149.0,[],False,bgamari,,[],,text,t2_7d9ta,False,False,False,[],False,False,1646605518,haskell.org,https://www.reddit.com/r/haskell/comments/t8a53f/announce_ghc_922_is_now_available/,{},t8a53f,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t8a53f/announce_ghc_922_is_now_available/,False,,,6,1646605529,1,,True,False,False,haskell,t5_2qh36,69320,public,default,[ANNOUNCE] GHC 9.2.2 is now available!,0,[],1.0,https://www.haskell.org/ghc/blog/20220305-ghc-9.2.2-released.html,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://www.haskell.org/ghc/blog/20220305-ghc-9.2.2-released.html,,,,,,,,,,,,,,,,,
150.0,[],False,Lucas46,,[],,text,t2_j8scy,False,False,False,[],False,False,1646592416,self.haskell,https://www.reddit.com/r/haskell/comments/t85efq/best_and_most_current_library_for_functional/,{},t85efq,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t85efq/best_and_most_current_library_for_functional/,False,,,6,1646592427,1,"Hi all,

I was just wondering out of all the FRP libraries, which one is the most effective and up-to-date? My undergraduate thesis will likely be concerning using FRP in Haskell to generate music.",True,False,False,haskell,t5_2qh36,69319,public,self,Best and most current library for Functional Reactive Programming?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t85efq/best_and_most_current_library_for_functional/,all_ads,6,,,,,,,,,,,,,,,,,,,,
151.0,[],False,BayesMind,,[],,text,t2_xu7ty,False,False,False,[],False,False,1646592396,github.com,https://www.reddit.com/r/haskell/comments/t85e77/fortran_in_haskell_a_howto/,{},t85e77,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t85e77/fortran_in_haskell_a_howto/,False,link,"{'enabled': False, 'images': [{'id': 'JH826-dxprcbYAgfIOonwmqJW92dDmYpKYZ70_H0BiM', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/FL3zTVpSog_e83M-AQpDiAQY6IgWLolQ40DmbMoiWf8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6669bf3e017c5464733e047b424cfd6341c36dcf', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/FL3zTVpSog_e83M-AQpDiAQY6IgWLolQ40DmbMoiWf8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9c00942486c162f4a14bd4dd60cd5088ea357ed3', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/FL3zTVpSog_e83M-AQpDiAQY6IgWLolQ40DmbMoiWf8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e2956deea40e4e85bca98a42525e373b6e31dc74', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/FL3zTVpSog_e83M-AQpDiAQY6IgWLolQ40DmbMoiWf8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ee9b73f0f2255d2db5d58bf8237fb0006e22e7f9', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/FL3zTVpSog_e83M-AQpDiAQY6IgWLolQ40DmbMoiWf8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=1cc97d983ad8d8d95f1d11619d454327801f3292', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/FL3zTVpSog_e83M-AQpDiAQY6IgWLolQ40DmbMoiWf8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=f9c036ddf11095c3d4cc05ed6bc443a7280b0d4f', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/FL3zTVpSog_e83M-AQpDiAQY6IgWLolQ40DmbMoiWf8.jpg?auto=webp&amp;s=0972f09279fa3171dbd7b148861005ad62f89211', 'width': 1200}, 'variants': {}}]}",6,1646592407,1,,True,False,False,haskell,t5_2qh36,69319,public,default,Fortran in Haskell: A How-To,0,[],1.0,https://github.com/freckletonj/haskell-fortran,all_ads,6,a01b58a0-6553-11eb-b2eb-0eb19e8d97a5,RFC,https://github.com/freckletonj/haskell-fortran,70.0,140.0,,reddit,,,,,,,,,,,,,
152.0,[],False,tomwells80,,[],,text,t2_ngkv9fx,False,False,False,[],False,False,1646558520,self.haskell,https://www.reddit.com/r/haskell/comments/t7v64h/haskell_for_xp_style_discussions/,{},t7v64h,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t7v64h/haskell_for_xp_style_discussions/,False,,,6,1646558530,1,"I think one of the massively underrated use cases of Haskell is as a tool for discussion. For example I recently was chatting to a friend about a particular chess analysis he was experimenting with and although he is a non-programmer we were able to explore the idea very deeply through a quick 2 hour XP style discussion. He was 100% able to follow the data types and basics, but most importantly able to follow and guide the algorithms that resulted (as much as I was encoding english to haskell, he was also able to map back from haskell to his own internal model easily). 

Haskell might be difficult to write, high learning curve etc, but its simplicity to read and follow is an underrated super feature?

I blogged about it here (if you are interested in more detail of our XP session and some code snips etc) https://www.tomwells.org/blog/haskell_for_prototyping",True,False,False,haskell,t5_2qh36,69320,public,self,Haskell for XP style discussions,0,[],1.0,https://www.reddit.com/r/haskell/comments/t7v64h/haskell_for_xp_style_discussions/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,,,,,,,,,,,,,,,,,,
153.0,[],False,Administrator101,,[],,text,t2_12hwzhih,False,False,False,[],False,False,1646548680,self.haskell,https://www.reddit.com/r/haskell/comments/t7sxi9/questions_about_some_functional_programming/,{},t7sxi9,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t7sxi9/questions_about_some_functional_programming/,False,,,6,1646548691,1,"Having previously worked with python, java, C and javascript I have developed some personal preferences for features/styles in programming languages that don't seem to be supported in more modern popular and low-level languages (Go and Rust).

I'm wondering if these patterns are incorrect or if I'm attempting to use an object-orientated or functional style in a procedural language where it doesn't fit.

The following are a few of my favourites that initially sprung to mind.

* Chained operations on arrays/lists with functionally defined behaviour e.g. `a.filter(a =&gt; a &gt; 5).sort().slice(2).max()`
* Wrapper alternatives to checking for null. e.g. extending the previous example `...2).max().else(0)`
* Inline everything. e.g. `if a is b then c() else d()` and `for 1..X as x do a += x`

Am I a functional programmer in denial? The only thing keeping me from this conclusion is that I use a lot of oop techniques in tandem with the above.

Or do I just want what's bad for me? In support of this is the fact that all the languages that allow these patterns are very generic and mainstream and don't have the careful direction of your Gos and rusts.",True,False,False,haskell,t5_2qh36,69320,public,self,Questions about some (functional?) programming styles and their representation in newer low-level languages,0,[],1.0,https://www.reddit.com/r/haskell/comments/t7sxi9/questions_about_some_functional_programming/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
154.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1646508565,github.com,https://www.reddit.com/r/haskell/comments/t7gvev/clc_approved_removal_of_instance_monadfail_st/,{},t7gvev,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t7gvev/clc_approved_removal_of_instance_monadfail_st/,False,link,"{'enabled': False, 'images': [{'id': 'lCIgMfViJjaXwsgnuQybfx1fkrwqTZe7NyjCsvFwpcE', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/iiTK7wKqq7NUNCqhwykIIjvjTdymSqy7VABHawzdAvc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=299b147887cdeb64b69493cbcdcce15ee6e658e1', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/iiTK7wKqq7NUNCqhwykIIjvjTdymSqy7VABHawzdAvc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b8283a795fa3dc730614368e3a697dc0a6bf79d2', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/iiTK7wKqq7NUNCqhwykIIjvjTdymSqy7VABHawzdAvc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1a3328457f0ea0ac871b856c2f30ee114fc89264', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/iiTK7wKqq7NUNCqhwykIIjvjTdymSqy7VABHawzdAvc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=cb9fd78fc1f38b0b2c0c561e3737b88cab41bfe7', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/iiTK7wKqq7NUNCqhwykIIjvjTdymSqy7VABHawzdAvc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=fcc9573615173e37091e72257db24357cd169630', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/iiTK7wKqq7NUNCqhwykIIjvjTdymSqy7VABHawzdAvc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ca784aa2770bac600559da3f825a72e869b13c99', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/iiTK7wKqq7NUNCqhwykIIjvjTdymSqy7VABHawzdAvc.jpg?auto=webp&amp;s=9dc76c68b7c2980ec7de58c394b5c3c3cbf971a4', 'width': 1200}, 'variants': {}}]}",6,1646508575,1,,True,False,False,haskell,t5_2qh36,69312,public,default,CLC approved removal of instance MonadFail ST,0,[],1.0,https://github.com/haskell/core-libraries-committee/blob/main/guides/no-monadfail-st-inst.md,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://github.com/haskell/core-libraries-committee/blob/main/guides/no-monadfail-st-inst.md,70.0,140.0,,,,,,,,,,,,,,,
155.0,[],False,SkeetSk8r,,[],,text,t2_b2exp8vb,False,False,False,[],False,False,1646471956,self.haskell,https://www.reddit.com/r/haskell/comments/t75rmt/what_beginners_dont_know/,{},t75rmt,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t75rmt/what_beginners_dont_know/,False,,,6,1646471966,1,"What do you think are parts of Haskell that you didn't use much in your early days, but used regularly as you became more proficient in the language?",True,False,False,haskell,t5_2qh36,69305,public,self,What beginners don't know...,0,[],1.0,https://www.reddit.com/r/haskell/comments/t75rmt/what_beginners_dont_know/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
156.0,[],False,NixOverSlicedBread,,[],,text,t2_1s3ukhhs,False,False,False,[],False,False,1646423119,self.haskell,https://www.reddit.com/r/haskell/comments/t6r73k/is_tsuru_haskell_employer_legit/,{},t6r73k,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t6r73k/is_tsuru_haskell_employer_legit/,False,,,6,1646423130,1,"Supposedly they are in ""Japan"", but apparently they are incorporated in Singapore.

Is this a legit business? Who is/are running it?",False,False,False,haskell,t5_2qh36,69300,public,self,"Is ""Tsuru"" (Haskell employer) legit?",0,[],1.0,https://www.reddit.com/r/haskell/comments/t6r73k/is_tsuru_haskell_employer_legit/,all_ads,6,,,,,,,,,,,,,,,,,,,,
157.0,[],False,Damien0,,[],,text,t2_b27c9,False,False,False,[],False,False,1646419213,self.haskell,https://www.reddit.com/r/haskell/comments/t6prgv/library_for_distributed_ndimensional_array/,{},t6prgv,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t6prgv/library_for_distributed_ndimensional_array/,False,,,6,1646419225,1,"Essentially I am looking for something like Dask in the Python ecosystem. I’m aware of Sparkle, but wondering if there is anything out there that can run distributed linear algebra in native Haskell without a JVM. Thanks in advance!",True,False,False,haskell,t5_2qh36,69301,public,self,Library for distributed n-dimensional array computations?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t6prgv/library_for_distributed_ndimensional_array/,all_ads,6,,,,,,,,,,,,,,,,,,,,
158.0,[],False,moodmarch,,[],,text,t2_gma6owus,False,False,True,[],False,False,1646394330,twitter.com,https://www.reddit.com/r/haskell/comments/t6h67i/humble_software_bundle_learn_frontend_web/,{},t6h67i,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t6h67i/humble_software_bundle_learn_frontend_web/,False,,,6,1646394341,1,,True,False,False,haskell,t5_2qh36,69295,public,default,HUMBLE SOFTWARE BUNDLE: LEARN FRONT-END WEB DEVELOPMENT (pay what you want and help charity ;,0,[],1.0,https://twitter.com/AnajonesLee/status/1365132093374668800?s=20,all_ads,6,,,https://twitter.com/AnajonesLee/status/1365132093374668800?s=20,,,,reddit,,,,,,,,,,,,,
159.0,[],False,oskargreda,,[],,text,t2_fi2s2co8,False,False,False,[],False,False,1646393751,self.haskell,https://www.reddit.com/r/haskell/comments/t6h16z/mlabs_haskell_internship_applications_closing_soon/,{},t6h16z,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/t6h16z/mlabs_haskell_internship_applications_closing_soon/,False,,,6,1646393762,1,"Paid Haskell Internship Opportunities at MLabs (100% Remote, Worldwide) 

Description

We are one of the leading Haskell consultancies in the fintech, blockchain and AI space, with a passion for Haskell and open-source software. We are looking for a remote interns to join our team.

This is now our 5th Cohort, due to the amount of interest that are getting!

Our internships are usually 3-6 months in duration and are paid. You will have the opportunity to work on some real projects but also have time to learn and develop your skills and experience in Haskell. 

When your internship is coming to end, you will have an interview for a junior developer position with MLabs too! 

Requirements

•    Basic knowledge and interest in Haskell

•    Interest in software engineering and architecture

•    Problem solving and analytical skills

•    Strong verbal skills in English

Benefits

•    Focus on learning and individual growth in Haskell and Computer Science

•    Work with other great Haskellers, open source contributors and computer scientists

•    Interesting and challenging projects

•    Ability to talk with anyone in the organization, regardless of team

•    Remote work

•    Flexible working hours

•    6 weeks of paid vacation per year

•    Competitive salary

To apply please forward your up-to-date CV to [oskar@mlabs.city](mailto:oskar@mlabs.city) 

If you already have, I will be in touch with all of you by the end of next week at the latest with some more info :)

Applications will also close then, so please apply asap not to miss your chance to join!",True,False,False,haskell,t5_2qh36,69295,public,self,MLabs Haskell Internship Applications closing soon!,0,[],1.0,https://www.reddit.com/r/haskell/comments/t6h16z/mlabs_haskell_internship_applications_closing_soon/,all_ads,6,,,,,,,,,,,,,,,,,,,,
160.0,[],False,Beginning_Jelly8231,,[],,text,t2_kbowjsfj,False,False,False,[],False,False,1646392705,self.haskell,https://www.reddit.com/r/haskell/comments/t6grwq/trying_to_replace_the_last_of_an_item_in_a_list/,{},t6grwq,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t6grwq/trying_to_replace_the_last_of_an_item_in_a_list/,False,,,6,1646392716,1,[removed],True,False,False,haskell,t5_2qh36,69295,public,self,"Trying to replace the last of an item in a list in Haskell, but really struggling?",0,[],1.0,https://www.reddit.com/r/haskell/comments/t6grwq/trying_to_replace_the_last_of_an_item_in_a_list/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
161.0,[],False,Top_Secret_1448,,[],,text,t2_dz9j49co,False,False,False,[],False,False,1646369586,self.haskell,https://www.reddit.com/r/haskell/comments/t6ayzs/where_can_i_find_the_formalscientificacademic/,{},t6ayzs,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t6ayzs/where_can_i_find_the_formalscientificacademic/,False,,,6,1646369597,1,,True,False,False,haskell,t5_2qh36,69293,public,self,Where can I find the formal/scientific/academic definitions of monad and monoid with explanations and examples?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t6ayzs/where_can_i_find_the_formalscientificacademic/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
162.0,[],False,varikvalefor,,[],,text,t2_12r17p,False,False,False,[],False,False,1646362697,github.com,https://www.reddit.com/r/haskell/comments/t68v8a/matel_is_an_unfinished_haskellbased_matrix_client/,{},t68v8a,False,False,False,True,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t68v8a/matel_is_an_unfinished_haskellbased_matrix_client/,False,link,"{'enabled': False, 'images': [{'id': 'GZ1L2HS5rKagAeayQLf474JlYE-mWVvTTyetD7Rnwtw', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/h8MPPwuyaXEHxAh7Z_Q8alfSCTlTwom-_uf80EJP8U8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5eaf7dc2565e7bb4e9e9d9b024ea2e452033896b', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/h8MPPwuyaXEHxAh7Z_Q8alfSCTlTwom-_uf80EJP8U8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7f3b900b7f4375103b434d7614974d4daa07d7df', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/h8MPPwuyaXEHxAh7Z_Q8alfSCTlTwom-_uf80EJP8U8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2f2af85d02cea0ba06e18a9cbafe71d6c87a0be0', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/h8MPPwuyaXEHxAh7Z_Q8alfSCTlTwom-_uf80EJP8U8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4cc974079f39e72de00e646437e9e4bd67fd31a1', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/h8MPPwuyaXEHxAh7Z_Q8alfSCTlTwom-_uf80EJP8U8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=04ef865589434898fedc58ff67d4c442e041d501', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/h8MPPwuyaXEHxAh7Z_Q8alfSCTlTwom-_uf80EJP8U8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=2fea41d800ca9bb319329cad8d3956a5cd0f1709', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/h8MPPwuyaXEHxAh7Z_Q8alfSCTlTwom-_uf80EJP8U8.jpg?auto=webp&amp;s=2e96050c5426338356e3ea7b5eef2f82d38fcf68', 'width': 1200}, 'variants': {}}]}",6,1646362708,1,,True,False,False,haskell,t5_2qh36,69292,public,default,"Matel is an unfinished Haskell-based Matrix client whose development focuses on readability, maintainability, and the inclusion of jokes. Criticism and contributions are welcomed.",0,[],1.0,https://github.com/varikvalefor/matel,all_ads,6,,,https://github.com/varikvalefor/matel,70.0,140.0,,reddit,,,,,,,,,,,,,
163.0,[],False,some_clickhead,,[],,text,t2_xuecm,False,False,False,[],False,False,1646360175,self.haskell,https://www.reddit.com/r/haskell/comments/t683do/question_regarding_haskell_syntax/,{},t683do,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/t683do/question_regarding_haskell_syntax/,False,,,6,1646360186,1,"So I'm new to Haskell and trying to wrap my head around it, coming from imperative languages it's so different I might as well have never coded in my life. I find the syntax... strange, to say the least.
 
I'm trying to understand a solution for a function that detects if a String is a pangram (contains every letter of the alphabet), here it is :

```
 isPangram text = all (`elem` text) ['A'..'Z']
```

What I don't understand are those parentheses, they don't make sense to me. 

As far as I can tell, `elem` takes 2 arguments; a character then a string. So what does (`elem` text) even mean? It has to do something, because if I take those parentheses out, the function no longer works. Yet (`elem` text) doesn't actually work on its own, so what is going on here?

Also, `all` takes a list of booleans right? Assuming `all` is supposed to be applied to a list of booleans, I would think that (`elem` text) ['A'..'Z'] should get reduced to a list of booleans, but actually that code also doesn't work on its own. Where is the list of booleans `all` is applied to coming from, then?",True,False,False,haskell,t5_2qh36,69291,public,self,Question regarding Haskell syntax,0,[],1.0,https://www.reddit.com/r/haskell/comments/t683do/question_regarding_haskell_syntax/,all_ads,6,,,,,,,,,,,,,,,,,,,,
164.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1646345408,self.haskell,https://www.reddit.com/r/haskell/comments/t632wz/bytestring01130/,{},t632wz,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t632wz/bytestring01130/,False,,,6,1646345419,1,"On behalf of maintainers I'm happy to announce that [`bytestring-0.11.3.0`](http://hackage.haskell.org/package/bytestring-0.11.3.0) has been released. It will be a part of upcoming GHC 9.2.2.

The focus of this release is an extended API for `ShortByteString`, submitted by /u/maerwald as a part of [Abstract FilePath Proposal](https://discourse.haskell.org/t/reviving-the-abstract-filepath-proposal-afpp-in-user-space/2344). `bytestring` is proud to be a part of this initiative, aimed to provide much faster and more principled `FilePath` type. Huge thanks to /u/maerwald for spearheading it!

Other highlights from [the changelog](https://github.com/haskell/bytestring/blob/0.11.3.0/Changelog.md):

* UTF-8 support: add `Data.ByteString.Short.isValidUtf8` and use safe FFI for large inputs.
* Improve performance and laziness of `unlines`.
* Improve performance of `intercalate`.
* Improve allocations of `singleton`.

Many people contributed their time and effort to make this release happen. Just to name a few in no particular order, mostly according to `git log`:

* Alexander Biehl
* askeblad
* Ben Gamari
* Dmitry Ivanov
* Jaro Reinders
* Johannes Waldmann
* Julian Ospald
* Koz Ross
* Matthew Craven
* Patrick Pelletier
* Simon Jakobi
* me

On a personal note, it was not easy to work on this release with my family in a bomb shelter and friends in trenches. Stand with Ukraine, will you?",True,False,False,haskell,t5_2qh36,69288,public,self,bytestring-0.11.3.0,0,[],1.0,https://www.reddit.com/r/haskell/comments/t632wz/bytestring01130/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
165.0,[],False,repaj,,[],,text,t2_4jo3g32r,False,False,False,[],False,False,1646334660,self.haskell,https://www.reddit.com/r/haskell/comments/t5z5lg/flattening_nested_generic_routes_in_servant/,{},t5z5lg,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t5z5lg/flattening_nested_generic_routes_in_servant/,False,,,6,1646334670,1,"Say we have routes:
```
data UsersRoutes route = UserRoutes
  { usersId  :: route :- Capture ""id"" Text :&gt; ToServant UserIdRoutes AsApi
  , usersAll :: route :- Get '[JSON] (Vector User)
  , ...
  }

data UserIdRoutes route = UserIdRoutes
  { userIdProfile :: route :- ""profile"" :&gt; Get '[JSON] User
  , userIdRemove  :: route :- Delete '[PlainTest] NoContent
  , ...
  }
``` 

Then I want to extract client using:
```
UsersRoutes { usersId = fromServant @_ @(AsClientT ClientM) -&gt; UserIdRoutes {..}, ..} = genericClient @_ @ClientM
```

GHC politely tells me that `fromServant` cannot be applied to the pattern, because type mismatches.

How can I distribute captured `id` to `UserIdRoutes` in convenient way when I want to extract client from `UsersRoutes` using pattern matching?",True,False,False,haskell,t5_2qh36,69287,public,self,Flattening nested generic routes in Servant,0,[],1.0,https://www.reddit.com/r/haskell/comments/t5z5lg/flattening_nested_generic_routes_in_servant/,all_ads,6,,,,,,,,,,,,,,,,,,,,
166.0,[],False,jberryman,,[],,text,t2_32bha,False,False,False,[],False,False,1646332503,github.com,https://www.reddit.com/r/haskell/comments/t5ycam/stclang_a_library_for_implicit_monadic_dataflow/,{},t5ycam,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t5ycam/stclang_a_library_for_implicit_monadic_dataflow/,False,link,"{'enabled': False, 'images': [{'id': 'NkRzHqavkmYL7MeFW9rso5eQt0KSRMsHtMLNI96MGH0', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/oaSOw2pMmrHWZTAULox_dZuKgYEaWKrvTUNvdMD9q-8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5566d8a003aadcc852cb607358cc5e629e86e9e1', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/oaSOw2pMmrHWZTAULox_dZuKgYEaWKrvTUNvdMD9q-8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=bbe402759add8c1f13ac7331f9a7e288a5f0c469', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/oaSOw2pMmrHWZTAULox_dZuKgYEaWKrvTUNvdMD9q-8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5b2687e2eeb9598ac9d24d8bb1963165e07e2cb7', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/oaSOw2pMmrHWZTAULox_dZuKgYEaWKrvTUNvdMD9q-8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d294ce3b881ce21f67d34870483ae612e593f1ab', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/oaSOw2pMmrHWZTAULox_dZuKgYEaWKrvTUNvdMD9q-8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=f2334646189d932f495f6ee96550de4c58c91c9b', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/oaSOw2pMmrHWZTAULox_dZuKgYEaWKrvTUNvdMD9q-8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=b885f46cfc9a987866cab0abed9868055e9c1044', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/oaSOw2pMmrHWZTAULox_dZuKgYEaWKrvTUNvdMD9q-8.jpg?auto=webp&amp;s=7567c0fb563c4a62059eae3d52f80543f192fb6d', 'width': 1200}, 'variants': {}}]}",6,1646332514,1,,False,False,False,haskell,t5_2qh36,69288,public,default,STCLang: A library for implicit monadic dataflow parallelism,0,[],1.0,https://github.com/ohua-dev/stc-lang,all_ads,6,,,https://github.com/ohua-dev/stc-lang,70.0,140.0,,,,,,,,,,,,,,,
167.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1646329863,haskellweekly.news,https://www.reddit.com/r/haskell/comments/t5xbti/issue_305_haskell_weekly_newsletter/,{},t5xbti,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t5xbti/issue_305_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1646329874,1,,True,False,False,haskell,t5_2qh36,69286,public,default,Issue 305 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/305.html,all_ads,6,,,https://haskellweekly.news/issue/305.html,140.0,140.0,,,,,,,,,,,,,,,
168.0,[],False,FreeVariable,,[],,text,t2_16uihwda,False,False,False,[],False,False,1646328507,self.haskell,https://www.reddit.com/r/haskell/comments/t5wt0r/showcasing_feedfarer_bot_a_telegram_bot_for/,{},t5wt0r,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t5wt0r/showcasing_feedfarer_bot_a_telegram_bot_for/,False,self,"{'enabled': False, 'images': [{'id': 'pbCLXZGGqBEKYzvjNUgDYsJWTPwovm5hjyTkngHDjo8', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/7TD9E38JG0tWmaP6jcZsr56_RRxWXmm6UUa6yz3KjDM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=55784f599c49470258a06f45f3946e1b2349705b', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/7TD9E38JG0tWmaP6jcZsr56_RRxWXmm6UUa6yz3KjDM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=29963a801f9d3e34aebb9e2b499dd224f32f1d72', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/7TD9E38JG0tWmaP6jcZsr56_RRxWXmm6UUa6yz3KjDM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=81d7234211425eb49d5a9ffa20490c98ed8897c3', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/7TD9E38JG0tWmaP6jcZsr56_RRxWXmm6UUa6yz3KjDM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=90dd8d11a0398fff1cb71fa5b961a181555e1e3f', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/7TD9E38JG0tWmaP6jcZsr56_RRxWXmm6UUa6yz3KjDM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=690fc91f79c42e577f05d67f026e2c099ee733b2', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/7TD9E38JG0tWmaP6jcZsr56_RRxWXmm6UUa6yz3KjDM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=1841c9b2a6b2b4b61b816e9263088d6bf0316ee9', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/7TD9E38JG0tWmaP6jcZsr56_RRxWXmm6UUa6yz3KjDM.jpg?auto=webp&amp;s=a96ba8a3d97fdd947d7d7953cfa19273b70e3f62', 'width': 1200}, 'variants': {}}]}",6,1646328517,1,"The bot can be found \[here\]([https://github.com/why-not-try-calmer/feedfarer2](https://github.com/why-not-try-calmer/feedfarer2)). It is a small pet project of mine written a couple of weeks ago; it was originally for a friend but I felt it would be interesting to get some feedback from the Haskell community, feature requests and, why not, new contributors -- assuming the project is deemed interesting!

As always, all comments welcome.",True,False,False,haskell,t5_2qh36,69286,public,self,"Showcasing ""feedfarer_bot"", a Telegram bot for consuming web feeds",0,[],1.0,https://www.reddit.com/r/haskell/comments/t5wt0r/showcasing_feedfarer_bot_a_telegram_bot_for/,all_ads,6,,,,,,,,,,,,,,,,,,,,
169.0,[],False,siphonsmurf69,,[],,text,t2_k9ah0mwr,False,False,False,[],False,False,1646322949,self.haskell,https://www.reddit.com/r/haskell/comments/t5uolz/dependency_build_cache/,{},t5uolz,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t5uolz/dependency_build_cache/,False,,,6,1646322960,1,"Sorry if this is a duplicate! I searched the‍ subreddit but didn't peer the same question. Is it possible to cache dependency builds with stack or cabal? My use case is creating a docker image that contains a working executable of our project. The build takes _forever_ because of dependencies, it would be great to have it cached as another layer. Thanks in advance!",True,False,False,haskell,t5_2qh36,69285,public,self,Dependency Build Cache!,0,[],1.0,https://www.reddit.com/r/haskell/comments/t5uolz/dependency_build_cache/,all_ads,6,,,,,,,,,,,,,,,,,,,,
170.0,[],False,Tekmo,,[],,text,t2_2678l,False,False,False,[],False,False,1646320486,haskellforall.com,https://www.reddit.com/r/haskell/comments/t5ts7w/applicatives_should_usually_implement_semigroup/,{},t5ts7w,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t5ts7w/applicatives_should_usually_implement_semigroup/,False,,,6,1646320497,1,,True,False,False,haskell,t5_2qh36,69285,public,default,Applicatives should usually implement Semigroup and Monoid,0,[],1.0,https://www.haskellforall.com/2022/03/applicatives-should-usually-implement.html,all_ads,6,,,https://www.haskellforall.com/2022/03/applicatives-should-usually-implement.html,,,,,,,,,,,,,,,,,
171.0,[],False,andrewthad,,[],,text,t2_j765z,False,False,False,[],False,False,1646314952,github.com,https://www.reddit.com/r/haskell/comments/t5ruqp/lowperformance_loops_in_ghc/,{},t5ruqp,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t5ruqp/lowperformance_loops_in_ghc/,False,link,"{'enabled': False, 'images': [{'id': 'MhxgZg4oy6izmxnq2o8UYQx1qH-InD7j4uG0tPwb0Mg', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c8aee23eb65e6d79dc16a7df0a20424c178c355e', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=867c93cddd10dca9a7ed7a2bd5522813accb5dfa', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=98c03dee0b4c96ea87a99f640bbc8ea6a50696cb', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e533481c4fe7c848c486097bd158d2aadf22bb77', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=9942965072eb46bfd772bdc487bc5b7dcfbe50fd', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ff3fb7f5ca3b7e97aff0ce736f375fe607452987', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?auto=webp&amp;s=b5d58c342fb767082d4c4786d600ca85ff4f9184', 'width': 1200}, 'variants': {}}]}",6,1646314962,1,,True,False,False,haskell,t5_2qh36,69285,public,default,Low-Performance Loops in GHC,0,[],1.0,https://github.com/andrewthad/journal/blob/master/entries/2022-03-02.md,all_ads,6,,,https://github.com/andrewthad/journal/blob/master/entries/2022-03-02.md,70.0,140.0,,,,,,,,,,,,,,,
172.0,[],False,Snickers_B,,[],,text,t2_j7bjped7,False,False,False,[],False,False,1646275976,chester-beard.medium.com,https://www.reddit.com/r/haskell/comments/t5hbub/so_im_trying_to_explain_the_haskell_type_system/,{},t5hbub,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t5hbub/so_im_trying_to_explain_the_haskell_type_system/,False,link,"{'enabled': False, 'images': [{'id': 'IB6RjoeciokSbzhaQRaB2ATYMoGKlBwsRkV3mvsb1Eo', 'resolutions': [{'height': 71, 'url': 'https://external-preview.redd.it/KJ7JkWYPVlWskClD76-yirfdFALoS_Mv-t85gIXzgdk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7b258f0db45874c9b8d019e566a770844b438aa6', 'width': 108}, {'height': 143, 'url': 'https://external-preview.redd.it/KJ7JkWYPVlWskClD76-yirfdFALoS_Mv-t85gIXzgdk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d7e4a50b59859cf35e7e19a2a7bcebeabcdc534b', 'width': 216}, {'height': 213, 'url': 'https://external-preview.redd.it/KJ7JkWYPVlWskClD76-yirfdFALoS_Mv-t85gIXzgdk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=33ae80993074810f98bf9961bd0f8c6e60b836ad', 'width': 320}, {'height': 426, 'url': 'https://external-preview.redd.it/KJ7JkWYPVlWskClD76-yirfdFALoS_Mv-t85gIXzgdk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ccf90c4791e6c371abdae2c774ba329fcdbf5299', 'width': 640}, {'height': 639, 'url': 'https://external-preview.redd.it/KJ7JkWYPVlWskClD76-yirfdFALoS_Mv-t85gIXzgdk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=f31e03c54e1d80b73bedfda1e16b60abd4c107d0', 'width': 960}, {'height': 719, 'url': 'https://external-preview.redd.it/KJ7JkWYPVlWskClD76-yirfdFALoS_Mv-t85gIXzgdk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c661dd68b624ab6279797071fd17e3783493d69c', 'width': 1080}], 'source': {'height': 799, 'url': 'https://external-preview.redd.it/KJ7JkWYPVlWskClD76-yirfdFALoS_Mv-t85gIXzgdk.jpg?auto=webp&amp;s=db64b4145b79f168e652e7710810c436d51e2b14', 'width': 1200}, 'variants': {}}]}",6,1646275987,1,,True,False,False,haskell,t5_2qh36,69284,public,default,So I'm trying to explain the Haskell type system. If anyone has time to give a read and feedback I'd love it. thanks,0,[],1.0,https://chester-beard.medium.com/beginning-haskell-type-system-part-1-198b2bb42d9e,all_ads,6,,,https://chester-beard.medium.com/beginning-haskell-type-system-part-1-198b2bb42d9e,93.0,140.0,,,,,,,,,,,,,,,
173.0,[],False,Snickers_B,,[],,text,t2_j7bjped7,False,False,False,[],False,False,1646275822,self.haskell,https://www.reddit.com/r/haskell/comments/t5ha28/beginning_haskell_type_system_part_1/,{},t5ha28,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t5ha28/beginning_haskell_type_system_part_1/,False,,,6,1646275832,1,So I think I have the explanation down. It seems to be missing a big piece though. Would love feedback on this if you feel like it. Thanks,True,False,False,haskell,t5_2qh36,69284,public,self,"Beginning Haskell Type System, part 1",0,[],1.0,https://www.reddit.com/r/haskell/comments/t5ha28/beginning_haskell_type_system_part_1/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
174.0,[],False,AugmenTab,,[],,text,t2_ehyyu,False,False,False,[],False,False,1646255553,self.haskell,https://www.reddit.com/r/haskell/comments/t5acdh/is_there_a_way_to_detect_if_im_running_in_the_repl/,{},t5acdh,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t5acdh/is_there_a_way_to_detect_if_im_running_in_the_repl/,False,,,6,1646255564,1,"I'm looking to see if there's a way to detect if the program is running in the REPL, and change its export behavior if so. This is for a custom Prelude that will only export functions from \`Debug.Trace\` if the program is running in the REPL, so they don't accidentally get included in a production deployment. Is there any way to accomplish this?",True,False,False,haskell,t5_2qh36,69279,public,self,Is there a way to detect if I'm running in the REPL?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t5acdh/is_there_a_way_to_detect_if_im_running_in_the_repl/,all_ads,6,,,,,,,,,,,,,,,,,,,,
175.0,[],False,01l101l10l10l10,,[],,text,t2_sip76,False,False,False,[],False,False,1646218290,self.haskell,https://www.reddit.com/r/haskell/comments/t4xlhb/job_op/,{},t4xlhb,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t4xlhb/job_op/,False,self,"{'enabled': False, 'images': [{'id': 'v0CVknjkjM7kqEDwOdGcbKeu2wE-iZEvbdRm0p5_ezk', 'resolutions': [{'height': 117, 'url': 'https://external-preview.redd.it/vZ1hqbkn4fwHDdBmbLwFupGbgwMKfgwS5Zpd9alBijc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=45dd4d114814097d870c4dd8466c5838b9dacd8d', 'width': 108}], 'source': {'height': 139, 'url': 'https://external-preview.redd.it/vZ1hqbkn4fwHDdBmbLwFupGbgwMKfgwS5Zpd9alBijc.jpg?auto=webp&amp;s=7ecd9810bcc6637f72d25db77a8dbd5c3a616e8b', 'width': 128}, 'variants': {}}]}",6,1646218301,1,"Morning Reddit, we’re hiring Haskell engineers.  

As a caveat, there is a blockchain / web3 / decentralized layer to what we’re doing. We know that this is contentious for many in the community. So for those with reservations, we understand, however, we think this use-case is legit.  

Ping me if you’ve got questions and feel free to apply below. 


https://functional.works-hub.com/jobs/remote-fullstack-software-engineer-haskell-c2f",True,False,False,haskell,t5_2qh36,69273,public,self,Job Op,0,[],1.0,https://www.reddit.com/r/haskell/comments/t4xlhb/job_op/,all_ads,6,b0bce6c2-2a63-11eb-b9a5-0eb5aa8d3dc9,blockchain,,,,,,,,,,,,,,,,,,
176.0,[],False,Anusrudh,,[],,text,t2_121dq0h,False,False,False,[],False,False,1646208969,self.haskell,https://www.reddit.com/r/haskell/comments/t4vfhc/function_header_help/,{},t4vfhc,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t4vfhc/function_header_help/,False,,,6,1646208980,1,Currently a newb in haskell and was just wondering how is it possible that only one argument seems to be being passed into factorize at the bottom ('factorize 2') but factorize also works with the original input even though 2 arguments dont seem to be explicitly passed. (This function finds the prime factors of an input number),True,False,False,haskell,t5_2qh36,69271,public,self,Function header help,0,[],1.0,https://www.reddit.com/r/haskell/comments/t4vfhc/function_header_help/,all_ads,6,,,,,,,,,,,,,,,,,,,,
177.0,[],False,Copehon,,[],,text,t2_bwmtlhht,False,False,False,[],False,False,1646188723,self.haskell,https://www.reddit.com/r/haskell/comments/t4pi48/should_a_noob_consider_learning_haskell_for_web/,{},t4pi48,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t4pi48/should_a_noob_consider_learning_haskell_for_web/,False,,,6,1646188733,1,"It sounds really silly, I just thought I should ask. Someone told me to but I think they're trolling. More information about my situation [here](https://www.reddit.com/r/AskProgramming/comments/t4nkvd/is_it_really_that_bad_to_learn_php_for_backend/).",True,False,False,haskell,t5_2qh36,69268,public,self,Should a noob consider learning Haskell for web back end?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t4pi48/should_a_noob_consider_learning_haskell_for_web/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
178.0,[],False,isovector,,[],,text,t2_pir4g,False,False,False,[],False,False,1646172327,anchor.fm,https://www.reddit.com/r/haskell/comments/t4jpqq/shae_erisson_by_the_cofree_coffee_cast/,{},t4jpqq,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t4jpqq/shae_erisson_by_the_cofree_coffee_cast/,False,link,"{'enabled': False, 'images': [{'id': 'tfPgG1gjOoldrPWSAu8XAz2_Vl6SDKrQYEU8OZolbLI', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/K0P_mwHbjFko3gkV4bFiHcy1GogaLfkn8Ihkl5Ozs-Q.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=64709dd4cc6f17f7cd3ec2868902bbf4278489fd', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/K0P_mwHbjFko3gkV4bFiHcy1GogaLfkn8Ihkl5Ozs-Q.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=956462d6a02e4598a8ffda12424dfcac4e7550b6', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/K0P_mwHbjFko3gkV4bFiHcy1GogaLfkn8Ihkl5Ozs-Q.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=64c556ebe6a94eecb2cc25ae735ba5154417679a', 'width': 320}], 'source': {'height': 400, 'url': 'https://external-preview.redd.it/K0P_mwHbjFko3gkV4bFiHcy1GogaLfkn8Ihkl5Ozs-Q.jpg?auto=webp&amp;s=1d1749614bbbde90722e24975240eff71f5608f4', 'width': 400}, 'variants': {}}]}",6,1646172338,1,,True,False,False,haskell,t5_2qh36,69259,public,default,Shae Erisson by The Cofree Coffee Cast,0,[],1.0,https://anchor.fm/cofree-coffee/episodes/Shae-Erisson-e1f3o16,all_ads,6,,,https://anchor.fm/cofree-coffee/episodes/Shae-Erisson-e1f3o16,140.0,140.0,,,,,,,"{'oembed': {'author_name': 'Shae Erisson by The Cofree Coffee Cast', 'description': 'In which Shae discusses the power of names, doing things that need to be done, organizing EuroHaskell, putting together the Monad Reader, where to get permission to build cool things, and the importance of ignorance. In which Reed discusses truth, proof assistants, getting good at math, category theory, inductive types, how to learn, the importance of community, and epistemic humility.', 'height': 102, 'html': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed%2Fepisodes%2FShae-Erisson-e1f3o16&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fepisodes%2FShae-Erisson-e1f3o16&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_episode400%2F21070805%2F21070805-1646172237911-bd5c47b2c06a3.jpg&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'provider_name': 'Anchor FM Inc.', 'provider_url': 'https://anchor.fm', 'thumbnail_height': 400, 'thumbnail_url': 'https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_episode400/21070805/21070805-1646172237911-bd5c47b2c06a3.jpg', 'thumbnail_width': 400, 'title': 'Shae Erisson by The Cofree Coffee Cast', 'type': 'rich', 'version': '1.0', 'width': 400}, 'type': 'anchor.fm'}","{'content': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed%2Fepisodes%2FShae-Erisson-e1f3o16&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fepisodes%2FShae-Erisson-e1f3o16&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_episode400%2F21070805%2F21070805-1646172237911-bd5c47b2c06a3.jpg&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'height': 102, 'scrolling': False, 'width': 400}","{'oembed': {'author_name': 'Shae Erisson by The Cofree Coffee Cast', 'description': 'In which Shae discusses the power of names, doing things that need to be done, organizing EuroHaskell, putting together the Monad Reader, where to get permission to build cool things, and the importance of ignorance. In which Reed discusses truth, proof assistants, getting good at math, category theory, inductive types, how to learn, the importance of community, and epistemic humility.', 'height': 102, 'html': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed%2Fepisodes%2FShae-Erisson-e1f3o16&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fepisodes%2FShae-Erisson-e1f3o16&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_episode400%2F21070805%2F21070805-1646172237911-bd5c47b2c06a3.jpg&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'provider_name': 'Anchor FM Inc.', 'provider_url': 'https://anchor.fm', 'thumbnail_height': 400, 'thumbnail_url': 'https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_episode400/21070805/21070805-1646172237911-bd5c47b2c06a3.jpg', 'thumbnail_width': 400, 'title': 'Shae Erisson by The Cofree Coffee Cast', 'type': 'rich', 'version': '1.0', 'width': 400}, 'type': 'anchor.fm'}","{'content': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed%2Fepisodes%2FShae-Erisson-e1f3o16&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fepisodes%2FShae-Erisson-e1f3o16&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_episode400%2F21070805%2F21070805-1646172237911-bd5c47b2c06a3.jpg&amp;key=2aa3c4d5f3de4f5b9120b660ad850dc9&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'height': 102, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/t4jpqq', 'scrolling': False, 'width': 400}",,,,,
179.0,[],False,just_CHILLI,,[],,text,t2_7wtvyrka,False,False,False,[],False,False,1646164350,self.haskell,https://www.reddit.com/r/haskell/comments/t4gmev/is_it_possible_to_code_in_haskell_language_on_the/,{},t4gmev,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t4gmev/is_it_possible_to_code_in_haskell_language_on_the/,False,,,6,1646164360,1,,True,False,False,haskell,t5_2qh36,69258,public,self,Is it possible to code in haskell language on the new M1 macs .,0,[],1.0,https://www.reddit.com/r/haskell/comments/t4gmev/is_it_possible_to_code_in_haskell_language_on_the/,all_ads,6,,,,,,,,,,,,,,,,,,,,
180.0,[],False,mostlikelynotarobot,,[],,text,t2_l2il9,False,False,False,[],False,False,1646158179,i.redd.it,https://www.reddit.com/r/haskell/comments/t4e81s/finally_starting_to_learn_haskell_what_a/,{},t4e81s,False,False,False,False,True,False,False,False,#646d73,[],light,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/t4e81s/finally_starting_to_learn_haskell_what_a/,False,image,"{'enabled': True, 'images': [{'id': 'WMdwFKqIrfVym4DS5yBDXxDqyc7TNAXzkVc4Ls6VdSs', 'resolutions': [{'height': 80, 'url': 'https://preview.redd.it/pkovpj8obtk81.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=8b210200ba100e6b90ebc21c3b2ab2e973b31e55', 'width': 108}, {'height': 161, 'url': 'https://preview.redd.it/pkovpj8obtk81.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=9722b379836fb2f23ffd14c9d0044c6132bcd505', 'width': 216}, {'height': 239, 'url': 'https://preview.redd.it/pkovpj8obtk81.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=94bd45f1e7fa64889a3b26c54bd700eb2136af10', 'width': 320}, {'height': 478, 'url': 'https://preview.redd.it/pkovpj8obtk81.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=7e712153b39c869d970130b55811c829d05810ef', 'width': 640}, {'height': 717, 'url': 'https://preview.redd.it/pkovpj8obtk81.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=daafbf5303d2a26ff0cb65613d1b572a51ccc1a2', 'width': 960}, {'height': 806, 'url': 'https://preview.redd.it/pkovpj8obtk81.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=fee80c5dea2cd1142ce45af267a60d1025e4a31e', 'width': 1080}], 'source': {'height': 1039, 'url': 'https://preview.redd.it/pkovpj8obtk81.png?auto=webp&amp;s=7a828d44c67a68d3a58148e70b005819557cb8b0', 'width': 1391}, 'variants': {}}]}",6,1646158190,1,,True,False,False,haskell,t5_2qh36,69257,public,image,Finally starting to learn Haskell. What a beautiful language.,0,[],1.0,https://i.redd.it/pkovpj8obtk81.png,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,https://i.redd.it/pkovpj8obtk81.png,104.0,140.0,,moderator,,,,,,,,,,,,,
181.0,[],False,oskargreda,,[],,text,t2_fi2s2co8,False,False,False,[],False,False,1646148493,self.haskell,https://www.reddit.com/r/haskell/comments/t4aghq/mlabs_is_hiring_100_remote_haskellers_fully/,{},t4aghq,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t4aghq/mlabs_is_hiring_100_remote_haskellers_fully/,False,,,6,1646148505,1,"We are one of the leading Haskell consultancies in the fintech, blockchain and AI space, with a passion for Haskell and open source software. We are looking for a remote Haskeller to join our team.

If you are excited about Haskell, about robust and clean software and are up for a new challenge, you’ve come to the right place!

We have Haskell developer roles from Junior to Senior, as well as roles in Delivery Management.

**As a Haskell Developer your role may include:**  


\- Building and testing smart contracts, traditional applications

\- Helping to define best practices with new application architectures

\- Building tools and libraries to support application development

\- Working in emerging technologies

\- For Senior and Intermediates: Systems Design, Formal Verification, Security and Performance analysis.

**As a Delivery Manager your role may include:**

\- Research and design of financial protocols

\- Providing continuity of care to customers across product lifecycles

\- Escalating issues that arise beyond the scope of a single project/department/client scope

\- Steering products toward MVP, delivery targets, audit-readiness and getting required resources in place to do so.

#### Requirements

* Strong Haskell skills
* Strong software engineering and architecture skills
* Strong problem solving and analytical skills
* Basic knowledge of security, concurrency, backend systems, system scaling and databases
* Version control (git)
* Strong verbal skills in English
* Experience with blockchain, smart contracts, compilers, nix and/or purescript is a bonus

#### Benefits

* Focus on learning and individual growth in Haskell and Computer Science
* Work with other great Haskellers, open source contributors and computer scientists
* Interesting and challenging projects
* Talk with anyone in the organization, regardless of team
* Remote work
* Flexible working hours
* 6 weeks of paid vacation
* Competitive salary

We have a variety of projects to work on at any time, ranging from payment stacks to smart contracts and blockchain to open source libraries, DSLs and compilers.

Check out our website here: [https://mlabs.city/](https://mlabs.city/)

If you like Haskell and challenging projects, MLabs is the place for you, so please apply now via: [https://apply.workable.com/mlabs/j/63DAAA4AEF/](https://apply.workable.com/mlabs/j/63DAAA4AEF/)

If you want to apply for a paid internship position please apply by forwarding your CV to oskar@mlabs.city",True,False,False,haskell,t5_2qh36,69255,public,self,MLabs is Hiring 100% remote Haskellers! (Fully Remote Haskell Internships positions also available),0,[],1.0,https://www.reddit.com/r/haskell/comments/t4aghq/mlabs_is_hiring_100_remote_haskellers_fully/,all_ads,6,,,,,,,,,,,,,,,,,,,,
182.0,[],False,Tekmo,,[],,text,t2_2678l,False,False,False,[],False,False,1646147383,haskellforall.com,https://www.reddit.com/r/haskell/comments/t4a1d4/what_is_a_monad_morphism_in_haskell/,{},t4a1d4,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t4a1d4/what_is_a_monad_morphism_in_haskell/,False,,,6,1646147393,1,,True,False,False,haskell,t5_2qh36,69255,public,default,What is a monad morphism (in Haskell)?,0,[],1.0,https://www.haskellforall.com/2022/02/what-is-monad-morphism-in-haskell.html,all_ads,6,,,https://www.haskellforall.com/2022/02/what-is-monad-morphism-in-haskell.html,,,,,,,,,,,,,,,,,
183.0,[],False,puhlovie,,[],,text,t2_7w2z6o3k,False,False,False,[],False,False,1646117557,self.haskell,https://www.reddit.com/r/haskell/comments/t41sr6/how_to_apply_a_function_to_each_element_in_a_list/,{},t41sr6,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t41sr6/how_to_apply_a_function_to_each_element_in_a_list/,False,,,6,1646117568,1,"Let's say I have a list of lists \[\[a\]\] and I have a function called func which I want to apply to each element 'a'. I'm having trouble creating the final function.

I know that map helps you apply a function to a list. How do we work with a list of lists?

(Apologies, I'm new to Haskell)",True,False,False,haskell,t5_2qh36,69253,public,self,How to apply a function to each element in a list of list?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t41sr6/how_to_apply_a_function_to_each_element_in_a_list/,all_ads,6,,,,,,,,,,,,,,,,,,,,
184.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1646110877,self.haskell,https://www.reddit.com/r/haskell/comments/t3zw0x/monthly_hask_anything_march_2022/,{},t3zw0x,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/t3zw0x/monthly_hask_anything_march_2022/,False,,,6,1646110887,1,"This is your opportunity to ask any questions you feel don't deserve their own threads, no matter how small or simple they might be!",False,False,True,haskell,t5_2qh36,69253,public,self,Monthly Hask Anything (March 2022),0,[],1.0,https://www.reddit.com/r/haskell/comments/t3zw0x/monthly_hask_anything_march_2022/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': 'f998970b-a622-480a-aed4-f8d9ad64ee7b', 'created_at_utc': 1612270088.064, 'description': '', 'display_layout': None, 'last_update_utc': 1646110877.243, 'link_ids': ['t3_laur0s', 't3_m0f2y9', 't3_mj7kv5', 't3_n2s8yk', 't3_nqjp2c', 't3_ocz5s5', 't3_p2r52v', 't3_pfxgd4', 't3_pzy3py', 't3_qksh4o', 't3_r6dnmn', 't3_rtbzbl', 't3_shmn9z', 't3_t3zw0x'], 'permalink': 'https://www.reddit.com/r/haskell/collection/f998970b-a622-480a-aed4-f8d9ad64ee7b', 'subreddit_id': 't5_2qh36', 'title': 'Hask Anything'}]",,
185.0,[],False,Fish_45,,[],,text,t2_3f2j6fr7,False,False,False,[],False,False,1646109792,self.haskell,https://www.reddit.com/r/haskell/comments/t3zk03/help_with_dp_algorithm_performance/,{},t3zk03,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t3zk03/help_with_dp_algorithm_performance/,False,self,"{'enabled': False, 'images': [{'id': 'HNhd8nSq4wRlRrtY-f3hL8cKVeOC2gJnKom_VAVKsRs', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/tXvijwwFxCX0a15P4TBVcjNGfcjbSsOvzhSQ5vJRemk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6035330b991d43e5cad341b6476373562ac732c7', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/tXvijwwFxCX0a15P4TBVcjNGfcjbSsOvzhSQ5vJRemk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e2049b361f10fde48bac3dbde534e9bd3fd21c1e', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/tXvijwwFxCX0a15P4TBVcjNGfcjbSsOvzhSQ5vJRemk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e55061e59d969fe560035dff83321ff2ef18a3ef', 'width': 320}], 'source': {'height': 601, 'url': 'https://external-preview.redd.it/tXvijwwFxCX0a15P4TBVcjNGfcjbSsOvzhSQ5vJRemk.jpg?auto=webp&amp;s=b9924757a4c60701cb0b0f223b21781f48db2cad', 'width': 601}, 'variants': {}}]}",6,1646109803,1,"Hi, I have this function which solves this problem: https://purdue.kattis.com/problems/trainsorting. solve is the naive recursive version and solve' is the DP version. I used [the method shown on the Haskell wiki](https://wiki.haskell.org/Dynamic_programming_example) to construct the DP matrix. 

The algorithm works, but its runtime scales with the bounds of the matrix, so it takes a prohibitively long time with bounds higher than 1000 or so. I don't understand why though, since I can tell by the trace that it only calculates the required elements. My first thought is that it has to preallocate the array, but I tried it with a `Data.Map` as well for the same result.

Any explanation is appreciated

    solve :: [Int] -&gt; (Int, Int) -&gt; Int
    solve [] train = 0
    solve (x:xs) train@(front, back) = max (solve xs train) solveAdded
        where solveAdded
                | front == 0 || x &lt; front = 1 + solve xs (x, back)
                | back == 0  || x &gt; back  = 1 + solve xs (front, x)
                | otherwise = 0

    solve' :: Int -&gt; [Int] -&gt; Int
    solve' n trains = dp!(0, 0, 0)
        where dp = listArray 
                    ((0,0,0),(n-1,10000,10000)) 
                    [f train front back | train &lt;- [0..n-1], front &lt;- [0..10000], back &lt;- [0..10000]]
              f train front back
                | train == n - 1 = if train &lt; front || train &gt; back then 1 else 0
                | otherwise = trace (show (train, front, back)) $ max (dp!(train+1,front,back)) (solveAdded train front back)
              solveAdded train front back
                | front == 0 || (trainArr!train) &lt; front = 1 + (dp!(train+1,train,back))
                | back == 0 || (trainArr!train) &gt; back = 1 + (dp!(train+1,front,train))
                | otherwise = 0
              trainArr = listArray (0,n-1) trains :: Array Int Int",True,False,False,haskell,t5_2qh36,69251,public,self,Help with DP algorithm performance,0,[],1.0,https://www.reddit.com/r/haskell/comments/t3zk03/help_with_dp_algorithm_performance/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
186.0,[],False,Different-Maximum688,,[],,text,t2_7vjfxsm6,False,False,False,[],False,False,1646101595,self.haskell,https://www.reddit.com/r/haskell/comments/t3wumj/asyncawait_is_really_just_a_subset_of_monads_and/,{},t3wumj,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t3wumj/asyncawait_is_really_just_a_subset_of_monads_and/,False,,,6,1646101605,1,Using Haskell has made me think about imperative languages differently. An interesting thing to think about is that the “async/await” patterns of these languages mirror monad patterns in Haskell with do-notation. The “await” keyword with “var x = await …” is just like “x &lt;- …” in Haskell. And Future is really just a monadic type! Perhaps one day we’ll see an imperative language implement true monads and do asynchrony in terms of them.,True,False,False,haskell,t5_2qh36,69251,public,self,Async/Await is really just a subset of monads and do-notation for imperative languages,0,[],1.0,https://www.reddit.com/r/haskell/comments/t3wumj/asyncawait_is_really_just_a_subset_of_monads_and/,all_ads,6,,,,,,,,,,,,,,,,,,,,
187.0,[],False,MightyElemental,,[],,text,t2_1hnwg2k3,False,False,False,[],False,False,1646084420,self.haskell,https://www.reddit.com/r/haskell/comments/t3qq0i/haskell_language_server_is_broken_after_vscode/,{},t3qq0i,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t3qq0i/haskell_language_server_is_broken_after_vscode/,False,,,6,1646084431,1,"I have Haskell installed via GHCup and it works just fine in the command prompt. The trouble is VSCode integration. It worked previously, but after updating to vscode version 1.64.2, HLS stopped working with error `libHSghc-prim-0.7.0.so: cannot open shared object file: No such file or directory`  


I've tried reinstalling/updating GHC and HLS but the issue remains. I couldn't find any information about this issue and was hoping someone else could assist.

GHC version - 9.2.1

HLS version - 1.6.1.0",True,False,False,haskell,t5_2qh36,69249,public,self,Haskell Language Server is broken after VSCode update,0,[],1.0,https://www.reddit.com/r/haskell/comments/t3qq0i/haskell_language_server_is_broken_after_vscode/,all_ads,6,,,,,,,,,,,,,,,,,,,,
188.0,[],False,serras,,[],,text,t2_5tjnr,False,False,False,[],False,False,1646082902,leanpub.com,https://www.reddit.com/r/haskell/comments/t3q56j/first_beta_release_of_haskell_almost_standard/,{},t3q56j,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t3q56j/first_beta_release_of_haskell_almost_standard/,False,link,"{'enabled': False, 'images': [{'id': 'bF7Jh1Sb5uUPbatZldWmQkNicbmLz7T9Gs1hQVYBnk4', 'resolutions': [{'height': 76, 'url': 'https://external-preview.redd.it/FV2Zfi2nQzG5FAQ8slADFxDppikfV739XQnRiIXQTNg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5f015f6282cff9b84a3a51ee51fbe94a950b42e5', 'width': 108}], 'source': {'height': 141, 'url': 'https://external-preview.redd.it/FV2Zfi2nQzG5FAQ8slADFxDppikfV739XQnRiIXQTNg.jpg?auto=webp&amp;s=7a0b5280d747bda52dd6e927cbc56d8e43c498d7', 'width': 200}, 'variants': {}}]}",6,1646082912,1,,True,False,False,haskell,t5_2qh36,69250,public,default,"First beta release of ""Haskell (Almost) Standard Libraries""",0,[],1.0,https://leanpub.com/haskell-stdlibs/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://leanpub.com/haskell-stdlibs/,98.0,140.0,,,,,,,,,,,,,,,
189.0,[],False,gcross,,[],,text,t2_572z0,False,False,True,[],False,False,1646071218,self.haskell,https://www.reddit.com/r/haskell/comments/t3ll6v/favorite_package_for_using_free_monads_to/,{},t3ll6v,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t3ll6v/favorite_package_for_using_free_monads_to/,False,,,6,1646071228,1,"In the past I've played with using free monads to implement EDSL via the [operational](https://hackage.haskell.org/package/operational) package, but it's been a few years and I would imagine that the ecosystem has evolved since then!

What is your current favorite package for using free monads (either directly or in the spirit of) to implement EDSLs?",True,False,False,haskell,t5_2qh36,69245,public,self,Favorite package for using free monads to implement EDSLs?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t3ll6v/favorite_package_for_using_free_monads_to/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
190.0,[],False,cog1tar3,,[],,text,t2_14o50t6f,False,False,False,[],False,False,1646067396,self.haskell,https://www.reddit.com/r/haskell/comments/t3k3yu/using_haskell_as_a_security_engineer/,{},t3k3yu,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/t3k3yu/using_haskell_as_a_security_engineer/,False,,,6,1646067406,1,"Does anyone currently know of anything relating to using Haskell as a secueity engineer? Application, best practices. Possibly outlooks on the future of Haskell for developing secure systems?",True,False,False,haskell,t5_2qh36,69243,public,self,Using Haskell as a security engineer,0,[],1.0,https://www.reddit.com/r/haskell/comments/t3k3yu/using_haskell_as_a_security_engineer/,all_ads,6,,,,,,,,,,,,,,,,,,,,
191.0,[],False,saylu,,[],,text,t2_103k18,False,False,False,[],False,False,1646065585,surveyhero.com,https://www.reddit.com/r/haskell/comments/t3jfwk/purescript_inaugural_annual_survey/,{},t3jfwk,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/t3jfwk/purescript_inaugural_annual_survey/,False,,,6,1646065595,1,,True,False,False,haskell,t5_2qh36,69243,public,default,PureScript Inaugural Annual Survey,0,[],1.0,https://surveyhero.com/c/wzajwjpd,all_ads,6,,,https://surveyhero.com/c/wzajwjpd,,,,,,,,,,,,,,,,,
192.0,[],False,jumpy_flamingo,,[],,text,t2_hhyrtamq,False,False,False,[],False,False,1646063587,self.haskell,https://www.reddit.com/r/haskell/comments/t3ioxc/question_on_using_prettyprinter_with_the_state/,{},t3ioxc,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t3ioxc/question_on_using_prettyprinter_with_the_state/,False,,,6,1646063598,1,"Hello all! I'm currently implementing a source code formatter using prettyprinter and ran into a situation that I can't get over.

The assembly of the `Doc` is performed in the context of a state Monad, as I need to keep track of some state as I go on:

```
type StateDoc = State MyState (Doc ())
```

This works fine, I have individual functions that assemble different parts of the document:

```
fortmatPartA :: DataA -&gt; StateDoc
fortmatPartB :: DataB -&gt; StateDoc
fortmatPartC :: DataC -&gt; StateDoc
```
It the end when I put the document together, parts A, B and C are to be arranged on top of each other vertically:

`vsep &lt;$&gt; sequence [formatPartA dataA, formatPartB dataB, formatPartC dataC]`

Now the problem that I'm having is that `formatPartB` and `formatPartC` can return an `emptyDoc`, which can result in something like `[PartADoc, emptyDoc, PartBDoc]`. This is a problem because `emptyDoc`s have a height of 1 and will introduce an unwanted newline in the final document. I would like to completely ignore the part of the document if it returns `emptyDoc`.

Does someone have an idea of how I can achieve this?

I thought about not using `emptyDoc` at all, but `Maybe` instead:

`formatPartB :: DataB -&gt; State MyState (Maybe (Doc ()))`

but how could I implement the ""excluding"" logic that ignores the `Nothing`s? Is there something like a `mapMaybe` or `catMaybe` for Monads? Maybe I'm missing something obvious.

Thanks a lot for your help and happy haskelling :)",True,False,False,haskell,t5_2qh36,69243,public,self,Question on using prettyprinter with the State Monad,0,[],1.0,https://www.reddit.com/r/haskell/comments/t3ioxc/question_on_using_prettyprinter_with_the_state/,all_ads,6,,,,,,,,,,,,,,,,,,,,
193.0,[],False,DonbasNash,,[],,text,t2_k2o8scxv,False,False,False,[],False,False,1646018161,self.haskell,https://www.reddit.com/r/haskell/comments/t35gb6/any_experience_with_teaching_or_learning_haskell/,{},t35gb6,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t35gb6/any_experience_with_teaching_or_learning_haskell/,False,,,6,1646018171,1,"More specifically:

* Why did you choose Haskell?
* What curriculum, books or tutorials did you use?
* What goals did you have in mind?
* What was harder than anticipated?
* What was easier than anticipated?
* How did the experience compare to other choices of first programming language, such as Java, Python, Javascript, Scratch, Scheme or Racket?",True,False,False,haskell,t5_2qh36,69237,public,self,Any experience with teaching (or learning) Haskell as a first programming language?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t35gb6/any_experience_with_teaching_or_learning_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
194.0,[],False,dany2aa,,[],,text,t2_181oeqs2,False,False,False,[],False,False,1645998576,twitter.com,https://www.reddit.com/r/haskell/comments/t2ys4r/hey_rhaskell_devs_hackers_start_war_on_russia_are/,{},t2ys4r,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t2ys4r/hey_rhaskell_devs_hackers_start_war_on_russia_are/,False,link,"{'enabled': False, 'images': [{'id': 'ovqwDOpWS2jNzbVIZ79aADeuOsFTeEhGdteYffBL4Kc', 'resolutions': [{'height': 60, 'url': 'https://external-preview.redd.it/fD40Y0qy02JMuNrr90Lyr1l6VCLQcKbsmMtcfAU4LEc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8812544c8cc34704f12611b3ea867b47b9ac8d67', 'width': 108}], 'source': {'height': 78, 'url': 'https://external-preview.redd.it/fD40Y0qy02JMuNrr90Lyr1l6VCLQcKbsmMtcfAU4LEc.jpg?auto=webp&amp;s=760fa20ebf0451475b46b6af6873a310d3c24e09', 'width': 140}, 'variants': {}}]}",6,1645998587,1,,True,False,False,haskell,t5_2qh36,69234,public,default,"Hey r/haskell devs , 🇺🇦🔥 Hackers start war on Russia, are you in? #FckPutin",0,[],1.0,https://twitter.com/HackenProof/status/1497891585727602693,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://twitter.com/HackenProof/status/1497891585727602693,78.0,140.0,,reddit,,,,,"{'oembed': {'author_name': 'HackenProof🇺🇦', 'author_url': 'https://twitter.com/HackenProof', 'cache_age': 3153600000, 'height': None, 'html': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;🇺🇦🔥HACKERS START WAR ON RUSSIA&lt;br&gt;show the dictator what you think about invading Ukraine and shooting children.&lt;br&gt;hunt every vulnerability in Russian infra and media and report to us (or exploit and report to show Ukraine your support).&lt;a href=""https://t.co/J5eunfkdbd""&gt;https://t.co/J5eunfkdbd&lt;/a&gt;&lt;a href=""https://twitter.com/hashtag/StandWithUkraine?src=hash&amp;amp;ref_src=twsrc%5Etfw""&gt;#StandWithUkraine&lt;/a&gt; &lt;a href=""https://t.co/jTQe3c38Yv""&gt;pic.twitter.com/jTQe3c38Yv&lt;/a&gt;&lt;/p&gt;&amp;mdash; HackenProof🇺🇦 (@HackenProof) &lt;a href=""https://twitter.com/HackenProof/status/1497891585727602693?ref_src=twsrc%5Etfw""&gt;February 27, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'provider_name': 'Twitter', 'provider_url': 'https://twitter.com', 'type': 'rich', 'url': 'https://twitter.com/HackenProof/status/1497891585727602693', 'version': '1.0', 'width': 350}, 'type': 'twitter.com'}","{'content': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;🇺🇦🔥HACKERS START WAR ON RUSSIA&lt;br&gt;show the dictator what you think about invading Ukraine and shooting children.&lt;br&gt;hunt every vulnerability in Russian infra and media and report to us (or exploit and report to show Ukraine your support).&lt;a href=""https://t.co/J5eunfkdbd""&gt;https://t.co/J5eunfkdbd&lt;/a&gt;&lt;a href=""https://twitter.com/hashtag/StandWithUkraine?src=hash&amp;amp;ref_src=twsrc%5Etfw""&gt;#StandWithUkraine&lt;/a&gt; &lt;a href=""https://t.co/jTQe3c38Yv""&gt;pic.twitter.com/jTQe3c38Yv&lt;/a&gt;&lt;/p&gt;&amp;mdash; HackenProof🇺🇦 (@HackenProof) &lt;a href=""https://twitter.com/HackenProof/status/1497891585727602693?ref_src=twsrc%5Etfw""&gt;February 27, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'height': 200, 'scrolling': False, 'width': 350}","{'oembed': {'author_name': 'HackenProof🇺🇦', 'author_url': 'https://twitter.com/HackenProof', 'cache_age': 3153600000, 'height': None, 'html': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;🇺🇦🔥HACKERS START WAR ON RUSSIA&lt;br&gt;show the dictator what you think about invading Ukraine and shooting children.&lt;br&gt;hunt every vulnerability in Russian infra and media and report to us (or exploit and report to show Ukraine your support).&lt;a href=""https://t.co/J5eunfkdbd""&gt;https://t.co/J5eunfkdbd&lt;/a&gt;&lt;a href=""https://twitter.com/hashtag/StandWithUkraine?src=hash&amp;amp;ref_src=twsrc%5Etfw""&gt;#StandWithUkraine&lt;/a&gt; &lt;a href=""https://t.co/jTQe3c38Yv""&gt;pic.twitter.com/jTQe3c38Yv&lt;/a&gt;&lt;/p&gt;&amp;mdash; HackenProof🇺🇦 (@HackenProof) &lt;a href=""https://twitter.com/HackenProof/status/1497891585727602693?ref_src=twsrc%5Etfw""&gt;February 27, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'provider_name': 'Twitter', 'provider_url': 'https://twitter.com', 'type': 'rich', 'url': 'https://twitter.com/HackenProof/status/1497891585727602693', 'version': '1.0', 'width': 350}, 'type': 'twitter.com'}","{'content': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;🇺🇦🔥HACKERS START WAR ON RUSSIA&lt;br&gt;show the dictator what you think about invading Ukraine and shooting children.&lt;br&gt;hunt every vulnerability in Russian infra and media and report to us (or exploit and report to show Ukraine your support).&lt;a href=""https://t.co/J5eunfkdbd""&gt;https://t.co/J5eunfkdbd&lt;/a&gt;&lt;a href=""https://twitter.com/hashtag/StandWithUkraine?src=hash&amp;amp;ref_src=twsrc%5Etfw""&gt;#StandWithUkraine&lt;/a&gt; &lt;a href=""https://t.co/jTQe3c38Yv""&gt;pic.twitter.com/jTQe3c38Yv&lt;/a&gt;&lt;/p&gt;&amp;mdash; HackenProof🇺🇦 (@HackenProof) &lt;a href=""https://twitter.com/HackenProof/status/1497891585727602693?ref_src=twsrc%5Etfw""&gt;February 27, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/t2ys4r', 'scrolling': False, 'width': 350}",,,,,
195.0,[],False,MathResearchProj,,[],,text,t2_k5cqo3m2,False,False,False,[],False,False,1645992168,self.haskell,https://www.reddit.com/r/haskell/comments/t2whh1/mentor_for_mathematics_cs_research_project_for/,{},t2whh1,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t2whh1/mentor_for_mathematics_cs_research_project_for/,False,self,"{'enabled': False, 'images': [{'id': 'OAXSl8SY6T3JK9MGQyKxkoYbqZ71HQRYXLeB8CV0NXg', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d5811c5bda5fece1040636a6af8702ba790f0fd4', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=eee576fd4da7535eb53ceb88dd8b52f073048441', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=72872d880460efa723918c000adca0ed259cf775', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f3545b9335d763c9da9c16bf7bf9a3f907dbd6f6', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2d241ace0f1c07088fac3f8469dbad3b05d2d419', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9055f11bdc00beb0b3589e1cae5817d6070d83bc', 'width': 1080}], 'source': {'height': 640, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?auto=webp&amp;s=079a7260ec149880c73263d64811698adb22760a', 'width': 1280}, 'variants': {}}]}",6,1645992179,1,[removed],True,False,False,haskell,t5_2qh36,69232,public,self,Mentor for Mathematics / CS Research Project for School,0,[],1.0,https://www.reddit.com/r/haskell/comments/t2whh1/mentor_for_mathematics_cs_research_project_for/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,automod_filtered,,,,,,,,,,,,,
196.0,[],False,droidfanatic,,[],,text,t2_fuq8grx,False,False,False,[],False,False,1645943132,self.haskell,https://www.reddit.com/r/haskell/comments/t2hu9c/i_need_help/,{},t2hu9c,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/t2hu9c/i_need_help/,False,,,6,1645943142,1,"I'm brand new to Haskell. I'm not asking for you to do my assignment but I do need help figuring out how to use the language so I can complete my assignment. I might be going about this the absolute wrong way but I've never used a language like this before and I'm getting very lost.  


Assignment:  
 Write a Haskell program that generates the list of all the subsets of the set \[1..n\] that have as many elements as their complements.  
For the set \[1,2,3,4\] the output should look like this:  
\[(\[1,2\],\[3,4\]),

(\[1,3\],\[2,4\]),

(\[1,4\],\[2,3\]),

....\]   


I'm currently creating a list from 1-n where n is 6.  
I'm retrieving all of the subsequences of that list.

    let n = 6
    let set = [1..n]
    
    let ordered = sortWith length $ subsequences set

I don't understand how to only get the list of the length of 3 out of this list of lists. What would be the best way to get the list of that length? Thank you for any input! I believe I can figure out the compliment on my own. I just don't know how to get the certain lists I need.",True,False,False,haskell,t5_2qh36,69223,public,self,I need help.,0,[],1.0,https://www.reddit.com/r/haskell/comments/t2hu9c/i_need_help/,all_ads,6,ebb4b74c-16d0-11eb-9ff6-0e5aacb57bb7,homework,,,,,,,,,,,,,,,,,,
197.0,[],False,Exact_Ad2603,,[],,text,t2_8dqubwnb,False,False,False,[],False,False,1645901172,self.haskell,https://www.reddit.com/r/haskell/comments/t241on/need_some_help_with_a_trivial_function_question/,{},t241on,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t241on/need_some_help_with_a_trivial_function_question/,False,,,6,1645901182,1,"Hi guys,   


I got this function from a tutorial and the compiler shows a warning too.   
How do I make this work?  


Thanks

(&amp;&amp;)::Bool-&gt;Bool-&gt;Bool  
b &amp;&amp; c = b  
\_ &amp;&amp; \_ = False",True,False,False,haskell,t5_2qh36,69218,public,self,Need some help with a trivial function question,0,[],1.0,https://www.reddit.com/r/haskell/comments/t241on/need_some_help_with_a_trivial_function_question/,all_ads,6,,,,,,,,,,,,,,,,,,,,
198.0,[],False,maerwald,,[],,text,t2_t8qgl,False,False,False,[],False,False,1645898294,self.haskell,https://www.reddit.com/r/haskell/comments/t22yl4/ann_ghcup_01175/,{},t22yl4,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t22yl4/ann_ghcup_01175/,False,self,"{'enabled': False, 'images': [{'id': 'VwZqkWsIynKts4dlCTGdVj3YOmkeRuo0AerChUsV-O8', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/sa0I1Aeg8VK9otjVvubsjR4zKMfwA04tx1Zm-pP7LYI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=aa659240f1e29318963ffa34896fbe709df79158', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/sa0I1Aeg8VK9otjVvubsjR4zKMfwA04tx1Zm-pP7LYI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=86867d9defaa258d7d37ffc576e5455a6909e645', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/sa0I1Aeg8VK9otjVvubsjR4zKMfwA04tx1Zm-pP7LYI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3cb25e9190c492a61c4bbc35b7d5680dce79e3fe', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/sa0I1Aeg8VK9otjVvubsjR4zKMfwA04tx1Zm-pP7LYI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=90f6e0dba97082ed781c8d9034a8253d65b33945', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/sa0I1Aeg8VK9otjVvubsjR4zKMfwA04tx1Zm-pP7LYI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=54d31a8c841debc141add453153cb2d9dea6bc3b', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/sa0I1Aeg8VK9otjVvubsjR4zKMfwA04tx1Zm-pP7LYI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d7aee717af366f456ae1149bc84a349277fe85bb', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/sa0I1Aeg8VK9otjVvubsjR4zKMfwA04tx1Zm-pP7LYI.jpg?auto=webp&amp;s=65425ed9201fb43489e4b241a8fb0dbc63d3f03c', 'width': 1200}, 'variants': {}}]}",6,1645898304,1,"## 0.1.17.5

The main motivation of this release is making it compatible with the new binary distribution of HLS, which is upcoming soon and will be a dynamically linked distribution. Also see [https://github.com/haskell/haskell-language-server/issues/2739](https://github.com/haskell/haskell-language-server/issues/2739).

There are some new features and bugfixes too.

## How to upgrade

```
ghcup upgrade
```

Or follow [https://www.haskell.org/ghcup/](https://www.haskell.org/ghcup/) if you haven’t installed yet.

## Changelog

* Implement `ghcup run` subcommand wrt [#137](https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/137)
* Support installation of dynamic HLS bindists wrt [HLS #2675](https://github.com/haskell/haskell-language-server/pull/2675) and [#237](https://gitlab.haskell.org/haskell/ghcup-hs/-/merge_requests/237)
* Fix XDG support when `~/.local/bin` is a symlink wrt [#311](https://gitlab.haskell.org/haskell/ghcup-hs/-/merge_requests/311)
* Add support for quilt-style patches wrt [#230](https://gitlab.haskell.org/haskell/ghcup-hs/-/merge_requests/230), by James Hobson
* Fix redundant upgrade warnings in `ghcup upgrade`
* Fix `ghcup whereis ghc` for non-standard versions wrt [#289](https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/289)
* Don't print logs to stdout, but stderr
* Allow unpacking legacy lzma archives wrt [#307](https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/307)
* Allow to disable self-upgrade functionality wrt [#305](https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/305)
* Fix `ghcup install ghc --set` when ghc is already installed wrt [#291](https://gitlab.haskell.org/haskell/ghcup-hs/-/issues/291)

## FAQ

Before asking questions, consider reading the [FAQ](https://gitlab.haskell.org/haskell/ghcup-hs#faq).",True,False,False,haskell,t5_2qh36,69216,public,self,[ANN] GHCup 0.1.17.5,0,[],1.0,https://www.reddit.com/r/haskell/comments/t22yl4/ann_ghcup_01175/,all_ads,6,,,,,,,,,,,,,,,,,,,,
199.0,[],False,plsdontkillmee,,[],,text,t2_618yhfv3,False,False,False,[],False,False,1645890663,self.haskell,https://www.reddit.com/r/haskell/comments/t2036t/is_there_something_like_sfml_for_haskell/,{},t2036t,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t2036t/is_there_something_like_sfml_for_haskell/,False,,,6,1645890674,1,"I've used sfml before and I really like it, so I'm wondering if there's something simmilar for haskell? thank you.",True,False,False,haskell,t5_2qh36,69215,public,self,Is there something like SFML for haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t2036t/is_there_something_like_sfml_for_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
200.0,[],False,leonadav,,[],,text,t2_ggoql,False,False,False,[],False,False,1645888611,self.haskell,https://www.reddit.com/r/haskell/comments/t1zce1/how_much_has_changed_since_the_publication_of/,{},t1zce1,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/t1zce1/how_much_has_changed_since_the_publication_of/,False,,,6,1645888622,1,,True,False,False,haskell,t5_2qh36,69217,public,self,How much has changed since the publication of Osaki's book about functional data structures?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t1zce1/how_much_has_changed_since_the_publication_of/,all_ads,6,,,,,,,,,,,,,,,,,,,,
201.0,[],False,jappieofficial,,[],,text,t2_1be2hxpi,False,False,False,[],False,False,1645883106,jappie.me,https://www.reddit.com/r/haskell/comments/t1xfid/failing_in_haskell/,{},t1xfid,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t1xfid/failing_in_haskell/,False,,,6,1645883116,1,,True,False,False,haskell,t5_2qh36,69217,public,default,Failing in Haskell,0,[],1.0,https://jappie.me/failing-in-haskell.html,all_ads,6,,,https://jappie.me/failing-in-haskell.html,,,,,,,t3_t1xf0g,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'jappieofficial', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_1be2hxpi', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1645883062.0, 'created_utc': 1645883062.0, 'discussion_type': None, 'distinguished': None, 'domain': 'jappie.me', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 't1xf0g', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': False, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_t1xf0g', 'no_follow': True, 'num_comments': 0, 'num_crossposts': 1, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': None, 'permalink': '/r/jappie/comments/t1xf0g/failing_in_haskell/', 'pinned': False, 'pwls': None, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 1, 'secure_media': None, 'secure_media_embed': {}, 'selftext': '', 'selftext_html': None, 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'jappie', 'subreddit_id': 't5_ive7p', 'subreddit_name_prefixed': 'r/jappie', 'subreddit_subscribers': 19, 'subreddit_type': 'restricted', 'suggested_sort': None, 'thumbnail': 'default', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'Failing in Haskell', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 1, 'upvote_ratio': 1.0, 'url': 'https://jappie.me/failing-in-haskell.html', 'url_overridden_by_dest': 'https://jappie.me/failing-in-haskell.html', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': None, 'wls': None}]",,,,,,,,,
202.0,[],False,dinkandenza,,[],,text,t2_125f8l7u,False,False,False,[],False,False,1645843486,self.haskell,https://www.reddit.com/r/haskell/comments/t1lx75/do_roles_naturally_belong_to_kindlevel_function/,{},t1lx75,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/t1lx75/do_roles_naturally_belong_to_kindlevel_function/,False,,,6,1645843497,1,"At the moment, GHC has some machinery for tracking (annotating and inferring) the roles of parameters to type constructors. Roles and their machinery do not appear to be first class, in that it is not possible to discuss the roles of parameters to higher kinded type variables. This is a bit annoying, because in the absence of the ability to discuss such things one has to explicitly carry around coercion dictionary baggage.

The ""role"" of a parameter roughly encodes the sort of ""equality functor"" the type-level function is. Specifically, the role of some type constructor's parameter determines what kind of equivalence it needs as input in order to produce a representational equivalence as output. If it requires a(n):

- definitional equivalence, the parameter has a nominal role
- representational equivalence, the parameter has a representational role
- codiscrete equivalence, the parameter has a phantom role

So it seems to me that properly speaking, the role actually belongs to the `-&gt;` in the kind of the type constructor in question. Namely we have three different variations:

- ```haskell
  type Nominal :: Type -{NOM}-&gt; Type
  data Nominal x
    where
    Nominal :: Nominal Int
  ```
- ```haskell
  type Representational :: Type -{REP}-&gt; Type
  data Representation x = Representational x
  ```
- ```haskell
  type Phantom :: Type -{FAN}-&gt; Type
  data Phantom x = Phantom
  ```

I imagine similar systems of conventions, notation, and inference could be devised to the ones for linear function arrows (which occur at the type level), so that this is not super painful. Perhaps it is also useful to speak of ""role polymorphism"", although I haven't given this much thought.

What do you folks think? Am I missing something obvious here?",True,False,False,haskell,t5_2qh36,69218,public,self,Do roles naturally belong to kind-level function arrows?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t1lx75/do_roles_naturally_belong_to_kindlevel_function/,all_ads,6,,,,,,,,,,,,,,,,,,,,
203.0,[],False,ysangkok,,[],,text,t2_4qktt,False,False,False,[],False,False,1645842591,github.com,https://www.reddit.com/r/haskell/comments/t1llsr/web_ui_for_viewing_ghc_errors_and_warnings/,{},t1llsr,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t1llsr/web_ui_for_viewing_ghc_errors_and_warnings/,False,link,"{'enabled': False, 'images': [{'id': 'QRRgSslbqNCVPlKhVbjMLWX87uEhP2PtZVKN1kZrWkk', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/cPvCLHz4dcKogJWhBVB9yUtlXOejAuaVJE7013NmEdU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e9ac0e5a5db399c4852074930c638c948a333f7e', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/cPvCLHz4dcKogJWhBVB9yUtlXOejAuaVJE7013NmEdU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=be7aca73f1c1c66ca5a622d63fe62a5451bdd344', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/cPvCLHz4dcKogJWhBVB9yUtlXOejAuaVJE7013NmEdU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1e0e5659dbf3009a9bf843646a66db0967d7ec83', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/cPvCLHz4dcKogJWhBVB9yUtlXOejAuaVJE7013NmEdU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=aa7a121240289703d723fcd39eafb3e0ed700517', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/cPvCLHz4dcKogJWhBVB9yUtlXOejAuaVJE7013NmEdU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=fafc3a519399542f9a2b37d485a02483f2d5ebc4', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/cPvCLHz4dcKogJWhBVB9yUtlXOejAuaVJE7013NmEdU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=4641372aebe00ff81e85675eae54a7cd9adfa551', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/cPvCLHz4dcKogJWhBVB9yUtlXOejAuaVJE7013NmEdU.jpg?auto=webp&amp;s=4f2d18d410855f6c996205ae78437da65f2d321e', 'width': 1200}, 'variants': {}}]}",6,1645842601,1,,True,False,False,haskell,t5_2qh36,69218,public,default,Web UI for viewing GHC errors and warnings,0,[],1.0,https://github.com/aaronallen8455/erriscope,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://github.com/aaronallen8455/erriscope,70.0,140.0,,reddit,,,,,,,,,,,,,
204.0,[],False,repaj,,[],,text,t2_4jo3g32r,False,False,False,[],False,False,1645795611,self.haskell,https://www.reddit.com/r/haskell/comments/t140m0/involving_in_oss_haskell_projects/,{},t140m0,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t140m0/involving_in_oss_haskell_projects/,False,,,6,1645795622,1,"This might be stupid question, but there is any list of projects in which lacks maintainers or just anybody can be involved in?",True,False,False,haskell,t5_2qh36,69208,public,self,Involving in OSS Haskell projects,0,[],1.0,https://www.reddit.com/r/haskell/comments/t140m0/involving_in_oss_haskell_projects/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
205.0,[],False,thetonystark7,,[],,text,t2_42l7lnr,False,False,False,[],False,False,1645794645,self.haskell,https://www.reddit.com/r/haskell/comments/t13pmu/uninstalling_haskell_on_mac/,{},t13pmu,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t13pmu/uninstalling_haskell_on_mac/,False,,,6,1645794655,1,"Could i get some help with uninstalling haskell on mac? I've not used it in a while and so I'm having trouble getting it off my system as I have forgotten much about it.

Any help is appreciated",True,False,False,haskell,t5_2qh36,69208,public,self,Uninstalling Haskell on Mac,0,[],1.0,https://www.reddit.com/r/haskell/comments/t13pmu/uninstalling_haskell_on_mac/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
206.0,[],False,yourdigitalvoice,,[],,text,t2_4fjkjj7g,False,False,False,[],False,False,1645758267,self.haskell,https://www.reddit.com/r/haskell/comments/t0t6h9/interesting_haskell_talks_at_functional_conf/,{},t0t6h9,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t0t6h9/interesting_haskell_talks_at_functional_conf/,False,,,6,1645758278,1," [Functional Conf](https://confng.in/vRLDYeKt) is an online event for anyone using functional programming - whether you're a beginner or advanced. This year features the following Haskell talks:

* Interpret your monads! - Concrete Monads vs Monad classes - AUKE BOOIJ
* Functional Programming patterns for designing modular abstractions - DEBASISH GHOSH
* FP is the new OOP - MICHAEL SNOYMAN
* minitt: ingredients for a dependently typed language - SIDDHARTH BHAT
* Type-hole development - TONY MORRIS

Check out the [conference](https://confng.in/EuHDFblA) if these interest you or you want to explore the wider world of functional programming.",True,False,False,haskell,t5_2qh36,69202,public,self,Interesting Haskell talks at Functional Conf online (24-26 March 2022),0,[],1.0,https://www.reddit.com/r/haskell/comments/t0t6h9/interesting_haskell_talks_at_functional_conf/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
207.0,[],False,stealyoureraser,,[],,text,t2_hy7nmzeb,False,False,False,[],False,False,1645736784,self.haskell,https://www.reddit.com/r/haskell/comments/t0lfbz/parsing_servant_xml_response/,{},t0lfbz,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t0lfbz/parsing_servant_xml_response/,False,,,6,1645736795,1,"I'm trying to parse an Xml response received in a servant api. I have done some xml parsing using xml-conduit but in that scenario it was a static file. 

I'm trying to use servant-xml to set the 'application/xml' content type and then using xmlbf to parse data into my type but unable to access nested elements. 

I'll really appreciate if someone can help me with a simple code snippet for the same. 

Note: the xml contains elements with uppercase names and I'd rather not prefer creating container types.",True,False,False,haskell,t5_2qh36,69203,public,self,Parsing servant xml response,0,[],1.0,https://www.reddit.com/r/haskell/comments/t0lfbz/parsing_servant_xml_response/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
208.0,[],False,howardbgolden,,[],,text,t2_ka8pv,False,False,False,[],False,False,1645726459,self.haskell,https://www.reddit.com/r/haskell/comments/t0hib5/i_care_about_everyone_in_the_haskell_community/,{},t0hib5,False,True,False,True,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t0hib5/i_care_about_everyone_in_the_haskell_community/,False,,,6,1645726470,1,"I hope you won't mind this somewhat off-topic post. It is about the Haskell community, but not technical.

I have been participating in the Haskell community since 2009. In that time I have learned a great deal from Haskellers around the world including Eastern Europe. **I have the greatest wish for the safety of all Haskellers, from all parts of the world. You are all my friends, even though we have only met virtually.**",True,False,False,haskell,t5_2qh36,69201,public,self,I care about everyone in the Haskell community,0,[],1.0,https://www.reddit.com/r/haskell/comments/t0hib5/i_care_about_everyone_in_the_haskell_community/,all_ads,6,,,,,,,,,,,,,,,,,,,,
209.0,[],False,eg0t1stical,,[],,text,t2_60oy56tx,False,False,False,[],False,False,1645723803,self.haskell,https://www.reddit.com/r/haskell/comments/t0gggo/im_trying_to_learn_haskell_on_my_own_but_having/,{},t0gggo,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t0gggo/im_trying_to_learn_haskell_on_my_own_but_having/,False,,,6,1645723814,1,[removed],True,False,False,haskell,t5_2qh36,69201,public,self,"I’m trying to learn Haskell on my own but having some issues. After reading a file of text, how would you then pass that to another function to create a list of strings from that text file? My function for the list is of type: example :: String -&gt; IO()",0,[],1.0,https://www.reddit.com/r/haskell/comments/t0gggo/im_trying_to_learn_haskell_on_my_own_but_having/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
210.0,[],False,Martinsos,,[],,text,t2_bng1b,False,False,False,[],False,False,1645723561,self.haskell,https://www.reddit.com/r/haskell/comments/t0gd7d/do_you_ever_name_your_types_with_verbs_vs_nouns/,{},t0gd7d,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t0gd7d/do_you_ever_name_your_types_with_verbs_vs_nouns/,False,,,6,1645723572,1,"Let's say we have different functions that all build a binary tree from the list of elements:

```hs
data Tree a = ...

f1 :: [a] -&gt; Tree a
f1 = undefined

f2 :: [a] -&gt; Tree a
f2 = undefined

f3 :: [a] -&gt; Tree a
f3 = undefined
```

And let's assume now that I want to introduce a common name for these type of functions. I would want to name their type, and I would also like the functions themselves.

An approach that first comes to my mind is to use a noun when naming it:
```hs
type TreeBuilder a = [a] -&gt; Tree a

treeBuilder1 :: TreeBuilder
treeBuilder1 = undefined

treeBuilder2 :: TreeBuilder
treeBuilder2 = undefined

treeBuilder3 :: TreeBuilder
treeBuilder3 = undefined
```

However, as colleague pointed out, we could instead use a verb:
```hs
type BuildTree a = [a] -&gt; Tree a

buildTree1 :: BuildTree
buildTree1 = undefined

buildTree2 :: BuildTree
buildTree2 = undefined

buildTree3 :: BuildTree
buildTree3 = undefined
```

This, for some reason, felt very unusual to me, as I have always used nouns to name stuff on the type level. On the other hand, I wasn't able to present any strong arguments that would explain why using verbs feels weird to me.

His argumentation was that it makes more sense to name record types with nouns, while it makes sense to name function types with verbs.

Very bluntly, for me, I see it all as items, be they records or functions or smth else, and items are nouns.

--------------------

Another code example is this:
```hs
doStuff :: (String -&gt; IO ()) -&gt; IO ()
doStuff printString = do
  ...
  printString ""foo""
  ...
```

What we are doing here is dependency injecting this function `printString` that enables us to print a string.

Now, I am also injecting it in some other places in the code, also propagating it around, and I wanted to use `type` to make it easier to recognize what is it about.

If we go with noun:
```hs
type StringPrinter = String -&gt; IO ()

doStuff :: StringPrinter -&gt; IO ()
doStuff stringPrinter = do
  ...
  stringPrinter ""foo""
  ...
```

If we go with verb:
```hs
type PrintString = String -&gt; IO ()

doStuff :: PrintString -&gt; IO ()
doStuff printString = do
  ...
  printString ""foo""
  ...
```

In example with noun, I like the name of the type, but name of the function argument doesn't feel so good.

On the other hand, with the verb, it is the opposite, I like the name of the type a bit less, but name of the function argument sounds good.

Although, with this example, I actually feel much better about using verb, `PrintString` doesn't feel that bad as `BuildTree` feels, for some reason.

--------------------

TDLR; So the question is: Do you prefer nouns over verbs when naming types? If so, are there still situations where you find verbs are a good fit?

I am looking for subjective opinions here so feel free to share them, and I would love to hear argumentation for it, if you can argument it.",True,False,False,haskell,t5_2qh36,69201,public,self,Do you ever name your types with verbs (vs nouns)?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t0gd7d/do_you_ever_name_your_types_with_verbs_vs_nouns/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
211.0,[],False,Martinsos,,[],,text,t2_bng1b,False,False,False,[],False,False,1645723547,self.haskell,https://www.reddit.com/r/haskell/comments/t0gd0v/do_you_ever_name_your_types_with_verbs_vs_nouns/,{},t0gd0v,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t0gd0v/do_you_ever_name_your_types_with_verbs_vs_nouns/,False,,,6,1645723557,1,"Let's say we have different functions that all build a binary tree from the list of elements:

```hs
data Tree a = ...

f1 :: [a] -&gt; Tree a
f1 = undefined

f2 :: [a] -&gt; Tree a
f2 = undefined

f3 :: [a] -&gt; Tree a
f3 = undefined
```

And let's assume now that I want to introduce a common name for these type of functions. I would want to name their type, and I would also like the functions themselves.

An approach that first comes to my mind is to use a noun when naming it:
```hs
type TreeBuilder a = [a] -&gt; Tree a

treeBuilder1 :: TreeBuilder
treeBuilder1 = undefined

treeBuilder2 :: TreeBuilder
treeBuilder2 = undefined

treeBuilder3 :: TreeBuilder
treeBuilder3 = undefined
```

However, as colleague pointed out, we could instead use a verb:
```hs
type BuildTree a = [a] -&gt; Tree a

buildTree1 :: BuildTree
buildTree1 = undefined

buildTree2 :: BuildTree
buildTree2 = undefined

buildTree3 :: BuildTree
buildTree3 = undefined
```

This, for some reason, felt very unusual to me, as I have always used nouns to name stuff on the type level. On the other hand, I wasn't able to present any strong arguments that would explain why using verbs feels weird to me.

His argumentation was that it makes more sense to name record types with nouns, while it makes sense to name function types with verbs.

Very bluntly, for me, I see it all as items, be they records or functions or smth else, and items are nouns.

--------------------

Another code example is this:
```hs
doStuff :: (String -&gt; IO ()) -&gt; IO ()
doStuff printString = do
  ...
  printString ""foo""
  ...
```

What we are doing here is dependency injecting this function `printString` that enables us to print a string.

Now, I am also injecting it in some other places in the code, also propagating it around, and I wanted to use `type` to make it easier to recognize what is it about.

If we go with noun:
```hs
type StringPrinter = String -&gt; IO ()

doStuff :: StringPrinter -&gt; IO ()
doStuff stringPrinter = do
  ...
  stringPrinter ""foo""
  ...
```

If we go with verb:
```hs
type PrintString = String -&gt; IO ()

doStuff :: PrintString -&gt; IO ()
doStuff printString = do
  ...
  printString ""foo""
  ...
```

In example with noun, I like the name of the type, but name of the function argument doesn't feel so good.

On the other hand, with the verb, it is the opposite, I like the name of the type a bit less, but name of the function argument sounds good.

Although, with this example, I actually feel much better about using verb, `PrintString` doesn't feel that bad as `BuildTree` feels, for some reason.

--------------------

TDLR; So the question is: Do you prefer nouns over verbs when naming types? If so, are there still situations where you find verbs are a good fit?

I am looking for subjective opinions here so feel free to share them, and I would love to hear argumentation for it, if you can argument it.",True,False,False,haskell,t5_2qh36,69201,public,self,Do you ever name your types with verbs (vs nouns)?,0,[],1.0,https://www.reddit.com/r/haskell/comments/t0gd0v/do_you_ever_name_your_types_with_verbs_vs_nouns/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
212.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1645722266,haskellweekly.news,https://www.reddit.com/r/haskell/comments/t0fvfw/issue_304_haskell_weekly_newsletter/,{},t0fvfw,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t0fvfw/issue_304_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1645722277,1,,True,False,False,haskell,t5_2qh36,69200,public,default,Issue 304 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/304.html,all_ads,6,,,https://haskellweekly.news/issue/304.html,140.0,140.0,,,,,,,,,,,,,,,
213.0,[],False,n00bomb,,[],,text,t2_fhy7z,False,False,False,[],False,False,1645721002,youtube.com,https://www.reddit.com/r/haskell/comments/t0fdta/joey_hess_programming_arduinos_with_haskell_and/,{},t0fdta,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t0fdta/joey_hess_programming_arduinos_with_haskell_and/,False,rich:video,"{'enabled': False, 'images': [{'id': 'by2ZuxiV5-Ki-2ZjJGa1l77jj6dVYjuWXJ7jk_K-7kg', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/yCBaPOUZgb1y-HVsemB4FRzqHALoCtfHh-_TJZ96zCA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6ded1e4481b5dca15443230e70c1a3ae41c4b4e9', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/yCBaPOUZgb1y-HVsemB4FRzqHALoCtfHh-_TJZ96zCA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=fb7dc51968078efcb97e36958b10f5ec508b4520', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/yCBaPOUZgb1y-HVsemB4FRzqHALoCtfHh-_TJZ96zCA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a04b1d77d77e9b4d991ef5030a5b352ac248e2d3', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/yCBaPOUZgb1y-HVsemB4FRzqHALoCtfHh-_TJZ96zCA.jpg?auto=webp&amp;s=d4e60ed5a4cf4c0446bdc30d5a836213a6d00f2b', 'width': 480}, 'variants': {}}]}",6,1645721013,1,,False,False,False,haskell,t5_2qh36,69200,public,image,"Joey Hess, ""Programming Arduinos with Haskell and NASA's Copilot""",0,[],1.0,https://www.youtube.com/watch?v=l-luyVRgWVU,all_ads,6,,,https://www.youtube.com/watch?v=l-luyVRgWVU,105.0,140.0,,,,,,,"{'oembed': {'author_name': 'Houston FPUG', 'author_url': 'https://www.youtube.com/c/HoustonFPUG', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/l-luyVRgWVU?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/l-luyVRgWVU/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Joey Hess, ""Programming Arduinos with Haskell and NASA\'s Copilot""', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/l-luyVRgWVU?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'Houston FPUG', 'author_url': 'https://www.youtube.com/c/HoustonFPUG', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/l-luyVRgWVU?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/l-luyVRgWVU/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Joey Hess, ""Programming Arduinos with Haskell and NASA\'s Copilot""', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/l-luyVRgWVU?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/t0fdta', 'scrolling': False, 'width': 356}",,,,,
214.0,[],False,_query,,[],,text,t2_fjd8s,False,False,False,[],False,False,1645688822,serokell.io,https://www.reddit.com/r/haskell/comments/t05b5m/ihp_interview_on_the_serokell_blog/,{},t05b5m,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/t05b5m/ihp_interview_on_the_serokell_blog/,False,link,"{'enabled': False, 'images': [{'id': '4r3kgsvqe5tmF8Vq15tAt42U5Yre4eKcm-sdVgxiOjU', 'resolutions': [{'height': 64, 'url': 'https://external-preview.redd.it/KjgrPLBTRwSRUqD2tftXBEtUZmx-W4NN3G637Ej6-uo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=364e6bba8b3a2b08ca2c769b00ab51e2a1ec6152', 'width': 108}, {'height': 128, 'url': 'https://external-preview.redd.it/KjgrPLBTRwSRUqD2tftXBEtUZmx-W4NN3G637Ej6-uo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9fe70777eb2e668eb473581c90266111d45392d2', 'width': 216}, {'height': 190, 'url': 'https://external-preview.redd.it/KjgrPLBTRwSRUqD2tftXBEtUZmx-W4NN3G637Ej6-uo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2629e0812d1de625a0c13b5af33537993feb2d5c', 'width': 320}, {'height': 381, 'url': 'https://external-preview.redd.it/KjgrPLBTRwSRUqD2tftXBEtUZmx-W4NN3G637Ej6-uo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0a232fa49e228646de9e8823b91a7c7f02b6cadc', 'width': 640}, {'height': 572, 'url': 'https://external-preview.redd.it/KjgrPLBTRwSRUqD2tftXBEtUZmx-W4NN3G637Ej6-uo.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a518f6dade6e6bcd56ed147f2d909ba94c718f67', 'width': 960}, {'height': 644, 'url': 'https://external-preview.redd.it/KjgrPLBTRwSRUqD2tftXBEtUZmx-W4NN3G637Ej6-uo.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=2a6b633195ecedda96d9938d962488ae017c58f8', 'width': 1080}], 'source': {'height': 716, 'url': 'https://external-preview.redd.it/KjgrPLBTRwSRUqD2tftXBEtUZmx-W4NN3G637Ej6-uo.jpg?auto=webp&amp;s=e365e1a5d4bff005a1e00eb479f5ff0fa7704072', 'width': 1200}, 'variants': {}}]}",6,1645688833,1,,True,False,False,haskell,t5_2qh36,69197,public,default,IHP Interview on the Serokell Blog,0,[],1.0,https://serokell.io/blog/ihp-interview,all_ads,6,,,https://serokell.io/blog/ihp-interview,83.0,140.0,,,,,,,,,,,,,,,
215.0,[],False,sridfr,,[],,text,t2_f1wkk8ou,False,False,False,[],False,False,1645670170,stefan-klinger.de,https://www.reddit.com/r/haskell/comments/szzg24/the_haskell_programmers_guide_to_the_io_monad/,{},szzg24,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/szzg24/the_haskell_programmers_guide_to_the_io_monad/,False,,,6,1645670180,1,,True,False,False,haskell,t5_2qh36,69195,public,default,The Haskell Programmer's Guide to the IO Monad: Don't Panic,0,[],1.0,https://stefan-klinger.de/files/monadGuide.pdf,all_ads,6,,[PDF],https://stefan-klinger.de/files/monadGuide.pdf,,,,,,,,,,,,,,,,,
216.0,[],False,Martinsos,,[],,text,t2_bng1b,False,False,False,[],False,False,1645659551,techcrunch.com,https://www.reddit.com/r/haskell/comments/szvl37/hasura_raises_100m_techcrunch/,{},szvl37,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/szvl37/hasura_raises_100m_techcrunch/,False,link,"{'enabled': False, 'images': [{'id': 'tC618I0dr_lAs8pM0EhZBBEQ02_NBjQzlP0yDRqhZ8Y', 'resolutions': [{'height': 60, 'url': 'https://external-preview.redd.it/8pKtZVyNg12fKZ52RZeAyHKYY6IzsrKITxNHRpvnEdg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a36d7738c2174a91b9b75e9f38f6122e0802a75f', 'width': 108}, {'height': 121, 'url': 'https://external-preview.redd.it/8pKtZVyNg12fKZ52RZeAyHKYY6IzsrKITxNHRpvnEdg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=71df5049409d36b116980e186ed07c81b16e5a59', 'width': 216}, {'height': 179, 'url': 'https://external-preview.redd.it/8pKtZVyNg12fKZ52RZeAyHKYY6IzsrKITxNHRpvnEdg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1940a315d9b31b77847133bbcc2eec0d2b3c9b18', 'width': 320}, {'height': 359, 'url': 'https://external-preview.redd.it/8pKtZVyNg12fKZ52RZeAyHKYY6IzsrKITxNHRpvnEdg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=58bb50d7b39ba1a9558e04a1545d8e1546bcc3db', 'width': 640}], 'source': {'height': 399, 'url': 'https://external-preview.redd.it/8pKtZVyNg12fKZ52RZeAyHKYY6IzsrKITxNHRpvnEdg.jpg?auto=webp&amp;s=aac2117288089e760e146fd860626a25651b2e90', 'width': 711}, 'variants': {}}]}",6,1645659561,1,,True,False,False,haskell,t5_2qh36,69195,public,default,Hasura raises $100M – TechCrunch,0,[],1.0,https://techcrunch.com/2022/02/22/graphql-developer-platform-hasura-raises-100m-series-c/,all_ads,6,,,https://techcrunch.com/2022/02/22/graphql-developer-platform-hasura-raises-100m-series-c/,78.0,140.0,,,,,,,,,,,,,,,
217.0,[],False,codenjobs,,[],,text,t2_b7odw9qb,False,False,False,[],False,False,1645657949,self.haskell,https://www.reddit.com/r/haskell/comments/szuzjo/thanks_haskell_communitiy_for_the_help_before/,{},szuzjo,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/szuzjo/thanks_haskell_communitiy_for_the_help_before/,False,,,6,1645657960,1,"We posted this post a year ago and one of r/haskell member [user/vaibhavsagar](https://www.reddit.com/user/vaibhavsagar/) allowed us to share his blog posts at our website to help development.

[https://www.reddit.com/r/haskell/comments/pp3wpn/searching\_for\_a\_haskell\_dev\_to\_share\_blog\_or\_job/](https://www.reddit.com/r/haskell/comments/pp3wpn/searching_for_a_haskell_dev_to_share_blog_or_job/)

We promised him to donate the amount equivalent to 10 job sales to Haskell organization before and we are preparing our token sale so we think we can donate with the profit from it instead.

So, our question is where can we donate with cryptocurrencies for Haskell communtiy? Not sure where to contact exactly, if you know a right person or organization please leave a comment here.

[By the way, we are not a scam website, if you want you can visit our website and whitepaper.](https://www.codenjobs.com/company/whitepaper)

If it goes well, we plan to hire Haskell dev to help us improve our service also.

Thanks for reading.",True,False,False,haskell,t5_2qh36,69197,public,self,Thanks Haskell communitiy for the help before,0,[],1.0,https://www.reddit.com/r/haskell/comments/szuzjo/thanks_haskell_communitiy_for_the_help_before/,all_ads,6,b0bce6c2-2a63-11eb-b9a5-0eb5aa8d3dc9,blockchain,,,,,,,,,,,,,,,,,,
218.0,[],False,chairmanPandaCN,,[],,text,t2_5i6ewzqb,False,False,False,[],False,False,1645656986,self.haskell,https://www.reddit.com/r/haskell/comments/szulk4/questions_about_tictactoe_example_presented_in/,{},szulk4,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/szulk4/questions_about_tictactoe_example_presented_in/,False,,,6,1645656996,1,"Can someone tell me why TicTacToe2 is more  ergonomics than the plain old TicTacToe? I can tell that they represent the same thing since they are isomorphic to each other, which is due to same cardinality.  But other than this, i dont really see an advantage using TicTacToe2. 

 Is it a joke he proposed to make the book more enjoyable? I just dont get it.

`data TicTacToe a = TicTacToc`  
  `{ topLeft :: a,`  
 `topCenter :: a,`  
 `topRight :: a,`  
 `midLeft :: a,`  
 `midCenter :: a,`  
 `midRight :: a,`  
 `botLeft :: a,`  
 `botCenter :: a,`  
 `botRight :: a`  
  `}`  
`emptyBoard :: TicTacToe (Maybe Bool)`  
`emptyBoard =`  
  `TicTacToc`  
`Nothing`  
`Nothing`  
`Nothing`  
`Nothing`  
`Nothing`  
`Nothing`  
`Nothing`  
`Nothing`  
`Nothing`

`data Three = One | Two | Three`  
`data TicTacToe2 a = TicTacToe2`  
  `{ board :: Three -&gt; Three -&gt; a`  
  `}`  
 `deriving (Show)`  
`emptyBoard2 :: TicTacToe2 (Maybe Bool)`  
`emptyBoard2 = TicTacToe2 $ const $ const Nothing`",True,False,False,haskell,t5_2qh36,69196,public,self,Questions about TicTacToe example presented in the first Chapter about Thinking With Type,0,[],1.0,https://www.reddit.com/r/haskell/comments/szulk4/questions_about_tictactoe_example_presented_in/,all_ads,6,,,,,,,,,,,,,,,,,,,,
219.0,[],False,SlowerPhoton,,[],,text,t2_mt00e,False,False,False,[],False,False,1645642955,self.haskell,https://www.reddit.com/r/haskell/comments/szp33k/weird_syntax_error_in_where_clause/,{},szp33k,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/szp33k/weird_syntax_error_in_where_clause/,False,,,6,1645642966,1,"    cum :: (Int, Int) -&gt; (Int, Int) -&gt; Either OrnitError (Int, Int)
    cum (cl, cr) (l, r)
    					| cl' &lt; 0 || cr' &lt; 0 = Left LackOfBirds
    					| abs (cl' - cr') &gt; 5 = Left $ BirdsUnbalanced cl' cr'
    					| otherwise = Right (cl', cr')
                        where cl' = cl + l
    						  cr' = cr + r

Why is the following syntax error produced:

    cviko2.hs:12:1: warning: [-Wtabs]                                                                                           Tab character found here, and in 38 further locations.                                                                  Please use spaces instead.                                                                                             |                                                                                                                    12 |                                                 GaveUp -&gt; GaveUp                                                      | ^^^^^^^^                                                                                                                                                                                                                                   cviko2.hs:32:55: error: parse error on input `='                                                                           |                                                                                                                    32 |                                                   cr' = cr + r                                                        |                                                       ^                                                            Failed, no modules loaded.",True,False,False,haskell,t5_2qh36,69191,public,self,Weird syntax error in where clause,0,[],1.0,https://www.reddit.com/r/haskell/comments/szp33k/weird_syntax_error_in_where_clause/,all_ads,6,,,,,,,,,,,,,,,,,,,,
220.0,[],False,timlee126,,[],,text,t2_5fefq,False,False,False,[],False,False,1645636878,self.haskell,https://www.reddit.com/r/haskell/comments/szmq98/how_do_kinds_appear_in_haskell_or_hask/,{},szmq98,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/szmq98/how_do_kinds_appear_in_haskell_or_hask/,False,,,6,1645636888,1,"From TAPL by Pierce:

&gt; Kinds are built from a single atomic kind, written * and pronounced type,
&gt; and a single constructor ?. They include, for example:
&gt; 
&gt; `*` the kind of proper types (like Bool and Bool=&gt;Bool)
&gt; 
&gt; `*=&gt;*` the kind of type operators (i.e., functions from proper types
&gt; to proper types)
&gt; 
&gt; `*=&gt;*=&gt;*` the kind of functions from proper types to type operators
&gt; (i.e., two-argument operators)
&gt; 
&gt; `(*=&gt;*)=&gt;*` the kind of functions from type operators to proper types
&gt; 
&gt; Kinds, then, are the types of types. In essence, the system of kinds is a copy
&gt; of the simply typed lambda-calculus, one level up.

If thinking of types as objects in a category, e.g. Hask in Haskell,

- what is kind `*` in Haskell or in terms of category Hask? Is it exactly the set of all the types, i.e. the object set of Hask?

- What is kind `*=&gt;*` in Haskell or in terms of category Hask? Is it exactly the class `Functor` in Haskell?

- What is kind `*=&gt;*=&gt;*` in Haskell or in terms of category Hask?

- What is kind `(*=&gt;*)=&gt;*` in Haskell or in terms of category Hask? 

- Are all the arrow kinds (`*=&gt;*`, `*=&gt;*=&gt;*`, `(*=&gt;*)=&gt;*`, ...) exactly the classes defined by `class` in Haskell?

Thanks.",True,False,False,haskell,t5_2qh36,69187,public,self,How do kinds appear in Haskell or Hask?,0,[],1.0,https://www.reddit.com/r/haskell/comments/szmq98/how_do_kinds_appear_in_haskell_or_hask/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
221.0,[],False,timlee126,,[],,text,t2_5fefq,False,False,False,[],False,False,1645627020,self.haskell,https://www.reddit.com/r/haskell/comments/sziylh/when_does_the_shorten_form_of_conversion_of_a_do/,{},sziylh,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sziylh/when_does_the_shorten_form_of_conversion_of_a_do/,False,,,6,1645627031,1,"From Haskell's specification,

&gt; Do expressions satisfy these identities, which may be used as a translation into the kernel, after eliminating empty stmts:
&gt; 
&gt;     do {e} = e
&gt;     do {e;stmts} = e &gt;&gt; do {stmts}
&gt;     do {p &lt;- e; stmts} = let ok p = do {stmts}
&gt; 			                   ok _ = fail ""...""
&gt;                          in e &gt;&gt;= ok
&gt;     do {let decls; stmts} = let decls in do {stmts}
&gt; 

I often see that 

    do {p &lt;- e; stmts} = e &gt;&gt;= (\p -&gt; do {stmts})

I was wondering when the shorten version works and when it doesn't? (Does it work if and only if `e` is `return(e')` for some `e'` that matches `p`?)

Can the one given in the specification be rewritten as a `&gt;&gt;=` expression, for example, still by lambda expression?

Thanks.",True,False,False,haskell,t5_2qh36,69185,public,self,When does the shorten form of conversion of a do expression work?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sziylh/when_does_the_shorten_form_of_conversion_of_a_do/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
222.0,[],False,timlee126,,[],,text,t2_5fefq,False,False,False,[],False,False,1645624101,self.haskell,https://www.reddit.com/r/haskell/comments/szhwll/what_is_variables_bound_by_let_have_fully/,{},szhwll,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/szhwll/what_is_variables_bound_by_let_have_fully/,False,,,6,1645624112,1,"From Haskell's specification,

&gt; Do expressions satisfy these identities, which may be used as a translation into the kernel, after eliminating empty stmts:
&gt; 
&gt;     do {e} = e
&gt;     do {e;stmts} = e &gt;&gt; do {stmts}
&gt;     do {p &lt;- e; stmts} = let ok p = do {stmts}
&gt; 			     ok _ = fail ""...""
&gt; 			 in e &gt;&gt;= ok
&gt;     do {let decls; stmts} = let decls in do {stmts}
&gt; 

&gt; ... As indicated by the translation of do, variables bound by let have fully polymorphic types while those
defined by &lt;- are lambda bound and are thus monomorphic.

What does it mean by

- ""variables bound by let have fully polymorphic types"", and

- ""those defined by &lt;- are lambda bound and are thus monomorphic""?

Some examples may also clarify.

Thanks.",True,False,False,haskell,t5_2qh36,69185,public,self,"What is ""variables bound by let have fully polymorphic types while those defined by &lt;- are lambda bound and are thus monomorphic"" in a do expression?",0,[],1.0,https://www.reddit.com/r/haskell/comments/szhwll/what_is_variables_bound_by_let_have_fully/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
223.0,[],False,timlee126,,[],,text,t2_5fefq,False,False,False,[],False,False,1645620191,self.haskell,https://www.reddit.com/r/haskell/comments/szgl2d/how_is_a_do_expression_converted_to_expression/,{},szgl2d,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/szgl2d/how_is_a_do_expression_converted_to_expression/,False,,,6,1645620201,1,"From Haskell's specification,

&gt; Do expressions satisfy these identities, which may be used as a translation into the kernel, after eliminating empty stmts:
&gt; 
&gt;     do {e} = e
&gt;     do {e;stmts} = e &gt;&gt; do {stmts}
&gt;     do {p &lt;- e; stmts} = let ok p = do {stmts}
&gt; 			     ok _ = fail ""...""
&gt; 			 in e &gt;&gt;= ok
&gt;     do {let decls; stmts} = let decls in do {stmts}
&gt; 

According to the declaration of `&gt;&gt;` and `&gt;&gt;=` in class Monad:

- In the second one, is `e` required to have a type `m a`, and is `stmts` required to have a type `m b`, where the type constructor `m` has been derived as an instance of class Monad?


- In the third one, is `e` required to have a type `m a`, and `ok` required to have a type `a -&gt; m b` (wherein `p` has a type `a`, and `stmts` have a type `b`), where the type constructor `m` has been derived as an instance of class Monad?


Conversely, can an expression `e &gt;&gt;= f`, where `e` is an expression with type `m a`, and`f` is a function with type `a -&gt; m b`, be equivalently converted to an do expression?


What does the kernel of Haskel consist of exactly? (For example, does it include class Monad, but not do expression?)

Thanks.",True,False,False,haskell,t5_2qh36,69185,public,self,How is a do expression converted to &gt;&gt;= expression and vice versa?,0,[],1.0,https://www.reddit.com/r/haskell/comments/szgl2d/how_is_a_do_expression_converted_to_expression/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
224.0,[],False,cog1tar3,,[],,text,t2_14o50t6f,False,False,False,[],False,False,1645615652,self.haskell,https://www.reddit.com/r/haskell/comments/szf8ry/the_reality_of_getting_a_haskell_dev_job/,{},szf8ry,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/szf8ry/the_reality_of_getting_a_haskell_dev_job/,False,,,6,1645615663,1,I am looking for information about the reality of starting to learn haskell to getting a job as a haskell developer. What are a lot of the domains of application? What is your day-to-day look like?,True,False,False,haskell,t5_2qh36,69185,public,self,The reality of getting a Haskell dev job,0,[],1.0,https://www.reddit.com/r/haskell/comments/szf8ry/the_reality_of_getting_a_haskell_dev_job/,all_ads,6,,,,,,,,,,,,,,,,,,,,
225.0,[],False,sadzebra653,,[],,text,t2_g24a09ya,False,False,False,[],False,False,1645606901,github.com,https://www.reddit.com/r/haskell/comments/szcwsh/seeking_wider_attention_to_this_cabal_issue_run/,{},szcwsh,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/szcwsh/seeking_wider_attention_to_this_cabal_issue_run/,False,link,"{'enabled': False, 'images': [{'id': '3E0dnLsGbzEXkPyKgx47oW1NnvjoAj8eWf2JnKK4e64', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/yuS3qrlEG5-1Q8K_APrsk4Sz2s1v-1PRvTSZJYPU3FU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e679f5f46c8e564a5bb57c1d0ec0ddf7e9966fa6', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/yuS3qrlEG5-1Q8K_APrsk4Sz2s1v-1PRvTSZJYPU3FU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=24ce459a4247806efa8bd1035402777a99c869a0', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/yuS3qrlEG5-1Q8K_APrsk4Sz2s1v-1PRvTSZJYPU3FU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3edd1ec5f15ebaf172883c47b8c1a448eb77d244', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/yuS3qrlEG5-1Q8K_APrsk4Sz2s1v-1PRvTSZJYPU3FU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=58f8e54f37d016fa816a3983830bcfd20a33264a', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/yuS3qrlEG5-1Q8K_APrsk4Sz2s1v-1PRvTSZJYPU3FU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=46b5ea52efbc6ab56b3b5fe14feb4bba570bacee', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/yuS3qrlEG5-1Q8K_APrsk4Sz2s1v-1PRvTSZJYPU3FU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=2c2085e0a2255bb4990e87efa6352f9475bce014', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/yuS3qrlEG5-1Q8K_APrsk4Sz2s1v-1PRvTSZJYPU3FU.jpg?auto=webp&amp;s=b99bb3897822f3186bff75f5164ebc2aa48357dc', 'width': 1200}, 'variants': {}}]}",6,1645606911,1,,True,False,False,haskell,t5_2qh36,69181,public,default,"Seeking wider attention to this cabal issue: Run okay with profiling enabled, but installed exe has NO profiling enabled?",0,[],1.0,https://github.com/haskell/cabal/issues/7297,all_ads,6,,,https://github.com/haskell/cabal/issues/7297,70.0,140.0,,reddit,,,,,,,,,,,,,
226.0,[],False,timlee126,,[],,text,t2_5fefq,False,False,False,[],False,False,1645579843,self.haskell,https://www.reddit.com/r/haskell/comments/sz4ghr/is_hasks_topos/,{},sz4ghr,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sz4ghr/is_hasks_topos/,False,,,6,1645579854,1,"An (elementary) topos is defined to be a category E with the following 
properties: 

(i)  E has all finite limits; 

(ii)  E has a subobject classifier; 

(iii)  E is cartesian closed. 

I heard Hask is cartesian closed. Is Hask also topos? Thanks.",True,False,False,haskell,t5_2qh36,69172,public,self,Is Hasks topos?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sz4ghr/is_hasks_topos/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
227.0,[],False,nikos-alexandris,,[],,text,t2_bsjsogbh,False,False,False,[],False,False,1645557584,self.haskell,https://www.reddit.com/r/haskell/comments/syvtpw/return_explicit_value_in_case_of_monad_failure/,{},syvtpw,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/syvtpw/return_explicit_value_in_case_of_monad_failure/,False,,,6,1645557595,1,"If I have a maybe monad that does something like

p &lt;- ...
_ &lt;- ...
r &lt;- ...

Is there any way If the second line fails, instead of the whole monad returning nothing, to specify that I want it to return p?",True,False,False,haskell,t5_2qh36,69175,public,self,Return explicit value in case of monad failure,0,[],1.0,https://www.reddit.com/r/haskell/comments/syvtpw/return_explicit_value_in_case_of_monad_failure/,all_ads,6,,,,,,,,,,,,,,,,,,,,
228.0,[],False,pmz,,[],,text,t2_7ogw5,False,False,False,[],False,False,1645553429,i-programmer.info,https://www.reddit.com/r/haskell/comments/syu53w/take_the_haskell_beginners_2022_course_for_free/,{},syu53w,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/syu53w/take_the_haskell_beginners_2022_course_for_free/,False,,,6,1645553439,1,,True,False,False,haskell,t5_2qh36,69173,public,default,Take The Haskell Beginners 2022 Course (For Free),0,[],1.0,https://www.i-programmer.info/news/150-training-a-education/15235-take-the-haskell-beginners-2022-course.html,all_ads,6,,,https://www.i-programmer.info/news/150-training-a-education/15235-take-the-haskell-beginners-2022-course.html,,,,reddit,,,,,,,,,,,,,
229.0,[],False,VincyThePrincy,,[],,text,t2_z2irrj2,False,False,False,[],False,False,1645549628,self.haskell,https://www.reddit.com/r/haskell/comments/syslta/any_of_you_ever_get_the_feeling_that_haskell_is/,{},syslta,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/syslta/any_of_you_ever_get_the_feeling_that_haskell_is/,False,,,6,1645549640,1,"Due to syntactic flexibility with do notation, I really can't see a single language paradigm that Haskell can't emulate. While Prelude gets a lot of shit, it's so minimal and unopinionated that it really encourages creating language features as libraries. With QuasiQuoters you can take this to a logical extreme, convincing the compiler to compile whatever you want essentially. It seems to take very little convincing to get the language to do anything you want in the way you want as long as it's logically well formed.

Personally as someone who loves programming language design it's really incredible, if there's a feature in another language that I want to try, I don't have to switch languages, I can find a package or just stub out an implementation in a weekend. I've heard this used as a point against Haskell however, because it lets you work with very bizzare computational models and can make a code base feel kind of disjointed. Personally, I don't buy that, while Haskell does have modules that let you differ from the norm, the norm tends to be the easiest option. You CAN have Alan Kay style objects, you CAN have prolog style logic programming, but why would you when the language is still so effective without them. Of course, eDSLs are a thing too, tho they're less hot pluggable language features and more an incredibly nice design pattern that arises naturally from the language design unless they're designed to operate more generically.

Anyway, Haskell is cool and I wanted to talk about it, but I'm sure I'm preaching to the choir here.",True,False,False,haskell,t5_2qh36,69173,public,self,Any of you ever get the feeling that Haskell is just every language?,0,[],1.0,https://www.reddit.com/r/haskell/comments/syslta/any_of_you_ever_get_the_feeling_that_haskell_is/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,,,,,,,,,,,,,,,,,,
230.0,[],False,organicswan903,,[],,text,t2_g25i2ndy,False,False,False,[],False,False,1645547840,haskellweekly.news,https://www.reddit.com/r/haskell/comments/syrveq/ghc_901_haskell_weekly_podcast/,{},syrveq,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/syrveq/ghc_901_haskell_weekly_podcast/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1645547851,1,,True,False,False,haskell,t5_2qh36,69172,public,default,GHC 9.0.1 :: Haskell Weekly podcast!,0,[],1.0,https://haskellweekly.news/episode/38.html,all_ads,6,,,https://haskellweekly.news/episode/38.html,140.0,140.0,,reddit,,,,,,,,,,,,,
231.0,[],False,ZGM65563,,[],,text,t2_awqvxmri,False,False,False,[],False,False,1645547033,self.haskell,https://www.reddit.com/r/haskell/comments/syrk6m/gluing_together_result_types/,{},syrk6m,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/syrk6m/gluing_together_result_types/,False,,,6,1645547044,1,"I am making a Haskell application that uses a lot of libraries, mostly for things like parsing (\`megaparsec\`, \`aeson\`, etc) and eventually some RPC or other inter-process library. I have noticed that many of these libraries will return some kind of ""Result"" type for actions that can fail, often an \`Either String a\` or \`Maybe a\` or their own custom \`Result a\` type. I find it somewhat vexing how these different error types cannot mix because they carry different information, and I would like to be able to propagate them to a higher level in my program where the errors can be handled properly.

To this end I have added a monadic \`Result\` type for my own application that is roughly \`data Result a = Valid a | Invalid Error\` where \`Error\` is my own error sum type that can represent any external error that the program might have to handle. \`Result\` has the obvious \`Functor\`, \`Applicative\`, and \`Monad\` instances, and I use it to wrap most actions that can fail including reading and writing files, parsing, validating user input, and so on.

Is this a good approach? It seems a little unwieldy to set up so many wrapper functions, but it pays off when I can handle the errors so much more smoothly at the top level. Is there some better method I am missing?",True,False,False,haskell,t5_2qh36,69172,public,self,"Gluing together ""Result"" types",0,[],1.0,https://www.reddit.com/r/haskell/comments/syrk6m/gluing_together_result_types/,all_ads,6,,,,,,,,,,,,,,,,,,,,
232.0,[],False,PsychologicalDrawer0,,[],,text,t2_3yyuddqp,False,False,False,[],False,False,1645511797,self.haskell,https://www.reddit.com/r/haskell/comments/sygomu/trying_to_run_a_program_but_im_a_newbie/,{},sygomu,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sygomu/trying_to_run_a_program_but_im_a_newbie/,False,,,6,1645511807,1,"Hi everyone,

I passed by this page: [https://cgi.luddy.indiana.edu/\~sabry/cnf.html](https://cgi.luddy.indiana.edu/~sabry/cnf.html) , and from what I understood is that the haskell file they have attached is the same webapp, but obviously since I can download it, then I can run it client side, and offline. But I can't get it to run, I didn't even know how to run them on my desktop so I thought to just check them online, like those Java compilers, but those didn't even work:[https://www.jdoodle.com/execute-haskell-online/](https://www.jdoodle.com/execute-haskell-online/)

[https://replit.com/languages/haskell](https://replit.com/languages/haskell)

[https://www.tutorialspoint.com/compile\_haskell\_online.php](https://www.tutorialspoint.com/compile_haskell_online.php)

So I am kind of stuck not knowing if those online compilers, are just not working, or is it something I did or if the code itself is wrong.

Could anyone please help me out set this code up on my desktop and how to run it?

Thank you.",True,False,False,haskell,t5_2qh36,69167,public,self,Trying to run a program but I'm a newbie?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sygomu/trying_to_run_a_program_but_im_a_newbie/,all_ads,6,,,,,,,,,,,,,,,,,,,,
233.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1645476910,self.haskell,https://www.reddit.com/r/haskell/comments/sy45wy/haskell_quant_developer_role_at_barclays_london/,{},sy45wy,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sy45wy/haskell_quant_developer_role_at_barclays_london/,False,,,6,1645476921,1,"Join my team at Barclays to develop a compiler for an in-house financial contracts language!

This is a full-time Haskell position, working on the next generation of [Functional Payout Framework](https://arbitrary.name/papers/fpf.pdf).

While being flexible, at the moment this is not a fully remote role. You are expected to reside in the UK and be able to visit London office at least occasionally. Relocation and visa sponsorship are possible.

Feel free to contact me to discuss further, but all applications should go via [https://search.jobs.barclays/job/london/haskell-quant-developer-markets/13015/23995242912](https://search.jobs.barclays/job/london/haskell-quant-developer-markets/13015/23995242912)",True,False,False,haskell,t5_2qh36,69160,public,self,"Haskell Quant Developer role at Barclays, London",0,[],1.0,https://www.reddit.com/r/haskell/comments/sy45wy/haskell_quant_developer_role_at_barclays_london/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,,,,,,,,,,,,,,
234.0,[],False,philip_schwarz,,[],,text,t2_5xdwz53,False,False,False,[],False,False,1645468198,self.haskell,https://www.reddit.com/r/haskell/comments/sy0n6y/the_expression_problem/,{},sy0n6y,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sy0n6y/the_expression_problem/,False,self,"{'enabled': False, 'images': [{'id': '5sAY0qMDJaKDlZX034xteUVw9cIx86i_7G-J5aXqJtY', 'resolutions': [{'height': 60, 'url': 'https://external-preview.redd.it/eODfPQFob6cDbq2Td3f-Dtr5YNs4nubcAFuN-a-Y2Hw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=90199730e8cafedb11e8df8941e62ad87d7a3b3b', 'width': 108}, {'height': 121, 'url': 'https://external-preview.redd.it/eODfPQFob6cDbq2Td3f-Dtr5YNs4nubcAFuN-a-Y2Hw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1977d24768aadbc934f292d6eda9025c32fd7850', 'width': 216}, {'height': 180, 'url': 'https://external-preview.redd.it/eODfPQFob6cDbq2Td3f-Dtr5YNs4nubcAFuN-a-Y2Hw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2c1c45e9996078681671b41d603d88ad8ba0e3fe', 'width': 320}, {'height': 360, 'url': 'https://external-preview.redd.it/eODfPQFob6cDbq2Td3f-Dtr5YNs4nubcAFuN-a-Y2Hw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=43f94446a4c9a5210f1714ba26b8a27196c3074d', 'width': 640}], 'source': {'height': 432, 'url': 'https://external-preview.redd.it/eODfPQFob6cDbq2Td3f-Dtr5YNs4nubcAFuN-a-Y2Hw.jpg?auto=webp&amp;s=1ba30d6660d5c0edd2cb09822bd9a3dd3427bb0c', 'width': 768}, 'variants': {}}]}",6,1645468209,1,[removed],True,False,False,haskell,t5_2qh36,69155,public,self,The Expression Problem,0,[],1.0,https://www.reddit.com/r/haskell/comments/sy0n6y/the_expression_problem/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
235.0,[],False,imsekun,,[],,text,t2_96x7erfk,False,False,False,[],False,False,1645460186,twitter.com,https://www.reddit.com/r/haskell/comments/sxxcg3/alejandro_serrano_is_working_on_a_new_book/,{},sxxcg3,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sxxcg3/alejandro_serrano_is_working_on_a_new_book/,False,link,"{'enabled': False, 'images': [{'id': '4skAgWvlQJEm8eLJRYmdWIbWND5lUQXinkEfFCOV0Jk', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/eVJxgEZYGVWUOhqS7MEK7R9RVT6S-RdUqGeLT58yfxI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=963ce45e0db1abb419c901a59f59088f596d6588', 'width': 108}], 'source': {'height': 140, 'url': 'https://external-preview.redd.it/eVJxgEZYGVWUOhqS7MEK7R9RVT6S-RdUqGeLT58yfxI.jpg?auto=webp&amp;s=6b06de09a381c8d10c7d9d15462be4a934b575d8', 'width': 140}, 'variants': {}}]}",6,1645460197,1,,True,False,False,haskell,t5_2qh36,69154,public,default,Alejandro Serrano is working on a new book: Haskell (Almost) Standard Libraries,0,[],1.0,https://twitter.com/trupill/status/1495793295016042504,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://twitter.com/trupill/status/1495793295016042504,140.0,140.0,,,,,,,"{'oembed': {'author_name': 'Alejandro Serrano', 'author_url': 'https://twitter.com/trupill', 'cache_age': 3153600000, 'height': None, 'html': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;It&amp;#39;s time to announce that in this month-between-jobs I&amp;#39;m working on a NEW BOOK! 📖&lt;br&gt;&lt;br&gt;📚 Haskell (Almost) Standard Libraries 📚&lt;br&gt;&lt;br&gt;A walk through the main libraries used by the Haskell community for &amp;quot;common&amp;quot; tasks. Think of data structures, serialization, network...&lt;/p&gt;&amp;mdash; Alejandro Serrano (@trupill) &lt;a href=""https://twitter.com/trupill/status/1495793295016042504?ref_src=twsrc%5Etfw""&gt;February 21, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'provider_name': 'Twitter', 'provider_url': 'https://twitter.com', 'type': 'rich', 'url': 'https://twitter.com/trupill/status/1495793295016042504', 'version': '1.0', 'width': 350}, 'type': 'twitter.com'}","{'content': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;It&amp;#39;s time to announce that in this month-between-jobs I&amp;#39;m working on a NEW BOOK! 📖&lt;br&gt;&lt;br&gt;📚 Haskell (Almost) Standard Libraries 📚&lt;br&gt;&lt;br&gt;A walk through the main libraries used by the Haskell community for &amp;quot;common&amp;quot; tasks. Think of data structures, serialization, network...&lt;/p&gt;&amp;mdash; Alejandro Serrano (@trupill) &lt;a href=""https://twitter.com/trupill/status/1495793295016042504?ref_src=twsrc%5Etfw""&gt;February 21, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'height': 200, 'scrolling': False, 'width': 350}","{'oembed': {'author_name': 'Alejandro Serrano', 'author_url': 'https://twitter.com/trupill', 'cache_age': 3153600000, 'height': None, 'html': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;It&amp;#39;s time to announce that in this month-between-jobs I&amp;#39;m working on a NEW BOOK! 📖&lt;br&gt;&lt;br&gt;📚 Haskell (Almost) Standard Libraries 📚&lt;br&gt;&lt;br&gt;A walk through the main libraries used by the Haskell community for &amp;quot;common&amp;quot; tasks. Think of data structures, serialization, network...&lt;/p&gt;&amp;mdash; Alejandro Serrano (@trupill) &lt;a href=""https://twitter.com/trupill/status/1495793295016042504?ref_src=twsrc%5Etfw""&gt;February 21, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'provider_name': 'Twitter', 'provider_url': 'https://twitter.com', 'type': 'rich', 'url': 'https://twitter.com/trupill/status/1495793295016042504', 'version': '1.0', 'width': 350}, 'type': 'twitter.com'}","{'content': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;It&amp;#39;s time to announce that in this month-between-jobs I&amp;#39;m working on a NEW BOOK! 📖&lt;br&gt;&lt;br&gt;📚 Haskell (Almost) Standard Libraries 📚&lt;br&gt;&lt;br&gt;A walk through the main libraries used by the Haskell community for &amp;quot;common&amp;quot; tasks. Think of data structures, serialization, network...&lt;/p&gt;&amp;mdash; Alejandro Serrano (@trupill) &lt;a href=""https://twitter.com/trupill/status/1495793295016042504?ref_src=twsrc%5Etfw""&gt;February 21, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/sxxcg3', 'scrolling': False, 'width': 350}",,,,,
236.0,[],False,idmorphism,,[],,text,t2_jxblvx2x,False,False,False,[],False,False,1645459582,self.haskell,https://www.reddit.com/r/haskell/comments/sxx3tg/cattheory_gurus_looking_for_a_typeclass_where/,{},sxx3tg,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sxx3tg/cattheory_gurus_looking_for_a_typeclass_where/,False,,,6,1645459593,1,[removed],True,False,False,haskell,t5_2qh36,69155,public,self,CatTheory Gurus: Looking for a typeclass where category objects are consumable (chemical engineering),0,[],1.0,https://www.reddit.com/r/haskell/comments/sxx3tg/cattheory_gurus_looking_for_a_typeclass_where/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,37.0,140.0,,automod_filtered,,,,,,,,,,,,,
237.0,[],False,ittsopu,,[],,text,t2_5c1a9yed,False,False,False,[],False,False,1645451759,i.redd.it,https://www.reddit.com/r/haskell/comments/sxu346/mingw_x64_problem_while_installing_haskell_on/,{},sxu346,False,False,False,False,True,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sxu346/mingw_x64_problem_while_installing_haskell_on/,False,image,"{'enabled': True, 'images': [{'id': 'SXU-FfBQU_82_7Ntw0izq43WFLVzAdExzbZRk6CoytQ', 'resolutions': [{'height': 81, 'url': 'https://preview.redd.it/02y3sz9cz6j81.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a659581956dd2e26035a6861f8df043791066e0a', 'width': 108}, {'height': 162, 'url': 'https://preview.redd.it/02y3sz9cz6j81.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c3785a813c4b491355fa18cbee9a18b075e3e582', 'width': 216}, {'height': 240, 'url': 'https://preview.redd.it/02y3sz9cz6j81.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=43f30a56fe15a3f4568057ab3eca738ae6499d9a', 'width': 320}, {'height': 480, 'url': 'https://preview.redd.it/02y3sz9cz6j81.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=18bb0eab363fa6e6ab6c990979e8ec691f4a1c44', 'width': 640}, {'height': 720, 'url': 'https://preview.redd.it/02y3sz9cz6j81.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=57fe0760c66b0b1bdb9fb765c2777736d11cf12a', 'width': 960}, {'height': 810, 'url': 'https://preview.redd.it/02y3sz9cz6j81.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=353c0d4bcbc4d016a7663e4af448f28e6b5da981', 'width': 1080}], 'source': {'height': 3456, 'url': 'https://preview.redd.it/02y3sz9cz6j81.jpg?auto=webp&amp;s=09c6271f7c1ac9f1469a5aaf8b762fea88933e87', 'width': 4608}, 'variants': {}}]}",6,1645451769,1,,True,False,False,haskell,t5_2qh36,69152,public,image,MinGW x64 problem while installing Haskell on Windows 10. Does someone know whats the problem here?,0,[],1.0,https://i.redd.it/02y3sz9cz6j81.jpg,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,https://i.redd.it/02y3sz9cz6j81.jpg,105.0,140.0,,moderator,,,,,,,,,,,,,
238.0,[],False,LordSirCat,,[],,text,t2_fcxid,False,False,False,[],False,False,1645447780,self.haskell,https://www.reddit.com/r/haskell/comments/sxsree/why_do_type_classes_require_that_their_methods/,{},sxsree,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sxsree/why_do_type_classes_require_that_their_methods/,False,,,6,1645447846,1,"If  `Foo a b` is my type class, `f :: a` can't be a method, as the compiler complains that `f` is now ambiguous (which seems to me to be true but only as long as there are multiple instances). But it seems to me that even if I replaced `f` with `g :: (a,b)` then `g` is still ambiguous (again, if I have multiple instances). So why is there that restriction?

I am aware of FunctionalDependencies, but it seems to me that it shouldn't be required that `b` is uniquely determined by `a`. Am I missing something?",True,False,False,haskell,t5_2qh36,69150,public,self,Why do type classes require that their methods use all the types?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sxsree/why_do_type_classes_require_that_their_methods/,all_ads,6,,,,,,,,,,,,,,,,,,,,
239.0,[],False,whitehead1415,,[],,text,t2_3lj5b,False,False,False,[],False,False,1645447022,self.haskell,https://www.reddit.com/r/haskell/comments/sxsj4m/what_are_strategies_for_tracking_type_checking/,{},sxsj4m,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sxsj4m/what_are_strategies_for_tracking_type_checking/,False,,,6,1645447033,1,"When you have a high level language it seams easier to desugar it to a small core language when type checking. However I don't understand how type errors can then be reversed back to the original syntax. What are known strategies for doing this? It seems like you would have to litter your core AST with annotations of some kind, is this what most people do?  
I remember reading somewhere that haskell implements the typechecker closer to the original syntax because then it is easier to relate errors to the original source. However there is still some desugaring that occurs, and I'm wondering if there is a sweet spot in balancing desugaring vs tracking original source?",True,False,False,haskell,t5_2qh36,69150,public,self,What are strategies for tracking type checking errors after desugaring?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sxsj4m/what_are_strategies_for_tracking_type_checking/,all_ads,6,,,,,,,,,,,,,,,,,,,,
240.0,[],False,yairchu,,[],,text,t2_33msg,False,False,False,[],False,False,1645435189,self.haskell,https://www.reddit.com/r/haskell/comments/sxpchd/til_about_wunusedpackages/,{},sxpchd,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sxpchd/til_about_wunusedpackages/,False,self,"{'enabled': False, 'images': [{'id': 'pw8lsfTAtdFpEUNjtPS8BYKFIv3jfxB6Dk4pfBtjChY', 'resolutions': [{'height': 18, 'url': 'https://external-preview.redd.it/kiZNI4sG7HUZU-MLhteGUH1smAKPfzk9chUMTkUmp9Y.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fdd47dba2517b072f340ab746d8a136e8134f906', 'width': 108}], 'source': {'height': 24, 'url': 'https://external-preview.redd.it/kiZNI4sG7HUZU-MLhteGUH1smAKPfzk9chUMTkUmp9Y.jpg?auto=webp&amp;s=ec163446781f5854aceeff1e8cc231bd5c847b83', 'width': 140}, 'variants': {}}]}",6,1645435199,1,"Since GHC 8.10 you can use `-Wunused-packages` to find deps in your `package.yaml` which you've stopped using!

Removing them might reduce build times and also reduce potential future problems with version bounds.

Found about it from this From this tweet by @TechnoEmpress https://twitter.com/TechnoEmpress/status/1495435473464049672",True,False,False,haskell,t5_2qh36,69150,public,self,TIL about -Wunused-packages,0,[],1.0,https://www.reddit.com/r/haskell/comments/sxpchd/til_about_wunusedpackages/,all_ads,6,,,,,,,,,,,,,,,,,,,,
241.0,[],False,MafiaMS2000,,[],,text,t2_8kawll41,False,False,False,[],False,False,1645402943,self.haskell,https://www.reddit.com/r/haskell/comments/sxfoqu/warning_no_explicit_implementation_for_frominteger/,{},sxfoqu,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sxfoqu/warning_no_explicit_implementation_for_frominteger/,False,,,6,1645402954,1,"`module Fraction (Fraction, frac) where`

\-- Fraction type. ADT maintains the INVARIANT that every fraction Frac n m

\-- satisfies m &gt; 0 and gcd n m == 1. For fractions satisfying this invariant

\-- equality is the same as literal equality (hence ""deriving Eq"")

&amp;#x200B;

`data Fraction = Frac Integer Integer deriving Eq`

&amp;#x200B;

\-- Public constructor: take two integers, n and m, and construct a fraction

\-- representing n/m that satisfies the invariant, if possible (the case

\-- where this is impossible is when m == 0).

&amp;#x200B;

`frac :: Integer -&gt; Integer -&gt; Maybe Fraction`

`frac n 0 = Nothing` 

`frac n m = if (m&gt;0) &amp;&amp; (gcd n m == 1) then Just (Frac n m) else Nothing`

&amp;#x200B;

`instance Show Fraction where`

`show (Frac n m)  = show n ++ ""/"" ++ show m`

&amp;#x200B;

`-- Ord instance for Fraction`

`instance Ord Fraction where`

`compare (Frac n m) (Frac p q) = compare (n*q) (p*m)`

&amp;#x200B;

`instance Num Fraction where`

`(Frac n m) + (Frac p q) = (Frac (n*q + m*p)(m*q))`

`(Frac n m) * (Frac p q) = (Frac (n*p)(m*q))`

`(Frac n m) - (Frac p q) = (Frac (n*q - m*p)(m*q))`

`abs (Frac n m) = (Frac (abs n) (abs m))`

`signum (Frac n m) = (Frac (signum n) (signum m))`

&amp;#x200B;

So I have a haskell code here and Whenever i compile it, it gives me a warning for no implementation for fromInteger. However, I tried to Implement fromInteger but i don't know how to apply it to the two integers as arguments as fromInteger is of type **Num a=&gt; Integer -&gt; a**",True,False,False,haskell,t5_2qh36,69146,public,self,Warning: No explicit implementation for ‘fromInteger’,0,[],1.0,https://www.reddit.com/r/haskell/comments/sxfoqu/warning_no_explicit_implementation_for_frominteger/,all_ads,6,,,,,,,,,,,,,,,,,,,,
242.0,[],False,Foo-Baa,,[],,text,t2_57imzj6g,False,False,False,[],False,False,1645349856,self.haskell,https://www.reddit.com/r/haskell/comments/swxmhy/how_can_i_concisely_represent_a_heterogenous_sum/,{},swxmhy,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/swxmhy/how_can_i_concisely_represent_a_heterogenous_sum/,False,,,6,1645349866,1,"I'm writing a program that transcodes financial statements into [a ledger](https://ledger-cli.org). In that program I have types representing different activities:

```haskell
data Withdrawal = Withdrawal { wTarget :: !Text, wAmount :: !Cash, wBalance :: !Cash }
data Fee = { fFee :: !Cash, fBalance :: !Cash }
-- many more
```

I use those types, because I have functions that are transaction-type specific.

I also wanted to write an activity parser that translates CSV records into those types, so I created an `Activity` sum type:

```haskell
data Activity =
  ActivityFee Fee
  | ActivityWithdrawal Withdrawal
  | -- ...

parseActivity :: CsvRecord -&gt; Activity
```

That `Activity` is quite boilerplate'y. Having to have a new `Activity*` constructor for a new activity type is slightly cumbersome.

Is there a more idiomatic or better design pattern for this problem? Was it C++, `std::variant` would be convenient, because adding a new activity type wouldn't entail adding a new boilerplate constructor.

I've considered type-classes, but the problem with them is that they are not closed and I can't pattern match to create a function like `applyActivity :: Activity -&gt; Wallet -&gt; Wallet`. I see that I could make `applyActivity` into a function of an `Activity` class, but then problem is that this solution is only straightforward if only one argument is using this pattern. If we had two arguments like `foo :: (ClassOne a, ClassTwo b) =&gt; a -&gt; b -&gt; c`, then it's not clear to which class `foo` should belong.",True,False,False,haskell,t5_2qh36,69143,public,self,How can I concisely represent a heterogenous sum type in Haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/swxmhy/how_can_i_concisely_represent_a_heterogenous_sum/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
243.0,[],False,aviancrane,,[],,text,t2_fxteatil,False,False,False,[],False,False,1645339584,self.haskell,https://www.reddit.com/r/haskell/comments/swv133/is_this_an_intuitive_type_for_the_components_of_a/,{},swv133,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/swv133/is_this_an_intuitive_type_for_the_components_of_a/,False,,,6,1645339594,1,"(a -&gt; ma) -&gt; (ma -&gt; mb) -&gt; (mb -&gt; b) -&gt; (a -&gt; b)  


I'm trying to teach someone what a function is conceptually beyond just (a -&gt; b), so that they can recognize it when they see it in any context, regardless of language. I have been trying to come up with a type, or a diagram, to explain it.

The essential pieces I see for a function are a parameter assignment, a computation, and a return. The type at the top is meant to capture these and the diagram for this would be a square.

I also think that this can be used to define an arrow, except the first argument would be an identity on the input, the second the arrow, and the third argument would be an identity on the output.  
This is how I sketch functions and arrows when I imagine them but I don't know if anyone else's imagination agrees.",True,False,False,haskell,t5_2qh36,69143,public,self,Is this an intuitive type for the components of a function?,0,[],1.0,https://www.reddit.com/r/haskell/comments/swv133/is_this_an_intuitive_type_for_the_components_of_a/,all_ads,6,,,,,,,,,,,,,,,,,,,,
244.0,[],False,TheWardenatnothing,,[],,text,t2_7jcokqkf,False,False,False,[],False,False,1645338405,self.haskell,https://www.reddit.com/r/haskell/comments/swuq9r/operator_precedence_issue_when_parsing_with/,{},swuq9r,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/swuq9r/operator_precedence_issue_when_parsing_with/,False,,,6,1645338416,1,"I was parsing a C-like language with [array](https://www.reddit.com/r/haskell/comments/lfnd3o/issue_when_parsing_array12_using_megaparsec/) and struct. Following C operator precedence, `.` and `[]` are made of equal precedence. opTable :: [[Operator Parser Expr]] ‍ opTable = [[ InfixL $ Access &lt;$ symbol ""."" , opSubscript]] opSubscript = Postfix $ foldr1 (.) &lt;$&gt; some singleIndex singleIndex = execute index &lt; brackets expr return $ \l -&gt; ArrayIndex l index When parsing Struct S { int[3] a; } Struct S s; s.a[1] it yielded `Access (Var ""s"") (ArrayIndex (Var ""a"") 1)` instead of `ArrayIndex (Access (Var ""s"") (Var ""a"")) 1` Why? Is it because `[]` is not parsed as `InfixL`?",True,False,False,haskell,t5_2qh36,69142,public,self,Operator precedence issue when parsing with Megaparsec!,0,[],1.0,https://www.reddit.com/r/haskell/comments/swuq9r/operator_precedence_issue_when_parsing_with/,all_ads,6,,,,,,,,,,,,,,,,,,,,
245.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1645295011,github.com,https://www.reddit.com/r/haskell/comments/swgeis/proposal_add_functions_traceon_traceshowon_to/,{},swgeis,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/swgeis/proposal_add_functions_traceon_traceshowon_to/,False,link,"{'enabled': False, 'images': [{'id': 'TffZRGMfOE8zdb8GJfczMZketaJfw2G2mhtifTA5LEk', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/ePcM0EgLKNLtnTQEQw-LFWBYAeDCEjusCkCaQ4wUytI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=90042b18a540bc14b9fa053554d981a73bb92258', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/ePcM0EgLKNLtnTQEQw-LFWBYAeDCEjusCkCaQ4wUytI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f457e78a8f2d28c8f1daafc5784493326858b35f', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/ePcM0EgLKNLtnTQEQw-LFWBYAeDCEjusCkCaQ4wUytI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=cf798b700d085f231c3f0719aad33aa4abb82835', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/ePcM0EgLKNLtnTQEQw-LFWBYAeDCEjusCkCaQ4wUytI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=790b79fce5ab91bf7619fadf39e440b6abe02e8f', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/ePcM0EgLKNLtnTQEQw-LFWBYAeDCEjusCkCaQ4wUytI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=af6799ab9460f8c905c9e7e7558b94264c4c6571', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/ePcM0EgLKNLtnTQEQw-LFWBYAeDCEjusCkCaQ4wUytI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=b285644fd5b84ca6deb767ae3f1e9f1b3fbd9cd3', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/ePcM0EgLKNLtnTQEQw-LFWBYAeDCEjusCkCaQ4wUytI.jpg?auto=webp&amp;s=554a4fb96a1d2e99c6cdad0efa72e57359e60f75', 'width': 1200}, 'variants': {}}]}",6,1645295022,1,,True,False,False,haskell,t5_2qh36,69143,public,default,"Proposal: add functions traceOn, traceShowOn to Debug.Trace",0,[],1.0,https://github.com/haskell/core-libraries-committee/issues/36,all_ads,6,a01b58a0-6553-11eb-b2eb-0eb19e8d97a5,RFC,https://github.com/haskell/core-libraries-committee/issues/36,70.0,140.0,,,,,,,,,,,,,,,
246.0,[],False,dnikolovv,,[],,text,t2_1jfr3jmr,False,False,False,[],False,False,1645287122,self.haskell,https://www.reddit.com/r/haskell/comments/swdgyu/a_working_example_for_reflexobsidian_hls/,{},swdgyu,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/swdgyu/a_working_example_for_reflexobsidian_hls/,False,,,6,1645287132,1,"Hey guys.

I'm trying to get started with Reflex/Obelisk as we have a few quite simple UI use-cases that would benefit highly from sharing code between the front-end and back-end.

However, struggling to get one thing working - HLS.

Setting up an Obelisk project was actually remarkably easy.

`ob shell`, `ob run` and `ob watch` work perfectly.

However, when I open up VS code from within the `nix-shell`",True,False,False,haskell,t5_2qh36,69142,public,self,A working example for Reflex/Obsidian + HLS?,0,[],1.0,https://www.reddit.com/r/haskell/comments/swdgyu/a_working_example_for_reflexobsidian_hls/,all_ads,6,,,,,,,,,,,,,,,,,,,,
247.0,[],False,arjuna93,,[],,text,t2_onnorb2,False,False,False,[],False,False,1645229833,self.haskell,https://www.reddit.com/r/haskell/comments/svwkv0/haskell_for_powerpc_mac/,{},svwkv0,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/svwkv0/haskell_for_powerpc_mac/,False,,,6,1645229844,1,"I am interested to get Haskell onto PowerPC. From what I understand the last version existing as ready-made binary is 6.10.x. Is it possible to build GHC for ppc somehow?

I have gcc11 working on ppc, latest cmake and most of other tools. (What does not work on ppc is clang.)

Any suggestions will be greatly appreciated. Ideally I wanna get GHC for ppc into Macports, but if I manage to build it locally, I can open a PR.",True,False,False,haskell,t5_2qh36,69124,public,self,Haskell for PowerPC Mac?,0,[],1.0,https://www.reddit.com/r/haskell/comments/svwkv0/haskell_for_powerpc_mac/,all_ads,6,,,,,,,,,,,,,,,,,,,,
248.0,[],False,Snickers_B,,[],,text,t2_j7bjped7,False,False,False,[],False,False,1645228124,chester-beard.medium.com,https://www.reddit.com/r/haskell/comments/svvzte/list_of_haskell_conferences_in_2022/,{},svvzte,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/svvzte/list_of_haskell_conferences_in_2022/,False,link,"{'enabled': False, 'images': [{'id': 'kTodkrMkblRL7LOurCA87JnN7J7ts9q4I-1AM9Utnzs', 'resolutions': [{'height': 162, 'url': 'https://external-preview.redd.it/5ucfaAmw0U1YV_LLvSslc-Jf2_FiQHoFHK1X51FMTYM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2f761fa6480a96cfcf947827ae47fc9c522fefd3', 'width': 108}, {'height': 324, 'url': 'https://external-preview.redd.it/5ucfaAmw0U1YV_LLvSslc-Jf2_FiQHoFHK1X51FMTYM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6b7b694d8d1d80049c1b1c443ffa692318592b0d', 'width': 216}, {'height': 480, 'url': 'https://external-preview.redd.it/5ucfaAmw0U1YV_LLvSslc-Jf2_FiQHoFHK1X51FMTYM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=65c78257756cc894e6ccc8ebb824aa57f954631e', 'width': 320}, {'height': 960, 'url': 'https://external-preview.redd.it/5ucfaAmw0U1YV_LLvSslc-Jf2_FiQHoFHK1X51FMTYM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e5e37aa0266fba22c56fb2273b6e223abd74cde2', 'width': 640}, {'height': 1440, 'url': 'https://external-preview.redd.it/5ucfaAmw0U1YV_LLvSslc-Jf2_FiQHoFHK1X51FMTYM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=7d6acac778fdc6fd6aa50673b5c06549e3e205ac', 'width': 960}, {'height': 1620, 'url': 'https://external-preview.redd.it/5ucfaAmw0U1YV_LLvSslc-Jf2_FiQHoFHK1X51FMTYM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=946a50746df1aefb448c2990f70a0846a46177b7', 'width': 1080}], 'source': {'height': 1800, 'url': 'https://external-preview.redd.it/5ucfaAmw0U1YV_LLvSslc-Jf2_FiQHoFHK1X51FMTYM.jpg?auto=webp&amp;s=7e766a260083d7dbdb84d92905054cae048d6e15', 'width': 1200}, 'variants': {}}]}",6,1645228135,1,,False,False,False,haskell,t5_2qh36,69122,public,default,List of Haskell conferences in 2022,0,[],1.0,https://chester-beard.medium.com/haskell-in-2022-ad5f61893b8d,all_ads,6,,,https://chester-beard.medium.com/haskell-in-2022-ad5f61893b8d,140.0,140.0,,,,,,,,,,,,,,,
249.0,[],False,CastilloDel,,[],,text,t2_ju0sc1ff,False,False,False,[],False,False,1645215034,self.haskell,https://www.reddit.com/r/haskell/comments/svr7bv/learning_haskell_during_aoc/,{},svr7bv,False,False,False,True,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/svr7bv/learning_haskell_during_aoc/,False,,,6,1645215045,1,[removed],True,False,False,haskell,t5_2qh36,69120,public,self,Learning Haskell during AOC,0,[],1.0,https://www.reddit.com/r/haskell/comments/svr7bv/learning_haskell_during_aoc/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,,,,,automod_filtered,,,,,,,,,,,,,
250.0,[],False,DetriusXii,,[],,text,t2_fxk16,False,False,False,[],False,False,1645214973,self.haskell,https://www.reddit.com/r/haskell/comments/svr6fy/which_orms_with_migrate_features_would_be_the/,{},svr6fy,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/svr6fy/which_orms_with_migrate_features_would_be_the/,False,,,6,1645214983,1,"Hi,

I think Persistent-odbc is the only version that can work with MSSQL, but persistent-odbc doesn't pair with newer versions of Persistent as Persistent updated its datatypes.  I thought selda was neat, but its DB language metatypes (I don't know if that's the right name) are in a closed data type rather than an open typeclass declaration.   MSSQL has many database column types so having type class declarations of the translation DB language metatype  would allow for more flexibility for the ORM to handle multiple databases.

I'm going to try to rewrite selda's types to handle extensible column definitions.",True,False,False,haskell,t5_2qh36,69120,public,self,Which ORMs with migrate features would be the easiest to add an MSSQL version?,0,[],1.0,https://www.reddit.com/r/haskell/comments/svr6fy/which_orms_with_migrate_features_would_be_the/,all_ads,6,,,,,,,,,,,,,,,,,,,,
251.0,[],False,ThisKappaIsGrey,,[],,text,t2_8g69lj,False,False,False,[],False,False,1645214890,self.haskell,https://www.reddit.com/r/haskell/comments/svr5c1/kleisli_arrows_vs_monadic_bind/,{},svr5c1,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/svr5c1/kleisli_arrows_vs_monadic_bind/,False,,,6,1645214901,1,"Hi,
I was reading through *Category Theory for Programmers*, and I was wondering if the monadic bind `&gt;&gt;= :: m a -&gt; (a -&gt; m b) -&gt; m b` can be defined in terms of the kleisli arrows: `&gt;=&gt; :: (a -&gt; m b) -&gt; (b -&gt; m c) -&gt; (a -&gt; m c)` . After a bit, I came up with: `ma &gt;&gt;= f = ((\_ -&gt; ma) &gt;=&gt; f) id -- apply to it a junk value` . Since the result of applying `&gt;=&gt;` returns a function, I need to call the function with a junk value to make it return just `m b` . Was I correct in my approach? Thank you.",True,False,False,haskell,t5_2qh36,69120,public,self,Kleisli arrows vs Monadic Bind,0,[],1.0,https://www.reddit.com/r/haskell/comments/svr5c1/kleisli_arrows_vs_monadic_bind/,all_ads,6,,,,,,,,,,,,,,,,,,,,
252.0,[],False,roflcopter_234,,[],,text,t2_jkwd4wgk,False,False,False,[],False,False,1645210324,dfithian.github.io,https://www.reddit.com/r/haskell/comments/svpe0r/haskell_database_implementation_part_2_domain/,{},svpe0r,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/svpe0r/haskell_database_implementation_part_2_domain/,False,,,6,1645210335,1,,True,False,False,haskell,t5_2qh36,69116,public,default,"Haskell Database Implementation - Part 2, Domain Specific Language and Transactionality;",0,[],1.0,https://dfithian.github.io/2021/02/18/database-implementation-part-2.html,all_ads,6,,,https://dfithian.github.io/2021/02/18/database-implementation-part-2.html,,,,,,,,,,,,,,,,,
253.0,[],False,presheaf,,[],,text,t2_5ck0q,False,False,False,[],False,False,1645205242,tweag.io,https://www.reddit.com/r/haskell/comments/svngej/how_to_write_a_typechecking_plugin/,{},svngej,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/svngej/how_to_write_a_typechecking_plugin/,False,link,"{'enabled': False, 'images': [{'id': '0Evd6UWXs4A11yT0I3bSUdOWKNqr9Az0qWvc-WhxMes', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a559bb4d890ff015d6259a06083f8cea81389ab2', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b67964ddc7f6a4e974672b382f7c786c8d3526fe', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=61e37c5f638b0d156c5fdcbc1a5335a3bdbb8729', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=298dca15f47ae031413bbd031ffd301b05793915', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=81eb47deb6039cc11cc169b056aee661e37b1789', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3b60b078d6771ef7f153290885f77a8f50774cdb', 'width': 1080}], 'source': {'height': 4096, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?auto=webp&amp;s=6803e63008eaa75aac55167a9225dd6c2f0316a7', 'width': 4096}, 'variants': {}}]}",6,1645205252,1,,True,False,False,haskell,t5_2qh36,69115,public,default,How to write a type-checking plugin,0,[],1.0,https://www.tweag.io/blog/2022-02-17-tcplugins-3/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://www.tweag.io/blog/2022-02-17-tcplugins-3/,140.0,140.0,,,,,,,,,,,,,,,
254.0,[],False,runeks,,[],,text,t2_5doju,False,False,False,[],False,False,1645204454,gitlab.haskell.org,https://www.reddit.com/r/haskell/comments/svn5h3/upstreaming_ghcjs/,{},svn5h3,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/svn5h3/upstreaming_ghcjs/,False,link,"{'enabled': False, 'images': [{'id': 'sadGiZnMza04xEiWhXPO3i3TXwX3TFWIYyP5IIsznEc', 'resolutions': [{'height': 80, 'url': 'https://external-preview.redd.it/4MJJZoVTqSH6Q00o7vG4ApujBxpeiap6JKO1q14porc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a6f7fb4f328502b78f0954aab756375a9f046d85', 'width': 108}], 'source': {'height': 89, 'url': 'https://external-preview.redd.it/4MJJZoVTqSH6Q00o7vG4ApujBxpeiap6JKO1q14porc.jpg?auto=webp&amp;s=1ad0b10fdc9bf95e0ba2e939d95ebfe612ac3694', 'width': 119}, 'variants': {}}]}",6,1645204465,1,,True,False,False,haskell,t5_2qh36,69118,public,default,Upstreaming GHCJS,0,[],1.0,https://gitlab.haskell.org/ghc/ghc/-/issues/21078,all_ads,6,,,https://gitlab.haskell.org/ghc/ghc/-/issues/21078,52.0,70.0,,reddit,,,,,,,,,,,,,
255.0,[],False,kate_galkina,,[],,text,t2_h5bgyrcr,False,False,False,[],False,False,1645188548,typeable.io,https://www.reddit.com/r/haskell/comments/svh6b0/do_you_know_where_haskell_is_used/,{},svh6b0,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/svh6b0/do_you_know_where_haskell_is_used/,False,link,"{'enabled': False, 'images': [{'id': 'depjuVXyRI44fsr9mdubiemXz6mIoQOgh1OK6JUspiQ', 'resolutions': [{'height': 72, 'url': 'https://external-preview.redd.it/2v0VwxcBbBg6relyu9zgGPN7Elc4L9n6pFkPnk2pyvI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2d32455bce8dccb7cefba2a229767b275ab69201', 'width': 108}, {'height': 144, 'url': 'https://external-preview.redd.it/2v0VwxcBbBg6relyu9zgGPN7Elc4L9n6pFkPnk2pyvI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=07b6532e692d7db891ed0e6bd235123cdab6ab78', 'width': 216}, {'height': 213, 'url': 'https://external-preview.redd.it/2v0VwxcBbBg6relyu9zgGPN7Elc4L9n6pFkPnk2pyvI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=072bc0f26238f01930ff334e1f91b0ec8ea00aa2', 'width': 320}, {'height': 426, 'url': 'https://external-preview.redd.it/2v0VwxcBbBg6relyu9zgGPN7Elc4L9n6pFkPnk2pyvI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=391e430b01d32da42cb89c1e3d54d0754192de0b', 'width': 640}, {'height': 640, 'url': 'https://external-preview.redd.it/2v0VwxcBbBg6relyu9zgGPN7Elc4L9n6pFkPnk2pyvI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=33a901f73d3eb5dcaf0631056b16141d79e7dccb', 'width': 960}, {'height': 720, 'url': 'https://external-preview.redd.it/2v0VwxcBbBg6relyu9zgGPN7Elc4L9n6pFkPnk2pyvI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=306400ca48077cec38ad9d5f679cf4565457c94f', 'width': 1080}], 'source': {'height': 1500, 'url': 'https://external-preview.redd.it/2v0VwxcBbBg6relyu9zgGPN7Elc4L9n6pFkPnk2pyvI.jpg?auto=webp&amp;s=764c8f6dddf2f6b716be12fcdbe75b222914298d', 'width': 2250}, 'variants': {}}]}",6,1645188638,1,,True,False,False,haskell,t5_2qh36,69116,public,default,Do You Know Where Haskell Is Used?,0,[],1.0,https://typeable.io/blog/2021-12-13-haskell-usage,all_ads,6,,,https://typeable.io/blog/2021-12-13-haskell-usage,93.0,140.0,,reddit,,,,,,,,,,,,,
256.0,[],False,finitemonoid,,[],,text,t2_gz6wp6c4,False,False,False,[],False,False,1645180147,self.haskell,https://www.reddit.com/r/haskell/comments/svesmp/using_recursion_in_list_comprehension/,{},svesmp,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/svesmp/using_recursion_in_list_comprehension/,False,,,6,1645180158,1,"I want to define all the lists containing 0's and 1's. I tried this.

 L = \[\] : \[ mappend x \[i\] | x &lt;-  L, i &lt;- \[0,1\]\] 

GHCI says

&lt;interactive&gt;:1:1: error: Not in scope: data constructor ‘L’

Why is it not allowed?",True,False,False,haskell,t5_2qh36,69116,public,self,Using recursion in list comprehension,0,[],1.0,https://www.reddit.com/r/haskell/comments/svesmp/using_recursion_in_list_comprehension/,all_ads,6,,,,,,,,,,,,,,,,,,,,
257.0,[],False,Putkayy,,[],,text,t2_4cs61p0t,False,False,False,[],False,False,1645167024,self.haskell,https://www.reddit.com/r/haskell/comments/svbfjg/adding_element_to_empty_list/,{},svbfjg,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/svbfjg/adding_element_to_empty_list/,False,,,6,1645167035,1,"I am trying to implement a BST in Haskell, but I can't figure out how lists work in Haskell. So the algorithm would add a node and for each node two empty lists that denote it's two subtrees. However, I am stuck at initializing a BST in the first place. So when I insert a number into an empty BST:

    insert 5 []

it would return a list like so:

    [5, [], []]

This is what I have:

    insert x lis =
        if null lis then
            [x, [], []]
        else
            undefined --for now

I thought the function declaration would have to be:

    insert :: Integer -&gt; [Integer] -&gt; [Integer]

But that doesn't work. If you know how to solve this, I would also appreciate reference material where these things are covered. I am struggling to find relevant documentation.",True,False,False,haskell,t5_2qh36,69114,public,self,Adding element to empty list,0,[],1.0,https://www.reddit.com/r/haskell/comments/svbfjg/adding_element_to_empty_list/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
258.0,[],False,Suspicious-Foot6884,,[],,text,t2_99pjzn9u,False,False,False,[],False,False,1645152397,self.haskell,https://www.reddit.com/r/haskell/comments/sv6ucd/fail_attempt_to_read_an_input_to_a_custom_data/,{},sv6ucd,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sv6ucd/fail_attempt_to_read_an_input_to_a_custom_data/,False,,,6,1645152408,1,"&amp;#x200B;

Fail attempt to read an input to a custom data type in Haskell. 

I would appreciate any help to do this properly.

    data lim a = slide a         
              | A1 (lim a) (lim a)         
              deriving (Read, Show)  
    main :: IO () 
    main = do 
        readline &lt;- getLine ]
        print ((read :: String -&gt; (lim a)) readline) 

I get this error: 

**No instance for (Read a) arising from a use of ‘read’**

**Possible fix:**

**add (Read a) to the context of**

**an expression type signature:**

**forall a. String -&gt; Prop a**

**• In the expression: read :: String -&gt; (Prop a)**

**In the first argument of ‘print’, namely**

**‘((read :: String -&gt; (Prop a)) line)’**

**In a stmt of a 'do' block:**

**print ((read :: String -&gt; (Prop a)) line)**",True,False,False,haskell,t5_2qh36,69114,public,self,Fail attempt to read an input to a custom data type in Haskell. I would appreciate any help to do this properly.,0,[],1.0,https://www.reddit.com/r/haskell/comments/sv6ucd/fail_attempt_to_read_an_input_to_a_custom_data/,all_ads,6,,,,,,,,,,,,,,,,,,,,
259.0,[],False,ouchthats,,[],,text,t2_ivyjy,False,False,False,[],False,False,1645152136,self.haskell,https://www.reddit.com/r/haskell/comments/sv6r8l/yesod_on_m1/,{},sv6r8l,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/sv6r8l/yesod_on_m1/,False,,,6,1645152147,1,"I know stack doesn't love M1 macs, but it seems to work fine as long as I run it in a Rosetta terminal with the `--arch x86_64` flag.

Today, though, I'm trying to install the yesod bin following the [Yesod quickstart guide](https://www.yesodweb.com/page/quickstart), and not having any luck. (I'm in a Rosetta terminal and adding `--arch x86_64` to stack commands.)

The error occurs at the step of installing the yesod command line tool (step 3); this fails with:
    
    &lt;command line&gt;: can't load framework: Cocoa (not found)

Is it even possible to work with the yesod command line tool on an M1? If so, am I just making some boneheaded mistake?",True,False,False,haskell,t5_2qh36,69114,public,self,Yesod on M1?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sv6r8l/yesod_on_m1/,all_ads,6,,,,,,,,,,,,,,,,,,,,
260.0,[],False,IGTT2C,,[],,text,t2_p9j8k,False,False,False,[],False,False,1645145157,self.haskell,https://www.reddit.com/r/haskell/comments/sv4bgd/is_there_a_good_bytestring_string_implemenatation/,{},sv4bgd,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sv4bgd/is_there_a_good_bytestring_string_implemenatation/,False,,,6,1645145167,1,"Should be working with utf8 encoded files and without using anything from data.text.

Any help,  documentation would be greatly apprechiated.",True,False,False,haskell,t5_2qh36,69111,public,self,Is there a good ByteString -&gt; String implemenatation?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sv4bgd/is_there_a_good_bytestring_string_implemenatation/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
261.0,[],False,JsemRyba,,[],,text,t2_2yjz9wvk,False,False,False,[],False,False,1645126994,self.haskell,https://www.reddit.com/r/haskell/comments/suxeai/weird_behavior_with_lazy_evalaution_of_infinite/,{},suxeai,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/suxeai/weird_behavior_with_lazy_evalaution_of_infinite/,False,,,6,1645127005,1,"Hi everyone,

I would much appreciate some help. Haskell is acting really weird with infinite lists and I would like to figure out, what is happening.

So, I have a type `BitString`, which is a wrapper around `Data.ByteString.Lazy` and allows me to construct a bytestring from single bits. It works fine, but I would like to be able to work with infinite bitstrings.

Here is part of the code relevant to this problem:

    import qualified Data.ByteString.Lazy as BL
    import qualified Data.ByteString.Lazy.Internals as BLI
    
    data BitString = BitString Word8 Word8 BL.ByteString -- head, size of the head, tail
    
    #define EMPTY (BitString 0 0 BLI.Empty) -- for simpler pattern matching
    
    empty :: BitString
    empty = EMPTY
    
    cons :: Word8 -&gt; BitString -&gt; BitString
    cons b (BitString h l t)
        | l == 7    = BitString 0 0 (push h b 7 `BL.cons` t)
        | otherwise = BitString (push h b l) (l + 1) t
      where
        push h b _ = h * 2 + b
    
    uncons :: BitString -&gt; Maybe (Word8, BitString)
    uncons EMPTY = Nothing
    uncons (BitString _ 0 t) = do
        (h, t) &lt;- BL.uncons t
        uncons $ BitString h 8 t
    uncons (BitString h l t) = Just
        ( h `mod` 2
        , BitString (h `div` 2) (l - 1) t
        )
    
    take :: Int64 -&gt; BitString -&gt; BitString
    take 0 bs = empty
    take n bs = case uncons bs of
        Nothing     -&gt; bs
        Just (h, t) -&gt; h `cons` take (n - 1) t

Allright, now I would like to achieve this behavior:

    &gt; BS.take 5 $ foldr BS.cons BS.empty $ repeat 0
    [0,0,0,0,0] -- Custom Show, without that (BitString 0 5 """")

But this code loops indefinitely. This is not the confusing part though. When I try this:

    &gt; BS.take 5 $ foldr BS.cons BS.empty [1..]
    [1,0,0,0,0]

Now it terminates without any problem! The result is nonsensical because `cons` works correctly only

for zeros and ones. So maybe the higher numbers somehow caused the program to terminate? No.

    &gt; BS.take 5 $ foldr BS.cons BS.empty [1000,1000..]

Loops once again!

Allright, so it seems like it loops when I construct the type from infinite list of the *same* numbers. Let's try one more thing then:

    BS.take 5 $ foldr BS.cons BS.empty $ concatMap (const [0,1]) [0..]

Nope, still doesn't terminate. No matter to what sequence of numbers I map it.

I would really appreciate any help, because this is driving me crazy. What might be causing this behavior? It seems like it terminates only when the numbers in the infinite list I'm folding over changes indefinitely. When it's all the same number or the same repeating sequence of numbers, then it loops forever. Thank you all in advance.",True,False,False,haskell,t5_2qh36,69101,public,self,Weird behavior with lazy evalaution of infinite lists,0,[],1.0,https://www.reddit.com/r/haskell/comments/suxeai/weird_behavior_with_lazy_evalaution_of_infinite/,all_ads,6,,,,,,,,,,,,,,,,,,,,
262.0,[],False,aaryan_rg10,,[],,text,t2_4xcy9twr,False,False,False,[],False,False,1645125128,self.haskell,https://www.reddit.com/r/haskell/comments/suwpme/reading_writing_file/,{},suwpme,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/suwpme/reading_writing_file/,False,,,6,1645125138,1,"Q)Write a Haskell program that:
• reads a file called “filelist.txt ”, that contains a list of filenames, one per
line (with no extra whitespace or other text).
• For each filename “fname” in “filelist.txt ”, it writes a file with that
name, whose contents are that filename, converted to uppercase. For
example if filename “secret.log” appears in “filelist.txt ”, then a file
called “secret.log” should be written, with contents “SECRET.LOG”.
You can assume the names “filelist.txt ”, “FILELIST.TXT”, or any
mixed-case versions of them, do not occur inside the “filelist.txt ” file


My answers)

fileToUpperCase =
      do     text &lt;- readFile (""filelist.txt"")
             writeFile (""aSECRET.log"") (toUpper text)
             putStr ""Done.""

Can you correct me?",True,False,False,haskell,t5_2qh36,69100,public,self,Reading writing file,0,[],1.0,https://www.reddit.com/r/haskell/comments/suwpme/reading_writing_file/,all_ads,6,,,,,,,,,,,,,,,,,,,,
263.0,[],False,Available_Ad_6726,,[],,text,t2_ao6nzf2c,False,False,False,[],False,False,1645121378,self.haskell,https://www.reddit.com/r/haskell/comments/suv8ru/i_need_help_by_this_code/,{},suv8ru,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/suv8ru/i_need_help_by_this_code/,False,,,6,1645121388,1,"so i have to code a program with the name mydrop which deletes n Elements for Example 

mydrop \[1,2,3,4,5,6,7\] 3 = \[4,5,6,7\]

this is what i got 

mydrop :: \[Int\] -&gt; Int -&gt; \[Int\]  
mydrop \[\] = \[\]   
mydrop (t:x:xs) a  
 | a &gt;= length (t:x:xs) = error (""not possible"")  
 | a &lt; length (t:x:xs) = error (""d"")",True,False,False,haskell,t5_2qh36,69101,public,self,I need Help by this code,0,[],1.0,https://www.reddit.com/r/haskell/comments/suv8ru/i_need_help_by_this_code/,all_ads,6,,,,,,,,,,,,,,,,,,,,
264.0,[],False,_query,,[],,text,t2_fjd8s,False,False,False,[],False,False,1645081559,thecodedmessage.com,https://www.reddit.com/r/haskell/comments/suinws/haskell_error_messages_come_on/,{},suinws,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/suinws/haskell_error_messages_come_on/,False,link,"{'enabled': False, 'images': [{'id': 'QUQz3RtsweJnUz2YAMYClK-u9adac8YB7euKHNG64ok', 'resolutions': [], 'source': {'height': 50, 'url': 'https://external-preview.redd.it/OUcEkqtExV_bOOnm96g5bk7WAsP8FRCY1UsdCEKFX7g.jpg?auto=webp&amp;s=a51bf7814d23abe1805187f8934d28450f5cccc5', 'width': 50}, 'variants': {}}]}",6,1645081569,1,,True,False,False,haskell,t5_2qh36,69092,public,default,Haskell Error Messages: Come on!,0,[],1.0,https://www.thecodedmessage.com/posts/haskell-gripe/,all_ads,6,,,https://www.thecodedmessage.com/posts/haskell-gripe/,50.0,50.0,,,,,,,,,,,,,,,
265.0,[],False,Available_Ad_6726,,[],,text,t2_ao6nzf2c,False,False,False,[],False,False,1645042292,self.haskell,https://www.reddit.com/r/haskell/comments/su55ai/i_need_help_by_this_code/,{},su55ai,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/su55ai/i_need_help_by_this_code/,False,,,6,1645042302,1,"Hello, I need to code a program which compares two names of the following code

type Person =(String,String,Int)  
name :: Person -&gt; String  
name (a, \_, \_) = a

If it's the same name the outpu should be true otherwise it's false",True,False,False,haskell,t5_2qh36,69083,public,self,I need help by this code,0,[],1.0,https://www.reddit.com/r/haskell/comments/su55ai/i_need_help_by_this_code/,all_ads,6,,,,,,,,,,,,,,,,,,,,
266.0,[],False,aridgupta,,[],,text,t2_1o55yh5j,False,False,False,[],False,False,1645031961,self.haskell,https://www.reddit.com/r/haskell/comments/su18vr/what_are_the_goto_libraries_for_restapis_and/,{},su18vr,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,2,0,False,all_ads,/r/haskell/comments/su18vr/what_are_the_goto_libraries_for_restapis_and/,False,,,6,1645031972,1,"I am new to Haskell and have been wondering what are the go-to libraries for web backend development. What are you all using? Also, it would be really appreciable if could point me to some blogs or tutorials related to these libraries?",True,False,False,haskell,t5_2qh36,69080,public,self,What are the go-to libraries for RestAPIs and GraphQL APIs?,0,[],1.0,https://www.reddit.com/r/haskell/comments/su18vr/what_are_the_goto_libraries_for_restapis_and/,all_ads,6,,,,,,,,,,,,,,,,,,,,
267.0,[],False,Available_Ad_6726,,[],,text,t2_ao6nzf2c,False,False,False,[],False,False,1645030946,self.haskell,https://www.reddit.com/r/haskell/comments/su0uo7/haskell_code_help/,{},su0uo7,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/su0uo7/haskell_code_help/,False,,,6,1645030956,1,[removed],True,False,False,haskell,t5_2qh36,69079,public,self,Haskell code Help,0,[],1.0,https://www.reddit.com/r/haskell/comments/su0uo7/haskell_code_help/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
268.0,[],False,HateUsernamesMore,,[],,text,t2_1ahi7ltr,False,False,False,[],False,False,1644976112,self.haskell,https://www.reddit.com/r/haskell/comments/stjp4x/do_two_variables_reference_the_same_data_not/,{},stjp4x,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,13,0,False,all_ads,/r/haskell/comments/stjp4x/do_two_variables_reference_the_same_data_not/,False,,,6,1644976123,1,"I am doing some testing an I want to check if a function returns the correct data. There is not an Eq instance. Is there a way to check if the returned value references the same data as a variable?

I was looking at GHC.Ptr but I have not seen a way to `a -&gt; Ptr a` and it seems to not be intended for native types.

Is there a way to check if two variables reference the same data (not checking for equality of the data)?",True,False,False,haskell,t5_2qh36,69075,public,self,Do two variables reference the same data (not equality)?,0,[],1.0,https://www.reddit.com/r/haskell/comments/stjp4x/do_two_variables_reference_the_same_data_not/,all_ads,6,,,,,,,,,,,,,,,,,,,,
269.0,[],False,bpullen1,,[],,text,t2_a5ngugm7,False,False,False,[],False,False,1644969957,self.haskell,https://www.reddit.com/r/haskell/comments/sthhzj/haskell_plutus_pioneers/,{},sthhzj,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sthhzj/haskell_plutus_pioneers/,False,,,6,1644969968,1,[removed],True,False,False,haskell,t5_2qh36,69073,public,self,"Haskell, Plutus pioneers",0,[],1.0,https://www.reddit.com/r/haskell/comments/sthhzj/haskell_plutus_pioneers/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
270.0,[],False,santiweight,,[],,text,t2_rtlri,False,False,False,[],False,False,1644965519,self.haskell,https://www.reddit.com/r/haskell/comments/stfszl/how_do_i_define_this_superunsafe_type_class_not/,{},stfszl,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,6,0,False,all_ads,/r/haskell/comments/stfszl/how_do_i_define_this_superunsafe_type_class_not/,False,,,6,1644965529,1,"I want to write:

    class PrettyOrShow a where
      prettyOrShow :: a -&gt; String
    
    instance Pretty a =&gt; PrettyOrShow a where
      prettyOrShow = show . pretty
    
    instance Show a =&gt; PrettyOrShow a where
      prettyOrShow a = show

Now the behavior I want is: if my type is known (at compile-time) to be Show, then use show, but if I know Pretty, then use pretty OVER the show instance (subsequent instances might take further precedence, but I don't need more instances to be possible). The part of resolution order makes sense to me (with some configuration of OVERLAPS/OVERLAPPABLE).

But I know why I can't write this - the a in the instance definitions match all types! And the instance resolution simply does not use the constraints to resolve the instances. My understanding of the reasoning for this design is that Haskell would become internally inconsistent, because in different contexts, prettyOrShow could have different behavior for the same types in different contexts. Great - I love that - super safe. But in this case I DONT CARE. I want to write this out of convenience - so I don't care about safety here - if the behavior is inconsistent I will still sleep deeply and peacefully . If we had dependent constraints or something similar, perhaps this would be easy - but as it stands - this is not...

Is there a way to do what I want to do? Make it as grimy as you like. Use `reflection` if you must but bonus points if its raw GHC Haskell: we will all marvel in the ugliness.",True,False,False,haskell,t5_2qh36,69072,public,self,How do I define this super-unsafe type class (not internally consistent at all 😱),0,[],1.0,https://www.reddit.com/r/haskell/comments/stfszl/how_do_i_define_this_superunsafe_type_class_not/,all_ads,6,,,,,,,,,,,,,,,,,,,,
271.0,[],False,notooth1,,[],,text,t2_sm171,False,False,False,[],False,False,1644951421,self.haskell,https://www.reddit.com/r/haskell/comments/stabv7/need_help_converting_a_string_to_a_list/,{},stabv7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,9,0,False,all_ads,/r/haskell/comments/stabv7/need_help_converting_a_string_to_a_list/,False,,,6,1644951432,1,"Can anyone let me know a predefined function that converts `""Hello, world!""` to `[""Hello"", ""world!""]`?",True,False,False,haskell,t5_2qh36,69064,public,self,Need help converting a string to a list,0,[],1.0,https://www.reddit.com/r/haskell/comments/stabv7/need_help_converting_a_string_to_a_list/,all_ads,6,,,,,,,,,,,,,,,,,,,,
272.0,[],False,jaspervdj,,[],,text,t2_3r33p,False,False,False,[],False,False,1644951000,zfoh.ch,https://www.reddit.com/r/haskell/comments/sta62b/zurihac_2022_takes_place_inperson_1113_june/,{},sta62b,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,4,0,False,all_ads,/r/haskell/comments/sta62b/zurihac_2022_takes_place_inperson_1113_june/,False,link,"{'enabled': False, 'images': [{'id': 'W-78_qLGUAB6lwUKdf6ttRPGM0b4fxoEGHlxcXAtAvU', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/9XqS8_PcQtTBPnx_E8xZRhdQR-28I2iqJUoZLDyMZqg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=9c640e95fa1b8c04508bfdbe64a48168bf69ce56', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/9XqS8_PcQtTBPnx_E8xZRhdQR-28I2iqJUoZLDyMZqg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0737bbae4f7e6049d254c46370d7eab0c3ff2554', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/9XqS8_PcQtTBPnx_E8xZRhdQR-28I2iqJUoZLDyMZqg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c656f6c49fd3219053d2d6653b69b869e1842ef3', 'width': 320}], 'source': {'height': 460, 'url': 'https://external-preview.redd.it/9XqS8_PcQtTBPnx_E8xZRhdQR-28I2iqJUoZLDyMZqg.jpg?auto=webp&amp;s=328256e7384746bc5c3b942513d9d3fed7bcfd8c', 'width': 460}, 'variants': {}}]}",6,1644951010,1,,True,False,False,haskell,t5_2qh36,69064,public,default,"ZuriHac 2022 takes place in-person 11-13 June, registration now open",0,[],1.0,https://zfoh.ch/zurihac2022/,all_ads,6,,,https://zfoh.ch/zurihac2022/,140.0,140.0,,,,,,,,,,,,,,,
273.0,[],False,divip,,[],,text,t2_4ehu9,False,False,False,[],False,False,1644950476,divip.hu,https://www.reddit.com/r/haskell/comments/st9ymh/reduce_code_complexity_by_categorical_combinators/,{},st9ymh,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/st9ymh/reduce_code_complexity_by_categorical_combinators/,False,,,6,1644950487,1,,True,False,False,haskell,t5_2qh36,69064,public,default,Reduce code complexity by categorical combinators (case study),0,[],1.0,https://divip.hu/structure.html,all_ads,6,,,https://divip.hu/structure.html,,,,,,,,,,,,,,,,,
274.0,[],False,xy-li,,[],,text,t2_6ewqntob,False,False,False,[],False,False,1644950232,self.haskell,https://www.reddit.com/r/haskell/comments/st9v7p/any_suggestions_on_joining_gsoc_haskellorg/,{},st9v7p,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/st9v7p/any_suggestions_on_joining_gsoc_haskellorg/,False,,,6,1644950243,1,"I'm interested in [Google summer of code](https://summerofcode.withgoogle.com/) event but missed it last year. I want to attend the event this year and notice that [`Haskell.org`](https://summerofcode.withgoogle.com/archive/2021/organizations/6216810210263040) was one of the organizations. It sounds really exciting, I hope `Haskell.org` will participate in GSoC this year as well. But I have little experience with Haskell, I'm worried about how to write an expressive proposal when I don't even know which projects they will focus on. Can anyone give me so resources or suggestions about the following question?

1. How can I predict the projects this year? (Where can I find out some clues?)
2. Which materials should I go through to master required basic skills, including reading books, articles (both blogs and papers), open-source project code, and any other resource? I can only finish some 1-3 kyu problems on CodeWars now. ([My CodeWars Profile](https://www.codewars.com/users/xy-li))
3. How to write an attractive proposal in GSoC for working with `Haskell.org`? I can find very few accepted GSoC proposals on the Internet, many of which were even written several years ago. I have almost no idea about how to write the proposal, especially for `Haskell.org`, can you provide me with some examples for references?

Thanks a lot.",True,False,False,haskell,t5_2qh36,69064,public,self,Any suggestions on joining GSoC Haskell.org?,0,[],1.0,https://www.reddit.com/r/haskell/comments/st9v7p/any_suggestions_on_joining_gsoc_haskellorg/,all_ads,6,,,,,,,,,,,,,,,,,,,,
275.0,[],False,imsekun,,[],,text,t2_96x7erfk,False,False,False,[],False,False,1644909995,self.haskell,https://www.reddit.com/r/haskell/comments/ssxb65/generating_static_binary_ci_questions/,{},ssxb65,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,19,0,False,all_ads,/r/haskell/comments/ssxb65/generating_static_binary_ci_questions/,False,self,"{'enabled': False, 'images': [{'id': 'ZBVcLhcMfX-Jq-VHigTj9GUXNBWQ1h_VAwd9qYa5jP0', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/AXz0GC7Hq5b7OI-Eqcm2RTvCTJSDLghwPy8h_O0HiRw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=506371eb7065a1a9196be2a4d4bcc6116bc44c35', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/AXz0GC7Hq5b7OI-Eqcm2RTvCTJSDLghwPy8h_O0HiRw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f6256ba7d6206875f0c7be4c0eb54043405dfc37', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/AXz0GC7Hq5b7OI-Eqcm2RTvCTJSDLghwPy8h_O0HiRw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6dda1be66e97717c980316c005f618b23d35d2c6', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/AXz0GC7Hq5b7OI-Eqcm2RTvCTJSDLghwPy8h_O0HiRw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=117f1ea2d963138866ac382f1ab04836f9a58d52', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/AXz0GC7Hq5b7OI-Eqcm2RTvCTJSDLghwPy8h_O0HiRw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=f695121ced4b35ef03c6ff123de1c92e0f819034', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/AXz0GC7Hq5b7OI-Eqcm2RTvCTJSDLghwPy8h_O0HiRw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=447440cade02659bbd652e43118f200e9ef54a2f', 'width': 1080}], 'source': {'height': 640, 'url': 'https://external-preview.redd.it/AXz0GC7Hq5b7OI-Eqcm2RTvCTJSDLghwPy8h_O0HiRw.jpg?auto=webp&amp;s=134cf7b72f1d5cb0283d4e39f0d1e1d4299584e9', 'width': 1280}, 'variants': {}}]}",6,1644910006,1,"Hello /r/Haskell.

I have two questions, and both of them are about this commit: https://github.com/sekunho/swapi/tree/59277e41bd12b6f390600c78f12742f5da335aea.

**Static binary**

Currently I'm not really aware of exactly what libs I need to build a static binary with `cabal build`; locally in `nix develop`. 

- [Output](https://pastebin.com/raw/yj7dHABu)
- [Packages in flake.nix](https://github.com/sekunho/swapi/blob/59277e41bd12b6f390600c78f12742f5da335aea/flake.nix#L25-L43)
- [`swoogle`'s `ghc-options` in swapi.cabal](https://github.com/sekunho/swapi/blob/59277e41bd12b6f390600c78f12742f5da335aea/swapi.cabal#L132)

It does work fine in the CI (I think) since I'm using the `ghc-musl` image, but I'm not sure how that translates to a Nix environment, unfortunately. Building it with dynamic linking does work though (by removing the `ghc-options` under the `swoogle` executable), but I'd like for it to be consistent between CI and the dev environment, for the most part. 

**Discrepancies in CI and dev**

This has more to do with how `cabal` resolves the dependencies. So this is the result of the most recent job: [GitHub Actions](https://github.com/sekunho/swapi/runs/5196164198?check_suite_focus=true) [PasteBin](https://pastebin.com/raw/xQy69d3x).

My question here is, despite freezing the dependencies (and committing it), why does `cabal` resolve them differently? Locally it all builds, and runs just fine. But in the CI it seems to be complaining about conflicting versions of base, for example. At one point it also complained about `req`, and some other libraries. I think I'm missing something obvious to make it consistent between both environments.

I'll try to provide more information if ever what I've provided so far is insufficient. Thanks.",True,False,False,haskell,t5_2qh36,69069,public,self,Generating static binary + CI questions,0,[],1.0,https://www.reddit.com/r/haskell/comments/ssxb65/generating_static_binary_ci_questions/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
276.0,[],False,rainflow2,,[],,text,t2_jjcd25,False,False,False,[],False,False,1644880496,self.haskell,https://www.reddit.com/r/haskell/comments/ssnw8i/hiring_remote/,{},ssnw8i,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,12,0,False,all_ads,/r/haskell/comments/ssnw8i/hiring_remote/,False,,,6,1644880507,1,"Looking for Haskell developer for full-time job fully remote for Europen company 

Salary 50k$\~100k$ annually

fully 100% remote job

Welcome to send a message with your CV",True,False,False,haskell,t5_2qh36,69061,public,self,[HIRING] [REMOTE],0,[],1.0,https://www.reddit.com/r/haskell/comments/ssnw8i/hiring_remote/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,,,,,,,,,,,,,,
277.0,[],False,epoberezkin,,[],,text,t2_13t18x,False,False,False,[],False,False,1644872314,self.haskell,https://www.reddit.com/r/haskell/comments/ssl6qm/simplex_chat_public_beta_for_ios_is_available_on/,{},ssl6qm,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/ssl6qm/simplex_chat_public_beta_for_ios_is_available_on/,False,,,6,1644872325,1,"SimpleX Chat – private and secure chat app – is now available as public beta for iOS 15 – you can install it from TestFlight via [this link](https://testflight.apple.com/join/DWuT2LQu).

SimpleX Chat for terminal is built in Haskell, and with a lot of help we made the same core work both on iOS and Android platforms.

To exchange messages privately you can connect either via the invitation link you can share from the app or by scanning QR code from the app on their phone (e.g., during video call or in person).

More information about SimpleX and iOS app is in this post: [https://github.com/simplex-chat/simplex-chat/blob/stable/blog/20220214-simplex-chat-ios-public-beta.md](https://github.com/simplex-chat/simplex-chat/blob/stable/blog/20220214-simplex-chat-ios-public-beta.md)

We really look forward to your feedback – you can connect to the team from the app settings (it will be myself or somebody else replying to you:)

Please star [the repo on GitHub](https://github.com/simplex-chat/simplex-chat) (thanks a lot if you did already!) and share iOS app beta with your friends – Android app is coming in a few weeks too!",True,False,False,haskell,t5_2qh36,69059,public,self,SimpleX Chat public beta for iOS is available on TestFlight!,0,[],1.0,https://www.reddit.com/r/haskell/comments/ssl6qm/simplex_chat_public_beta_for_ios_is_available_on/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
278.0,[],False,ltielen,,[],,text,t2_1q2pxsi,False,False,False,[],False,False,1644872252,luctielen.com,https://www.reddit.com/r/haskell/comments/ssl5ty/analyses_are_arrows/,{},ssl5ty,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,2,0,False,all_ads,/r/haskell/comments/ssl5ty/analyses_are_arrows/,False,,,6,1644872263,1,,True,False,False,haskell,t5_2qh36,69059,public,default,Analyses are arrows,0,[],1.0,https://luctielen.com/posts/analyses_are_arrows/,all_ads,6,,,https://luctielen.com/posts/analyses_are_arrows/,,,,,,,,,,,,,,,,,
279.0,[],False,fosskers,,[],,text,t2_3xuu5,False,False,False,[],False,False,1644859728,fosskers.ca,https://www.reddit.com/r/haskell/comments/ssg4bc/blog_software_development_languages_haskell/,{},ssg4bc,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ssg4bc/blog_software_development_languages_haskell/,False,,,6,1644859739,1,,True,False,False,haskell,t5_2qh36,69058,public,default,[Blog] Software Development Languages: Haskell,0,[],1.0,https://www.fosskers.ca/en/blog/haskell-software-dev,all_ads,6,,,https://www.fosskers.ca/en/blog/haskell-software-dev,,,,reddit,,,,,,,,,,,,,
280.0,[],False,myShoggoth,,[],,text,t2_fpj4y,False,False,False,[],False,False,1644859194,discourse.haskell.org,https://www.reddit.com/r/haskell/comments/ssfwgi/2022_call_for_nominations_for_the_haskell/,{},ssfwgi,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ssfwgi/2022_call_for_nominations_for_the_haskell/,False,link,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1644859205,1,,True,False,False,haskell,t5_2qh36,69058,public,default,2022 Call for Nominations for the Haskell Foundation,0,[],1.0,https://discourse.haskell.org/t/2022-call-for-nominations-for-the-haskell-foundation/4104,all_ads,6,,,https://discourse.haskell.org/t/2022-call-for-nominations-for-the-haskell-foundation/4104,140.0,140.0,,,,,,,,,,,,,,,
281.0,[],False,unqualified_redditor,,[],,text,t2_r3c91,False,False,False,[],False,False,1644858444,blog.cofree.coffee,https://www.reddit.com/r/haskell/comments/ssfln3/how_to_design_a_chat_bot/,{},ssfln3,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/ssfln3/how_to_design_a_chat_bot/,False,,,6,1644858455,1,,True,False,False,haskell,t5_2qh36,69057,public,default,How to design a chat bot,0,[],1.0,https://blog.cofree.coffee/2022-02-14-how-to-design-a-chat-bot/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://blog.cofree.coffee/2022-02-14-how-to-design-a-chat-bot/,,,,,,,,,,,,,,,,,
282.0,[],False,bgamari,,[],,text,t2_7d9ta,False,False,False,[],False,False,1644858073,well-typed.com,https://www.reddit.com/r/haskell/comments/ssfg5h/welltyped_blog_ghc_activities_december/,{},ssfg5h,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,7,0,False,all_ads,/r/haskell/comments/ssfg5h/welltyped_blog_ghc_activities_december/,False,,,6,1644858083,1,,True,False,False,haskell,t5_2qh36,69058,public,default,[Well-Typed Blog] GHC Activities: December 2021–January 2022,0,[],1.0,https://well-typed.com/blog/2022/02/ghc-2021-12-2022-01/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://well-typed.com/blog/2022/02/ghc-2021-12-2022-01/,,,,,,,,,,,,,,,,,
283.0,[],False,soulomoon,,[],,text,t2_169kk4,False,False,False,[],False,False,1644851054,self.haskell,https://www.reddit.com/r/haskell/comments/sscofz/linter_and_interpreter_in_haskell_with_mtl_style/,{},sscofz,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,6,0,False,all_ads,/r/haskell/comments/sscofz/linter_and_interpreter_in_haskell_with_mtl_style/,False,self,"{'enabled': False, 'images': [{'id': 'JM5qQRNiLXg1aOn0sdp8mcp1vEV3QIyCyRcHBWPuSGQ', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/855jrf04R0Z3Omjp0qGNOlckHRTI6SyfMA4rUbNFyJ0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=cebfa8afabae7cc43045115104627b22bcdb49af', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/855jrf04R0Z3Omjp0qGNOlckHRTI6SyfMA4rUbNFyJ0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ba68ce7258fa2979c94aa4dbe5ad2448ad794bf4', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/855jrf04R0Z3Omjp0qGNOlckHRTI6SyfMA4rUbNFyJ0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=39b250a0aef931e28243b5669c5829ca2c17a50d', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/855jrf04R0Z3Omjp0qGNOlckHRTI6SyfMA4rUbNFyJ0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=378840c0cf2172333538c6744f0997eb0b2bca80', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/855jrf04R0Z3Omjp0qGNOlckHRTI6SyfMA4rUbNFyJ0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=14800d0a390ce98f5344fe493a93b1bd857d1067', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/855jrf04R0Z3Omjp0qGNOlckHRTI6SyfMA4rUbNFyJ0.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=950197fa53c4511a4b6d74a90a6cf8d68a9280a2', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/855jrf04R0Z3Omjp0qGNOlckHRTI6SyfMA4rUbNFyJ0.jpg?auto=webp&amp;s=fc61fac145508807f57401e951d3f564f60d302a', 'width': 1200}, 'variants': {}}]}",6,1644851065,1,"Hey guys, I have written an introduction level [implementation of linter and interpreter](https://github.com/soulomoon/arith) in haskell with mtl and some technique from [https://arxiv.org/pdf/1707.04755.pdf](https://arxiv.org/pdf/1707.04755.pdf) to write interpreter extension. Would be grateful If any one would review, comments and give advices.",True,False,False,haskell,t5_2qh36,69058,public,self,linter and interpreter in haskell with mtl style (Introduction level),0,[],1.0,https://www.reddit.com/r/haskell/comments/sscofz/linter_and_interpreter_in_haskell_with_mtl_style/,all_ads,6,,,,,,,,,,,,,,,,,,,,
284.0,[],False,theKGS,,[],,text,t2_eubyx,False,False,False,[],False,False,1644803601,self.haskell,https://www.reddit.com/r/haskell/comments/sryudh/recursion_over_multiple_functions/,{},sryudh,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,17,0,False,all_ads,/r/haskell/comments/sryudh/recursion_over_multiple_functions/,False,,,6,1644803611,1,"I had to write a rather big university assignment in Haskell a year ago where a particular pattern emerged in the code. There were multiple situations where we had function call chains that looked like this:

foo -&gt; bar -&gt; baz -&gt; foo -&gt; bar -&gt; baz etc. etc.

Baz had some conditional behavior in it that either quit the ""loop"" or returned back to foo again. In the case of the assignment the data being passed around was data for the solution to a puzzle.

The code worked, but the more I think about it the sketchier it seems.

Does this seem appropriate or should it be avoided?",True,False,False,haskell,t5_2qh36,69051,public,self,Recursion over multiple functions?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sryudh/recursion_over_multiple_functions/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
285.0,[],False,Pyrotech_X,,[],,text,t2_5n0yr0lv,False,False,False,[],False,False,1644789307,self.haskell,https://www.reddit.com/r/haskell/comments/sru3ni/how_to_get_started_building_a_lexical_analyzer/,{},sru3ni,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,4,0,False,all_ads,/r/haskell/comments/sru3ni/how_to_get_started_building_a_lexical_analyzer/,False,,,6,1644789318,1,"I’ve recently been assigned an project where I’ve been tasked to create a lexical analyzer with the basis of the main function:

tokenize :: String -&gt; [(String, Token)]

and as an arithmetic string as it’s only parameter and without any imported functions (like split)

I’ve been struggling for the past couple days trying to understand Haskell but having no such luck other than recursion as well as a bit of the split function I made, which I know is used in this project. 

The output would be something like something like this:

Input: “(Result * 50) = Answer”

Output: [(“(“, LeftPar),(“Result”, Id),(“*”, Value 50),(“)”, RightPar),(“=“, Equals),(“Answer”, Id)]

I still want to learn so I don’t want the straight full answer, but rather a push in the right direction. Especially when it comes to data type declaration which I know comes into to play here. Any help would be appreciated at this point. Please and thank you.",True,False,False,haskell,t5_2qh36,69046,public,self,How to get started building a Lexical Analyzer from scratch?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sru3ni/how_to_get_started_building_a_lexical_analyzer/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
286.0,[],False,RybaMorska,,[],,text,t2_c6nqzv1a,False,False,False,[],False,False,1644786817,self.haskell,https://www.reddit.com/r/haskell/comments/srt5zw/poc_mtl_based_plugin_system/,{},srt5zw,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/srt5zw/poc_mtl_based_plugin_system/,False,self,"{'enabled': False, 'images': [{'id': '2efsbsJPNBW24Gt90p3Am003ssp0cx893fHm303TRjo', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/yUKv1_22RW0uGHtskeE5q9wl9UiVdcJZQvJcQRUOErc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=46179c9d907b64f18e5c667a258ff442580ce34d', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/yUKv1_22RW0uGHtskeE5q9wl9UiVdcJZQvJcQRUOErc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c85306a7531a23fd331c711161c4e9eff1c1be09', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/yUKv1_22RW0uGHtskeE5q9wl9UiVdcJZQvJcQRUOErc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a7206f068b22bb5101be1608182f399b2c1b7f4f', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/yUKv1_22RW0uGHtskeE5q9wl9UiVdcJZQvJcQRUOErc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f6c7e8c6cd48a1441ba2283eb6437f2b0badd7cc', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/yUKv1_22RW0uGHtskeE5q9wl9UiVdcJZQvJcQRUOErc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c3c88ad87c50e6c2e5086916a3caa99a25854b3d', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/yUKv1_22RW0uGHtskeE5q9wl9UiVdcJZQvJcQRUOErc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=2adef4fb358e67f7239a2153968144ca168d2b17', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/yUKv1_22RW0uGHtskeE5q9wl9UiVdcJZQvJcQRUOErc.jpg?auto=webp&amp;s=9d17f656d128cc9bc614ec5ef1db7f5959e8419e', 'width': 1200}, 'variants': {}}]}",6,1644786827,1,[removed],True,False,False,haskell,t5_2qh36,69044,public,self,[PoC] Mtl based plugin system,0,[],1.0,https://www.reddit.com/r/haskell/comments/srt5zw/poc_mtl_based_plugin_system/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
287.0,[],False,jamesjean2001,,[],,text,t2_46us7vrv,False,False,False,[],False,False,1644781895,self.haskell,https://www.reddit.com/r/haskell/comments/srr91q/how_to_print_a_string_within_a_do_block/,{},srr91q,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,13,0,False,all_ads,/r/haskell/comments/srr91q/how_to_print_a_string_within_a_do_block/,False,,,6,1644781905,1,"I want to print a string within a do block but Haskell says this is an error. 

I have the following function:

`getC :: CodeDe -&gt; GenS`  
`getC c = do`  
  `t &lt;- cType c`  
  `.....`  
  `return $ fmap....`

I want to print a String using  putStrLn (cName c), but if I insert it inside the do block everything breaks. For example

`getC :: CodeDe -&gt; GenS`  
`getC c = do`  
  `t &lt;- cType c`

  `putStrLn (Name c)`  
  `.....`  
  `return $ fmap....`

&amp;#x200B;

I have also tried this in other do blocks. I am confused as this would work in imperative languages. Why can I not print/do something in a do block that is unrelated to the final return?",True,False,False,haskell,t5_2qh36,69043,public,self,How to print a string within a do block?,0,[],1.0,https://www.reddit.com/r/haskell/comments/srr91q/how_to_print_a_string_within_a_do_block/,all_ads,6,,,,,,,,,,,,,,,,,,,,
288.0,[],False,dreixel,,[],,text,t2_378rf,False,False,False,[],False,False,1644760706,discourse.haskell.org,https://www.reddit.com/r/haskell/comments/srj71p/several_haskell_roles_with_core_strats_at/,{},srj71p,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/srj71p/several_haskell_roles_with_core_strats_at/,False,link,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1644760716,1,,True,False,False,haskell,t5_2qh36,69033,public,default,Several Haskell roles with Core Strats at Standard Chartered,0,[],1.0,https://discourse.haskell.org/t/several-haskell-roles-with-core-strats-at-standard-chartered/4087,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,https://discourse.haskell.org/t/several-haskell-roles-with-core-strats-at-standard-chartered/4087,140.0,140.0,,,,,,,,,,,,,,,
289.0,[],False,kindaro,,[],,text,t2_pcbvq,False,False,False,[],False,False,1644743335,self.functionalprogramming,https://www.reddit.com/r/haskell/comments/sremao/your_relationship_with_category_theory/,{},sremao,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sremao/your_relationship_with_category_theory/,False,,,6,1644743345,1,,True,False,False,haskell,t5_2qh36,69030,public,default,Your relationship with Category Theory?,0,[],1.0,/r/functionalprogramming/comments/sreldj/your_relationship_with_category_theory/,all_ads,6,,,/r/functionalprogramming/comments/sreldj/your_relationship_with_category_theory/,,,,reddit,,,t3_sreldj,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'kindaro', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_pcbvq', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1644743235.0, 'created_utc': 1644743235.0, 'discussion_type': None, 'distinguished': None, 'domain': 'self.functionalprogramming', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 'sreldj', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': True, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': '', 'link_flair_richtext': [], 'link_flair_template_id': '452249f6-9d22-11e7-9532-0ecc29c74cae', 'link_flair_text': 'Question', 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_sreldj', 'no_follow': True, 'num_comments': 0, 'num_crossposts': 1, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/functionalprogramming/comments/sreldj/your_relationship_with_category_theory/', 'pinned': False, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 1, 'secure_media': None, 'secure_media_embed': {}, 'selftext': '## TLDR: \u2002 Kindly answer the questions at the bottom of the post.\n\nCategory Theory is behind many of the innovations that the functional programming style is known for, such as:\n* Functors.\n* Monads.\n* Folds.\n* Lenses.\n\nSo, it is not a far fetch to infer that a familiarity with Category Theory befits a functional programmer.\n\nBut there are perils to overcome on the way to a supposed revelation.\u2002The standard book — _Category Theory for the Working Mathematician_ — is eminently unsuitable for anyone else than a working mathematician.\u2002There are other presentations that are purportedly more accessible, but it is not clear whether they are effective.\n\nTherefore, the task has been set before me to write a guide to educational materials to be pinned in /r/CategoryTheory.\u2002I want it to be based on evidence and not mere opinion.\n\nSo, I ask the kind reader to leave a comment describing their relationship with Category Theory.\u2002Alternately, please send me a private message — I shall keep it private.\u2002I want to hear of every experience.\n\nPlease also share if you see fit.\n\nThanks!\n\n## Questions.\n\n* Did you ever look into Category Theory?\n\n  If so:\n\n  * What sources did you peruse?\n\n    For each source:\n\n    - How familiar were you with Category Theory before the event?\n    - Did you have any other background that helped _(or hindered)_ you?\n    - Was it fun and enticing by itself?\n    - In hindsight, did it work?\n\n  If not:\n\n  * What holds you back?', 'selftext_html': '&lt;!-- SC_OFF --&gt;&lt;div class=""md""&gt;&lt;h2&gt;TLDR: \u2002 Kindly answer the questions at the bottom of the post.&lt;/h2&gt;\n\n&lt;p&gt;Category Theory is behind many of the innovations that the functional programming style is known for, such as:\n* Functors.\n* Monads.\n* Folds.\n* Lenses.&lt;/p&gt;\n\n&lt;p&gt;So, it is not a far fetch to infer that a familiarity with Category Theory befits a functional programmer.&lt;/p&gt;\n\n&lt;p&gt;But there are perils to overcome on the way to a supposed revelation.\u2002The standard book — &lt;em&gt;Category Theory for the Working Mathematician&lt;/em&gt; — is eminently unsuitable for anyone else than a working mathematician.\u2002There are other presentations that are purportedly more accessible, but it is not clear whether they are effective.&lt;/p&gt;\n\n&lt;p&gt;Therefore, the task has been set before me to write a guide to educational materials to be pinned in &lt;a href=""/r/CategoryTheory""&gt;/r/CategoryTheory&lt;/a&gt;.\u2002I want it to be based on evidence and not mere opinion.&lt;/p&gt;\n\n&lt;p&gt;So, I ask the kind reader to leave a comment describing their relationship with Category Theory.\u2002Alternately, please send me a private message — I shall keep it private.\u2002I want to hear of every experience.&lt;/p&gt;\n\n&lt;p&gt;Please also share if you see fit.&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n\n&lt;h2&gt;Questions.&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Did you ever look into Category Theory?&lt;/p&gt;\n\n&lt;p&gt;If so:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;What sources did you peruse?&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;For each source:\n- How familiar were you with Category Theory before the event?\n- Did you have any other background that helped &lt;em&gt;(or hindered)&lt;/em&gt; you?\n- Was it fun and enticing by itself?\n- In hindsight, did it work?&lt;/p&gt;\n\n&lt;p&gt;If not:\n* What holds you back?&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;', 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'functionalprogramming', 'subreddit_id': 't5_2vcmg', 'subreddit_name_prefixed': 'r/functionalprogramming', 'subreddit_subscribers': 17517, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'self', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'Your relationship with Category Theory?', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 1, 'upvote_ratio': 1.0, 'url': 'https://www.reddit.com/r/functionalprogramming/comments/sreldj/your_relationship_with_category_theory/', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
290.0,[],False,SantiagoOrDunbar,,[],,text,t2_nbzcy,False,False,False,[],False,False,1644703402,self.haskell,https://www.reddit.com/r/haskell/comments/sr2gah/determine_if_a_list_of_tuples_contains_the/,{},sr2gah,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/sr2gah/determine_if_a_list_of_tuples_contains_the/,False,,,6,1644703413,1,"**The behavior that I am looking for:**

    testSubbag1 = subbag [] [] == True
    testSubbag2 = subbag [(7,2)] [(7,2)] == True
    testSubbag3 = subbag [(7,2)] [(7,2),(8,1)] == True
    testSubbag4 = subbag [(7,2)] [(7,1),(8,1)] == False
    testSubbag5 = subbag [(7,1),(9,1)] [(7,1),(8,1)] == False

**My attempt:**

    subbag :: [(Int,Int)] -&gt; [(Int,Int)] -&gt; Bool
    subbag [] [] = True
    subbag [(x,y)] [(w,z)]
      | x == w &amp;&amp; y == z = True
      | otherwise = False
    subbag ((x,y):xys) ((w,z):wzs)
      | subbag [(x,y)] [(w,z)] == True = subbag xys wzs
      | otherwise = False

**My output:**

    ghci&gt; testSubbag1
    *HW2C00211180&gt; True
    
    
    ghci&gt; testSubbag2
    *HW2C00211180&gt; True
    
    
    ghci&gt; testSubbag3
    ** Exception: Line 83-90, Column 1-21: Non-exhaustive patterns in function subbag
    
    
    
    ghci&gt; testSubbag4
    *HW2C00211180&gt; True
    
    
    ghci&gt; testSubbag5
    *HW2C00211180&gt; True

I understand how my answer is incorrect, I am just at a loss on how to go about fixing it.",True,False,False,haskell,t5_2qh36,69027,public,self,Determine if a list of tuples contains the elements of another list of tuples?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sr2gah/determine_if_a_list_of_tuples_contains_the/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
291.0,[],False,PandaParado,,[],,text,t2_at7i0t35,False,False,False,[],False,False,1644697183,self.haskell,https://www.reddit.com/r/haskell/comments/sr09pd/wordle_on_the_command_line_in_haskell/,{},sr09pd,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,14,0,False,all_ads,/r/haskell/comments/sr09pd/wordle_on_the_command_line_in_haskell/,False,self,"{'enabled': False, 'images': [{'id': 'k1V-6rvMG-s5tw9M7xfYODTcqqLMKERK9lNlyMzBqTI', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/3oIw_B1--XdR1aoM7Q6_6ucR_w7Qg6QqNTYgJrXkgnc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6bec260513ba9667b2ee3cdae9d1566f293c690e', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/3oIw_B1--XdR1aoM7Q6_6ucR_w7Qg6QqNTYgJrXkgnc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7b8cb55994df77ccd3d259b748a76a7f3226000c', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/3oIw_B1--XdR1aoM7Q6_6ucR_w7Qg6QqNTYgJrXkgnc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2e72cd80d147d0a192d2b2f03f29899f7f3435ae', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/3oIw_B1--XdR1aoM7Q6_6ucR_w7Qg6QqNTYgJrXkgnc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=dd76ff6427d36509377a118e62b20559773a2b2a', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/3oIw_B1--XdR1aoM7Q6_6ucR_w7Qg6QqNTYgJrXkgnc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=921d0168a78d9165318e50f0f4689168f8759a03', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/3oIw_B1--XdR1aoM7Q6_6ucR_w7Qg6QqNTYgJrXkgnc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d917ba3544a8a68d1898249977a2fadd55a0da7b', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/3oIw_B1--XdR1aoM7Q6_6ucR_w7Qg6QqNTYgJrXkgnc.jpg?auto=webp&amp;s=ab6e1d3dd740277b3d13a35a16b8e2aee0872109', 'width': 1200}, 'variants': {}}]}",6,1644697194,1,"Hi everyone!

I've been working through ""Haskell Programing from First Principles"" for the last few months. I'm about half way through the book and I Just finished my first real program. I just wanted to say thank you to the community for being so helpful and maybe get some feedback on my code. I'm sure I could clean up a lot of things. 

[https://github.com/jakesco/wordle-hs](https://github.com/jakesco/wordle-hs)",True,False,False,haskell,t5_2qh36,69028,public,self,Wordle on the command line in Haskell.,0,[],1.0,https://www.reddit.com/r/haskell/comments/sr09pd/wordle_on_the_command_line_in_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
292.0,[],False,nokiabama,,[],,text,t2_4fxf88os,False,False,False,[],False,False,1644696759,self.haskell,https://www.reddit.com/r/haskell/comments/sr04fc/does_haskell_have_a_laravel_like_framework/,{},sr04fc,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,7,0,False,all_ads,/r/haskell/comments/sr04fc/does_haskell_have_a_laravel_like_framework/,False,,,6,1644696770,1,"I understand this might be an odd question, I am just trying to research the idea that if a blockchain (e.g Cardano) uses Haskell in building its Dapps, would the Haskell community, language syntax and its libraries allow an average joe programmer to build blockchain Dapps easily and in a short time ? So my question is since I have used Laravel framework before, does Haskell have some tools/frameworks for start ups that abstracts the background work into easy to do steps to set up for example authentication, Database, etc.",True,False,False,haskell,t5_2qh36,69028,public,self,Does Haskell have a Laravel like framework ?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sr04fc/does_haskell_have_a_laravel_like_framework/,all_ads,6,,,,,,,,,,,,,,,,,,,,
293.0,[],False,travis_athougies,,[],,text,t2_ep5djei,False,False,False,[],False,False,1644676733,self.haskell,https://www.reddit.com/r/haskell/comments/sqsxbz/what_do_people_use_for_rpc/,{},sqsxbz,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,24,0,False,all_ads,/r/haskell/comments/sqsxbz/what_do_people_use_for_rpc/,False,,,6,1644676743,1,"In several projects, I've needed a way to implement remote procedure calls. What do people use for this, or is this something that's mostly missing in the community? Hackage has a variety of libraries but they're either very old or seemingly unmaintained. The only one I see that's maintained is grpc-haskell.

Anyway, grpc-haskell uses proto3-wire instead of proto-lens (which the community seems to have settled on as the best solution). This leads to its own confusion.

I could use something like warp + servant (or warp + wai to reinvent the wheel), but servant is missing some major functionality for this purpose. Namely, servant is focused on REST, which means the transfer of an entire object state. One of the things I want from an RPC system is the ability to stream data in a type-safe manner (like gRPC does). 

Any thoughts? I'd prefer something standardized.",True,False,False,haskell,t5_2qh36,69020,public,self,What do people use for RPC?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sqsxbz/what_do_people_use_for_rpc/,all_ads,6,,,,,,,,,,,,,,,,,,,,
294.0,[],False,Small-Shirt898,,[],,text,t2_7dzxbi3c,False,False,False,[],False,False,1644675420,self.haskell,https://www.reddit.com/r/haskell/comments/sqsibs/need_suggestion_on_code_quality_and_best_practices/,{},sqsibs,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sqsibs/need_suggestion_on_code_quality_and_best_practices/,False,self,"{'enabled': False, 'images': [{'id': 'm-akg8TNhFsys_1aHgtSEu6k7-NvfPcRPNFTqKPz7pg', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/vypwvbGBpwDvkcvSP6Or9J2e8RK5gl4CIIxiLNI_XV4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8a709e80d6f3fa57805ca6d5cab2a108ccac5c4b', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/vypwvbGBpwDvkcvSP6Or9J2e8RK5gl4CIIxiLNI_XV4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=96defa5170cd10f3b8629c35bf4f61375699f16d', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/vypwvbGBpwDvkcvSP6Or9J2e8RK5gl4CIIxiLNI_XV4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0f747a7ebe502d270e8b10015e5e54bb49ae2d05', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/vypwvbGBpwDvkcvSP6Or9J2e8RK5gl4CIIxiLNI_XV4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=28882a572edc7bc6d42cfe028b98755cef80f4b9', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/vypwvbGBpwDvkcvSP6Or9J2e8RK5gl4CIIxiLNI_XV4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=68ca32f6cbac6e94f66348a6138e0ff07e9bd312', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/vypwvbGBpwDvkcvSP6Or9J2e8RK5gl4CIIxiLNI_XV4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8293b1791db2f27373293b1cc59701ae979b30ff', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/vypwvbGBpwDvkcvSP6Or9J2e8RK5gl4CIIxiLNI_XV4.jpg?auto=webp&amp;s=cfecef9dec63e14bf12250f62f0af6fbbcbb3164', 'width': 1200}, 'variants': {}}]}",6,1644675431,1,[removed],True,False,False,haskell,t5_2qh36,69020,public,self,Need suggestion on code quality and best practices,0,[],1.0,https://www.reddit.com/r/haskell/comments/sqsibs/need_suggestion_on_code_quality_and_best_practices/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
295.0,[],False,ocramz_,,[],,text,t2_jaolcjrr,False,False,False,[],False,False,1644674212,ocramz.github.io,https://www.reddit.com/r/haskell/comments/sqs3ue/composable_web_forms_with_applicative/,{},sqs3ue,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/sqs3ue/composable_web_forms_with_applicative/,False,,,6,1644674222,1,,False,False,False,haskell,t5_2qh36,69020,public,default,Composable web forms with Applicative,0,[],1.0,http://ocramz.github.io/haskell/web/formlets/2022/02/12/formlets.html,all_ads,6,,,http://ocramz.github.io/haskell/web/formlets/2022/02/12/formlets.html,,,,,,,,,,,,,,,,,
296.0,[],False,Maximum-Morning7288,,[],,text,t2_f6ie34hn,False,False,False,[],False,False,1644669478,self.haskell,https://www.reddit.com/r/haskell/comments/sqqmx8/hiring_2_jobs_in_haskell_hiring_now/,{},sqqmx8,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sqqmx8/hiring_2_jobs_in_haskell_hiring_now/,False,,,6,1644669489,1,"Company Name | Title | City
--|--|--|--|--|--
[Standard Transportation](https://redejobs.com/job.php?j=7659969415&amp;p=14&amp;s1=reddit&amp;s2=haskell) | [CDL A - Owner Operator (Haskell)](https://redejobs.com/job.php?j=7659969415&amp;p=14&amp;s1=reddit&amp;s2=haskell) | [Haskell](https://redejobs.com/job.php?j=7659969415&amp;p=14&amp;s1=reddit&amp;s2=haskell)
[Philosophy Care Centers](https://redejobs.com/job.php?j=7661053081&amp;p=14&amp;s1=reddit&amp;s2=haskell) | [Licensed Practical Nurse (LPN) ***Competitive Benefits*** Phoenix Center for Rehabilitation &amp; Pediatrics, Haskell, NJ ***TRANSPORTATION AVAILABLE***](https://redejobs.com/job.php?j=7661053081&amp;p=14&amp;s1=reddit&amp;s2=haskell) | [Sterling Forest](https://redejobs.com/job.php?j=7661053081&amp;p=14&amp;s1=reddit&amp;s2=haskell)


Hey guys, here are some recent job openings , feel free to comment here if you have any questions, I'm at the community's disposal! If you encounter any problems with any of these job openings please let me know that I will modify the table accordingly. Thanks!",True,False,False,haskell,t5_2qh36,69019,public,self,[HIRING] 2 Jobs in haskell Hiring Now!,0,[],1.0,https://www.reddit.com/r/haskell/comments/sqqmx8/hiring_2_jobs_in_haskell_hiring_now/,all_ads,6,,,,,,,,,,,,,,,,,,,,
297.0,[],False,philh,,[],,text,t2_2zl2,False,False,False,[],False,False,1644657325,self.haskell,https://www.reddit.com/r/haskell/comments/sqnjsq/whats_the_modern_idiomatic_way_to_write_this/,{},sqnjsq,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,6,0,False,all_ads,/r/haskell/comments/sqnjsq/whats_the_modern_idiomatic_way_to_write_this/,False,,,6,1644657336,1,"I'm looking at McBride, [Faking It: Simulating Dependent Types in Haskell](https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.22.2636&amp;rep=rep1&amp;type=pdf) (2002, doi: [10.1017/S0956796802004355](https://doi.org/10.1017/S0956796802004355).

McBride gives us a way to write a variadic `zipWith`, which (modulo irrelevant details) we can write as

    {-# LANGUAGE FunctionalDependencies, FlexibleInstances, UndecidableInstances #-}
    
    data Z = Z
    data S n = S n
    
    nat0 = Z :: Z
    nat1 = S nat0 :: S Z
    nat2 = S nat1 :: S (S Z)
    
    class ZipWith n fst rest | n fst -&gt; rest where
      manyApp :: n -&gt; [fst] -&gt; rest
    
    instance ZipWith Z t [t] where
      manyApp Z fs = fs
    
    instance ZipWith n fst rest =&gt; ZipWith (S n) (t -&gt; fst) ([t] -&gt; rest) where
      manyApp (S n) fs xs = manyApp n (zipWith ($) fs xs)
    
    nZipWith :: ZipWith n fst rest =&gt; n -&gt; fst -&gt; rest
    nZipWith n f = manyApp n (repeat f)

then we can call this with `nZipWith nat2 (+) [1,2,3] [4,5,6]`.

Reading in 2022, I notice that these days we have type applications, type literals, data kinds, and my impression is we more often use type families than functional dependencies. So I tried to update for how I'd write this today, but I couldn't get as much improvement as I expected.

I think the best I've got so far is to replace `Z` and `S` with ones taken from [Data.Type.Nat](https://hackage.haskell.org/package/fin-0.2.1/docs/Data-Type-Nat.html):

    -- I've lost track of what extensions we need
    import Data.Type.Nat

    class ZipWith (n :: Nat) fst rest | n fst -&gt; rest where
      manyApp :: [fst] -&gt; rest

    instance ZipWith 'Z t [t] where
      manyApp fs = fs

    instance ZipWith n fst rest =&gt; ZipWith ('S n) (t -&gt; fst) ([t] -&gt; rest) where
      manyApp fs ss = manyApp @n (zipWith ($) fs ss)

    nZipWith :: forall n fst rest . ZipWith n fst rest =&gt; fst -&gt; rest
    nZipWith f = manyApp @n (repeat f)

which we can call with `nZipWith @Nat2 (+) [1,2,3] [4,5,6]`.

But this is arguably worse, you still need to define each number separately and import them, and now you need the extra `@`. I'd still probably use it over the original even if I had to define `Nat` myself, but I'm not sure if that's just ""it uses modern features, so it must be better"".

Can we do better than this? I don't want to make this too long, so I'm going to put some attempts in the comments.",True,False,False,haskell,t5_2qh36,69014,public,self,What's the modern idiomatic way to write this? / Inductive typeclasses with Nat,0,[],1.0,https://www.reddit.com/r/haskell/comments/sqnjsq/whats_the_modern_idiomatic_way_to_write_this/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
298.0,[],False,Forward_History3541,,[],,text,t2_7qynhwr1,False,False,False,[],False,False,1644653285,self.haskell,https://www.reddit.com/r/haskell/comments/sqmjf1/deep_fmap_for_multi_layer_functor/,{},sqmjf1,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,43,0,False,all_ads,/r/haskell/comments/sqmjf1/deep_fmap_for_multi_layer_functor/,False,,,6,1644653295,1,"Can we have a deep fmap for a deep multi-layer functor? 

for example:

    
    deepFamp :: (a-&gt; b) -&gt; Maybe [a] -&gt; Maybe [b]
    deepFmap f  a= (fmap . fmap)  f

This is a map for a  two layers Functor.

Can we have a deepFmap for unknown number of layers  Functor.

for example we have a nested list with many  unknown dimensions. 

    -- each dot represent a layer functor nested inside.
    deepFmap :: (a-&gt;b) -&gt; [[...[[a]]]..]] -&gt; [[..[[b]]..]]
    --or When each layer is different from upper or lower layer.
    deepFmap :: (a-&gt;b) -&gt; MayBe [[..(Maybe...[[a]]...)..]]",True,False,False,haskell,t5_2qh36,69013,public,self,deep fmap for multi layer Functor,0,[],1.0,https://www.reddit.com/r/haskell/comments/sqmjf1/deep_fmap_for_multi_layer_functor/,all_ads,6,,,,,,,,,,,,,,,,,,,,
299.0,[],False,theKGS,,[],,text,t2_eubyx,False,False,False,[],False,False,1644628928,self.haskell,https://www.reddit.com/r/haskell/comments/sqf85w/i_need_some_help_with_classes/,{},sqf85w,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,14,0,False,all_ads,/r/haskell/comments/sqf85w/i_need_some_help_with_classes/,False,,,6,1644628938,1,"I'm trying to write an implementation of the tabu search algorithm. Basically local search with a tabu list of recently visited states.

To do this I need to mess around with parts of Haskell I have never touched before. Type classes.

I want to generalise the algorithm to the point that the data that the algorithm operates on is completely invisible to the algorithm itself. Like a java interface I want something I can attach to an object type and say ""this object is now compatible with this search algorithm"".

    class TabuSt a where
      evaluate:: a -&gt; Int

    type ST = (Int, [Int])

    instance TabuSt ST where
      evaluate x = 0

That's a toy implementation. I define the type class TabuSt. I define a type alias ST. And I define the instance of the type class. I also define a function evaluate that takes a state and returns an integer evaluation of the state. Note that it does not compile.

This is the error message ""tabu.hs:12:10: error:
    • Illegal instance declaration for ‘TabuSt ST’
        (All instance types must be of the form (T t1 ... tn)
         where T is not a synonym.
         Use TypeSynonymInstances if you want to disable this.)
    • In the instance declaration for ‘TabuSt ST’""

Why does this not work?",True,False,False,haskell,t5_2qh36,69009,public,self,I need some help with classes,0,[],1.0,https://www.reddit.com/r/haskell/comments/sqf85w/i_need_some_help_with_classes/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
300.0,[],False,plsdontkillmee,,[],,text,t2_618yhfv3,False,False,False,[],False,False,1644615388,self.haskell,https://www.reddit.com/r/haskell/comments/sqaa4n/can_i_modify_functions_that_are_already_in_haskell/,{},sqaa4n,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,6,0,False,all_ads,/r/haskell/comments/sqaa4n/can_i_modify_functions_that_are_already_in_haskell/,False,,,6,1644615398,1,"for example, lets say I wanted to modify the !! function to make it not a partial function. Would this be possible? thank you.",True,False,False,haskell,t5_2qh36,69002,public,self,Can I modify functions that are already in Haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sqaa4n/can_i_modify_functions_that_are_already_in_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
301.0,[],False,embwbam,,[],,text,t2_8r3dx,False,False,False,[],False,False,1644614240,self.haskell,https://www.reddit.com/r/haskell/comments/sq9urb/is_anyone_working_on_a_client_for_edgedb/,{},sq9urb,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,4,0,False,all_ads,/r/haskell/comments/sq9urb/is_anyone_working_on_a_client_for_edgedb/,False,self,"{'enabled': False, 'images': [{'id': 't1515JQMNInfUloupygpQ50lE_6AOyWP-yCG7FcLXFc', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/wjwYdc-BT6ui7cdKHd0HXRhz0P77Zu5a2TdXiLQYMvw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4498e19d00a4fba50fec35ab08adec4da5208859', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/wjwYdc-BT6ui7cdKHd0HXRhz0P77Zu5a2TdXiLQYMvw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=44048745d743f9a482a75365561541cf948891f2', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/wjwYdc-BT6ui7cdKHd0HXRhz0P77Zu5a2TdXiLQYMvw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d862cce582db866160187a4355a4b008131089d5', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/wjwYdc-BT6ui7cdKHd0HXRhz0P77Zu5a2TdXiLQYMvw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=3c7cc00f9bd89fe1c3bfd9ebb2113a4189d464ac', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/wjwYdc-BT6ui7cdKHd0HXRhz0P77Zu5a2TdXiLQYMvw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=aed5ec412199ebfeebc4e8aa31b69e72aacdb1f3', 'width': 960}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/wjwYdc-BT6ui7cdKHd0HXRhz0P77Zu5a2TdXiLQYMvw.jpg?auto=webp&amp;s=09e218f14f9b5398d6ef85a6642d9e1b42b8adee', 'width': 1024}, 'variants': {}}]}",6,1644614250,1,"I just discovered EdgeDB: [https://www.edgedb.com/](https://www.edgedb.com/)

I've been waiting for a database with a better query language ever since rethinkDB died. Specifically, EdgeDB stores object graphs natively, has a neat and composable query language, native migrations, etc. It's easy to imagine how we could build type-safe queries for this. (Take a look at the typescript bindings on the main page)

Is anyone already working on a client for EdgeDB?",True,False,False,haskell,t5_2qh36,69003,public,self,Is anyone working on a client for EdgeDB?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sq9urb/is_anyone_working_on_a_client_for_edgedb/,all_ads,6,,,,,,,,,,,,,,,,,,,,
302.0,[],False,SantiagoOrDunbar,,[],,text,t2_nbzcy,False,False,False,[],False,False,1644612441,self.haskell,https://www.reddit.com/r/haskell/comments/sq96h1/accept_list_as_input_and_return_a_list_of_tuples/,{},sq96h1,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,10,0,False,all_ads,/r/haskell/comments/sq96h1/accept_list_as_input_and_return_a_list_of_tuples/,False,,,6,1644612451,1,"**The behavior that I am looking for:**

`testBag = bag [7,3,8,7,3,2,7,5] == [(2,1),(3,2),(5,1),(7,3),(8,1)]`

**The code that I have written:**

    filter _ [] = []
    filter x (y:ys) = if x == y
      then filter x ys
      else y : filter x ys
    
    bag [] = []
    bag [x] = [(x,length x)]
    bag (x:xs) = (x,length (filter (== x) xs)) : bag xs

**The errors that I'm receiving:**

    ghci&gt; testBag1
    Line 54, Column 39: error:
        • Occurs check: cannot construct the infinite type:
            t ~ (-&gt;) (t Bool)
          Expected type: [t Bool -&gt; Bool]
            Actual type: [t Bool]
        • In the second argument of ‘filter’, namely ‘xs’
          In the first argument of ‘length’, namely ‘(filter (== x) xs)’
          In the expression: length (filter (== x) xs)
        • Relevant bindings include
            xs :: [t Bool] (bound at Line 54, Column 8)
            x :: t Bool (bound at Line 54, Column 6)
            bag :: [t Bool] -&gt; [(t Bool, Int)] (bound at Line 52, Column 1)
    
    Line 56, Column 12: error:
        • Ambiguous type variable ‘t0’ arising from a use of ‘==’
          prevents the constraint ‘(Eq (t0 Bool))’ from being solved.
          Probable fix: use a type annotation to specify what ‘t0’ should be.
          These potential instances exist:
            instance (Eq b, Eq a) =&gt; Eq (Either a b)
              -- Defined in ‘Data.Either’
            instance Eq a =&gt; Eq (Maybe a) -- Defined in ‘GHC.Base’
            instance (Eq a, Eq b) =&gt; Eq (a, b) -- Defined in ‘GHC.Classes’
            ...plus 14 others
            ...plus 26 instances involving out-of-scope types
            (use -fprint-potential-instances to see them all)
        • In the expression:
            bag [7, 3, 8, 7, ....] == [(2, 1), (3, 2), (5, 1), (7, 3), ....]
          In an equation for ‘testBag1’:
              testBag1 = bag [7, 3, 8, ....] == [(2, 1), (3, 2), (5, 1), ....]
    
    Line 56, Column 17: error:
        • Ambiguous type variable ‘t0’ arising from the literal ‘7’
          prevents the constraint ‘(Num (t0 Bool))’ from being solved.
          Probable fix: use a type annotation to specify what ‘t0’ should be.
          These potential instances exist:
            three instances involving out-of-scope types
            (use -fprint-potential-instances to see them all)
        • In the expression: 7
          In the first argument of ‘bag’, namely ‘[7, 3, 8, 7, ....]’
          In the first argument of ‘(==)’, namely ‘bag [7, 3, 8, 7, ....]’
    
    &lt;interactive&gt;:1:1: error: Variable not in scope: testBag1

I've been struggling with this for *days*. I am learning only to hate Haskell lol.",True,False,False,haskell,t5_2qh36,69003,public,self,Accept list as input and return a list of tuples containing each value and their respective occurrence count?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sq96h1/accept_list_as_input_and_return_a_list_of_tuples/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
303.0,[],False,plsdontkillmee,,[],,text,t2_618yhfv3,False,False,False,[],False,False,1644610352,self.haskell,https://www.reddit.com/r/haskell/comments/sq8f9c/replacements_for/,{},sq8f9c,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,17,0,False,all_ads,/r/haskell/comments/sq8f9c/replacements_for/,False,,,6,1644610363,1,"I've heard that using !! to find an element in a list is unsafe. I would like to know why this is and some alternatives to this, thanks.",True,False,False,haskell,t5_2qh36,69003,public,self,replacements for !!,0,[],1.0,https://www.reddit.com/r/haskell/comments/sq8f9c/replacements_for/,all_ads,6,,,,,,,,,,,,,,,,,,,,
304.0,[],False,sridfr,,[],,text,t2_f1wkk8ou,False,False,False,[],False,False,1644593249,tweag.io,https://www.reddit.com/r/haskell/comments/sq1zdg/deriving_isomorphically/,{},sq1zdg,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,13,0,False,all_ads,/r/haskell/comments/sq1zdg/deriving_isomorphically/,False,link,"{'enabled': False, 'images': [{'id': '0Evd6UWXs4A11yT0I3bSUdOWKNqr9Az0qWvc-WhxMes', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a559bb4d890ff015d6259a06083f8cea81389ab2', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b67964ddc7f6a4e974672b382f7c786c8d3526fe', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=61e37c5f638b0d156c5fdcbc1a5335a3bdbb8729', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=298dca15f47ae031413bbd031ffd301b05793915', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=81eb47deb6039cc11cc169b056aee661e37b1789', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3b60b078d6771ef7f153290885f77a8f50774cdb', 'width': 1080}], 'source': {'height': 4096, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?auto=webp&amp;s=6803e63008eaa75aac55167a9225dd6c2f0316a7', 'width': 4096}, 'variants': {}}]}",6,1644593260,1,,True,False,False,haskell,t5_2qh36,69001,public,default,Deriving Isomorphically,0,[],1.0,https://www.tweag.io/blog/2020-04-23-deriving-isomorphically/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://www.tweag.io/blog/2020-04-23-deriving-isomorphically/,140.0,140.0,,,,,,,,,,,,,,,
305.0,[],False,markusl2ll,,[],,text,t2_56kbiech,False,False,False,[],False,False,1644588843,self.haskell,https://www.reddit.com/r/haskell/comments/sq0dv1/how_to_use_literal_haskell_functions_in_dsl/,{},sq0dv1,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sq0dv1/how_to_use_literal_haskell_functions_in_dsl/,False,,,6,1644588853,1,"Shamelessly reposting a question from [Stack Overflow: How to use literal haskell functions in DSL?](https://stackoverflow.com/questions/71080296/how-to-use-literal-haskell-functions-in-dsl](https://stackoverflow.com/questions/71080296/how-to-use-literal-haskell-functions-in-dsl)

Given the attention effect systems have had, I thought I'd convert a monomorphic transformer stack into an MTL-style effect and but ran into the following issue, likely due to my effect becoming polymorphic, the related recursive helper type class `Fun` became polymorphic and stopped working.. 

The issue (same as on SO):

I'd like to use literal haskell functions in a dsl as follows:

```haskell
program :: forall m . DSL m =&gt; m ()
program = do
  stm $ Stm (Var ""a"")
  -- this way:
  f &lt;- fun $ \(a :: Expr a) (b :: Expr b) -&gt; do
    -- function body is of the same monad `m` as the one in top level
    stm $ Stm (Var ""b"")
  stm $ Stm $ Apply f (Var ""c"")
  pure ()
```

.. and turn the above into code ([Stm]).

To make the functions work there is a helper class Fun (code below) that saturates the function with fresh variables until it reaches function body, then returns both the list of arguments and body itself so that they could be made into function syntax[1]. There is a recursive case to generate arguments[2] and a base case to evaluate body to [Stm].[3]

The worrisome instance is the base case[4], which currently requires `{-# INCOHERENT #-}`, because ghc can't choose a Fun instance because function's body in the program is ambiguous (while it should just be whatever `m` is at top level code).

So the question is:
- is there a way to force the body to always use the same m as in top level and not require incoherent instances?

A stub AST, the MTL-style DSL ""effect"" and a sample instance of the class:

```haskell
-- | An AST
data Expr a
  = Var String
  | Apply String (Expr a)
  | Function String [String] [Stm]

data Stm = Stm (Expr ())

-- | The ""effect""
class Monad m =&gt; DSL m where
  freshName :: m String -- generate fresh variable name
  stm :: Stm -&gt; m () -- emit statement
  toAST :: m a -&gt; m [Stm] -- turn code `m a` into [Stm] (without emitting it)
  fun :: Fun f m =&gt; f -&gt; m String -- emit function f, return its name

-- | Helper class to convert literal haskell functions to the dsl
class Fun f m where
  mkFun :: DSL m =&gt; f -&gt; [String] -&gt; m ([String], [Stm])

instance Fun f m =&gt; Fun (Expr a -&gt; f) m where
  mkFun f acc = do
    name &lt;- freshName -- [2]
    mkFun (f $ Var name) (name : acc)

instance {-# INCOHERENT #-} (m0 ~ m) =&gt; Fun (m0 a) m where -- [4]
  mkFun m args = do
    fname &lt;- freshName
    body &lt;- toAST m -- [3]
    return (args, body)

-- | A sample implementation
instance DSL (StateT Int (Writer [Stm])) where
  freshName = do
    n &lt;- get
    put $ n + 1
    return $ ""var"" &lt;&gt; show n
  toAST m = do
    state0 &lt;- get
    let ((_, state1), w) = run m state0
    put state1
    return w
  fun f = do
    (args, body) &lt;- mkFun f []
    name &lt;- freshName
    stm $ Stm $ Function name args body -- [1]
    return name

run :: StateT Int (Writer [Stm]) a -&gt; Int -&gt; ((a, Int), [Stm])
run m s = runWriter $ runStateT m s
```",True,False,False,haskell,t5_2qh36,69001,public,self,How to use literal haskell functions in DSL?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sq0dv1/how_to_use_literal_haskell_functions_in_dsl/,all_ads,6,,,,,,,,,,,,,,,,,,,,
306.0,[],False,serras,,[],,text,t2_5tjnr,False,False,False,[],False,False,1644586893,haskell.foundation,https://www.reddit.com/r/haskell/comments/spzpa2/the_haskell_interlude_ep_9_sebastian_graf/,{},spzpa2,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/spzpa2/the_haskell_interlude_ep_9_sebastian_graf/,False,link,"{'enabled': False, 'images': [{'id': 'oIs4kKgDLMdgFFunf20_4im_HgxrsIEAfsttoWp9viU', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=21ffc6743780333b01291efa4542f3c5ca1f2c0d', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d8d09664e98e4c19b58acdecf761f94934fb638a', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b1dd27539912721c36c26e0952cc633e97e5aee9', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ac413af80a52736df15d8141a74e010ba4fdaa54', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=d5d003535ecc151ac1f867af218d5b9116943279', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=1722bd773a51491c44083279c1315e134b5c21bb', 'width': 1080}], 'source': {'height': 5000, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?auto=webp&amp;s=68ad82b1ec59fb1a13583b639f0b9de7db0bd2e2', 'width': 5000}, 'variants': {}}]}",6,1644586904,1,,False,False,False,haskell,t5_2qh36,69000,public,default,The Haskell Interlude ep. 9 - Sebastian Graf,0,[],1.0,https://haskell.foundation/podcast/9/,all_ads,6,,,https://haskell.foundation/podcast/9/,140.0,140.0,,,,,,,,,,,,,,,
307.0,[],False,agusnolasco,,[],,text,t2_j4bkywyz,False,False,False,[],False,False,1644579416,self.haskell,https://www.reddit.com/r/haskell/comments/spxfdl/ghci_problem_in_macbook_m1_darwin/,{},spxfdl,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/spxfdl/ghci_problem_in_macbook_m1_darwin/,False,self,"{'enabled': False, 'images': [{'id': 'DGTxd3WCfUi7uA0Zzv7--129yYi0G4X3Q6nRh47Kox4', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/AGuI2RoAnuKsv75dS1W-nEt9makSKZ1YxwAYnPDtq6E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fab94fd05103641600e4343cc1842e61051e82dc', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/AGuI2RoAnuKsv75dS1W-nEt9makSKZ1YxwAYnPDtq6E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=01fae212bb8ac939db7c3dd524e658ca3b625f74', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/AGuI2RoAnuKsv75dS1W-nEt9makSKZ1YxwAYnPDtq6E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=944bf93c1ace26e37d8ff076e5cb6ef8dcdad987', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/AGuI2RoAnuKsv75dS1W-nEt9makSKZ1YxwAYnPDtq6E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e2abecf0f8cc256f88aa6495c3510bc84fd9d82a', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/AGuI2RoAnuKsv75dS1W-nEt9makSKZ1YxwAYnPDtq6E.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=6224f6ef870b59c3994975137da773c668c8e9d4', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/AGuI2RoAnuKsv75dS1W-nEt9makSKZ1YxwAYnPDtq6E.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=5c114915ab5a2f5f1eec643ef0c693ce6a54832c', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/AGuI2RoAnuKsv75dS1W-nEt9makSKZ1YxwAYnPDtq6E.jpg?auto=webp&amp;s=8269d1fcdd4de4a7aa3023c5c05d31061e409209', 'width': 1200}, 'variants': {}}]}",6,1644579426,1,[removed],True,False,False,haskell,t5_2qh36,69000,public,self,GHCi problem in Macbook M1 darwin,0,[],1.0,https://www.reddit.com/r/haskell/comments/spxfdl/ghci_problem_in_macbook_m1_darwin/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
308.0,[],False,Chrisdone2,,[],,text,t2_1271rt,False,False,False,[],False,False,1644568294,chrisdone.com,https://www.reddit.com/r/haskell/comments/spuk03/immutable_publishing_policy/,{},spuk03,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,9,0,False,all_ads,/r/haskell/comments/spuk03/immutable_publishing_policy/,False,,,6,1644568305,1,,False,False,False,haskell,t5_2qh36,68997,public,default,Immutable Publishing Policy,0,[],1.0,https://chrisdone.com/posts/ipp/,all_ads,6,,,https://chrisdone.com/posts/ipp/,,,,,,,,,,,,,,,,,
309.0,[],False,totallynotAGI,,[],,text,t2_32sx9lu,False,False,False,[],False,False,1644535967,self.haskell,https://www.reddit.com/r/haskell/comments/spjxv4/blog_post_optics_vs_lenses_operationally/,{},spjxv4,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,12,0,False,all_ads,/r/haskell/comments/spjxv4/blog_post_optics_vs_lenses_operationally/,False,self,"{'enabled': False, 'images': [{'id': 'pPoJ1vjjCwZj8p-Wex7pHF-RCbFYAJfKJPX_UMmid2o', 'resolutions': [{'height': 63, 'url': 'https://external-preview.redd.it/VbwR1wKPSSHHT2t741o0qxSqgMF4oRLs-hMyo9rMOcg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=aa639531780fe789bbe85d2f6a1c5c5be3e8e493', 'width': 108}, {'height': 127, 'url': 'https://external-preview.redd.it/VbwR1wKPSSHHT2t741o0qxSqgMF4oRLs-hMyo9rMOcg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1bbe42d6d0eaf3a1547c8125bb7278e29f52cf2a', 'width': 216}, {'height': 188, 'url': 'https://external-preview.redd.it/VbwR1wKPSSHHT2t741o0qxSqgMF4oRLs-hMyo9rMOcg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5addf3491b4ea4951bd75a1ddd2e1f83172eb914', 'width': 320}, {'height': 377, 'url': 'https://external-preview.redd.it/VbwR1wKPSSHHT2t741o0qxSqgMF4oRLs-hMyo9rMOcg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=05b27f8e57e8f9ce22d83603b6e6da0450b108be', 'width': 640}, {'height': 566, 'url': 'https://external-preview.redd.it/VbwR1wKPSSHHT2t741o0qxSqgMF4oRLs-hMyo9rMOcg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=63dd0f80ad58df696589a63b5e8eeb1735ca0c19', 'width': 960}, {'height': 637, 'url': 'https://external-preview.redd.it/VbwR1wKPSSHHT2t741o0qxSqgMF4oRLs-hMyo9rMOcg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=1769a7efdb6b8c3f12c95f26c59d57299769a191', 'width': 1080}], 'source': {'height': 1065, 'url': 'https://external-preview.redd.it/VbwR1wKPSSHHT2t741o0qxSqgMF4oRLs-hMyo9rMOcg.jpg?auto=webp&amp;s=5b0ac9440cace7e9bc269b3b4fbb59234c04f2ae', 'width': 1805}, 'variants': {}}]}",6,1644535978,1,[https://www.brunogavranovic.com/posts/2022-02-10-optics-vs-lenses-operationally.html](https://www.brunogavranovic.com/posts/2022-02-10-optics-vs-lenses-operationally.html),True,False,False,haskell,t5_2qh36,68993,public,self,"[Blog Post] Optics vs Lenses, Operationally",0,[],1.0,https://www.reddit.com/r/haskell/comments/spjxv4/blog_post_optics_vs_lenses_operationally/,all_ads,6,,,,,,,,,,,,,,,,,,,,
310.0,[],False,timlee126,,[],,text,t2_5fefq,False,False,False,[],False,False,1644520401,self.haskell,https://www.reddit.com/r/haskell/comments/spees2/how_are_algebraic_datatypes_related_with_initial/,{},spees2,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,10,0,False,all_ads,/r/haskell/comments/spees2/how_are_algebraic_datatypes_related_with_initial/,False,self,"{'enabled': False, 'images': [{'id': 'MzeBvUJeB92T_uuznkuyFIJMuVV_AGLXKx9q1zqv9N8', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/62kLd8L6dwu0tEncBgcuLw_o-vkyeE6sZ4Rb720w_vY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7502ee4fc663a135acfb98f1749562a89d443875', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/62kLd8L6dwu0tEncBgcuLw_o-vkyeE6sZ4Rb720w_vY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7418e2e3f71e97e19ba7ebfc82e4fa56c05a751c', 'width': 216}], 'source': {'height': 316, 'url': 'https://external-preview.redd.it/62kLd8L6dwu0tEncBgcuLw_o-vkyeE6sZ4Rb720w_vY.jpg?auto=webp&amp;s=ee5f3d315567f7cbde47ca378d48b3ea1cf250b7', 'width': 316}, 'variants': {}}]}",6,1644520413,1,"https://cs.stackexchange.com/a/3123 says

&gt; This correspondence is known as the Curry-Howard-Lambek correspondence and relates:
&gt; 
&gt; - Haskell types with objects of the category
&gt; 
&gt; - Terms of type A→B with morphisms f:A→B (note the similar notations)
&gt; 
&gt; - Algebraic datatypes with initial objects
&gt; 
&gt; - Type constructors with functors
&gt; 
&gt; - etc


What are algebraic datatypes in Haskell? 
(I thought all types, including those types defined by `datatype`, `newtype`, or `type`, and/or those types predefined by the language and by the standard library modules, are algebraic datatypes. So I think I was wrong.)

How are algebraic datatypes related with initial objects?

Thanks.",True,False,False,haskell,t5_2qh36,68992,public,self,How are algebraic datatypes related with initial objects?,0,[],1.0,https://www.reddit.com/r/haskell/comments/spees2/how_are_algebraic_datatypes_related_with_initial/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
311.0,[],False,plsdontkillmee,,[],,text,t2_618yhfv3,False,False,False,[],False,False,1644514024,self.haskell,https://www.reddit.com/r/haskell/comments/spbvpq/how_can_i_turn_xxs_into_xsx/,{},spbvpq,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/spbvpq/how_can_i_turn_xxs_into_xsx/,False,,,6,1644514035,1,"when I try to write xs:x it says that xs has to be a String and not a \[String\], and when I do xs ++ x I get \[String\] not a String. pls help thanks.",True,False,False,haskell,t5_2qh36,68991,public,self,how can I turn x:xs into xs:x?,0,[],1.0,https://www.reddit.com/r/haskell/comments/spbvpq/how_can_i_turn_xxs_into_xsx/,all_ads,6,,,,,,,,,,,,,,,,,,,,
312.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1644507053,haskellweekly.news,https://www.reddit.com/r/haskell/comments/sp97ls/issue_302_haskell_weekly_newsletter/,{},sp97ls,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,9,0,False,all_ads,/r/haskell/comments/sp97ls/issue_302_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1644507064,1,,True,False,False,haskell,t5_2qh36,68990,public,default,Issue 302 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/302.html,all_ads,6,,,https://haskellweekly.news/issue/302.html,140.0,140.0,,,,,,,,,,,,,,,
313.0,[],False,EMC1201,,[],,text,t2_1qfdf45u,False,False,False,[],False,False,1644477731,self.haskell,https://www.reddit.com/r/haskell/comments/sp0ns2/need_help_figuring_out_a_function/,{},sp0ns2,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,7,0,False,all_ads,/r/haskell/comments/sp0ns2/need_help_figuring_out_a_function/,False,,,6,1644477741,1,"I need to create a function that reads from a list of courses (such as the one shown below), and return which courses has the largest number of programming languages.

Here is the list

```
progLanguages = 
     [ (""CptS121"" , [""C""]), 
     (""CptS122"" , [""C++""]), 
     (""CptS223"" , [""C++""]), 
     (""CptS233"" , [""Java""]), 
     (""CptS321"" , [""C#""]), 
     (""CptS322"" , [""Python"", ""JavaScript""]), 
     (""CptS355"" , [""Haskell"", ""Python"", ""PostScript"", ""Java""]), 
     (""CptS360"" , [""C""]), 
     (""CptS370"" , [""Java""]), 
     (""CptS315"" , [""Python""]), 
     (""CptS411"" , [""C"", ""C++""]), 
     (""CptS451"" , [""Python"", ""C#"", ""SQL""]), 
     (""CptS475"" , [""Python"", ""R""]) 
     ] 
```

It needs to be compatible with the following

```
The type of the max_count function should be compatible with one of the following:   
max_count :: [(a1, [a2])] -&gt; (a1, Int) 
max_count :: Foldable t =&gt; [(a1, t a2)] -&gt; (a1, Int) 
```

So far, I have attempted the following code

```
max_count [] = error ""bad""
max_count [x] = x
max_count (x:xs) = x max_helper (max_count xs)
     where
     max_helper (a,b) (a',b')
          | length b &gt; length b' = (a, length b)
          | otherwise = (a', length b')
```

This has not worked in the slightest, and I am at a blank for what to do. Any help is appreciated.",True,False,False,haskell,t5_2qh36,68984,public,self,Need help figuring out a function,0,[],1.0,https://www.reddit.com/r/haskell/comments/sp0ns2/need_help_figuring_out_a_function/,all_ads,6,ebb4b74c-16d0-11eb-9ff6-0e5aacb57bb7,homework,,,,,,,,,,,,,,,,,,
314.0,[],False,Sauceda-Gabriel,,[],,text,t2_5eizd3dx,False,False,False,[],False,False,1644453824,self.haskell,https://www.reddit.com/r/haskell/comments/sost65/available_trainings/,{},sost65,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,4,0,False,all_ads,/r/haskell/comments/sost65/available_trainings/,False,,,6,1644453835,1,Are there any available trainings available for someone interested in learning to use Haskell?,True,False,False,haskell,t5_2qh36,68982,public,self,Available Trainings?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sost65/available_trainings/,all_ads,6,b0bce6c2-2a63-11eb-b9a5-0eb5aa8d3dc9,blockchain,,,,,,,,,,,,,,,,,,
315.0,[],False,soylentqueen,,[],,text,t2_24v1oiy8,False,False,False,[],False,False,1644452931,self.haskell,https://www.reddit.com/r/haskell/comments/sosi7p/best_practices_for_haskell_on_m1_with_nix/,{},sosi7p,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,7,0,False,all_ads,/r/haskell/comments/sosi7p/best_practices_for_haskell_on_m1_with_nix/,False,,,6,1644452941,1,"I recently switched to an M1 Pro machine and decided to give Nix a try. I'm using Home Manager and nix-darwin, and having trouble figuring out the idiomatic way to set up a development environment.

### What I used to have

* Intel Mac
* Stack installed with Homebrew, using managed GHC 8.10.3 (Stackage LTS 17.2)
* haskell-language-server installed manually, integrated with Neovim through ALE

### What I want

I am trying to minimize reliance on Rosetta, since I've read nasty things happen when combining x86 and ARM toolchains. As a result, I’d like to upgrade my project to GHC 8.10.7 to take advantage of the ARM-native binary. Eventually, I'd like to migrate this project to Cabal, because HLS and Stack don't play well together in test files.

I'd also like to start new projects using GHC 9.2.1 to take advantage of native codegen and all the new record support.

Finally, I would like to have seamless editor integration with my Haskell projects.

### What to install, from where?

I want to install GHC 8.10.7 and 9.2.1, Stack, Cabal (eventually), and haskell-language-server. I’m not sure how I should be installing each of these:

* **From nixpkgs?** I assumed I’d be managing everything on my system through Nix, so I tried this first. Unfortunately, I couldn't get HLS to build. error: cycle detected in build of '/nix/store/qnyrwb284gp8v40g0cp1bbazg7ji47nc-ormolu-0.1.4.1.drv' in the references of output 'bin' from output 'out'
* **From ghcup?** This seems to be the most recommended approach, especially since I want ARM-native binaries. This leads to the following questions:
   * **What’s the idiomatic way to add** **$HOME/.ghcup/bin** **to my** **PATH****?** I’ve enjoyed how Nix abstracts over PATH management, and a little wary of going back in and appending stuff willy-nilly. Should I just add a line to programs.fish.shellInit or will that interfere with Nix’s PATH\-constructing magic?
   * **Should I be installing haskell-language-server from ghcup instead of nixpkgs?** [haskell4nix](https://haskell4nix.readthedocs.io/nixpkgs-users-guide.html#how-to-install-haskell-language-server) recommends using nixpkgs.
* **Using haskell.nix?** All of the posts about Haskell on M1 inevitably bring up haskell.nix, so I looked into that once I got Nix set up. Here are the problems I encountered:
   * **Do I still need to install Cabal or Stack to bootstrap haskell.nix?** Does it matter whether that’s from nixpkgs or ghcup?
   * **Should I use** **shell.nix** **to provision my development environment with HLS** instead of keeping it on my `PATH`? How will ALE/Neovim know where to find the binary?
   * I couldn’t get the binary cache to work no matter what, even after following the [Getting Started](https://input-output-hk.github.io/haskell.nix/tutorials/getting-started.html) guide to the letter (modifying nix.binaryCachePublicKeys, installing Niv, and copying the default.nix file). Whenever I typed nix-build -A foo.components.library, GHC kept building.

### Current plan

Overall, it seemed like haskell.nix was mostly designed to facilitate reproducible builds for CI and deployment, as opposed to an individual development environment. So despite all the comments indicating this was “the way to develop Haskell on M1,” I decided to abandon it for now.

My current plan is:

1. Install GHC, Stack, Cabal, and HLS using ghcup
2. Extend my fish init with fish\_add\_path $HOME/.ghcup/bin
3. Run Stack with --system-ghc. When I want to bump the GHC version for a project, I’ll use ghcup set to switch, and update the Stackage resolver in stack.yaml.

Any guidance on the best way to proceed would be much appreciated.",True,False,False,haskell,t5_2qh36,68981,public,self,Best practices for Haskell on M1 with Nix?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sosi7p/best_practices_for_haskell_on_m1_with_nix/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
316.0,[],False,dmitrydidi,,[],,text,t2_2vy6eh0n,False,False,False,[],False,False,1644443048,self.haskell,https://www.reddit.com/r/haskell/comments/sootlj/install_package_into_haskell_project/,{},sootlj,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,6,0,False,all_ads,/r/haskell/comments/sootlj/install_package_into_haskell_project/,False,,,6,1644443059,1,"Guys, Im a new in a Haskell. I was faced with a hell trying to install megaparsec locally into my project generated by stack. Are there any tricks ? Im putting package name into stack.yaml in my project, then Im using “stack install”, but it installs anywhere else but not into the project 🥲 I’ll glad to any advice. peace ✌🏻",True,False,False,haskell,t5_2qh36,68979,public,self,install package into haskell project,0,[],1.0,https://www.reddit.com/r/haskell/comments/sootlj/install_package_into_haskell_project/,all_ads,6,,,,,,,,,,,,,,,,,,,,
317.0,[],False,spacelibby,,[],,text,t2_5eb8h,False,False,False,[],False,False,1644441058,self.haskell,https://www.reddit.com/r/haskell/comments/soo2jg/terminology_for_case_expression/,{},soo2jg,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,10,0,False,all_ads,/r/haskell/comments/soo2jg/terminology_for_case_expression/,False,,,6,1644441068,1,"I'm working on a paper, and I need a name for the subexpression  examined by a case expression.

So, for example, I have the expression
case 1+2 of
          3 -&gt; True

What is the name for the expression 1+2? 

I've seen it referred to as the scrutenee, but that's long and kind of awkward. Is there a better name for this?",True,False,False,haskell,t5_2qh36,68980,public,self,Terminology for case expression.,0,[],1.0,https://www.reddit.com/r/haskell/comments/soo2jg/terminology_for_case_expression/,all_ads,6,,,,,,,,,,,,,,,,,,,,
318.0,[],False,goldfirere,,[],,text,t2_culpc,False,False,False,[],False,False,1644422132,self.haskell,https://www.reddit.com/r/haskell/comments/sogtq3/haskell_foundation_seeks_new_executive_director/,{},sogtq3,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,2,0,False,all_ads,/r/haskell/comments/sogtq3/haskell_foundation_seeks_new_executive_director/,False,self,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1644422142,1,"Following /u/myShoggoth's resignation [announcement](https://discourse.haskell.org/t/haskell-foundation-executive-director-change/4047) yesterday, the Haskell Foundation is seeking a new [Executive Director](https://haskell.foundation/careers/ed.html). The job ad appears below. Note that we are eager to identify our next leader, and so the turnaround is tight -- we will fully consider only applications received by the end of Feb 22 (anywhere on Earth). Please spread the word, recommend folks to consider, use your networks, etc! Feel free to post here or reach out to me with any questions.

# Executive Director

## About the Haskell Foundation

The [Haskell Foundation (HF)](https://haskell.foundation) is an independent, non-profit organization dedicated to broadening the adoption of Haskell, by supporting its ecosystem of tools, libraries, education, and research.

## The Role

HF seeks a full-time Executive Director (ED) to continue to inspire and develop the organization. The ED is responsible for furthering HF’s mission and vision, ensuring that resources are in place to accomplish its goals. The ED will drive sourcing for sponsorships, structure the organization, recruit and channel the efforts of both volunteers and paid staff.

Working with HF's Board of Directors, the ED will articulate HF’s strategic priorities and direction. They will assess and evaluate strategies, hire teams, set budgets, forge alliances, and build partnerships to further the mission.

The ED will play a crucial role in building the culture of HF around community service. HF will succeed if and only if it succeeds in unlocking the expertise and enthusiasm of volunteer members of the community. This will be a major goal for the ED, so that volunteers find HF to be a solid professional home with ample opportunities for recognition and professional growth.

Finally, the ED will actively promote HF to build its financial reserves and goodwill. They will secure, budget, and allocate resources appropriately and hold themselves accountable for the financial health of the organization.

## Reporting Relationships

The ED reports to the Board of Directors. All other members of staff and volunteers report directly or indirectly to the ED.

## Responsibilities

**Organization Mission and Strategy**: Works with the Board and staff to ensure that the mission is fulfilled.

* Responsible for the implementation of volunteer programs that carry out the organization’s mission.
* Responsible for recruiting existing community projects to affiliate with HF, and for assessing their ongoing adherence to HF standards.
* Responsible for the enhancement of HF’s image by being engaged with the community and by working closely with other professional and private organizations.
* Be the public face of HF through public presentations at Haskell-related events.
* Cultivate excellent relationships with the community and operate HF’s social media presence.

**Organization Operations**: Oversees and implements appropriate resources to ensure that the operations of the organization are appropriate.

* Responsible for the hiring and retention of competent, qualified staff as financial resources permit.
* Responsible for the effective administration of HF’s operations.
* Responsible for signing all notes, agreements, and other instruments made and entered into and on behalf of the organization.
* Responsible for fiscal management that generally anticipates operating within the approved budget, ensures maximum resource utilization, and maintenance of the organization in a positive financial position.

**Viability**: Develops financial resources sufficient to ensure the sustainability of the organization.

* Responsible for fundraising and developing other revenues necessary to support HF’s mission.
* Participate in identifying and cultivating corporate, institutional and individual sponsors.

**Board Governance**: Works with the Board to help it enact HF’s mission.

* Responsible for leading HF in a manner that supports the organization’s mission.
* Responsible for communicating effectively with the Board and providing, in a timely and accurate manner, all information necessary for the Board to function properly and to make informed judgements.
* Ensure that HF is in compliance with relevant state and federal laws, regulations and with standard accounting procedures.
* Work with individual Board members and subcommittees as directed by the Board.
* Inform the Board regularly of internal organization matters, including relevant staffing, funding and program success and priorities.
* Responsible for the fiscal integrity of HF, ensure that the Board is able to monitor the financial condition of HF. This means preparing budgets and financial statements which accurately reflect the financial condition of the organization and are kept up to date.

## Salary and Employment

The ED can live anywhere in the world – remote working is the standard within HF.

The ED must be eligible under USA law and the law in their jurisdiction to perform work (as an employee or as a contractor) for a non-profit organization incorporated in the USA.

Salary will be commensurate with the experience and qualities of the candidate, and will also reflect the Foundation’s status as a non-profit organization funded by donations.

## Key Credentials and Personal Qualities

Candidates are encouraged to apply with the expectation that the Board will assist and coach in areas of personal development tailored to the successful candidate’s needs.

**Essential attributes:**

* Successful experience in development and organizational leadership in a non-profit or business setting.
* Self-starter, with strong motivational and staff leadership abilities.
* Demonstrated knowledge, via experience or an advanced degree in CS, math or a related technical field.
* Willingness to execute fundraising plans and strategies that generate significant results.
* Commitment to results; “can-do"" mindset with emphasis on accountability.
* Exceptional in communicating verbally and in written language.
* Integrity and impeccable work ethic.

**Desirable attributes:**

* Experience at change management.
* Experience in writing persuasive materials including successful appeals, proposals, presentations, stewardship materials, and other collateral.
* Knowledge of the Haskell community and its dynamics.

HF celebrates diversity and inclusion, and does not discriminate on an individual’s identity characteristics. Under-represented minorities are especially encouraged to apply.

## Application Process

Interested candidates should submit a resume and thoughtful cover letter outlining how their skills and experience meet the qualifications of the position, and their vision for the Foundation.

Send to [nominations@haskell.foundation](mailto:nominations@haskell.foundation). If you have any questions about the position, feel free to email [chair@haskell.foundation](mailto:chair@haskell.foundation).

Closing date: Tuesday, February 22, 2022.",True,False,False,haskell,t5_2qh36,68977,public,self,Haskell Foundation seeks new Executive Director,0,[],1.0,https://www.reddit.com/r/haskell/comments/sogtq3/haskell_foundation_seeks_new_executive_director/,all_ads,6,,,,,,,,,,,,,,,,,,,,
319.0,[],False,StanleySmith888,,[],,text,t2_bl0pzwq3,False,False,False,[],False,False,1644421234,self.haskell,https://www.reddit.com/r/haskell/comments/sogi3s/learn_you_a_haskell_a_community_version/,{},sogi3s,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,14,0,False,all_ads,/r/haskell/comments/sogi3s/learn_you_a_haskell_a_community_version/,False,,,6,1644421244,1,"This is an open-source fork (clone) of **LYAH** [https://learnyouahaskell.github.io/](https://learnyouahaskell.github.io/).  I decided to create this open-source fork (with the author's permission) to enable the Haskell community to participate in preserving and maintaining this awesome resource for future times. The idea behind the fork is to enable a way to submit and incorporate suggestions for edits and updates for LYAH from the community as Haskell evolves and changes. Additionally, it should be a zero-downtime version as in the past the original LYAH has had significant downtimes for long periods.

Repository: [https://github.com/learnyouahaskell/learnyouahaskell.github.io](https://github.com/learnyouahaskell/learnyouahaskell.github.io)

https://preview.redd.it/k42zufnhutg81.png?width=1183&amp;format=png&amp;auto=webp&amp;s=1a7294a2a45d00d88167a562cc18a068e3def8f2

This is still a work in progress. Happy for any suggestions or feedback!",True,False,False,haskell,t5_2qh36,68976,public,self,Learn You a Haskell: A community version,0,[],1.0,https://www.reddit.com/r/haskell/comments/sogi3s/learn_you_a_haskell_a_community_version/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,91.0,140.0,"{'k42zufnhutg81': {'e': 'Image', 'id': 'k42zufnhutg81', 'm': 'image/png', 'p': [{'u': 'https://preview.redd.it/k42zufnhutg81.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=585b5927f25ba4bd419a67ea5cd7a2850532d6a4', 'x': 108, 'y': 70}, {'u': 'https://preview.redd.it/k42zufnhutg81.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=2b17f65264c4c393ec361d7dfe772176ec37fbc1', 'x': 216, 'y': 140}, {'u': 'https://preview.redd.it/k42zufnhutg81.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=f3c60f5ef9332920f018139f935838adb9ba9ff2', 'x': 320, 'y': 208}, {'u': 'https://preview.redd.it/k42zufnhutg81.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=8cec777eb3dde07f053db7147585ec1bc5ac6899', 'x': 640, 'y': 417}, {'u': 'https://preview.redd.it/k42zufnhutg81.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=d0ce6c41b43e1e4d1fcecc44006b7f85591f18a2', 'x': 960, 'y': 626}, {'u': 'https://preview.redd.it/k42zufnhutg81.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=004a213286289f690c45d05b784750cbbf41e9c2', 'x': 1080, 'y': 704}], 's': {'u': 'https://preview.redd.it/k42zufnhutg81.png?width=1183&amp;format=png&amp;auto=webp&amp;s=1a7294a2a45d00d88167a562cc18a068e3def8f2', 'x': 1183, 'y': 772}, 'status': 'valid'}}",,,,,,,,,,,,,,
320.0,[],False,Oooo_ola,,[],,text,t2_5m8jp0wv,False,False,False,[],False,False,1644408523,self.haskell,https://www.reddit.com/r/haskell/comments/soc2ub/typeville_conference_offers_a_5_discount_on_group/,{},soc2ub,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/soc2ub/typeville_conference_offers_a_5_discount_on_group/,False,,,6,1644408533,1,"Buy tickets with a group of friends and get 5% off for a Bundle of 5 Single or 6 Buddy Tickets. 

Meet other experts from Scala, Java, Haskell, Kotlin,  Rust, and Typescript worlds at an extraordinary venue in the Polish mountains to discuss all about programming with types. 

Join us in April at a tech conference:   
\- Enjoy your stay at a four-star hotel  
\- Learn from 20+ tech &amp; lightning talks   
\- Talk to Hugh McKee, Anton Keks, Chris Krycho, Jarosław Pałka  
\- Connect while hiking, water rafting, playing mini-golf

Questions? Reach out to us!   
typeville at typeville.io",True,False,False,haskell,t5_2qh36,68972,public,self,TypeVille Conference offers a 5% discount on group tickets,0,[],1.0,https://www.reddit.com/r/haskell/comments/soc2ub/typeville_conference_offers_a_5_discount_on_group/,all_ads,6,,,,,,,,,,,,,,,,,,,,
321.0,[],False,andrewthad,,[],,text,t2_j765z,False,False,False,[],False,False,1644408191,self.haskell,https://www.reddit.com/r/haskell/comments/sobzg1/looking_for_feedback_on_arraytraversal_construct/,{},sobzg1,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/sobzg1/looking_for_feedback_on_arraytraversal_construct/,False,self,"{'enabled': False, 'images': [{'id': 'MhxgZg4oy6izmxnq2o8UYQx1qH-InD7j4uG0tPwb0Mg', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c8aee23eb65e6d79dc16a7df0a20424c178c355e', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=867c93cddd10dca9a7ed7a2bd5522813accb5dfa', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=98c03dee0b4c96ea87a99f640bbc8ea6a50696cb', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e533481c4fe7c848c486097bd158d2aadf22bb77', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=9942965072eb46bfd772bdc487bc5b7dcfbe50fd', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ff3fb7f5ca3b7e97aff0ce736f375fe607452987', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/RgLAcXNUhNB2Zoc9ne-MFMk68OVdVY5EYyiW3em27mg.jpg?auto=webp&amp;s=b5d58c342fb767082d4c4786d600ca85ff4f9184', 'width': 1200}, 'variants': {}}]}",6,1644408202,1,"I've written out a description of a language construct for array traversals at [https://github.com/andrewthad/journal/blob/master/entries/2022-02-08.md](https://github.com/andrewthad/journal/blob/master/entries/2022-02-08.md). If anyone has any feedback on this, I would be grateful. Or if there is any literature that's related to this, it would be great to get pointers to it.",True,False,False,haskell,t5_2qh36,68971,public,self,Looking for Feedback on Array-Traversal Construct,0,[],1.0,https://www.reddit.com/r/haskell/comments/sobzg1/looking_for_feedback_on_arraytraversal_construct/,all_ads,6,,,,,,,,,,,,,,,,,,,,
322.0,[],False,hanzy1110,,[],,text,t2_gh1ho0o,False,False,False,[],False,False,1644363081,self.haskell,https://www.reddit.com/r/haskell/comments/sny9ba/the_next_step/,{},sny9ba,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sny9ba/the_next_step/,False,,,6,1644363092,1,,True,False,False,haskell,t5_2qh36,68964,public,self,The next step,0,[],1.0,https://www.reddit.com/r/haskell/comments/sny9ba/the_next_step/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
323.0,[],False,ClaudeRubinson,,[],,text,t2_6vw6iuq,False,False,False,[],False,False,1644359989,self.functionalprogramming,https://www.reddit.com/r/haskell/comments/snx2hl/wed_216_7pm_central_joey_hess_on_programming/,{},snx2hl,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/snx2hl/wed_216_7pm_central_joey_hess_on_programming/,False,,,6,1644360000,1,,True,False,False,haskell,t5_2qh36,68962,public,default,"Wed 2/16 @ 7pm central: Joey Hess on ""Programming Arduinos with Haskell and NASA’s Copilot”",0,[],1.0,/r/functionalprogramming/comments/snx262/wed_216_7pm_central_joey_hess_on_programming/,all_ads,6,,,/r/functionalprogramming/comments/snx262/wed_216_7pm_central_joey_hess_on_programming/,,,,,,,t3_snx262,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'ClaudeRubinson', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_6vw6iuq', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1644359963.0, 'created_utc': 1644359963.0, 'discussion_type': None, 'distinguished': None, 'domain': 'self.functionalprogramming', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 'snx262', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': True, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': '', 'link_flair_richtext': [], 'link_flair_template_id': 'a75aaf6e-a803-11e7-ad00-0e234ea32aa6', 'link_flair_text': 'Meetup', 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_snx262', 'no_follow': True, 'num_comments': 0, 'num_crossposts': 0, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/functionalprogramming/comments/snx262/wed_216_7pm_central_joey_hess_on_programming/', 'pinned': False, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 1, 'secure_media': None, 'secure_media_embed': {}, 'selftext': ""It's got everything a geek lives for: Arduinos, Haskell, and NASA!  Please join the Houston Functional Programming User Group next Wednesday, Feb 16 at 7pm central when Joey Hess will speak about his adventures programming the Arduino with Haskell.\n\nZoom connection info is on our website: [https://hfpug.org](https://hfpug.org)"", 'selftext_html': '&lt;!-- SC_OFF --&gt;&lt;div class=""md""&gt;&lt;p&gt;It&amp;#39;s got everything a geek lives for: Arduinos, Haskell, and NASA!  Please join the Houston Functional Programming User Group next Wednesday, Feb 16 at 7pm central when Joey Hess will speak about his adventures programming the Arduino with Haskell.&lt;/p&gt;\n\n&lt;p&gt;Zoom connection info is on our website: &lt;a href=""https://hfpug.org""&gt;https://hfpug.org&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;', 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'functionalprogramming', 'subreddit_id': 't5_2vcmg', 'subreddit_name_prefixed': 'r/functionalprogramming', 'subreddit_subscribers': 17463, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'self', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'Wed 2/16 @ 7pm central: Joey Hess on ""Programming Arduinos with Haskell and NASA’s Copilot”', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 1, 'upvote_ratio': 1.0, 'url': 'https://www.reddit.com/r/functionalprogramming/comments/snx262/wed_216_7pm_central_joey_hess_on_programming/', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
324.0,[],False,ysangkok,,[],,text,t2_4qktt,False,False,False,[],False,False,1644357364,pbrisbin.com,https://www.reddit.com/r/haskell/comments/snw0rq/haskell_coverage_reports/,{},snw0rq,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/snw0rq/haskell_coverage_reports/,False,link,"{'enabled': False, 'images': [{'id': 'pkyOInD-8HkEW7_n3MwdDoseYf7A98ccaFIqSBJaBds', 'resolutions': [{'height': 88, 'url': 'https://external-preview.redd.it/cCGbpaZEnwZ8QC2qkeWJRRsbIkKiZeVPLlIbsVX7cFI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1fa03a93600580e69117eeaa1be8af1b6df3f7a6', 'width': 108}, {'height': 177, 'url': 'https://external-preview.redd.it/cCGbpaZEnwZ8QC2qkeWJRRsbIkKiZeVPLlIbsVX7cFI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c056a4775aa77c846cad07759512fecdbf076f0b', 'width': 216}, {'height': 262, 'url': 'https://external-preview.redd.it/cCGbpaZEnwZ8QC2qkeWJRRsbIkKiZeVPLlIbsVX7cFI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=637b10d143c48097002553bd26a4b247ce978461', 'width': 320}, {'height': 525, 'url': 'https://external-preview.redd.it/cCGbpaZEnwZ8QC2qkeWJRRsbIkKiZeVPLlIbsVX7cFI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=8c00cc544cce59c44320b1a48d30d16877b3b4ef', 'width': 640}, {'height': 788, 'url': 'https://external-preview.redd.it/cCGbpaZEnwZ8QC2qkeWJRRsbIkKiZeVPLlIbsVX7cFI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2a1ed7f82a62f7e30b905c6630f0880cded7dc5a', 'width': 960}, {'height': 887, 'url': 'https://external-preview.redd.it/cCGbpaZEnwZ8QC2qkeWJRRsbIkKiZeVPLlIbsVX7cFI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=1815bf18c3ea577228f48bc6995230b56d0450ab', 'width': 1080}], 'source': {'height': 1290, 'url': 'https://external-preview.redd.it/cCGbpaZEnwZ8QC2qkeWJRRsbIkKiZeVPLlIbsVX7cFI.jpg?auto=webp&amp;s=0ab1807435c7bbe0ebf4a7482d3393d0d0035b8c', 'width': 1570}, 'variants': {}}]}",6,1644357375,1,,True,False,False,haskell,t5_2qh36,68962,public,default,Haskell Coverage Reports,0,[],1.0,https://pbrisbin.com/posts/haskell-coverage-reports/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://pbrisbin.com/posts/haskell-coverage-reports/,115.0,140.0,,reddit,,,,,,,,,,,,,
325.0,[],False,kitaiia,,[],,text,t2_4639dao1,False,False,False,[],False,False,1644355762,self.haskell,https://www.reddit.com/r/haskell/comments/snveep/m1pro_woes/,{},snveep,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/snveep/m1pro_woes/,False,self,"{'enabled': False, 'images': [{'id': 'RPER6JFqsFWoMrTUz6syzaxQx1RZoag9_UHqIK2gJJ4', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/ZAg3pOQzrqGKNhfJutPwJcpC1oF4hD-vbTxfndGQ7_8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b0daac947817a2a30184a13e3233157caa8f66ba', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/ZAg3pOQzrqGKNhfJutPwJcpC1oF4hD-vbTxfndGQ7_8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=164e9150bf3848ef9890f283bba35ca42ef7a4cb', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/ZAg3pOQzrqGKNhfJutPwJcpC1oF4hD-vbTxfndGQ7_8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=26917af2845728b02f9bd9cdb86808d38234f2cd', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/ZAg3pOQzrqGKNhfJutPwJcpC1oF4hD-vbTxfndGQ7_8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1111a4ccf9cfa884e1d77d33436c6974fe389bb6', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/ZAg3pOQzrqGKNhfJutPwJcpC1oF4hD-vbTxfndGQ7_8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=4a2d3e90f7f2c84caf6bd67641e3c3a273672cdc', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/ZAg3pOQzrqGKNhfJutPwJcpC1oF4hD-vbTxfndGQ7_8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=4d1592f5bbd9fcf37bc70a8305cfd9068546982b', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/ZAg3pOQzrqGKNhfJutPwJcpC1oF4hD-vbTxfndGQ7_8.jpg?auto=webp&amp;s=5205bddd49b71260aebf7341dac719e0df78698f', 'width': 1200}, 'variants': {}}]}",6,1644355773,1,"Background: I'm fairly new to Haskell, I can use the language but I am very unfamiliar with the overall build tooling. I largely just use what is recommended in my work project.

&amp;#x200B;

So I got a new M1Pro. I'm the second on my team to do so. They were able to build everything just fine after some minor adjustments, but I have had problem after problem... and I'm stumped, so I'm turning to you for help.  


The project I'm trying to build is open source ([https://github.com/fossas/fossa-cli](https://github.com/fossas/fossa-cli)). When I got this new system set up, I ran the instructions on our [HACKING.md](https://github.com/fossas/fossa-cli/blob/master/docs/contributing/HACKING.md) page and immediately tried to build. This failed because I didn't have \`llvm\` installed, so I \`brew install llvm\`'d, symlinked into \`$PATH\`, and tried again. This failed due to:  
\`\`\`  
install\_name\_tool: error: unsupported load command (cmd=0x80000034) \`install\_name\_tool' failed in phase \`Install Name Tool'. (Exit code: 1)

\`\`\`

My teammate who has the M1 already and I compared notes, and he found that he had installed \`llvm@12\`. So I removed \`llvm\` and its \`$PATH\` symlink, installed \`llvm@12\`, installed its symlink, and now it compiles! Yay!

... But I can't link. I'm now failing on this:

\`\`\`  
Building library for byteorder-1.0.4..

\[1 of 1\] Compiling System.ByteOrder ( System/ByteOrder.hs, dist/build/System/ByteOrder.o, dist/build/System/ByteOrder.dyn\_o )

ar: @/dist/build/objs-29886/ar29886-2.rsp: No such file or directory  
\`\`\`

We found a post where someone had a similar issue ([here](https://github.com/tweag/asterius/issues/345)), but the fix in that issue doesn't help: using  \`ar\` from \`binutils\` causes link errors like this instead:

\`\`\`  
Linking dist/build/hspec-discover/hspec-discover ... ld: warning: ignoring file /Users/kit/.cabal/store/ghc-8.10.7/hspc-dscvr-2.8.5-ab243a40/lib/libHShspc-dscvr-2.8.5-ab243a40.a, building for macOS-arm64 but attempting to link with file built for macOS-arm64  
\`\`\`

So I'm kinda lost at this point and hoping someone has tips. If you read this far, thanks for your time!",True,False,False,haskell,t5_2qh36,68962,public,self,M1Pro Woes,0,[],1.0,https://www.reddit.com/r/haskell/comments/snveep/m1pro_woes/,all_ads,6,,,,,,,,,,,,,,,,,,,,
326.0,[],False,myShoggoth,,[],,text,t2_fpj4y,False,False,False,[],False,False,1644355518,discourse.haskell.org,https://www.reddit.com/r/haskell/comments/snvb3n/haskell_foundation_executive_director_change/,{},snvb3n,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/snvb3n/haskell_foundation_executive_director_change/,False,link,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1644355528,1,,True,False,False,haskell,t5_2qh36,68962,public,default,Haskell Foundation Executive Director Change,0,[],1.0,https://discourse.haskell.org/t/haskell-foundation-executive-director-change/4047,all_ads,6,,,https://discourse.haskell.org/t/haskell-foundation-executive-director-change/4047,140.0,140.0,,,,,,,,,,,,,,,
327.0,[],False,myShoggoth,,[],,text,t2_fpj4y,False,False,False,[],False,False,1644339752,discourse.haskell.org,https://www.reddit.com/r/haskell/comments/snp2nn/haskell_foundation_january_update/,{},snp2nn,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/snp2nn/haskell_foundation_january_update/,False,link,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1644339763,1,,True,False,False,haskell,t5_2qh36,68961,public,default,Haskell Foundation January Update,0,[],1.0,https://discourse.haskell.org/t/haskell-foundation-january-update/4045,all_ads,6,,,https://discourse.haskell.org/t/haskell-foundation-january-update/4045,140.0,140.0,,,,,,,,,,,,,,,
328.0,[],False,timlee126,,[],,text,t2_5fefq,False,False,False,[],False,False,1644339638,self.haskell,https://www.reddit.com/r/haskell/comments/snp0wn/how_is_an_instance_of_monad_an_instance_of/,{},snp0wn,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/snp0wn/how_is_an_instance_of_monad_an_instance_of/,False,,,6,1644339648,1,"    class Functor f =&gt; Applicative f where
    pure::a-&gt;fa
    (&lt;*&gt;)::f(a-&gt;b)-&gt;fa-&gt;fb


    class Applicative m =&gt; Monad m where
    return::a-&gt;ma
    (&gt;&gt;=)::ma-&gt;(a-&gt;mb)-&gt;mb
    return=pure

Does it mean that an instance of `Monad` is also an instance of `Applicative?

I was wondering how to see an instance of Monad is an instance of Applicative?

Can `&lt;*&gt;` of `Applicative` be rewritten in terms of `&gt;&gt;=` of `Monad`?

Thanks.",True,False,False,haskell,t5_2qh36,68961,public,self,How is an instance of Monad an instance of Applicative?,0,[],1.0,https://www.reddit.com/r/haskell/comments/snp0wn/how_is_an_instance_of_monad_an_instance_of/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
329.0,[],False,Moist_Soup_231,,[],,text,t2_ibfkq9ay,False,False,False,[],False,False,1644337013,self.haskell,https://www.reddit.com/r/haskell/comments/snnzky/is_cabal_hell_still_an_issue/,{},snnzky,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/snnzky/is_cabal_hell_still_an_issue/,False,,,6,1644337023,1,"I'm looking to get into Functional Programming, and I really like all the things I read about Haskell as a language, but I'm being driven to find something else almost entirely by what I can find about cabal. Like, I can't uninstall a package? Really?

Although most posts about ""cabal hell"" seem to be almost a decade old I can't really find if anything has changed to abolish it. The closest I've read is someone somewhere mentioning Nix as an alternative to Cabal; is that Nix as in NixOS? Are people really using a system package manager to manage their Haskell packages, or have I completely missed the point? Separate from Nix, is Cabal good now or should I stay away?",True,False,False,haskell,t5_2qh36,68961,public,self,Is cabal hell still an issue?,0,[],1.0,https://www.reddit.com/r/haskell/comments/snnzky/is_cabal_hell_still_an_issue/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
330.0,[],False,blumento_pferde,,[],,text,t2_4thn5cjd,False,False,False,[],False,False,1644333159,blog.plover.com,https://www.reddit.com/r/haskell/comments/snmj0s/i_would_like_a_job_writing_haskell/,{},snmj0s,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,2,0,False,all_ads,/r/haskell/comments/snmj0s/i_would_like_a_job_writing_haskell/,False,link,"{'enabled': False, 'images': [{'id': 'iWp5Um-oTLA5CNpWqhHGe8XRm4LtuisAO-Rm67WHHCc', 'resolutions': [], 'source': {'height': 100, 'url': 'https://external-preview.redd.it/vUMOoRhnPV_AAzGhD-AspE7M7j9aXin1wB4wNFqmGyY.jpg?auto=webp&amp;s=c8afbfc96e34815699febf050671b267d2037ea7', 'width': 100}, 'variants': {}}]}",6,1644333170,1,,True,False,False,haskell,t5_2qh36,68963,public,default,I would like a job writing Haskell,0,[],1.0,https://blog.plover.com/2022/02/07/,all_ads,6,,,https://blog.plover.com/2022/02/07/,70.0,70.0,,,,,,,,,,,,,,,
331.0,[],False,Serokell,,[],,text,t2_fvl0rbg,False,False,False,[],False,False,1644319432,serokell.io,https://www.reddit.com/r/haskell/comments/snhxgn/serokell_is_hiring_senior_haskell_engineers/,{},snhxgn,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,2,0,False,all_ads,/r/haskell/comments/snhxgn/serokell_is_hiring_senior_haskell_engineers/,False,link,"{'enabled': False, 'images': [{'id': 'ndQEix004PhGrCsQhsJssTVmoiDEyr_6Q8cUTKHhadI', 'resolutions': [{'height': 56, 'url': 'https://external-preview.redd.it/OMDQRwcPfGToVqNZuBZDfZsF-AvRGdUlm4PW3aNHueA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=307bdd7fe9ee7b2f1e0cbe1cca494ff6afb808d0', 'width': 108}, {'height': 112, 'url': 'https://external-preview.redd.it/OMDQRwcPfGToVqNZuBZDfZsF-AvRGdUlm4PW3aNHueA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a63727f1fed404c089708db07242798a6f65c4c5', 'width': 216}, {'height': 166, 'url': 'https://external-preview.redd.it/OMDQRwcPfGToVqNZuBZDfZsF-AvRGdUlm4PW3aNHueA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=691151002fedcfaa858ecc7b3729eb2808cfaaad', 'width': 320}, {'height': 332, 'url': 'https://external-preview.redd.it/OMDQRwcPfGToVqNZuBZDfZsF-AvRGdUlm4PW3aNHueA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=5dfd788a7a02f002ce7db38e97cf54e1b0b0a956', 'width': 640}, {'height': 499, 'url': 'https://external-preview.redd.it/OMDQRwcPfGToVqNZuBZDfZsF-AvRGdUlm4PW3aNHueA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ff01339fec7d2cdefcd54f9e4d1a627a3ab6bcf6', 'width': 960}, {'height': 561, 'url': 'https://external-preview.redd.it/OMDQRwcPfGToVqNZuBZDfZsF-AvRGdUlm4PW3aNHueA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=e89939b2e244c575d16597c165d0123fa58f5a01', 'width': 1080}], 'source': {'height': 630, 'url': 'https://external-preview.redd.it/OMDQRwcPfGToVqNZuBZDfZsF-AvRGdUlm4PW3aNHueA.jpg?auto=webp&amp;s=6836b7c37df0a37cf551a09ad47185356fac9cfa', 'width': 1212}, 'variants': {}}]}",6,1644319442,1,,True,False,False,haskell,t5_2qh36,68959,public,default,Serokell is Hiring Senior Haskell Engineers,0,[],1.0,https://serokell.io/blog/hiring-senior-haskell-engineer,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,https://serokell.io/blog/hiring-senior-haskell-engineer,72.0,140.0,,,,,,,,,,,,,,,
332.0,[],False,Otherwise_Jump_7240,,[],,text,t2_h9taz1ai,False,False,False,[],False,False,1644318568,i.redd.it,https://www.reddit.com/r/haskell/comments/snhp2k/emurgo_launches_haskell_developer_professional/,{},snhp2k,False,False,False,False,True,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/snhp2k/emurgo_launches_haskell_developer_professional/,False,image,"{'enabled': True, 'images': [{'id': 'UL4e0N6GH2HI3Bs0ePtYczJkfpwaNbLACaH7SGx9Cpc', 'resolutions': [{'height': 108, 'url': 'https://preview.redd.it/e8ch6edsdlg81.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=504eb77f5cd4ab215072a45588b6d590052bce8f', 'width': 108}, {'height': 216, 'url': 'https://preview.redd.it/e8ch6edsdlg81.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b7c276a1c673683e871e21003b3440d646bad2f6', 'width': 216}, {'height': 320, 'url': 'https://preview.redd.it/e8ch6edsdlg81.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d8e3b3c0597ffdeb8510dd3f9235fa5f5e27854e', 'width': 320}, {'height': 640, 'url': 'https://preview.redd.it/e8ch6edsdlg81.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f2da4b99bb23e58f96ac42859ca898b2c13f1be8', 'width': 640}, {'height': 960, 'url': 'https://preview.redd.it/e8ch6edsdlg81.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=da66e56c3451886984e3b0b0adbfc8c4c9155f5d', 'width': 960}, {'height': 1080, 'url': 'https://preview.redd.it/e8ch6edsdlg81.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=69e882a0578d27d3469a84f088b531d596930696', 'width': 1080}], 'source': {'height': 1080, 'url': 'https://preview.redd.it/e8ch6edsdlg81.jpg?auto=webp&amp;s=99de65e32bf7a8a6cd31651229c4e6ec62665d0a', 'width': 1080}, 'variants': {}}]}",6,1644318579,1,,True,False,False,haskell,t5_2qh36,68959,public,image,EMURGO Launches Haskell Developer Professional Program,0,[],1.0,https://i.redd.it/e8ch6edsdlg81.jpg,all_ads,6,b0bce6c2-2a63-11eb-b9a5-0eb5aa8d3dc9,blockchain,https://i.redd.it/e8ch6edsdlg81.jpg,140.0,140.0,,moderator,,,,,,,,,,,,,
333.0,[],False,timlee126,,[],,text,t2_5fefq,False,False,False,[],False,False,1644282919,self.haskell,https://www.reddit.com/r/haskell/comments/sn6ve4/are_there_type_classes_for_these_two_kinds_of/,{},sn6ve4,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,1,0,False,all_ads,/r/haskell/comments/sn6ve4/are_there_type_classes_for_these_two_kinds_of/,False,,,6,1644282929,1,"(1) Is there a typeclass whose instances are all the type constructors (i.e. endo functors) or all the n-ary type constructors?

(2) In a category, a morphism is from an object to another object i.e. o_1-&gt;o_2. 

- Is there a name for a generalized morphism from and to more than one objects, i.e. o_1-&gt;o_2-&gt;...-&gt;o_n?

- Is there a name for such a generalized category with the generalized morphisms?

- Is there a name for such a generalized functor for such generalized categories?

Is it correct that the Applicative class consists of exactly such generalized endo functors on generalized category Hask.

Thanks.",True,False,False,haskell,t5_2qh36,68954,public,self,Are there type classes for these two kinds of endofunctors?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sn6ve4/are_there_type_classes_for_these_two_kinds_of/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
334.0,[],False,Comprehensive-Ad3963,,[],,text,t2_5zg4jvtk,False,False,False,[],False,False,1644272065,self.haskell,https://www.reddit.com/r/haskell/comments/sn2nhp/why_is_my_program_to_find_the_nth_prime_number/,{},sn2nhp,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sn2nhp/why_is_my_program_to_find_the_nth_prime_number/,False,,,6,1644272075,1,"I wrote a program to find the nth prime number between 1 and 100,005, using the Sieve of Eratosthenes. For example, the first prime number is 1, the second is 2, and the third is 3.

Here's my program:

`-- Get a range of list of numbers from begin to end, inclusive.`  
`range :: Integer -&gt; Integer -&gt; [Integer]`  
`range begin end`  
  `| end == 0 = [begin]`  
  `| begin &gt;= end = [end]`  
  `| otherwise = begin : range (begin + 1) end`  
`checkNotMultiple :: Integral a =&gt; a -&gt; a -&gt; Bool`  
`checkNotMultiple a b = r &gt; 0 || q &lt; 2`  
 `where`  
    `(q, r) = divMod b a`  
`eliminateMultiplesOfP :: Integral a =&gt; [a] -&gt; a -&gt; [a]`  
`eliminateMultiplesOfP list p = filter (checkNotMultiple p) list`  
`eliminateMultiples :: Integral a1 =&gt; [a1] -&gt; [a1]`  
`eliminateMultiples list`  
  `| length list &gt; 1 = head list : eliminateMultiples (eliminateMultiplesOfP (tail list) (head list))`  
  `| otherwise = list`  
`-- Sieve of Eratosthenes`  
`getNthPrime :: Int -&gt; Integer`  
`getNthPrime n = (1 : eliminateMultiples (range 2 100005)) !! (n-1)`

As n increases, so does the time the program takes to access the nth element of the list. Why, and what can I do to make this not true?

Hazarding a guess: Maybe GHC is smart enough to realize that it shouldn't run eliminateMultiples on the entire list, despite what the code says, because I really only care about one element of the resulting array.",True,False,False,haskell,t5_2qh36,68953,public,self,"Why is my program to find the nth prime number fast for small n, but slow for large n? What can I do to keep the worst-case complexity low?",0,[],1.0,https://www.reddit.com/r/haskell/comments/sn2nhp/why_is_my_program_to_find_the_nth_prime_number/,all_ads,6,,,,,,,,,,,,,,,,,,,,
335.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1644268374,self.haskell,https://www.reddit.com/r/haskell/comments/sn13ss/seeking_feedback_for_text_builder_with_linear/,{},sn13ss,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/sn13ss/seeking_feedback_for_text_builder_with_linear/,False,self,"{'enabled': False, 'images': [{'id': '77kONeQ9eo3_kSCH58bkyeJGocShiUhczuno-1W0Xno', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/xJAeGXVEgAToC24tXC6Vqv_JRil6L8ivmDd508OMnKA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a9649edfc23ec018fba0396d77ce47fa1977136b', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/xJAeGXVEgAToC24tXC6Vqv_JRil6L8ivmDd508OMnKA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1430ee3f4448b965647f00dcbf0fc6a4ab4db14c', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/xJAeGXVEgAToC24tXC6Vqv_JRil6L8ivmDd508OMnKA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=166c922ac2c7ba634822c29c77b315c74841480b', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/xJAeGXVEgAToC24tXC6Vqv_JRil6L8ivmDd508OMnKA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1bccfaccbd5092876b941ad564c2d307d2b52f22', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/xJAeGXVEgAToC24tXC6Vqv_JRil6L8ivmDd508OMnKA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=726b66f740ea681a045caf94eb30101881e4daf9', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/xJAeGXVEgAToC24tXC6Vqv_JRil6L8ivmDd508OMnKA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=2bf18489ae4ea065b774b60a1734f2df81582d73', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/xJAeGXVEgAToC24tXC6Vqv_JRil6L8ivmDd508OMnKA.jpg?auto=webp&amp;s=639a2f48bd1b3550161f103df3183273deaedb41', 'width': 1200}, 'variants': {}}]}",6,1644268385,1,"I've been playing around with linear types, attempting to design a strict `Text` builder. Admittedly I know too little about both topics, so I'd appreciate some feedback about my ramblings, because benchmarks look suspiciously good: https://github.com/Bodigrim/linear-builder/",True,False,False,haskell,t5_2qh36,68953,public,self,Seeking feedback for Text Builder with linear types,0,[],1.0,https://www.reddit.com/r/haskell/comments/sn13ss/seeking_feedback_for_text_builder_with_linear/,all_ads,6,a01b58a0-6553-11eb-b2eb-0eb19e8d97a5,RFC,,,,,,,,,,,,,,,,,,
336.0,[],False,arnemcnuggets,,[],,text,t2_7egzysxc,False,False,False,[],False,False,1644267009,self.haskell,https://www.reddit.com/r/haskell/comments/sn0j0s/i_married_stack_and_codeserver_into_a_docker/,{},sn0j0s,False,True,False,True,False,True,True,False,,[],dark,text,False,False,False,1,0,False,all_ads,/r/haskell/comments/sn0j0s/i_married_stack_and_codeserver_into_a_docker/,False,self,"{'enabled': False, 'images': [{'id': 'UUXv1kiMSRXYFO7aZUv-wcwWw2sQpHUrr0d49fAccMk', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/CBrJrHmqCTMAh8h564Zfv-6naOMWl-Ad-v8ReVSnn_g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0bb3c75552ce5e106dccd2769e0445ec8c4aa9a3', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/CBrJrHmqCTMAh8h564Zfv-6naOMWl-Ad-v8ReVSnn_g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=201517225e6f1f6248413320074420c72f731a25', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/CBrJrHmqCTMAh8h564Zfv-6naOMWl-Ad-v8ReVSnn_g.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3230ce24c7d8a48c072e40c16672ef4e55e547ba', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/CBrJrHmqCTMAh8h564Zfv-6naOMWl-Ad-v8ReVSnn_g.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=71bf6f26b1017756f41b6c21bfa4945676d7a50b', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/CBrJrHmqCTMAh8h564Zfv-6naOMWl-Ad-v8ReVSnn_g.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=76baec4ca7fd523772dea0df96e5466b81c1152a', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/CBrJrHmqCTMAh8h564Zfv-6naOMWl-Ad-v8ReVSnn_g.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=67320a156aafea40085b1b2cd8b08af0aef56069', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/CBrJrHmqCTMAh8h564Zfv-6naOMWl-Ad-v8ReVSnn_g.jpg?auto=webp&amp;s=f24989eb4f4afbe6414bebb361323612ff8cdd3f', 'width': 1200}, 'variants': {}}]}",6,1644267020,1,"Hi haskell folk, thought I'd share this with you.

For a workshop I am planning I want to ensure that everyone has a quick haskell development setup available, so I created a simple docker image based on haskell's official image.
This one includes [code-server](https://github.com/coder/code-server) as a vs-code web IDE.

The image can be found on [docker hub](https://hub.docker.com/r/arnemcnuggets/hs-workshop) and launched like so: `docker run --rm -p 8080:8080 -v $PWD/code:/exercises arnemcnuggets/hs-workshop`
Notice that the default directory (currently /exercises) can be adjusted by changing the entry-point cmd (currently it's `code-server --auth none --bind-addr 0.0.0.0:8080 --user-data-dir /data /exercises`).

You can then navigate your browser to localhost:8080 and start programming haskell with linting, type hints and formatting.

The environment is, of course, by no means to be used in production but rather for education.

This is kind of the first docker contribution I made so feedback is welcome!",True,False,False,haskell,t5_2qh36,68952,public,self,I married stack and code-server into a docker image for a quick&amp;dirty haskell web IDE,0,[],1.0,https://www.reddit.com/r/haskell/comments/sn0j0s/i_married_stack_and_codeserver_into_a_docker/,all_ads,6,,,,,,,,,,,,,,,,,,,,
337.0,[],False,adamMatthews,,[],,text,t2_5spau,False,False,False,[],False,False,1644266705,self.haskell,https://www.reddit.com/r/haskell/comments/sn0en0/whats_the_best_way_to_use_a_repl_for_tdd/,{},sn0en0,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,2,0,False,all_ads,/r/haskell/comments/sn0en0/whats_the_best_way_to_use_a_repl_for_tdd/,False,,,6,1644266716,1,"Just playing around with a tiny project, I've found that using HSpec with `cabal repl` would be really really nice. You could call `main` to run all the tests, or call `hspec XyzSpec.spec` to run just the tests you currently care about.

Problem is that GHCi can only load one component at a time. That means I can't do `:r` to reload code changes that aren't in the test component. If I'm changing library code, then restarting the repl from Cabal all the time isn't convenient as it is slow.

As a hacky solution, if I add the library's src dir to my test's `hs-source-dirs` then it works really nicely. Things reload very quickly. But once you start needing build dependencies in the library, you also need to add them to the test project. This starts to feel a bit messy, build tools for other languages don't require hacks like this.

Is there a better way to do this? I know there's `stack test --file-watch` but this is very slow. I'm looking to to make tiny changes rapidly, and the time it makes you wait while it builds the project over and over is inconvenient when compared to the instant reloading in GHCi.",True,False,False,haskell,t5_2qh36,68952,public,self,What's the best way to use a REPL for TDD?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sn0en0/whats_the_best_way_to_use_a_repl_for_tdd/,all_ads,6,,,,,,,,,,,,,,,,,,,,
338.0,[],False,sridfr,,[],,text,t2_f1wkk8ou,False,False,False,[],False,False,1644266137,cs-syd.eu,https://www.reddit.com/r/haskell/comments/sn06je/announcing_safecolouredtext/,{},sn06je,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sn06je/announcing_safecolouredtext/,False,,,6,1644266148,1,,True,False,False,haskell,t5_2qh36,68951,public,default,Announcing `safe-coloured-text`,0,[],1.0,https://cs-syd.eu/posts/2021-03-07-safe-coloured-text,all_ads,6,,,https://cs-syd.eu/posts/2021-03-07-safe-coloured-text,,,,,,,,,,,,,,,,,
339.0,[],False,isovector,,[],,text,t2_pir4g,False,False,False,[],False,False,1644262463,anchor.fm,https://www.reddit.com/r/haskell/comments/smyojw/reed_mullanix_by_the_cofree_coffee_cast/,{},smyojw,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/smyojw/reed_mullanix_by_the_cofree_coffee_cast/,False,link,"{'enabled': False, 'images': [{'id': 'ZWaM8WKwNB_PMEDY-7BjN7qB4zPE316TL_9cp6cVBLQ', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/d_1-mVi3DcRvd2qy5wP-txarb6zsbG_FFwVai4jdxNQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fd1a61ee081ec959e1b8765efc93ade325110e28', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/d_1-mVi3DcRvd2qy5wP-txarb6zsbG_FFwVai4jdxNQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8fe5f9226651a9e047b163b9565da803640abe6b', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/d_1-mVi3DcRvd2qy5wP-txarb6zsbG_FFwVai4jdxNQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ab759017d3fa5efb4e4b83542bd67f3b71010013', 'width': 320}], 'source': {'height': 400, 'url': 'https://external-preview.redd.it/d_1-mVi3DcRvd2qy5wP-txarb6zsbG_FFwVai4jdxNQ.jpg?auto=webp&amp;s=ed84d582fc63a458e493e9534aefb40ffade15c0', 'width': 400}, 'variants': {}}]}",6,1644262474,1,,True,False,False,haskell,t5_2qh36,68950,public,default,Reed Mullanix by The Cofree Coffee Cast,0,[],1.0,https://anchor.fm/cofree-coffee/episodes/Reed-Mullanix-e1e2mjt,all_ads,6,25c3bc14-5d7e-11eb-8d29-0e2c6cfa9d83,audio,https://anchor.fm/cofree-coffee/episodes/Reed-Mullanix-e1e2mjt,140.0,140.0,,,,,,,"{'oembed': {'author_name': 'Reed Mullanix by The Cofree Coffee Cast', 'description': 'In which Reed discusses truth, proof assistants, getting good at math, category theory, inductive types, how to learn, the importance of community, and epistemic humility. In which Solomon Bothwell discusses starting a radio station, building collaborative communities, pair programming, building a functional chat bot, the meaning of utopia, a new residency program, the Curry-Howard isomorphism, and renegotiating your place in society.', 'height': 102, 'html': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed%2Fepisodes%2FReed-Mullanix-e1e2mjt&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fepisodes%2FReed-Mullanix-e1e2mjt&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_episode400%2F21070805%2F21070805-1644261254545-73f0210c397a4.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'provider_name': 'Anchor FM Inc.', 'provider_url': 'https://anchor.fm', 'thumbnail_height': 400, 'thumbnail_url': 'https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_episode400/21070805/21070805-1644261254545-73f0210c397a4.jpg', 'thumbnail_width': 400, 'title': 'Reed Mullanix by The Cofree Coffee Cast', 'type': 'rich', 'version': '1.0', 'width': 400}, 'type': 'anchor.fm'}","{'content': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed%2Fepisodes%2FReed-Mullanix-e1e2mjt&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fepisodes%2FReed-Mullanix-e1e2mjt&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_episode400%2F21070805%2F21070805-1644261254545-73f0210c397a4.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'height': 102, 'scrolling': False, 'width': 400}","{'oembed': {'author_name': 'Reed Mullanix by The Cofree Coffee Cast', 'description': 'In which Reed discusses truth, proof assistants, getting good at math, category theory, inductive types, how to learn, the importance of community, and epistemic humility. In which Solomon Bothwell discusses starting a radio station, building collaborative communities, pair programming, building a functional chat bot, the meaning of utopia, a new residency program, the Curry-Howard isomorphism, and renegotiating your place in society.', 'height': 102, 'html': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed%2Fepisodes%2FReed-Mullanix-e1e2mjt&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fepisodes%2FReed-Mullanix-e1e2mjt&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_episode400%2F21070805%2F21070805-1644261254545-73f0210c397a4.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'provider_name': 'Anchor FM Inc.', 'provider_url': 'https://anchor.fm', 'thumbnail_height': 400, 'thumbnail_url': 'https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_episode400/21070805/21070805-1644261254545-73f0210c397a4.jpg', 'thumbnail_width': 400, 'title': 'Reed Mullanix by The Cofree Coffee Cast', 'type': 'rich', 'version': '1.0', 'width': 400}, 'type': 'anchor.fm'}","{'content': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed%2Fepisodes%2FReed-Mullanix-e1e2mjt&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fepisodes%2FReed-Mullanix-e1e2mjt&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_episode400%2F21070805%2F21070805-1644261254545-73f0210c397a4.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'height': 102, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/smyojw', 'scrolling': False, 'width': 400}",,,,,
340.0,[],False,timlee126,,[],,text,t2_5fefq,False,False,False,[],False,False,1644259919,self.haskell,https://www.reddit.com/r/haskell/comments/smxolp/are_a_and_b_in_fmap_a_b_f_a_f_b_arbitrary_type/,{},smxolp,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/smxolp/are_a_and_b_in_fmap_a_b_f_a_f_b_arbitrary_type/,False,,,6,1644259930,1,"In Haskell 2010 specification:

&gt; 6.3.5 The Functor Class
&gt; 
&gt;     class Functor f where
&gt;       fmap :: (a -&gt; b) -&gt; f a -&gt; f b
&gt; 
&gt; The Functor class is used for types that can be mapped over. Lists, IO, and Maybe are in this class.
&gt; Instances of Functor should satisfy the following laws:
&gt; 
&gt;     fmap id = id
&gt;     fmap (f . g) = fmap f . fmap g
&gt; 

Are `a` and `b` in the declaration of `fmap`'s signature  type constructors, or types (i.e. 0-ary type constructors)?

Thanks.",True,False,False,haskell,t5_2qh36,68948,public,self,Are `a` and `b` in `fmap :: (a -&gt; b) -&gt; f a -&gt; f b` arbitrary type constructors or types (0-ary type constructors)?,0,[],1.0,https://www.reddit.com/r/haskell/comments/smxolp/are_a_and_b_in_fmap_a_b_f_a_f_b_arbitrary_type/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
341.0,[],False,Bulker3000,,[],,text,t2_8t2orbjp,False,False,False,[],False,False,1644258691,self.haskell,https://www.reddit.com/r/haskell/comments/smx78l/distance_function/,{},smx78l,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/smx78l/distance_function/,False,,,6,1644258702,1,"Hi all,

Finishing a project and looking to use a function that calculates the Euclidean distance between two points. 

I know the Euclidean distance formula sqrt of (a-c)^2 + (b-d)^2

It would follow the function distance :: Float -&gt; Float -&gt; Float -&gt; Float -&gt; Float

Ex: distance 3 5 3 5 will give back 0.0

Having troubles putting this in correctly.",True,False,False,haskell,t5_2qh36,68948,public,self,Distance function,0,[],1.0,https://www.reddit.com/r/haskell/comments/smx78l/distance_function/,all_ads,6,ebb4b74c-16d0-11eb-9ff6-0e5aacb57bb7,homework,,,,,,,,,,,,,,,,,,
342.0,[],False,oskargreda,,[],,text,t2_fi2s2co8,False,False,False,[],False,False,1644251402,self.haskell,https://www.reddit.com/r/haskell/comments/smu9xt/mlabs_paid_haskell_internship_opportunity_march/,{},smu9xt,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/smu9xt/mlabs_paid_haskell_internship_opportunity_march/,False,,,6,1644251413,1,"**Description**

We are one of the leading Haskell consultancies in the fintech, blockchain and AI space, with a passion for Haskell and open-source software. We are looking for a remote interns to join our team.

If you are excited about Haskell, about robust and clean software and are up for a new challenge, you’ve come to the right place!

Our internships are usually 6 months in duration and are paid. You will have the opportunity to work on some real projects but also have time to learn and develop your skills and experience in Haskell. 

We have cohorts starting every few months.

When your internship is coming to end, you will have an interview for a junior developer position with MLabs too! 

**Requirements**

· Basic knowledge and interest in Haskell

· Interest in software engineering and architecture

· Problem solving and analytical skills

· Strong verbal skills in English

**Benefits**

· Focus on learning and individual growth in Haskell and Computer Science

· Work with other great Haskellers, open source contributors and computer scientists

· Interesting and challenging projects

· Ability to talk with anyone in the organization, regardless of team

· Remote work

· Flexible working hours

· 6 weeks of paid vacation per year

· Competitive salary

To apply please forward your up-to-date CV to [oskar@mlabs.city](mailto:oskar@mlabs.city) 

We will get back to you as soon as possible!",True,False,False,haskell,t5_2qh36,68949,public,self,"MLabs - Paid Haskell Internship Opportunity - March 2022 Intake (100% Remote, Worldwide)",0,[],1.0,https://www.reddit.com/r/haskell/comments/smu9xt/mlabs_paid_haskell_internship_opportunity_march/,all_ads,6,,,,,,,,,,,,,,,,,,,,
343.0,[],False,julek1024,,[],,text,t2_b9akh,False,False,False,[],False,False,1644236644,self.haskell,https://www.reddit.com/r/haskell/comments/smp0d4/finding_my_favourite_haskell_tshirt/,{},smp0d4,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/smp0d4/finding_my_favourite_haskell_tshirt/,False,self,"{'enabled': False, 'images': [{'id': 'DHqNaflgSzoFEvQ68yg_wJXKKUMX5cIfB4U_qGISLWI', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/SKX2GcyMtClEmwnPgm2SqTSJH2RRg5lkJTZDuGC7h-4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=960d0215cf9adf4a7fba3089e97679ea52a363d7', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/SKX2GcyMtClEmwnPgm2SqTSJH2RRg5lkJTZDuGC7h-4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=16ccc0d1b28f9bba89d52397e7f5dcec7f7c91f6', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/SKX2GcyMtClEmwnPgm2SqTSJH2RRg5lkJTZDuGC7h-4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4afe1ba835bbcbd9d7cd3d0435ccc191bd04006c', 'width': 320}], 'source': {'height': 460, 'url': 'https://external-preview.redd.it/SKX2GcyMtClEmwnPgm2SqTSJH2RRg5lkJTZDuGC7h-4.jpg?auto=webp&amp;s=49d68d4dd2b3b327fc515655dc021cb5a50dd373', 'width': 460}, 'variants': {}}]}",6,1644236654,1,"Hey all,

Here's a picture of me wearing my favourite Haskell t-shirt:  
[https://avatars.githubusercontent.com/u/832759?v=4](https://avatars.githubusercontent.com/u/832759?v=4)

&amp;#x200B;

I would like to be able get some more copies as presents, etc... but cannot find it being sold anywhere anymore... Does anyone have any ideas where I might be able to find this t-shirt for sale, or track down the designer?",True,False,False,haskell,t5_2qh36,68948,public,self,Finding my favourite Haskell t-shirt,0,[],1.0,https://www.reddit.com/r/haskell/comments/smp0d4/finding_my_favourite_haskell_tshirt/,all_ads,6,,,,,,,,,,,,,,,,,,,,
344.0,[],False,Bulker3000,,[],,text,t2_8t2orbjp,False,False,False,[],False,False,1644214640,self.haskell,https://www.reddit.com/r/haskell/comments/smj4t9/nand_function/,{},smj4t9,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/smj4t9/nand_function/,False,,,6,1644214650,1,"Using nand :: bool -&gt; bool -&gt; bool I’m trying to find the nand x1 x2 computes the logical nand of x1 x2.

Ex: would be nand true true would return a false or a nand false true would return a true. Not sure how to set this up besides the first function I wrote.",True,False,False,haskell,t5_2qh36,68940,public,self,nand function,0,[],1.0,https://www.reddit.com/r/haskell/comments/smj4t9/nand_function/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
345.0,[],False,Lucas46,,[],,text,t2_j8scy,False,False,False,[],False,False,1644203981,self.haskell,https://www.reddit.com/r/haskell/comments/smfu18/cabal_cannot_find_ghc/,{},smfu18,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/smfu18/cabal_cannot_find_ghc/,False,,,6,1644203991,1,"Hello everyone,

I'm trying to install Euterpea and Haskell School of Music on my Windows PC for a school project. I have already verified that my system has ghc 9.2.1 and haskell-dev 0.01 installed on it. When I run `cabal install Euterpea` however, it tells me that `cabal.exe: The program 'ghc' version &gt;=7.0.1 is required but it could not be found.` How can I rectify this? Thank you!",True,False,False,haskell,t5_2qh36,68936,public,self,Cabal cannot find ghc?,0,[],1.0,https://www.reddit.com/r/haskell/comments/smfu18/cabal_cannot_find_ghc/,all_ads,6,,,,,,,,,,,,,,,,,,,,
346.0,[],False,norm2782,,[],,text,t2_4hzzs,False,False,False,[],False,False,1644200650,scb.taleo.net,https://www.reddit.com/r/haskell/comments/smepwx/haskell_developer_roles_at_standard_chartered/,{},smepwx,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/smepwx/haskell_developer_roles_at_standard_chartered/,False,,,6,1644200661,1,,True,False,False,haskell,t5_2qh36,68936,public,default,Haskell Developer Roles at Standard Chartered Bank (UK and SG),0,[],1.0,https://scb.taleo.net/careersection/ex/jobdetail.ftl?job=2200001642&amp;lang=en,all_ads,6,,,https://scb.taleo.net/careersection/ex/jobdetail.ftl?job=2200001642&amp;lang=en,,,,,,,,,,,,,,,,,
347.0,[],False,Bulker3000,,[],,text,t2_8t2orbjp,False,False,False,[],False,False,1644196813,self.haskell,https://www.reddit.com/r/haskell/comments/smddzg/writing_a_specific_haskell_function/,{},smddzg,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/smddzg/writing_a_specific_haskell_function/,False,,,6,1644196824,1,"Writing a common divisor function that would go as follows

commondivisor :: int -&gt; int -&gt; int -&gt; bool 

So that x y z evaluates yo true when x is a common divisor of y and z.

For ex: commondivisor :: 3 12 15 evaluates to True.

Any thoughts on this to make it work?",True,False,False,haskell,t5_2qh36,68935,public,self,Writing a specific haskell function,0,[],1.0,https://www.reddit.com/r/haskell/comments/smddzg/writing_a_specific_haskell_function/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
348.0,[],False,ysangkok,,[],,text,t2_4qktt,False,False,False,[],False,False,1644171301,elephly.net,https://www.reddit.com/r/haskell/comments/sm3dfs/bootstrapping_i_built_ghc_4082_with_gcc_295/,{},sm3dfs,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sm3dfs/bootstrapping_i_built_ghc_4082_with_gcc_295/,False,,,6,1644171312,1,,True,False,False,haskell,t5_2qh36,68928,public,default,Bootstrapping: I built GHC 4.08.2 with GCC 2.95,0,[],1.0,https://elephly.net/paste/1644020383.html,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://elephly.net/paste/1644020383.html,,,,reddit,,,,,,,,,,,,,
349.0,[],False,blumento_pferde,,[],,text,t2_4thn5cjd,False,False,False,[],False,False,1644152765,self.haskell,https://www.reddit.com/r/haskell/comments/slw8hp/why_is_resource_acquisition_eg_memory_allocation/,{},slw8hp,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/slw8hp/why_is_resource_acquisition_eg_memory_allocation/,False,,,6,1644152776,1,"... I guess pure FP guarantees us referential transparency, but does not say anything about the process to compute to normal form &lt;-&gt; are these concepts related?

We have `IO`, which encapsulates IO operations like `read`, `write`, `open`, `close` on the filesystem or network layer, but it would be nice to have something similar to resource management and deterministic memory allocation tactics.

Rust goes in that direction, but is further away from the functional paradigm.

Happy coding and happy sunday!",True,False,False,haskell,t5_2qh36,68919,public,self,"Why is resource acquisition, e.g. memory allocation, not considered a side effect?",0,[],1.0,https://www.reddit.com/r/haskell/comments/slw8hp/why_is_resource_acquisition_eg_memory_allocation/,all_ads,6,,,,,,,,,,,,,,,,,,,,
350.0,[],False,ruby_object,,[],,text,t2_5ozkf,False,False,False,[],False,False,1644149063,self.haskell,https://www.reddit.com/r/haskell/comments/slv5b4/types_vs_types/,{},slv5b4,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/slv5b4/types_vs_types/,False,self,"{'enabled': False, 'images': [{'id': 'Os5NY8nbkUcYkYzFxqLycyYEx8KFMO_CNVmGyVDQWJ4', 'resolutions': [{'height': 86, 'url': 'https://external-preview.redd.it/AcPOClCoxDzH9gpFps5xRTDZeX9Ms07iBxrzJe6EKzw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b7e1e3c8900aeaf3fa4afff766aa7ff9c0096813', 'width': 108}, {'height': 173, 'url': 'https://external-preview.redd.it/AcPOClCoxDzH9gpFps5xRTDZeX9Ms07iBxrzJe6EKzw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6bf75bdc84da47f516a3f162bf924503cd47c6ef', 'width': 216}, {'height': 256, 'url': 'https://external-preview.redd.it/AcPOClCoxDzH9gpFps5xRTDZeX9Ms07iBxrzJe6EKzw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ec1eee7e6c739cd7bbc50e078e1c5e887ee95ce7', 'width': 320}], 'source': {'height': 465, 'url': 'https://external-preview.redd.it/AcPOClCoxDzH9gpFps5xRTDZeX9Ms07iBxrzJe6EKzw.jpg?auto=webp&amp;s=b99483bfdec8d61ddb44adc7bb9dac569db7ee65', 'width': 579}, 'variants': {}}]}",6,1644149073,1,"I am a Haskell sceptic and despite a few attempts to learn it I never had much success. I part my excuse is bad quality of some tutorials that you find at the beginning of your journey. I still keep bumping into surprises about the fundamentals of Haskell.

Today such surprise was the podcast ""God's Programming Language"" with Philip Wadler. [https://corecursive.com/021-gods-programming-language-with-philip-wadler/#](https://corecursive.com/021-gods-programming-language-with-philip-wadler/#) 

To my surprise around the 32nd minute, they talk about types. There I learn that the types used in functional programming, despite the same word being used, are not the same as types used in languages that inherit from Fortran. 

Do you think that tutorials that start with Strings and Integers lead you down the wrong path? How can I tell what is executed at the compilation stage and what is executed at the runtime stage?

If I were to have another go would I be able to find a tutorial that explains and builds on correct principles?",True,False,False,haskell,t5_2qh36,68918,public,self,Types vs types,0,[],1.0,https://www.reddit.com/r/haskell/comments/slv5b4/types_vs_types/,all_ads,6,,,,,,,,,,,,,,,,,,,,
351.0,[],False,timlee126,,[],,text,t2_5fefq,False,False,False,[],False,False,1644112559,self.haskell,https://www.reddit.com/r/haskell/comments/slmzim/how_shall_i_understand_these_differences_between/,{},slmzim,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/slmzim/how_shall_i_understand_these_differences_between/,False,,,6,1644112570,1,"
In Haskell 2010 specification:

&gt; 4.2.3 Datatype Renamings
&gt; 
&gt; ...
&gt; 
&gt; The following examples clarify the differences between `data` (algebraic datatypes), `type` (type synonyms),
&gt; and `newtype` (renaming types). Given the declarations
&gt; 
&gt;     data D1 = D1 Int
&gt;     data D2 = D2 !Int
&gt;     type S = Int
&gt;     newtype N = N Int
&gt;     d1 (D1 i) = 42
&gt;     d2 (D2 i) = 42
&gt;     s i = 42
&gt;     n (N i) = 42
&gt; 
&gt; the expressions `(d1 ⊥)`, `(d2 ⊥)` and `(d2 (D2 ⊥))` are all equivalent to `⊥`,
&gt; whereas `(n ⊥)`, `(n (N ⊥))`, `(d1 (D1 ⊥))` and `(s ⊥)` are all equivalent to `42`.
&gt; In particular, `(N ⊥)` is equivalent to `⊥` while `(D1 ⊥)` is not equivalent to `⊥`.

Are `d1`, `d2`, `s`, and `n` in

    d1 (D1 i) = 42
    d2 (D2 i) = 42
    s i = 42

used without having been defined?

Why

- the expressions `(d1 ⊥)`, `(d2 ⊥)` and `(d2 (D2 ⊥))` are all equivalent to `⊥`,

- `(n ⊥)`, `(n (N ⊥))`, `(d1 (D1 ⊥))` and `(s ⊥)` are all equivalent to `42`,

- `(N ⊥)` is equivalent to `⊥` while `(D1 ⊥)` is not equivalent to `⊥`

?

Thanks.",True,False,False,haskell,t5_2qh36,68924,public,self,"How shall I understand these differences between `data` (algebraic datatypes), `type` (type synonyms), and `newtype` (renaming types)?",0,[],1.0,https://www.reddit.com/r/haskell/comments/slmzim/how_shall_i_understand_these_differences_between/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
352.0,[],False,timlee126,,[],,text,t2_5fefq,False,False,False,[],False,False,1644101107,self.haskell,https://www.reddit.com/r/haskell/comments/sliyqp/is_type_parenthesised_constructor_an_application/,{},sliyqp,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/sliyqp/is_type_parenthesised_constructor_an_application/,False,,,6,1644101118,1,"In Haskell 2010 specification:

&gt; 4.1.2 Syntax of Types
&gt; 
&gt;     type → btype [-&gt; type] (function type)
&gt;     btype → [btype] atype (type application)
&gt;     atype → gtycon
&gt;           | tyvar
&gt;           | ( type 1 , . . . , type k ) (tuple type, k ≥ 2)
&gt;           | [ type ] (list type)
&gt;           | ( type ) (parenthesised constructor)
&gt;     gtycon → qtycon
&gt;           | () (unit type)
&gt;           | [] (list constructor)
&gt;           | (-&gt;) (function constructor)
&gt;           | (,{,}) (tupling constructors)


Is ""( type ) (parenthesised constructor)"" an application of constructor ""()"" to ""type""?

Can ""( type ) (parenthesised constructor)"" and ""( type 1 , . . . , type k ) (tuple type, k ≥ 2)"" be merged into ""( type 1 , . . . , type k ) (tuple type, k ≥ 1)""?


Is ""() (unit type)"" the empty tuple type?

Can ""() (unit type)"" and ""(,{,}) (tupling constructors)"" be merged?

Thanks.",True,False,False,haskell,t5_2qh36,68918,public,self,"Is ""( type ) (parenthesised constructor)"" an application of constructor ""()"" to ""type""?",0,[],1.0,https://www.reddit.com/r/haskell/comments/sliyqp/is_type_parenthesised_constructor_an_application/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
353.0,[],False,thma32,,[],,text,t2_1pmnf96k,False,False,False,[],False,False,1644092008,self.haskell,https://www.reddit.com/r/haskell/comments/slfkgh/evaluating_ski_combinators_as_native_haskell/,{},slfkgh,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/slfkgh/evaluating_ski_combinators_as_native_haskell/,False,self,"{'enabled': False, 'images': [{'id': 'RuNAqdlVO9cmmqvoJ5sbp7QFwbHyOSw3G0QvMqCCP-A', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/-6dvkwkBLjpinuzMQKzLiZFCiKteQaAXrRUSjN4D-ao.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1f2fd205bf1951512c01dd2f48d8ac8a3ee7401a', 'width': 108}], 'source': {'height': 150, 'url': 'https://external-preview.redd.it/-6dvkwkBLjpinuzMQKzLiZFCiKteQaAXrRUSjN4D-ao.jpg?auto=webp&amp;s=7d53c79543903f0a2fe309b69ec1bff9672ca5cf', 'width': 150}, 'variants': {}}]}",6,1644092094,1,"I've just published another post in my series on combinator-based  evaluation of functional languages.

In this post I present an alternative approach to combinator-based  implementations that is significantly faster than  classical graph-reduction based solutions.

As this approach makes use of combinators directly  implemented as Haskell functions, it is also much simpler and smaller in  size than explicit graph-reduction.

[https://thma.github.io/posts/2022-02-05-Evaluating-SKI-combinators-as-native-Haskell-functions.html](https://thma.github.io/posts/2022-02-05-Evaluating-SKI-combinators-as-native-Haskell-functions.html)",True,False,False,haskell,t5_2qh36,68919,public,self,Evaluating SKI combinators as native Haskell functions,0,[],1.0,https://www.reddit.com/r/haskell/comments/slfkgh/evaluating_ski_combinators_as_native_haskell/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,,,,,,,,,,,,,,,,,,
354.0,[],False,giacomo_cavalieri,,[],,text,t2_h4298qfz,False,False,False,[],False,False,1644078557,self.haskell,https://www.reddit.com/r/haskell/comments/slavxi/changing_default_hls_formatter_options/,{},slavxi,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/slavxi/changing_default_hls_formatter_options/,False,,,6,1644078567,1,[removed],True,False,False,haskell,t5_2qh36,68917,public,self,Changing default hls formatter options,0,[],1.0,https://www.reddit.com/r/haskell/comments/slavxi/changing_default_hls_formatter_options/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
355.0,[],False,Osemwaro,,[],,text,t2_7unu3b7a,False,False,False,[],False,False,1644076594,self.haskell,https://www.reddit.com/r/haskell/comments/sla4z8/how_stable_are_haskell_code_optimisations_across/,{},sla4z8,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sla4z8/how_stable_are_haskell_code_optimisations_across/,False,self,"{'enabled': False, 'images': [{'id': 'OAXSl8SY6T3JK9MGQyKxkoYbqZ71HQRYXLeB8CV0NXg', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d5811c5bda5fece1040636a6af8702ba790f0fd4', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=eee576fd4da7535eb53ceb88dd8b52f073048441', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=72872d880460efa723918c000adca0ed259cf775', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f3545b9335d763c9da9c16bf7bf9a3f907dbd6f6', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2d241ace0f1c07088fac3f8469dbad3b05d2d419', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9055f11bdc00beb0b3589e1cae5817d6070d83bc', 'width': 1080}], 'source': {'height': 640, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?auto=webp&amp;s=079a7260ec149880c73263d64811698adb22760a', 'width': 1280}, 'variants': {}}]}",6,1644076605,1,"I've spent a lot of time grappling with the seemingly hard combinatorial problem of working out what combination of bang patterns, `INLINE`/`INLINABLE` pragmas, worker/wrapper transformations, compiler options, etc. I need to use to speed up performance-critical parts of my Haskell projects (I mostly write CPU-bound work, e.g. mathematical software). While it's always a relief when I stumble across a combination that gives a massive speedup, it's often not clear to me why certain things make a big difference in some contexts but not in others (especially bang patterns and `INLINE`/`INLINABLE` pragmas). This makes me worry that I may just be overfitting my code to the quirks of the GHC version that I'm currently using (currently 8.10.7 on a 64-bit Ubuntu 20.04 machine), and that some of the fruits of my labour will be lost in future when I upgrade. So my questions are:   


1. Has anyone measured and publicly reported the amount of work that it took them to maintain the speed of high-performance Haskell libraries across GHC versions?
2. Is there any guidance anywhere on what kinds of performance optimisations are likely to remain beneficial across GHC versions?

In case a concrete example would help, I've written a generic foldl' function for linear data structures (lists, pairs of lists, etc.). In a benchmark that I've written for a Wordle solver that I'm working on, I found that I can improve its performance by about 10% by unrolling one recursive call. I then tried unrolling two recursive calls, and the performance was about 8 times worse! So I tried adding `INLINE`, and the performance was about 16% faster than the original unrolled version. Here's the code for the different versions: [GenericFoldl.hs](https://gist.github.com/OsePedro/8d9ef9066d3613c3fdc967a2d57b9685). Is there any good reason for me to think that future GHC versions will continue to make similar decisions about what to inline, so that the performance of `unroll2_genericFoldl'` won't suddenly plummet after an upgrade?",True,False,False,haskell,t5_2qh36,68917,public,self,How stable are Haskell code optimisations across GHC versions?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sla4z8/how_stable_are_haskell_code_optimisations_across/,all_ads,6,,,,,,,,,,,,,,,,,,,,
356.0,[],False,persik228,,[],,text,t2_aqwi7rc,False,False,False,[],False,False,1644073057,self.haskell,https://www.reddit.com/r/haskell/comments/sl8t6k/separation_of_effects_from_mostly_pure_function/,{},sl8t6k,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sl8t6k/separation_of_effects_from_mostly_pure_function/,False,,,6,1644073067,1,"Hello! First time asking question here, go easy on me, please.

So, I am writing brainfuck interpreter and have a problem with main run function, which is used for step-by-step execution of a brainfuck program. Current implementation looks like this:

    type Interrupt r a = ProgramState a -- ^ state of interpreter at the moment of interrupt
      -&gt; (ProgramState a -&gt; Cont r (ProgramState a)) -- ^ return continuation
      -&gt; Cont r (ProgramState a)
    
    -- step by step interpretation of the program from the given 'ProgramState a'
    run :: (Num a, Ord a, Eq a) =&gt; ProgramState a
      -&gt; Interrupt r a -- ^ Print interrupt
      -&gt; Interrupt r a -- ^ Write interrupt
      -&gt; Cont r (ProgramState a)
    run ps printI writeI = let code = getCode ps in
      case currentInstruction $ getCode ps of
        MoveCell n   -&gt; return . setCode (shiftRCode code) $ move (fromIntegral n) ps
        ChangeCell n -&gt; return . setCode (shiftRCode code) $ change (fromIntegral n) ps
        PrintCell    -&gt; do
          ps' &lt;- callCC $ \ret -&gt; printI ps ret
          return $ setCode (shiftRCode code) ps'
        WriteCell    -&gt; do
          ps' &lt;- callCC $ \ret -&gt; writeI ps ret
          return $ setCode (shiftRCode code) ps'
        LoopL        -&gt; let Memory {..} = getMemory ps
                            code = getCode ps
                        in case current of
                             0 -&gt; return $ seekLoopR ps
                             _ -&gt; return . flip setCode ps $ shiftRCode code
        LoopR        -&gt; let Memory {..} = getMemory ps
                            code = getCode ps
                        in case current of
                             0 -&gt; return . flip setCode ps $ shiftRCode code
                             _ -&gt; return $ seekLoopL ps
        End          -&gt; return ps

The thing is, I don't want to bring effects here(IO) just because of 2 operators. I want to have it as pure as possible. I thought that using continuation and modelling these 2 operators as interrupts might help, but I'm missing something, I guess. The idea with interruptions was to stop the execution of the run function when these operators appear, give control to some other function which can do IO(main, for example) and then continue execution of run from where we left with the supplied new values. 

&amp;#x200B;

So, the question is: Can I actually do it like this and only missing an inspiration of some sort, or I can't and need to do the whole function in IO?",True,False,False,haskell,t5_2qh36,68914,public,self,Separation of effects from mostly pure function.,0,[],1.0,https://www.reddit.com/r/haskell/comments/sl8t6k/separation_of_effects_from_mostly_pure_function/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
357.0,[],False,Instrume,,[],,text,t2_xfalw,False,False,False,[],False,False,1644072277,self.haskell,https://www.reddit.com/r/haskell/comments/sl8j73/winio_debugging_thread/,{},sl8j73,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sl8j73/winio_debugging_thread/,False,,,6,1644072288,1,"Currently, Winio locks up GHCI whenever I call getLine. Any ideas how to help?  


The sole and most unfortunate possibility, however, is that I recently installed Haskell Platform (on top of GHCup!) and I suspect that might have ruined things. Alternately, there is a console setting on Windows that's been locked up by Haskell Platform or Winio, which I might be able to unlatch.",True,False,False,haskell,t5_2qh36,68914,public,self,WinIO debugging thread?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sl8j73/winio_debugging_thread/,all_ads,6,,,,,,,,,,,,,,,,,,,,
358.0,[],False,sekunho,,[],,text,t2_j7b7y3y7,False,False,False,[],False,False,1644070000,self.haskell,https://www.reddit.com/r/haskell/comments/sl7qps/my_first_haskell_library_a_client_library_for_a/,{},sl7qps,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sl7qps/my_first_haskell_library_a_client_library_for_a/,False,,,6,1644070011,1,[removed],True,False,False,haskell,t5_2qh36,68915,public,self,My first Haskell library: a client library for a simple JSON API.,0,[],1.0,https://www.reddit.com/r/haskell/comments/sl7qps/my_first_haskell_library_a_client_library_for_a/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
359.0,[],False,Javran,,[],,text,t2_f3tmj,False,False,False,[],False,False,1644030802,self.adventofcode,https://www.reddit.com/r/haskell/comments/skwmzn/all_years_all_days_everything_in_haskell/,{},skwmzn,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/skwmzn/all_years_all_days_everything_in_haskell/,False,link,"{'enabled': False, 'images': [{'id': 'ReoOe9xRVZow2g0haGqmLqhaP-PLfPCqkW3rRZBRsT8', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f02b1a2dd4dbda999ecde8f7d8bdb9e2981e824d', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=4e84881b840ffc4a0ccf2944a84135ae9b7d4652', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1de9640a24ee5dd6a6b817526e68eff054b8fd2d', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c7c449934c500b7e18dbec725d16b510edc714d9', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=751dbe1005b6f8c753a313100f7e3d19295ebb83', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ae4fd68408689d5465a2690910d734bc96a072f1', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?auto=webp&amp;s=0c656a551ed22a01b78fd23c2ce3355c300466fc', 'width': 1200}, 'variants': {}}]}",6,1644030813,1,,True,False,False,haskell,t5_2qh36,68908,public,default,"All years, all days, everything in Haskell",0,[],1.0,/r/adventofcode/comments/skwlvb/all_years_all_days_everything_in_haskell/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,/r/adventofcode/comments/skwlvb/all_years_all_days_everything_in_haskell/,,,,,,,t3_skwlvb,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'Javran', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_f3tmj', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1644030704.0, 'created_utc': 1644030704.0, 'discussion_type': None, 'distinguished': None, 'domain': 'self.adventofcode', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 'skwlvb', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': True, 'is_video': False, 'likes': None, 'link_flair_background_color': '#9999ff', 'link_flair_css_class': 'flair-repo', 'link_flair_richtext': [], 'link_flair_template_id': '9458dd9a-9c67-11e5-96b8-0ec3e39516c5', 'link_flair_text': 'Repo', 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_skwlvb', 'no_follow': True, 'num_comments': 0, 'num_crossposts': 1, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/adventofcode/comments/skwlvb/all_years_all_days_everything_in_haskell/', 'pinned': False, 'post_hint': 'self', 'preview': {'enabled': False, 'images': [{'id': 'ReoOe9xRVZow2g0haGqmLqhaP-PLfPCqkW3rRZBRsT8', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f02b1a2dd4dbda999ecde8f7d8bdb9e2981e824d', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=4e84881b840ffc4a0ccf2944a84135ae9b7d4652', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1de9640a24ee5dd6a6b817526e68eff054b8fd2d', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c7c449934c500b7e18dbec725d16b510edc714d9', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=751dbe1005b6f8c753a313100f7e3d19295ebb83', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ae4fd68408689d5465a2690910d734bc96a072f1', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/qqEx_yUiGMNrQd_jfP9rsFZksACRitjL956u3Qssi2E.jpg?auto=webp&amp;s=0c656a551ed22a01b78fd23c2ce3355c300466fc', 'width': 1200}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 2, 'secure_media': None, 'secure_media_embed': {}, 'selftext': ""[repo](https://github.com/Javran/advent-of-code)\n\nI'm aware of Advent of Code for years but never started looking into what it is about until around end of November last year. Finally finished all puzzles about few days ago. Although there are still remaining works, I'm proud that most of my solutions are kept in good shape most of the time. Originally I want to give it some more days cleaning up remaining TODOs before making a post, but I guess deserve a break and go explore something new before coming back. In addition, the repo contains automations for retrieving input data, tooling for tests and templates that I polished while participating live event last year - I've tried to give every aspect of Haskell a try - some ST computations, some monad transformer stacks (I actually find my first legit use of ContT while solving one of those puzzles), and some type-level stuff. I'd say my infrastructure / testing setup might also be interesting - every solution is a module that contains a typeclass instance that derive its year / day index from module names automatically using generics (those information are also maintained to update the progress table in README.md semi-automatically), and all testdata are scanned by TemplateHaskell to create hspec test suites, together with some manually written QuickCheck tests (not many, however)\n\nI've been using Haskell for at least 10 years, that doesn't say much though, as I never work with Haskell fulltime professionally, nor do I eagerly trace all bleeding edge techniques (Haskell people like being lazy, you know that) - but long enough that I have my opinions here and there that isn't complaint with a default HLint and common code formatter setup, which is one of the caveat."", 'selftext_html': '&lt;!-- SC_OFF --&gt;&lt;div class=""md""&gt;&lt;p&gt;&lt;a href=""https://github.com/Javran/advent-of-code""&gt;repo&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m aware of Advent of Code for years but never started looking into what it is about until around end of November last year. Finally finished all puzzles about few days ago. Although there are still remaining works, I&amp;#39;m proud that most of my solutions are kept in good shape most of the time. Originally I want to give it some more days cleaning up remaining TODOs before making a post, but I guess deserve a break and go explore something new before coming back. In addition, the repo contains automations for retrieving input data, tooling for tests and templates that I polished while participating live event last year - I&amp;#39;ve tried to give every aspect of Haskell a try - some ST computations, some monad transformer stacks (I actually find my first legit use of ContT while solving one of those puzzles), and some type-level stuff. I&amp;#39;d say my infrastructure / testing setup might also be interesting - every solution is a module that contains a typeclass instance that derive its year / day index from module names automatically using generics (those information are also maintained to update the progress table in README.md semi-automatically), and all testdata are scanned by TemplateHaskell to create hspec test suites, together with some manually written QuickCheck tests (not many, however)&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been using Haskell for at least 10 years, that doesn&amp;#39;t say much though, as I never work with Haskell fulltime professionally, nor do I eagerly trace all bleeding edge techniques (Haskell people like being lazy, you know that) - but long enough that I have my opinions here and there that isn&amp;#39;t complaint with a default HLint and common code formatter setup, which is one of the caveat.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;', 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'adventofcode', 'subreddit_id': 't5_3b3wa', 'subreddit_name_prefixed': 'r/adventofcode', 'subreddit_subscribers': 36453, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'self', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'All years, all days, everything in Haskell', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 2, 'upvote_ratio': 1.0, 'url': 'https://www.reddit.com/r/adventofcode/comments/skwlvb/all_years_all_days_everything_in_haskell/', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
360.0,[],False,SSchlesinger,,[],,text,t2_jggeg,False,False,False,[],False,False,1644030285,self.haskell,https://www.reddit.com/r/haskell/comments/skwgrm/first_class_monad_stacks/,{},skwgrm,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/skwgrm/first_class_monad_stacks/,False,,,6,1644030295,1,"Bit of a code dump here, but I figured a few of you would enjoy this. TLDR: Uses a few GHC toys in order to get ""first-class"" monad stacks (list of transformers represented in the type) more or less for free. I published this idea a while ago in [https://hackage.haskell.org/package/mtsl](https://hackage.haskell.org/package/mtsl-0.2.0.0/docs/Control-Monad-Trans-Stack.html) but today I realized I could get it all with deriving via and that's when I realized it was r/haskell worthy.

    {-# LANGUAGE FlexibleContexts #-}
    {-# LANGUAGE QuantifiedConstraints #-}
    {-# LANGUAGE FlexibleInstances #-}
    {-# LANGUAGE DerivingVia #-}
    {-# LANGUAGE StandaloneDeriving #-}
    {-# LANGUAGE DataKinds #-}
    {-# LANGUAGE TypeOperators #-}
    {-# LANGUAGE StandaloneKindSignatures #-}
    {-# LANGUAGE TypeFamilies #-}
    {-# LANGUAGE PolyKinds #-}
    module Stack where
    
    import Data.Kind
    import Control.Monad.State (StateT)
    import Control.Monad.Reader (ReaderT)
    
    type Transformer = (Type -&gt; Type) -&gt; Type -&gt; Type
    
    type Stack' :: [Transformer] -&gt; Transformer
    type family Stack' ts m where
      Stack' '[] m = m
      Stack' (t ': ts) m = t (Stack ts m)
    
    type Stack :: [Transformer] -&gt; Transformer
    newtype Stack (ts :: [Transformer]) (m :: Type -&gt; Type) (a :: Type) = Stack { runStack :: Stack' ts m a }
    
    deriving via (f :: Type -&gt; Type) instance (Functor f) =&gt; Functor (Stack '[] f)
    
    deriving via ((t :: Transformer) (Stack ts f)) instance
      ( forall f'. Functor f' =&gt; Functor (t f')
      , Functor (Stack ts f)
      , Functor (f :: Type -&gt; Type)
      ) =&gt; Functor (Stack (t ': ts) f)
    
    deriving via (f :: Type -&gt; Type) instance (Applicative f) =&gt; Applicative (Stack '[] f)
    
    deriving via ((t :: Transformer) (Stack ts f)) instance
      ( forall f'. Functor f' =&gt; Functor (t f')
      , Functor (Stack ts f)
      , Functor (f :: Type -&gt; Type)
      , forall f'. Applicative f' =&gt; Applicative (t f')
      , Applicative (Stack ts f)
      , Applicative f
      ) =&gt; Applicative (Stack (t ': ts) f)
    
    deriving via (m :: Type -&gt; Type) instance (Monad m) =&gt; Monad (Stack '[] m)
    
    deriving via ((t :: Transformer) (Stack ts f)) instance
      ( forall f'. Functor f' =&gt; Functor (t f')
      , Functor (Stack ts f)
      , Functor (f :: Type -&gt; Type)
      , forall f'. Applicative f' =&gt; Applicative (t f')
      , Applicative (Stack ts f)
      , Applicative f
      , forall f'. Monad f' =&gt; Monad (t f')
      , Monad (Stack ts f)
      , Monad f
      ) =&gt; Monad (Stack (t ': ts) f)",True,False,False,haskell,t5_2qh36,68907,public,self,First Class Monad Stacks,0,[],1.0,https://www.reddit.com/r/haskell/comments/skwgrm/first_class_monad_stacks/,all_ads,6,,,,,,,,,,,,,,,,,,,,
361.0,[],False,VincyThePrincy,,[],,text,t2_z2irrj2,False,False,False,[],False,False,1644020556,self.haskell,https://www.reddit.com/r/haskell/comments/skt07j/is_it_possible_to_make_join_work_for_arbitrary/,{},skt07j,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/skt07j/is_it_possible_to_make_join_work_for_arbitrary/,False,,,6,1644020567,1,"So join removes one layer of nesting for a Monad, allowing you to go from say, Just (Just ""hi"") to Just ""hi"". You can easily compose join with itself n times to remove nesting, but is it possible, language extensions permitted, to write a function akin to

```
m (m (... (m a))) -&gt; m a
```
What would such a function look like and is there a better way of expressing such a type signature?",True,False,False,haskell,t5_2qh36,68905,public,self,Is it possible to make join work for arbitrary depths?,0,[],1.0,https://www.reddit.com/r/haskell/comments/skt07j/is_it_possible_to_make_join_work_for_arbitrary/,all_ads,6,,,,,,,,,,,,,,,,,,,,
362.0,[],False,TreesdarkWood,,[],,text,t2_ja3bth8i,False,False,False,[],False,False,1644003783,self.haskell,https://www.reddit.com/r/haskell/comments/skmc8j/hls_vscode_with_template_haskell/,{},skmc8j,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/skmc8j/hls_vscode_with_template_haskell/,False,self,"{'enabled': False, 'images': [{'id': 'KUDOrSbP4o5FylIY0-uXJ7DWiwJHKPLhhbUAYqy9pDI', 'resolutions': [], 'source': {'height': 64, 'url': 'https://external-preview.redd.it/ODdX7UyeEtBMNzWNFTnz_-SDH85iPa_gUVUXw_ed9rc.jpg?auto=webp&amp;s=cddb5c26bd9b00d1d0dd4bce9779284b078becc7', 'width': 86}, 'variants': {}}]}",6,1644003794,1,"I use HLS with vscode for language support, for definitions and errors underlines etc... I really like it. But with Template Haskell it does not work- 'HLS binary does not support template Haskell'.  

I follow the instructions to build HLS binary with support for Template Haskell on here: [https://haskell-language-server.readthedocs.io/en/latest/troubleshooting.html#static-binaries.](https://haskell-language-server.readthedocs.io/en/latest/troubleshooting.html#static-binaries)  

However when I run 'cabal update &amp;&amp; cabal install pkg:haskell-language-server' in terminal, I get the error message:   

cabal: Internal error in target matching. It should always be possible to find

a syntax that's sufficiently qualified to give an unambiguous match. However

when matching 'pkg:haskell-language-server' we found haskell-language-server

(named-package) which does not have an unambiguous syntax. The possible syntax

and the targets they match are as follows:

'haskell-language-server' which matches haskell-language-server

(named-package)

'pkg:haskell-language-server' which matches haskell-language-server

(named-package), pkg:haskell-language-server (unknown-component),

:pkg:pkg:lib:pkg:file:haskell-language-server (unknown-file)

':pkg:haskell-language-server' which matches haskell-language-server

(named-package). 

I don't understand this error message, any ideas how I proceed?",True,False,False,haskell,t5_2qh36,68901,public,self,HLS VsCode with Template Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/skmc8j/hls_vscode_with_template_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
363.0,[],False,giacomo_cavalieri,,[],,text,t2_h4298qfz,False,False,False,[],False,False,1644003241,self.haskell,https://www.reddit.com/r/haskell/comments/skm4gv/cant_get_hls_to_work_on_default_stack_project/,{},skm4gv,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/skm4gv/cant_get_hls_to_work_on_default_stack_project/,False,,,6,1644003252,1,[removed],True,False,False,haskell,t5_2qh36,68900,public,self,Can't get HLS to work on default stack project,0,[],1.0,https://www.reddit.com/r/haskell/comments/skm4gv/cant_get_hls_to_work_on_default_stack_project/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,reddit,,,,,,,,,,,,,
364.0,[],False,radical_iyer,,[],,text,t2_dzpbk8ui,False,False,False,[],False,False,1643985173,self.haskell,https://www.reddit.com/r/haskell/comments/skeoez/newbie_frustration/,{},skeoez,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/skeoez/newbie_frustration/,False,,,6,1643985183,1,[removed],True,False,False,haskell,t5_2qh36,68893,public,self,Newbie frustration,0,[],1.0,https://www.reddit.com/r/haskell/comments/skeoez/newbie_frustration/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
365.0,[],False,timlee126,,[],,text,t2_5fefq,False,False,False,[],False,False,1643978995,self.haskell,https://www.reddit.com/r/haskell/comments/skcir6/what_is_wholesale_or_monolithic_update/,{},skcir6,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/skcir6/what_is_wholesale_or_monolithic_update/,False,,,6,1643979046,1,"In Bird's book on algorithms in Haskell:

&gt; 3.3 Arrays
&gt; 
&gt; One of the main differences between functional and procedural algorithms is that
&gt; the former rely on lists as the basic carrier of information while the latter rely on
&gt; arrays. In functional algorithms input usually consists of a list of values, whereas
&gt; in procedural algorithms input values are usually assumed to be presented as the
&gt; elements of an array. For a procedural programmer array **updates are destructive**:
&gt; once an array is updated by changing the value at a particular index, the old array is
&gt; lost. In functional programming, data structures are persistent because any named
&gt; structure may be referred to at some other point in the computation and therefore has
&gt; to continue to exist. Consequently, **any update operation, even at a single index, has
&gt; to be implemented by making a new copy of the whole array**. Because they cannot be
&gt; changed but only copied, purely functional arrays are known as **immutable arrays**. It
&gt; is possible to get round this problem and allow **mutable structures** by encapsulating
&gt; the operations in a suitable monad, but we will not introduce monads in this book.
&gt; 
&gt; **Wholesale or monolithic updates**, on the other hand, are ﬁne. Changing all or
&gt; some of the entries at one go involves copying the array only once. Haskell provides
&gt; a number of such **wholesale operations** in the library `Data . Array`. The purpose of
&gt; this section is simply to describe the main functions in this library.
&gt; 

What does ""wholesale or monolithic update"" mean?
Does it mean exactly ""any update operation, even at a single index, has
to be implemented by making a new copy of the whole array""?

Is a data structure with ""wholesale or monolithic update"" a mutable or immutable one?

Does library  `Data . Array` provide mutable or immutable arrays?

Thanks.",True,False,False,haskell,t5_2qh36,68891,public,self,"What is ""wholesale or monolithic update""?",0,[],1.0,https://www.reddit.com/r/haskell/comments/skcir6/what_is_wholesale_or_monolithic_update/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
366.0,[],False,qeowMax,,[],,text,t2_j7lvqzn9,False,False,False,[],False,False,1643973840,youtube.com,https://www.reddit.com/r/haskell/comments/skb0j5/weaving_with_haskell/,{},skb0j5,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/skb0j5/weaving_with_haskell/,False,rich:video,"{'enabled': False, 'images': [{'id': 'YWQVCpLkR_-lCpohZH4rDawufOxNGGQEuBE4JJpXxwE', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/oVpUNiZ-LmzHp61E_NiHy1-tESs1hq2lSZBN0wwTQ4M.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=03fd8fa18a49ae825e9b61ca3b514a7796cef8a2', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/oVpUNiZ-LmzHp61E_NiHy1-tESs1hq2lSZBN0wwTQ4M.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=4f89897abb0bab72117686cd1d912c7249e3669f', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/oVpUNiZ-LmzHp61E_NiHy1-tESs1hq2lSZBN0wwTQ4M.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ca4c93e05d76fb33e93aa83d4f2a30fadce84ec1', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/oVpUNiZ-LmzHp61E_NiHy1-tESs1hq2lSZBN0wwTQ4M.jpg?auto=webp&amp;s=ac544fcd71d2139b6e111caa07ba8be96cb7d009', 'width': 480}, 'variants': {}}]}",6,1643973850,1,,True,False,False,haskell,t5_2qh36,68891,public,image,Weaving with Haskell?,0,[],1.0,https://www.youtube.com/watch?v=TfEmEsusXjU,all_ads,6,,,https://www.youtube.com/watch?v=TfEmEsusXjU,105.0,140.0,,,,,,,"{'oembed': {'author_name': 'Alex McLean', 'author_url': 'https://www.youtube.com/c/yaxu', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/TfEmEsusXjU?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/TfEmEsusXjU/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'More weaving on the Live Loom', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/TfEmEsusXjU?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'Alex McLean', 'author_url': 'https://www.youtube.com/c/yaxu', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/TfEmEsusXjU?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/TfEmEsusXjU/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'More weaving on the Live Loom', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/TfEmEsusXjU?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/skb0j5', 'scrolling': False, 'width': 356}",,,,,
367.0,[],False,stoccarock2,,[],,text,t2_j2p5szyv,False,False,False,[],False,False,1643960914,youtu.be,https://www.reddit.com/r/haskell/comments/sk7ojc/most_popular_backend_frameworks_20122022/,{},sk7ojc,False,False,False,True,False,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sk7ojc/most_popular_backend_frameworks_20122022/,False,rich:video,"{'enabled': False, 'images': [{'id': 'n0vUS9S8nkAxDSjF8n2DPwPSwfIWlOGI8xqz6SfvrZA', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/_5FcdyOcMwjMAll0YrhVrhZhCqMQPto52Y2-GsxDRAA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c94d70a620ccfd18993dc6b948eb9186e3327c67', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/_5FcdyOcMwjMAll0YrhVrhZhCqMQPto52Y2-GsxDRAA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=90c1879677ea6257897b85b232874b73e2667a76', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/_5FcdyOcMwjMAll0YrhVrhZhCqMQPto52Y2-GsxDRAA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2e0ac2619fd55b17bae975bcd6a8e2c785e9520e', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/_5FcdyOcMwjMAll0YrhVrhZhCqMQPto52Y2-GsxDRAA.jpg?auto=webp&amp;s=4414972649f1890d0ab5a11815e0e97dba3f36f7', 'width': 480}, 'variants': {}}]}",6,1643960926,1,,True,False,False,haskell,t5_2qh36,68886,public,image,Most Popular Backend Frameworks (2012/2022),0,[],1.0,https://youtu.be/-RTaFJAgWSU,all_ads,6,be2af704-5664-11eb-8e65-0ecd290c3053,video,https://youtu.be/-RTaFJAgWSU,105.0,140.0,,reddit,,,,,"{'oembed': {'author_name': 'Statistics and data', 'author_url': 'https://www.youtube.com/c/Statisticsanddata', 'height': 200, 'html': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/-RTaFJAgWSU?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/-RTaFJAgWSU/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Most Popular Backend Frameworks (2012/2022)', 'type': 'video', 'version': '1.0', 'width': 267}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/-RTaFJAgWSU?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 267}","{'oembed': {'author_name': 'Statistics and data', 'author_url': 'https://www.youtube.com/c/Statisticsanddata', 'height': 200, 'html': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/-RTaFJAgWSU?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/-RTaFJAgWSU/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Most Popular Backend Frameworks (2012/2022)', 'type': 'video', 'version': '1.0', 'width': 267}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/-RTaFJAgWSU?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/sk7ojc', 'scrolling': False, 'width': 267}",,,,,
368.0,[],False,epoberezkin,,[],,text,t2_13t18x,False,False,False,[],False,False,1643960521,self.haskell,https://www.reddit.com/r/haskell/comments/sk7kvz/haskell_sql_multiengine_library/,{},sk7kvz,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/sk7kvz/haskell_sql_multiengine_library/,False,,,6,1643960531,1,"Is there any library that provides a unified interface for parameterised sql queries across multiple engines, so that library would be parameterised by the engine?",True,False,False,haskell,t5_2qh36,68885,public,self,Haskell sql multi-engine library,0,[],1.0,https://www.reddit.com/r/haskell/comments/sk7kvz/haskell_sql_multiengine_library/,all_ads,6,,,,,,,,,,,,,,,,,,,,
369.0,[],False,HugoPeters1024,,[],,text,t2_7mau2nue,False,False,False,[],False,False,1643908507,hugopeters.me,https://www.reddit.com/r/haskell/comments/sjolg8/typed_lambda_calculus_as_an_embedded_language_in/,{},sjolg8,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sjolg8/typed_lambda_calculus_as_an_embedded_language_in/,False,,,6,1643908517,1,,True,False,False,haskell,t5_2qh36,68874,public,default,Typed lambda calculus as an embedded language in haskell,0,[],1.0,https://hugopeters.me/posts/16/,all_ads,6,,,https://hugopeters.me/posts/16/,,,,reddit,,,,,,,,,,,,,
370.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1643902930,haskellweekly.news,https://www.reddit.com/r/haskell/comments/sjmbcu/issue_301_haskell_weekly_newsletter/,{},sjmbcu,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sjmbcu/issue_301_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1643902940,1,,True,False,False,haskell,t5_2qh36,68874,public,default,Issue 301 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/301.html,all_ads,6,,,https://haskellweekly.news/issue/301.html,140.0,140.0,,,,,,,,,,,,,,,
371.0,[],False,day_li_ly,,[],,text,t2_5ti04om6,False,False,False,[],False,False,1643889106,xn--i2r.xn--rhqv96g,https://www.reddit.com/r/haskell/comments/sjhatp/readert_pattern_is_just_extensible_effects/,{},sjhatp,False,True,False,True,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sjhatp/readert_pattern_is_just_extensible_effects/,False,,,6,1643889117,1,,True,False,False,haskell,t5_2qh36,68869,public,default,ReaderT pattern is just extensible effects,0,[],1.0,https://xn--i2r.xn--rhqv96g/2022/02/03/readert-is-extensible-effects/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://xn--i2r.xn--rhqv96g/2022/02/03/readert-is-extensible-effects/,,,,,,,,,,,,,,,,,
372.0,[],False,nerdy_adventurer,,[],,text,t2_23qraujn,False,False,False,[],False,False,1643856135,github.com,https://www.reddit.com/r/haskell/comments/sj7om6/github_kindeliahvm_a_massively_parallel_optimal/,{},sj7om6,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sj7om6/github_kindeliahvm_a_massively_parallel_optimal/,False,link,"{'enabled': False, 'images': [{'id': '_6sXJrUcqEAqmlyF0ny2Bn5Lf4IAuypdLLzAI2PUNmA', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/mUJ5fIj3M9-HHOOz4UkpKnIx93ZKjYJf25pUrl_qSPk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=29afce92a76066db81cd5380f23e6fa547c44d88', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/mUJ5fIj3M9-HHOOz4UkpKnIx93ZKjYJf25pUrl_qSPk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=33a23d0ffe6c586797de79864428c26e2595500b', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/mUJ5fIj3M9-HHOOz4UkpKnIx93ZKjYJf25pUrl_qSPk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=29fec333b482a072bf1566fde015bbb4431c9b04', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/mUJ5fIj3M9-HHOOz4UkpKnIx93ZKjYJf25pUrl_qSPk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=3816c44ae3c723d0dca344c969684acbce758e2e', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/mUJ5fIj3M9-HHOOz4UkpKnIx93ZKjYJf25pUrl_qSPk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=20bf6cf03e58ab9394879c8a8d707bfc9bc04f2f', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/mUJ5fIj3M9-HHOOz4UkpKnIx93ZKjYJf25pUrl_qSPk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=430026fb7ab0b311287ff0f1635e42ab8948dc0d', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/mUJ5fIj3M9-HHOOz4UkpKnIx93ZKjYJf25pUrl_qSPk.jpg?auto=webp&amp;s=09b63806a01074d735cedada354cda6ff9579a2d', 'width': 1200}, 'variants': {}}]}",6,1643856145,1,,True,False,False,haskell,t5_2qh36,68864,public,default,"GitHub - Kindelia/HVM: A massively parallel, optimal functional runtime in Rust",0,[],1.0,https://github.com/Kindelia/HVM,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://github.com/Kindelia/HVM,70.0,140.0,,,,,,,,,,,,,,,
373.0,[],False,Comprehensive-Ad3963,,[],,text,t2_5zg4jvtk,False,False,False,[],False,False,1643834839,self.haskell,https://www.reddit.com/r/haskell/comments/sizfll/how_do_i_compute_the_highest_integer_that_is_less/,{},sizfll,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sizfll/how_do_i_compute_the_highest_integer_that_is_less/,False,,,6,1643834849,1,"I have a list of type \[Integer\], called ""ints""

I'm trying to compute the highest integer, that is less than the first element of ""ints"" divided by some other number ""limit""

For example, if the first number is 20 and ""limit"" is 2, then the result should be 9, because it is the greatest integer less than 10. If the first number is 21 and the ""limit"" is 2, then the result should be the greatest integer less than 2.5, which is 2.

To compute that, I use this expression:

`ceiling (head ints / 2)`

However, doing this gives me this error:

""No instance for (RealFrac Integer) arising from a use of 'ceiling.'""

""ceiling"" expects a RealFrac, and `head ints / 2` returns a Fractional.

My understanding is that I ought to cast ""head ints / 2"" to a type that GHC knows how to perform the ""ceiling"" function on.

What I'm wondering is, what do I do now?

As always, thank you in advance for your assistance.",True,False,False,haskell,t5_2qh36,68859,public,self,How do I compute the highest integer that is less than an integer X divided by some integer Y?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sizfll/how_do_i_compute_the_highest_integer_that_is_less/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
374.0,[],False,gdeest,,[],,text,t2_f9a1w,False,False,False,[],False,False,1643815710,self.haskell,https://www.reddit.com/r/haskell/comments/sire33/ann_servant_019_release/,{},sire33,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sire33/ann_servant_019_release/,False,self,"{'enabled': False, 'images': [{'id': 'mELI-KC8bYGWMPUEu7nag-3hJbrzqSWqIIJLU5t82qg', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/mAYsTidp3ez9-Am-dHZ59R0lRg6o1PWBjtG_Wv_eAhg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e7e305b09122ea1c6739b651382b98ef8ea738ba', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/mAYsTidp3ez9-Am-dHZ59R0lRg6o1PWBjtG_Wv_eAhg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=17c88d2e2750a8378316f1145ff2aaf99ad97714', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/mAYsTidp3ez9-Am-dHZ59R0lRg6o1PWBjtG_Wv_eAhg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0fa1747a76011b25c370b9a6f6f145949d6955a3', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/mAYsTidp3ez9-Am-dHZ59R0lRg6o1PWBjtG_Wv_eAhg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b9603b7aca844deb25c44fd925aa238155bf4649', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/mAYsTidp3ez9-Am-dHZ59R0lRg6o1PWBjtG_Wv_eAhg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2c4bbedea2a09f7643e65c2554973a93dac1ca9e', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/mAYsTidp3ez9-Am-dHZ59R0lRg6o1PWBjtG_Wv_eAhg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d4540509987b26be4ff98a8fb26c3d362219370d', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/mAYsTidp3ez9-Am-dHZ59R0lRg6o1PWBjtG_Wv_eAhg.jpg?auto=webp&amp;s=eeca5216e27b56ca096a405e3fbc5bc91fe9440a', 'width': 1200}, 'variants': {}}]}",6,1643815720,1,"Servant warmly welcomes 3 new maintainers, namely Caroline (@akhesaCaro), Gaël (@gael\_deest) and Hécate (@TechnoEmpress), who've already been all over the place to shape up this release, improve the CI and documentation infrastructure and start working on what's going to come next.

We are pleased to announce a major upgrade of the core servant packages: servant, servant-server, servant-client-core and servant-client 0.19 (along with minor compability updates to other packages). This release ships with numerous bug fixes, new features and usability improvements.

The changelog can be found here:

[https://github.com/haskell-servant/servant/blob/e14f445e2aa5618a15d6e4d6bdf6df97e5797992/servant/CHANGELOG.md#019](https://github.com/haskell-servant/servant/blob/e14f445e2aa5618a15d6e4d6bdf6df97e5797992/servant/CHANGELOG.md#019)

You are highly encouraged to test this release out and let us know what you think ! For bug reports, features requests or any kind of feedback, just open a ticket on our [issue tracker](https://github.com/haskell-servant/servant/issues).

Happy hacking !

The Servant Maintainers team",True,False,False,haskell,t5_2qh36,68847,public,self,[ANN] Servant 0.19 release,0,[],1.0,https://www.reddit.com/r/haskell/comments/sire33/ann_servant_019_release/,all_ads,6,,,,,,,,,,,,,,,,,,,,
375.0,[],False,HMS_Impractical,,[],,text,t2_53mq9031,False,False,False,[],False,False,1643813592,self.haskell,https://www.reddit.com/r/haskell/comments/siqk3q/trying_to_implement_a_lisp_in_haskell_getting/,{},siqk3q,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/siqk3q/trying_to_implement_a_lisp_in_haskell_getting/,False,,,6,1643813602,1,"So an important part of a lisp is knowing whether any thing is an atom (symbol, number, or empty list).

However, my parser is being fed a string, so it returns strings. What I need to be able to do is, given a string, determine whether the value it contains can be expressed as an `Int`, a `Double`, or just a string, then return the value as that type.

For example, if my `atom` function is fed a ""3"", it should return 3 as an `Int`.
If it gets a ""three"", it should return ""three"".

Is this even possible in haskell? The implementation I'm working off of is in Python, which is dynamically typed, so it's very easy to implement this. However, Python is slow, and I wanted a challenge.",True,False,False,haskell,t5_2qh36,68847,public,self,"Trying to implement a LISP in Haskell, getting caught on detecting atoms",0,[],1.0,https://www.reddit.com/r/haskell/comments/siqk3q/trying_to_implement_a_lisp_in_haskell_getting/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
376.0,[],False,chshersh,,[],,text,t2_zxqlz,False,False,False,[],False,False,1643793472,youtube.com,https://www.reddit.com/r/haskell/comments/sikay9/haskell_beginners_2022_course_all_lectures/,{},sikay9,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sikay9/haskell_beginners_2022_course_all_lectures/,False,rich:video,"{'enabled': False, 'images': [{'id': 'vkaAtVhdcs-wpRdBO6il9phyxagYEer_gsr3GVP8wjU', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/MEWsaJHNZGPstQi0MD7LM1Oc8QJFA-dj_TUx8AqcISU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=78aadcf5680fb4d06d2e97190a493a0f38cc1809', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/MEWsaJHNZGPstQi0MD7LM1Oc8QJFA-dj_TUx8AqcISU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6f7b87b65ac3a37f59f44085054843d9a842c288', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/MEWsaJHNZGPstQi0MD7LM1Oc8QJFA-dj_TUx8AqcISU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0e13ac29e1b9ddb5d11e8ed5d48d8a45ca2b11e8', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/MEWsaJHNZGPstQi0MD7LM1Oc8QJFA-dj_TUx8AqcISU.jpg?auto=webp&amp;s=b22d7614e32a4d699087736449f1fdcad56c98c9', 'width': 480}, 'variants': {}}]}",6,1643793482,1,,True,False,False,haskell,t5_2qh36,68844,public,image,Haskell Beginners 2022 Course: All Lectures Available on YouTube!,0,[],1.0,https://www.youtube.com/watch?v=6MsQcUprO9o&amp;list=PLOJjn67NeYg9cWA4hyIWcxfaeX64pwo1c,all_ads,6,be2af704-5664-11eb-8e65-0ecd290c3053,video,https://www.youtube.com/watch?v=6MsQcUprO9o&amp;list=PLOJjn67NeYg9cWA4hyIWcxfaeX64pwo1c,105.0,140.0,,,,,,,"{'oembed': {'author_name': 'chshersh', 'author_url': 'https://www.youtube.com/c/chshersh', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/6MsQcUprO9o?list=PLOJjn67NeYg9cWA4hyIWcxfaeX64pwo1c"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/6MsQcUprO9o/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Haskell Beginners 2022: Lecture 1', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/6MsQcUprO9o?list=PLOJjn67NeYg9cWA4hyIWcxfaeX64pwo1c"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'chshersh', 'author_url': 'https://www.youtube.com/c/chshersh', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/6MsQcUprO9o?list=PLOJjn67NeYg9cWA4hyIWcxfaeX64pwo1c"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/6MsQcUprO9o/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Haskell Beginners 2022: Lecture 1', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/6MsQcUprO9o?list=PLOJjn67NeYg9cWA4hyIWcxfaeX64pwo1c"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/sikay9', 'scrolling': False, 'width': 356}",,,,,
377.0,[],False,tbidne,,[],,text,t2_dj0sb2vi,False,False,False,[],False,False,1643793092,self.haskell,https://www.reddit.com/r/haskell/comments/sik7gx/ghc_90_datachar_inconsistency/,{},sik7gx,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sik7gx/ghc_90_datachar_inconsistency/,False,self,"{'enabled': False, 'images': [{'id': 'P5Ey5ebVdIlN8xW2nCqT48N8bDrbTKi-fRTLSInYXSM', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/dz7o7qBtWmS6GDzqdA53Lci7fVkM6L9U-u3kL8jCfAI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d7953181d0aed439826e8e5925b8b4c879710722', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/dz7o7qBtWmS6GDzqdA53Lci7fVkM6L9U-u3kL8jCfAI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=44cd31740543cd6dcf2028f7502b299524ef2149', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/dz7o7qBtWmS6GDzqdA53Lci7fVkM6L9U-u3kL8jCfAI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b1df27fd50fbffc848a6e96fe057b84646b02e88', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/dz7o7qBtWmS6GDzqdA53Lci7fVkM6L9U-u3kL8jCfAI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=27a437b94144e959f9fb4d95ce7175fbf3403c7b', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/dz7o7qBtWmS6GDzqdA53Lci7fVkM6L9U-u3kL8jCfAI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=f3d688493ae354cfe9c2dbf58762622f5785d702', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/dz7o7qBtWmS6GDzqdA53Lci7fVkM6L9U-u3kL8jCfAI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=dde38e9a4219a4d160a2ba89e9213bf145e0948e', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/dz7o7qBtWmS6GDzqdA53Lci7fVkM6L9U-u3kL8jCfAI.jpg?auto=webp&amp;s=d826f06b6734b7857ac14214420ef5390afb7628', 'width': 1200}, 'variants': {}}]}",6,1643793102,1,[removed],True,False,False,haskell,t5_2qh36,68843,public,self,GHC 9.0.* Data.Char Inconsistency,0,[],1.0,https://www.reddit.com/r/haskell/comments/sik7gx/ghc_90_datachar_inconsistency/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
378.0,[],False,BDSMm4asubthrowaway,,[],,text,t2_d85s2vjf,False,False,False,[],False,False,1643776309,self.haskell,https://www.reddit.com/r/haskell/comments/sifigb/how_to_use_stack_on_my_m1_mac_mini_with_apple/,{},sifigb,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,2,0,False,all_ads,/r/haskell/comments/sifigb/how_to_use_stack_on_my_m1_mac_mini_with_apple/,False,,,6,1643776319,1,"Really just the title. There are quite a few books I've found that I'd love to follow, but they all use Stack which is apparently not supported on Apple Silicon. Any suggestions?",True,False,False,haskell,t5_2qh36,68837,public,self,How to use Stack on my M1 Mac Mini with Apple Silicon?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sifigb/how_to_use_stack_on_my_m1_mac_mini_with_apple/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
379.0,[],False,syntactic_pineapple,,[],,text,t2_i9uqp4y6,False,False,False,[],False,False,1643773886,self.haskell,https://www.reddit.com/r/haskell/comments/siepbo/how_to_get_out_of_the_exercise_phase/,{},siepbo,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/siepbo/how_to_get_out_of_the_exercise_phase/,False,,,6,1643773897,1,I’ve been learning Haskell for a little bit now and I’ve been slowly understanding functional programming and how to solve problems functionally. I’ve done this mainly by solving problems on exercism.io and reading Learn You A Haskell for Great Good. How can I move on from doing exercises and start doing projects? What are good projects to take on as a beginner Haskeller? I’m only up to the IO section in LYAH so do I need to learn about Monads or something before I can do anything useful? Not really sure what the best path would be. Hoping someone can help me out. Thanks.,True,False,False,haskell,t5_2qh36,68836,public,self,How to get out of the exercise phase?,0,[],1.0,https://www.reddit.com/r/haskell/comments/siepbo/how_to_get_out_of_the_exercise_phase/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
380.0,[],False,Limp_Step_6774,,[],,text,t2_6wlxzw83,False,False,False,[],False,False,1643757659,self.haskell,https://www.reddit.com/r/haskell/comments/si8tv7/representabletries_vs_memotrie/,{},si8tv7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/si8tv7/representabletries_vs_memotrie/,False,,,6,1643757669,1,"From the outside, it looks like these two libraries do similar things in roughly similar ways. Do people know of important differences? Semi-relevant context: I've been using MemoTrie to write a HasTrie instance for 

    FreeT f m Void

This worked, with:

&amp;#x200B;

\`\`\`haskell

instance (HasTrie (f b), HasTrie a) =&gt; HasTrie (FreeF f a b) where  
   newtype (FreeF f a b :-&gt;: c) = FreeFTrie (Either (f b) a :-&gt;: c)  
  trie f = FreeFTrie (trie (f . either Free Pure))  
  untrie (FreeFTrie f) = untrie f . (\\case Free x -&gt; Left x; Pure y -&gt; Right y)

instance (forall a. HasTrie a =&gt; HasTrie (f a)) =&gt; HasTrie (FreeT f \[\] Void) where   
  newtype (FreeT f \[\] Void :-&gt;: b) = FreeTrie (\[FreeF f Void (FreeT f \[\] Void)\] :-&gt;: b)  
  trie f = FreeTrie (trie (f . FreeT))  
  untrie (FreeTrie f) = untrie f . runFreeT

\`\`\`  


but in the process I started to wonder if generics could derive this, maybe using representable-tries, or if there was some other advantage to be gleaned from that library.",True,False,False,haskell,t5_2qh36,68831,public,self,Representable-tries vs MemoTrie,0,[],1.0,https://www.reddit.com/r/haskell/comments/si8tv7/representabletries_vs_memotrie/,all_ads,6,,,,,,,,,,,,,,,,,,,,
381.0,[],False,EMC1201,,[],,text,t2_1qfdf45u,False,False,False,[],False,False,1643754910,self.haskell,https://www.reddit.com/r/haskell/comments/si7rbl/should_i_use_vscode/,{},si7rbl,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/si7rbl/should_i_use_vscode/,False,,,6,1643754920,1,"Currently learning Haskell for school, and I’m attempting to follow along with provided video tutorials, and things don’t seem to work as shown. The biggest thing is that running “:r” doesn’t recompile (not sure if that’s the best word) as it does in the tutorials. I always have to open a new terminal and go from there. Am I just missing something crucial, or is VSCode just not great for Haskell? Thanks in advance.",True,False,False,haskell,t5_2qh36,68826,public,self,Should I use VSCode?,0,[],1.0,https://www.reddit.com/r/haskell/comments/si7rbl/should_i_use_vscode/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
382.0,[],False,jumper149,,[],,text,t2_rglr6,False,False,False,[],False,False,1643753415,felixspringer.xyz,https://www.reddit.com/r/haskell/comments/si7663/showcase_derivingtrans/,{},si7663,False,True,False,True,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/si7663/showcase_derivingtrans/,False,,,6,1643753426,1,,True,False,False,haskell,t5_2qh36,68826,public,default,Showcase: deriving-trans,0,[],1.0,https://felixspringer.xyz/homepage/blog/derivingTrans,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://felixspringer.xyz/homepage/blog/derivingTrans,,,,,,,,,,,,,,,,,
383.0,[],False,MorrowM_,,[],,text,t2_6l7exkda,False,False,False,[],False,False,1643753261,self.haskell,https://www.reddit.com/r/haskell/comments/si73yj/this_module_compiles/,{},si73yj,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/si73yj/this_module_compiles/,False,,,6,1643753271,1,"    module NothingToSeeHere where

    x :: Char
    Just x = lookup 4 [(1, 'a'), (2, 'b'), (3, 'c'), (4, 'd')]

    y :: a
    Just y = Nothing

    fun1, fun2 :: Bool -&gt; Bool
    (fun1, fun2) = (not, id)

    True = False",True,False,False,haskell,t5_2qh36,68826,public,self,This module compiles.,0,[],1.0,https://www.reddit.com/r/haskell/comments/si73yj/this_module_compiles/,all_ads,6,,,,,,,,,,,,,,,,,,,,
384.0,[],False,Iceland_jack,,[],,text,t2_3qjdu,False,False,False,[],False,False,1643741849,hackage.haskell.org,https://www.reddit.com/r/haskell/comments/si2j85/derivingtrans_derive_instances_for_monad/,{},si2j85,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/si2j85/derivingtrans_derive_instances_for_monad/,False,,,6,1643741860,1,,True,False,False,haskell,t5_2qh36,68822,public,default,deriving-trans: Derive instances for monad transformer stacks,0,[],1.0,https://hackage.haskell.org/package/deriving-trans,all_ads,6,,,https://hackage.haskell.org/package/deriving-trans,,,,,,,,,,,,,,,,,
385.0,[],False,jaspervdj,,[],,text,t2_3r33p,False,False,False,[],False,False,1643740743,summer.haskell.org,https://www.reddit.com/r/haskell/comments/si23lw/gsoc_changes_in_2022_call_for_ideas/,{},si23lw,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/si23lw/gsoc_changes_in_2022_call_for_ideas/,False,link,"{'enabled': False, 'images': [{'id': 'ADx74pI3ZECSnkuOqP_Oua6IuA1n7USMW_devyj_KLE', 'resolutions': [{'height': 60, 'url': 'https://external-preview.redd.it/l3_Scww4pYdPKjjabo4UzIzOPHzAzQh3Nxa7QOAxOdM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e4b70b6784f70ee630c5d86e256c8fbfca36b75f', 'width': 108}, {'height': 121, 'url': 'https://external-preview.redd.it/l3_Scww4pYdPKjjabo4UzIzOPHzAzQh3Nxa7QOAxOdM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2a1f8de9d9a0a268a965289b1dfa0fe7a2b87a75', 'width': 216}, {'height': 180, 'url': 'https://external-preview.redd.it/l3_Scww4pYdPKjjabo4UzIzOPHzAzQh3Nxa7QOAxOdM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2e5f57d9bd745241c93daed4d2db2a7c55ff9858', 'width': 320}, {'height': 360, 'url': 'https://external-preview.redd.it/l3_Scww4pYdPKjjabo4UzIzOPHzAzQh3Nxa7QOAxOdM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=81a9202294bb7226f6aa55be558a1c67484b55db', 'width': 640}, {'height': 540, 'url': 'https://external-preview.redd.it/l3_Scww4pYdPKjjabo4UzIzOPHzAzQh3Nxa7QOAxOdM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ed9b5ae09faaab8fa36b4ec3b09e26f6a00eb552', 'width': 960}, {'height': 607, 'url': 'https://external-preview.redd.it/l3_Scww4pYdPKjjabo4UzIzOPHzAzQh3Nxa7QOAxOdM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=6b65b6256643e3a98899fd87daefa9c7156452db', 'width': 1080}], 'source': {'height': 900, 'url': 'https://external-preview.redd.it/l3_Scww4pYdPKjjabo4UzIzOPHzAzQh3Nxa7QOAxOdM.jpg?auto=webp&amp;s=63e3c7e98c11081c23e12d77decb5881ab4b82b8', 'width': 1600}, 'variants': {}}]}",6,1643740753,1,,True,False,False,haskell,t5_2qh36,68820,public,default,[GSoC] Changes in 2022 + Call for Ideas!,0,[],1.0,https://summer.haskell.org/news/2022-02-01-gsoc-changes-2022.html,all_ads,6,,,https://summer.haskell.org/news/2022-02-01-gsoc-changes-2022.html,78.0,140.0,,,,,,,,,,,,,,,
386.0,[],False,sridfr,,[],,text,t2_f1wkk8ou,False,False,False,[],False,False,1643733468,fpcomplete.com,https://www.reddit.com/r/haskell/comments/shz7w8/quickcheck_hedgehog_validity/,{},shz7w8,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/shz7w8/quickcheck_hedgehog_validity/,False,link,"{'enabled': False, 'images': [{'id': 'tbmjG-Ym58fiI2X63JwKIWk7hDdPiGow7qJ-u7eGjuQ', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/pws1ScKOGhrPYk4iaoWXiPuzCbOPnKJBGaiLWmDrio0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f9972e25de89ae4c1a2688a86c4323cf15151de1', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/pws1ScKOGhrPYk4iaoWXiPuzCbOPnKJBGaiLWmDrio0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=33da500b297dceab3c4dde0e846155cd70ae8e62', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/pws1ScKOGhrPYk4iaoWXiPuzCbOPnKJBGaiLWmDrio0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7da5f6375c3fffbc0b3ada833cc8c693fb2d4773', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/pws1ScKOGhrPYk4iaoWXiPuzCbOPnKJBGaiLWmDrio0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=afe630fae1b03660c399b21f4160c1a1199f5361', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/pws1ScKOGhrPYk4iaoWXiPuzCbOPnKJBGaiLWmDrio0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2dac50d0f6cac4d24142a7007cb25b0f70bfdd98', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/pws1ScKOGhrPYk4iaoWXiPuzCbOPnKJBGaiLWmDrio0.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=e220d5c914112343cf2220040424285977137aa1', 'width': 1080}], 'source': {'height': 1280, 'url': 'https://external-preview.redd.it/pws1ScKOGhrPYk4iaoWXiPuzCbOPnKJBGaiLWmDrio0.jpg?auto=webp&amp;s=8aef6aee840d7c593a11f21b7083b1d72f772275', 'width': 1280}, 'variants': {}}]}",6,1643733479,1,,True,False,False,haskell,t5_2qh36,68820,public,default,"QuickCheck, Hedgehog, Validity",0,[],1.0,https://www.fpcomplete.com/blog/quickcheck-hedgehog-validity/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://www.fpcomplete.com/blog/quickcheck-hedgehog-validity/,140.0,140.0,,,,,,,,,,,,,,,
387.0,[],False,Host127001,,[],,text,t2_15u2f7,False,False,False,[],False,False,1643722640,self.haskell,https://www.reddit.com/r/haskell/comments/shv4cc/how_do_you_get_foreign_libraries_to_work_on_m1/,{},shv4cc,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/shv4cc/how_do_you_get_foreign_libraries_to_work_on_m1/,False,,,6,1643722651,1,"We have a stack project that uses an external C library.

AFAIK, on M1 chips, stack installs an x86\_64 GHC which means I always get x86\_64 Haskell programs.  
This is usually not a problem, Rosetta takes care of it.  
But if I now want to link the arm64 C library, I get linking errors.

Has someone had similar experiences and if so, how did you solve it?",True,False,False,haskell,t5_2qh36,68821,public,self,How do you get foreign libraries to work on M1 chips?,0,[],1.0,https://www.reddit.com/r/haskell/comments/shv4cc/how_do_you_get_foreign_libraries_to_work_on_m1/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
388.0,[],False,Serokell,,[],,text,t2_fvl0rbg,False,False,False,[],False,False,1643721026,serokell.io,https://www.reddit.com/r/haskell/comments/shulfo/introduction_to_free_monads/,{},shulfo,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/shulfo/introduction_to_free_monads/,False,link,"{'enabled': False, 'images': [{'id': 'oBWFfyNE7qnfYgR8wUlf_XXUVGa2wOYYl-z0o4eMyeY', 'resolutions': [{'height': 64, 'url': 'https://external-preview.redd.it/Cug3vTo8Q3UKLoGdA8ZminzCl9T3cksY98qz-83md3E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=75f4410327528391aab2fc808bb0766d98c48f48', 'width': 108}, {'height': 128, 'url': 'https://external-preview.redd.it/Cug3vTo8Q3UKLoGdA8ZminzCl9T3cksY98qz-83md3E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f645a3ab4fba8aa59b48e954c5b3466da07bcdf4', 'width': 216}, {'height': 190, 'url': 'https://external-preview.redd.it/Cug3vTo8Q3UKLoGdA8ZminzCl9T3cksY98qz-83md3E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c11c14ffcff034fde62f545e4bba334f45f19a4e', 'width': 320}, {'height': 381, 'url': 'https://external-preview.redd.it/Cug3vTo8Q3UKLoGdA8ZminzCl9T3cksY98qz-83md3E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=70ca7676bce272b580aad228b2dbbfd923728ca1', 'width': 640}, {'height': 572, 'url': 'https://external-preview.redd.it/Cug3vTo8Q3UKLoGdA8ZminzCl9T3cksY98qz-83md3E.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a1d7d92c41ed74b924e069434c6c57d47360138f', 'width': 960}, {'height': 644, 'url': 'https://external-preview.redd.it/Cug3vTo8Q3UKLoGdA8ZminzCl9T3cksY98qz-83md3E.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=2c108694d1a4c34e4e13dd52b0a6aade64a8a716', 'width': 1080}], 'source': {'height': 716, 'url': 'https://external-preview.redd.it/Cug3vTo8Q3UKLoGdA8ZminzCl9T3cksY98qz-83md3E.jpg?auto=webp&amp;s=ab21aef7637ddce906cf32c861b116f955b5195d', 'width': 1200}, 'variants': {}}]}",6,1643721036,1,,True,False,False,haskell,t5_2qh36,68821,public,default,Introduction to Free Monads,0,[],1.0,https://serokell.io/blog/introduction-to-free-monads,all_ads,6,,,https://serokell.io/blog/introduction-to-free-monads,83.0,140.0,,,,,,,,,,,,,,,
389.0,[],False,karchnu,,[],,text,t2_86l7zpp,False,False,False,[],False,False,1643709564,self.haskell,https://www.reddit.com/r/haskell/comments/shrdk9/what_do_we_actually_need_to_know_to_be_fluent_in/,{},shrdk9,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/shrdk9/what_do_we_actually_need_to_know_to_be_fluent_in/,False,,,6,1643709575,1,"Hello! Is there a list of all the different concepts to learn, **required or recommended**, to understand Haskell code? My guess is that we can do a lot, including using most libraries, knowing *""only""*:

&amp;#x200B;

1. basic Haskell syntax (functions, lambdas, pattern matching, guards, case, where, let)
2. data types (sum, product, algebraic, recursive, polymorphic, records, type synonyms)
3. type classes
4. referential transparency, high order functions, function composition, currying
5. laziness, memoization, tail recursion elimination, strictness, inlining
6. module (import and export)
7. some actual types (Bool, Text, Int, Float, String) and data structures (List, Maybe, Either)
8. some type classes (Ord, Eq, Num, Show, Read, Functor, Applicative, Alternative, Monad, IO, Foldable, Semigroup, Monoid)
9. some functions (map, fold,  sort, head-tail-init-last, scan, zip, and a few other functions for list manipulation)
10. monad transformers

&amp;#x200B;

What do you think? What's missing?

&amp;#x200B;

There are so much more, it's overwhelming. Let's see, just from the top of my head:

* tagless final
* phantom type
* generalized algebraic data types
* arrows
* free monads
* comonads
* lenses (btw, 109 operators in the module… it's **never enough** apparently)
* continuations

And I guess I've only scratch the surface here. I didn't even talked much about the different modules since I don't know them yet. It's been months that I learn Haskell, and each time I learn something, I find another concept. I didn't even take the time to read modules doing **actual stuff**. What's the minimum to be comfortable writing efficient, idiomatic code?

Thanks!",True,False,False,haskell,t5_2qh36,68817,public,self,What do we actually need to know to be fluent in Haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/shrdk9/what_do_we_actually_need_to_know_to_be_fluent_in/,all_ads,6,,,,,,,,,,,,,,,,,,,,
390.0,[],False,isovector,,[],,text,t2_pir4g,False,False,False,[],False,False,1643694588,reasonablypolymorphic.com,https://www.reddit.com/r/haskell/comments/shnijs/underlining_the_bugs_reasonably_polymorphic/,{},shnijs,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/shnijs/underlining_the_bugs_reasonably_polymorphic/,False,link,"{'enabled': False, 'images': [{'id': 'G3dofGe7S0lVeGVy5Frv8_e7q0hABE9pYhIPwWFzQgo', 'resolutions': [{'height': 57, 'url': 'https://external-preview.redd.it/-4Cbu0Hxqz5HgfMyOo8j_ZAHuMZliq6BoIw8WUV9Gjg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f87a09801bc1c76f30df219dd8d91d4efb8a55f0', 'width': 108}, {'height': 115, 'url': 'https://external-preview.redd.it/-4Cbu0Hxqz5HgfMyOo8j_ZAHuMZliq6BoIw8WUV9Gjg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3f5ddcbf7a5971059ce8169b7bd2344240bc768f', 'width': 216}, {'height': 171, 'url': 'https://external-preview.redd.it/-4Cbu0Hxqz5HgfMyOo8j_ZAHuMZliq6BoIw8WUV9Gjg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1bbcd529c105c1432bc331b933808b134f833476', 'width': 320}], 'source': {'height': 271, 'url': 'https://external-preview.redd.it/-4Cbu0Hxqz5HgfMyOo8j_ZAHuMZliq6BoIw8WUV9Gjg.jpg?auto=webp&amp;s=57636143db6223bacbebf25502f421a39cfc2f7b', 'width': 507}, 'variants': {}}]}",6,1643694599,1,,True,False,False,haskell,t5_2qh36,68815,public,default,Underlining the Bugs :: Reasonably Polymorphic,0,[],1.0,https://reasonablypolymorphic.com/blog/underline-bugs/,all_ads,6,,,https://reasonablypolymorphic.com/blog/underline-bugs/,74.0,140.0,,,,,,,,,,,,,,,
391.0,[],False,Infamous_Database_71,,[],,text,t2_j8dc0aiz,False,False,False,[],False,False,1643693552,self.haskell,https://www.reddit.com/r/haskell/comments/shn7s8/metflix_on_hype/,{},shn7s8,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/shn7s8/metflix_on_hype/,False,self,"{'enabled': False, 'images': [{'id': 'rNikOMdkNEg5ecIWVK9N7dYbFjlThk4ND4lT1Xo32PQ', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/DBVu7dKIMPKfvVmEzYpgn-JsDwk5T5QcbdmynMhubtg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=bb92ae4f01517c75194642dc02bc64204e9aeb2f', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/DBVu7dKIMPKfvVmEzYpgn-JsDwk5T5QcbdmynMhubtg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3facf8755b98135cce37914ab7c0c2499e32df54', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/DBVu7dKIMPKfvVmEzYpgn-JsDwk5T5QcbdmynMhubtg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a28845cd90d3b6f4e71785c30bfd3d01356255ae', 'width': 320}], 'source': {'height': 320, 'url': 'https://external-preview.redd.it/DBVu7dKIMPKfvVmEzYpgn-JsDwk5T5QcbdmynMhubtg.jpg?auto=webp&amp;s=0dcd5a82626f82364cdbbaf62ae5eae9a2ae2ab3', 'width': 320}, 'variants': {}}]}",6,1643693562,1,[removed],True,False,False,haskell,t5_2qh36,68812,public,self,Metflix on Hype,0,[],1.0,https://www.reddit.com/r/haskell/comments/shn7s8/metflix_on_hype/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
392.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1643691675,self.haskell,https://www.reddit.com/r/haskell/comments/shmn9z/monthly_hask_anything_february_2022/,{},shmn9z,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,49,0,False,all_ads,/r/haskell/comments/shmn9z/monthly_hask_anything_february_2022/,False,,,6,1643691685,1,"This is your opportunity to ask any questions you feel don't deserve their own threads, no matter how small or simple they might be!",False,False,True,haskell,t5_2qh36,68813,public,self,Monthly Hask Anything (February 2022),0,[],1.0,https://www.reddit.com/r/haskell/comments/shmn9z/monthly_hask_anything_february_2022/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': 'f998970b-a622-480a-aed4-f8d9ad64ee7b', 'created_at_utc': 1612270088.064, 'description': '', 'display_layout': None, 'last_update_utc': 1641013272.043, 'link_ids': ['t3_laur0s', 't3_m0f2y9', 't3_mj7kv5', 't3_n2s8yk', 't3_nqjp2c', 't3_ocz5s5', 't3_p2r52v', 't3_pfxgd4', 't3_pzy3py', 't3_qksh4o', 't3_r6dnmn', 't3_rtbzbl'], 'permalink': 'https://www.reddit.com/r/haskell/collection/f998970b-a622-480a-aed4-f8d9ad64ee7b', 'subreddit_id': 't5_2qh36', 'title': 'Hask Anything'}]",,
393.0,[],False,Comprehensive-Ad3963,,[],,text,t2_5zg4jvtk,False,False,False,[],False,False,1643672852,self.haskell,https://www.reddit.com/r/haskell/comments/shg4pa/how_do_i_access_a_field_of_a_type_that_has_no/,{},shg4pa,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/shg4pa/how_do_i_access_a_field_of_a_type_that_has_no/,False,,,6,1643672863,1,"I'm working through a problem set and have been given the following data types. I'm not sure if I'm ""allowed"" to change them in any way:

`data MessageType = Info`  
                 `| Warning`  
                 `| Error Int`  
 `deriving (Show, Eq)`  
`type TimeStamp = Int`  
`data LogMessage = LogMessage MessageType TimeStamp String`  
                `| Unknown String`  
 `deriving (Show, Eq)`  
`data MessageTree = Leaf`  
                 `| Node MessageTree LogMessage MessageTree`  
 `deriving (Show, Eq)`

I need to know how to access a property of these types - for example, the MessageType of a LogMessage. How would I do that? Is this even possible?",True,False,False,haskell,t5_2qh36,68812,public,self,How do I access a field of a type that has no defined records,0,[],1.0,https://www.reddit.com/r/haskell/comments/shg4pa/how_do_i_access_a_field_of_a_type_that_has_no/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
394.0,[],False,operator-name,,[],,text,t2_44kkmgan,False,False,False,[],False,False,1643669751,self.rust,https://www.reddit.com/r/haskell/comments/shewq7/hvm_a_nextgen_massively_parallel_betaoptimal/,{},shewq7,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/shewq7/hvm_a_nextgen_massively_parallel_betaoptimal/,False,link,"{'enabled': False, 'images': [{'id': 'lCahdMyCbUTjzui07N1EXt1uhlQAT04eoc_o11CZc_A', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=286d019d888552ca12136ca0c37db1ffad864185', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7e0f8d5297ca8e59e38ccc30b97699264da38065', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4d6d4534bc0fac09cec8b9c971ef28ecc0f0238e', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=51dceb5fd7925fbf34b3cd0df9c37eaf10b7e3f5', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a00a7e3b185c9f092b2f2eb19665ba4c14d03484', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=fc358af9ef9b042314ebf3586a45ce3af2fd4607', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?auto=webp&amp;s=1ef233d313339d49f9821280a9a5f3206b51687a', 'width': 1200}, 'variants': {}}]}",6,1643669762,1,,True,False,False,haskell,t5_2qh36,68809,public,default,"HVM: a next-gen massively parallel, beta-optimal functional runtime is 50x faster than its predecessors",0,[],1.0,/r/rust/comments/sh947t/hvm_a_nextgen_massively_parallel_betaoptimal/,all_ads,6,,,/r/rust/comments/sh947t/hvm_a_nextgen_massively_parallel_betaoptimal/,,,,,,,t3_sh947t,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'SrPeixinho', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_7u4u3', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1643655769.0, 'created_utc': 1643655769.0, 'discussion_type': None, 'distinguished': None, 'domain': 'self.rust', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': False, 'id': 'sh947t', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': True, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_sh947t', 'no_follow': False, 'num_comments': 16, 'num_crossposts': 1, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/rust/comments/sh947t/hvm_a_nextgen_massively_parallel_betaoptimal/', 'pinned': False, 'post_hint': 'self', 'preview': {'enabled': False, 'images': [{'id': 'lCahdMyCbUTjzui07N1EXt1uhlQAT04eoc_o11CZc_A', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=286d019d888552ca12136ca0c37db1ffad864185', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7e0f8d5297ca8e59e38ccc30b97699264da38065', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4d6d4534bc0fac09cec8b9c971ef28ecc0f0238e', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=51dceb5fd7925fbf34b3cd0df9c37eaf10b7e3f5', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a00a7e3b185c9f092b2f2eb19665ba4c14d03484', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=fc358af9ef9b042314ebf3586a45ce3af2fd4607', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?auto=webp&amp;s=1ef233d313339d49f9821280a9a5f3206b51687a', 'width': 1200}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 60, 'secure_media': None, 'secure_media_embed': {}, 'selftext': ""I've finished the prototype of [HVM](https://github.com/Kindelia/HVM) in Rust. It is a massively parallel functional runtime that is able to evaluate inputs faster than Haskell's GHC, all as a small Rust library. It can be used to reduce functional programs and algorithms ultra fast within Rust (think of a ligthweight, ultra-fast Haskell-in-Rust), as a compile target for functional programming languages, and even as a functional alternative to the EVM (think of a functional blockchain). The repository explains everything. Let me know what you think!"", 'selftext_html': '&lt;!-- SC_OFF --&gt;&lt;div class=""md""&gt;&lt;p&gt;I&amp;#39;ve finished the prototype of &lt;a href=""https://github.com/Kindelia/HVM""&gt;HVM&lt;/a&gt; in Rust. It is a massively parallel functional runtime that is able to evaluate inputs faster than Haskell&amp;#39;s GHC, all as a small Rust library. It can be used to reduce functional programs and algorithms ultra fast within Rust (think of a ligthweight, ultra-fast Haskell-in-Rust), as a compile target for functional programming languages, and even as a functional alternative to the EVM (think of a functional blockchain). The repository explains everything. Let me know what you think!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;', 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'rust', 'subreddit_id': 't5_2s7lj', 'subreddit_name_prefixed': 'r/rust', 'subreddit_subscribers': 167558, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'self', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'HVM: a next-gen massively parallel, beta-optimal functional runtime is 50x faster than its predecessors', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 60, 'upvote_ratio': 0.96, 'url': 'https://www.reddit.com/r/rust/comments/sh947t/hvm_a_nextgen_massively_parallel_betaoptimal/', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
395.0,[],False,Comprehensive-Ad3963,,[],,text,t2_5zg4jvtk,False,False,False,[],False,False,1643660289,self.haskell,https://www.reddit.com/r/haskell/comments/shb01b/how_do_i_return_either_the_expected_return_type/,{},shb01b,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/shb01b/how_do_i_return_either_the_expected_return_type/,False,,,6,1643660299,1,"I'm building a pattern-matching function. Any line of text that does not match the pattern needs to be dealt with separately from the others.

For example, the following function works if the input string starts with ""I,"" ""W,"" or ""E,"" but it doesn't work for anything else:

`getMessageType :: [Char] -&gt; MessageType`  
`getMessageType str = case head str of`  
 `'I' -&gt; Info`  
 `'W' -&gt; Warning`  
 `'E' -&gt; Error (read (words str !! 1))`",True,False,False,haskell,t5_2qh36,68808,public,self,"How do I return either the ""expected"" return type or something else (like Nothing)?",0,[],1.0,https://www.reddit.com/r/haskell/comments/shb01b/how_do_i_return_either_the_expected_return_type/,all_ads,6,,,,,,,,,,,,,,,,,,,,
396.0,[],False,fosskers,,[],,text,t2_3xuu5,False,False,False,[],False,False,1643657573,fosskers.ca,https://www.reddit.com/r/haskell/comments/sh9uv6/software_development_languages_haskell/,{},sh9uv6,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sh9uv6/software_development_languages_haskell/,False,,,6,1643657584,1,,True,False,False,haskell,t5_2qh36,68807,public,default,Software Development Languages: Haskell,0,[],1.0,https://www.fosskers.ca/en/blog/haskell-software-dev,all_ads,6,,,https://www.fosskers.ca/en/blog/haskell-software-dev,,,,reddit,,,t3_sh9uif,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'fosskers', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_3xuu5', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1643657550.0, 'created_utc': 1643657550.0, 'discussion_type': None, 'distinguished': None, 'domain': 'fosskers.ca', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 'sh9uif', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': False, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_sh9uif', 'no_follow': True, 'num_comments': 0, 'num_crossposts': 0, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/programming/comments/sh9uif/software_development_languages_haskell/', 'pinned': False, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 1, 'secure_media': None, 'secure_media_embed': {}, 'selftext': '', 'selftext_html': None, 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'programming', 'subreddit_id': 't5_2fwo', 'subreddit_name_prefixed': 'r/programming', 'subreddit_subscribers': 3871190, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'default', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'Software Development Languages: Haskell', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 1, 'upvote_ratio': 1.0, 'url': 'https://www.fosskers.ca/en/blog/haskell-software-dev', 'url_overridden_by_dest': 'https://www.fosskers.ca/en/blog/haskell-software-dev', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
397.0,[],False,SrPeixinho,,[],,text,t2_7u4u3,False,False,False,[],False,False,1643652250,github.com,https://www.reddit.com/r/haskell/comments/sh7nfe/hvm_the_nextgen_optimal_reducer_is_50x_faster_and/,{},sh7nfe,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sh7nfe/hvm_the_nextgen_optimal_reducer_is_50x_faster_and/,False,link,"{'enabled': False, 'images': [{'id': 'lCahdMyCbUTjzui07N1EXt1uhlQAT04eoc_o11CZc_A', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=286d019d888552ca12136ca0c37db1ffad864185', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7e0f8d5297ca8e59e38ccc30b97699264da38065', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4d6d4534bc0fac09cec8b9c971ef28ecc0f0238e', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=51dceb5fd7925fbf34b3cd0df9c37eaf10b7e3f5', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a00a7e3b185c9f092b2f2eb19665ba4c14d03484', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=fc358af9ef9b042314ebf3586a45ce3af2fd4607', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/IBpGgqsNGrH0jBX6zCLLZxLoGyjN3V6HhIcURzff7IU.jpg?auto=webp&amp;s=1ef233d313339d49f9821280a9a5f3206b51687a', 'width': 1200}, 'variants': {}}]}",6,1643652261,1,,True,False,False,haskell,t5_2qh36,68807,public,default,"HVM: the next-gen optimal reducer is 50x faster, and often beats GHC in real-world inputs",0,[],1.0,https://github.com/Kindelia/HVM,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://github.com/Kindelia/HVM,70.0,140.0,,reddit,,,,,,,,,,,,,
398.0,[],False,Comprehensive-Ad3963,,[],,text,t2_5zg4jvtk,False,False,False,[],False,False,1643648603,self.haskell,https://www.reddit.com/r/haskell/comments/sh650t/clarification_from_last_post_i_have_a_txt_file/,{},sh650t,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sh650t/clarification_from_last_post_i_have_a_txt_file/,False,,,6,1643648614,1,"I posted earlier about this problem: [https://www.reddit.com/r/haskell/comments/sea0tn/how\_do\_i\_load\_a\_variable\_with\_values\_from\_a\_text/](https://www.reddit.com/r/haskell/comments/sea0tn/how_do_i_load_a_variable_with_values_from_a_text/)

Briefly speaking, I have a Person data type that contains fields ""Name"" and ""Age.""

However, I should have clarified something: The .txt that I import actually looks more like this:

Brian Campbell 31 

Johannes Diderik van der Waals 31

Very rarely, if ever, do I have a name with only one part.",True,False,False,haskell,t5_2qh36,68805,public,self,Clarification from last post: I have a txt file with full names and other fields. How do I put this into a list of Haskell objects?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sh650t/clarification_from_last_post_i_have_a_txt_file/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
399.0,[],False,Fuzietor,,[],,text,t2_hmx660hd,False,False,False,[],False,False,1643648455,self.haskell,https://www.reddit.com/r/haskell/comments/sh62ka/some_questions_about_haskell/,{},sh62ka,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sh62ka/some_questions_about_haskell/,False,,,6,1643648466,1,What are the merits of Haskell as a programming language? Why do people prefer to use Haskell over other languages compared to others in the same sphere of programming languages? Why do people prefer to use Haskell and for what tasks? How useful are the libraries made for Haskell and how well made is the language underneath?,True,False,False,haskell,t5_2qh36,68805,public,self,Some questions about Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/sh62ka/some_questions_about_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
400.0,[],False,Languorous-Owl,,[],,text,t2_bpt799qd,False,False,False,[],False,False,1643621400,self.learnprogramming,https://www.reddit.com/r/haskell/comments/sgx9ze/is_haskell_platform_no_longer_supported/,{},sgx9ze,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sgx9ze/is_haskell_platform_no_longer_supported/,False,,,6,1643621410,1,,True,False,False,haskell,t5_2qh36,68800,public,default,Is Haskell Platform no longer supported?,0,[],1.0,/r/learnprogramming/comments/sgvk35/is_haskell_platform_no_longer_supported/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,/r/learnprogramming/comments/sgvk35/is_haskell_platform_no_longer_supported/,,,,,,,t3_sgvk35,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'Languorous-Owl', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_bpt799qd', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1643614638.0, 'created_utc': 1643614638.0, 'discussion_type': None, 'distinguished': None, 'domain': 'self.learnprogramming', 'downs': 0, 'edited': 1643621339.0, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 'sgvk35', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': True, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_sgvk35', 'no_follow': True, 'num_comments': 3, 'num_crossposts': 1, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/learnprogramming/comments/sgvk35/is_haskell_platform_no_longer_supported/', 'pinned': False, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 0, 'secure_media': None, 'secure_media_embed': {}, 'selftext': ""I tried searching for the Haskell Platform that literally every tutorial/learning source keeps pointing me to on the official Haskell website but I can't find it.\n\nThe link for the official page ([http://hackage.haskell.org/platform/](http://hackage.haskell.org/platform/)) gives you a 404 error (I checked with 3 different browsers, with and without VPN). And not a single information source I've encountered till now seems to have taken note of this. Also, every other link (such as  [https://www.haskell.org/platform/windows.html](https://www.haskell.org/platform/windows.html)) including those on the official Haskell Platform Github, redirect you to the generic downloads page on the official website which has absolutely no hint about the Haskell Platform.\n\nI just want a self contained installer that I can install the standard Haskell installation from without any hassles on my Windows box."", 'selftext_html': '&lt;!-- SC_OFF --&gt;&lt;div class=""md""&gt;&lt;p&gt;I tried searching for the Haskell Platform that literally every tutorial/learning source keeps pointing me to on the official Haskell website but I can&amp;#39;t find it.&lt;/p&gt;\n\n&lt;p&gt;The link for the official page (&lt;a href=""http://hackage.haskell.org/platform/""&gt;http://hackage.haskell.org/platform/&lt;/a&gt;) gives you a 404 error (I checked with 3 different browsers, with and without VPN). And not a single information source I&amp;#39;ve encountered till now seems to have taken note of this. Also, every other link (such as  &lt;a href=""https://www.haskell.org/platform/windows.html""&gt;https://www.haskell.org/platform/windows.html&lt;/a&gt;) including those on the official Haskell Platform Github, redirect you to the generic downloads page on the official website which has absolutely no hint about the Haskell Platform.&lt;/p&gt;\n\n&lt;p&gt;I just want a self contained installer that I can install the standard Haskell installation from without any hassles on my Windows box.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;', 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'learnprogramming', 'subreddit_id': 't5_2r7yd', 'subreddit_name_prefixed': 'r/learnprogramming', 'subreddit_subscribers': 2737944, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'self', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'Is Haskell Platform no longer supported?', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 0, 'upvote_ratio': 0.5, 'url': 'https://www.reddit.com/r/learnprogramming/comments/sgvk35/is_haskell_platform_no_longer_supported/', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
401.0,[],False,FreeVariable,,[],,text,t2_16uihwda,False,False,False,[],False,False,1643616745,self.haskell,https://www.reddit.com/r/haskell/comments/sgw3yb/this_hls_binary_does_not_support_template_haskell/,{},sgw3yb,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sgw3yb/this_hls_binary_does_not_support_template_haskell/,False,,,6,1643616756,1,I am having this message since HLS' last update for the VSCode extension. It is quite annoying and I am not sure how to fix the issue. Any clue from a kind soul?,True,False,False,haskell,t5_2qh36,68799,public,self,"""This HLS binary does not support Template Haskell""",0,[],1.0,https://www.reddit.com/r/haskell/comments/sgw3yb/this_hls_binary_does_not_support_template_haskell/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
402.0,[],False,Appropriate_Falcon94,,[],,text,t2_7jfvfedc,False,False,False,[],False,False,1643615094,chester-beard.medium.com,https://www.reddit.com/r/haskell/comments/sgvo7g/medium_why_learn_haskell/,{},sgvo7g,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sgvo7g/medium_why_learn_haskell/,False,link,"{'enabled': False, 'images': [{'id': 'HNnPSUjerKJ-0LtN3pya8sTqzYbGpT30VHuFkDEx_is', 'resolutions': [{'height': 72, 'url': 'https://external-preview.redd.it/Ll5hUO9CaZolL-VvHCB-vPGc28kRXm1lYEHs4HQMV3E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=71e064289575e2f38fdfef7b19368f3c3e0eddb4', 'width': 108}, {'height': 144, 'url': 'https://external-preview.redd.it/Ll5hUO9CaZolL-VvHCB-vPGc28kRXm1lYEHs4HQMV3E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d8cd137aa7023ae9b87edfd365fa34124ef023ad', 'width': 216}, {'height': 213, 'url': 'https://external-preview.redd.it/Ll5hUO9CaZolL-VvHCB-vPGc28kRXm1lYEHs4HQMV3E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d5abd8ed9de3fcc616c1b15fdab5df9b8b70bd52', 'width': 320}, {'height': 426, 'url': 'https://external-preview.redd.it/Ll5hUO9CaZolL-VvHCB-vPGc28kRXm1lYEHs4HQMV3E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=3cdd5f3d067e4dab8750eecfe28d991b2ba022d7', 'width': 640}, {'height': 640, 'url': 'https://external-preview.redd.it/Ll5hUO9CaZolL-VvHCB-vPGc28kRXm1lYEHs4HQMV3E.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=fd60bfcafeb8f8f4f78a88b24b5fb48c2394c5f9', 'width': 960}, {'height': 720, 'url': 'https://external-preview.redd.it/Ll5hUO9CaZolL-VvHCB-vPGc28kRXm1lYEHs4HQMV3E.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=820820d36faa196639a8a6e89ef05ed515af2e1c', 'width': 1080}], 'source': {'height': 800, 'url': 'https://external-preview.redd.it/Ll5hUO9CaZolL-VvHCB-vPGc28kRXm1lYEHs4HQMV3E.jpg?auto=webp&amp;s=b54f1800adc881b90370f4385d7dc4b5364d4ac3', 'width': 1200}, 'variants': {}}]}",6,1643615105,1,,True,False,False,haskell,t5_2qh36,68797,public,default,Medium - Why learn Haskell,0,[],1.0,https://chester-beard.medium.com/why-i-am-learning-haskell-d95d1e5212f3,all_ads,6,,,https://chester-beard.medium.com/why-i-am-learning-haskell-d95d1e5212f3,93.0,140.0,,,,,,,,,,,,,,,
403.0,[],False,frostylock,,[],,text,t2_l7aul,False,False,False,[],False,False,1643612357,self.haskell,https://www.reddit.com/r/haskell/comments/sguxk8/is_the_secret_sauce_to_fp_associativity/,{},sguxk8,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sguxk8/is_the_secret_sauce_to_fp_associativity/,False,self,"{'enabled': False, 'images': [{'id': 'VlU2VNWWhAYx0KuPYDL7gZuy8zUqUkbyaAaqs4vSKIg', 'resolutions': [{'height': 216, 'url': 'https://external-preview.redd.it/ss8kPJWt9N07uyIhUNbMDNHx-AUew6nHD3QrotriNEk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b2076148e8b5914625eee751f28838134b587029', 'width': 108}, {'height': 432, 'url': 'https://external-preview.redd.it/ss8kPJWt9N07uyIhUNbMDNHx-AUew6nHD3QrotriNEk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6a278db53a77fb4244f3c21598b7f47268f38f08', 'width': 216}], 'source': {'height': 478, 'url': 'https://external-preview.redd.it/ss8kPJWt9N07uyIhUNbMDNHx-AUew6nHD3QrotriNEk.jpg?auto=webp&amp;s=4a788719ed1fae74fdaa06c50b9fdb5347bbe08a', 'width': 220}, 'variants': {}}]}",6,1643612367,1,"I'm learning FP at the moment from the perspective of category theory and trying to understand what makes FP so special.

I understand the imperative languages require explicit ""control flow"", which is ""the order in which individual statements, instructions or function calls of an imperative program are executed or evaluated."" ([wiki](https://en.wikipedia.org/wiki/Control_flow))

However, the central axiom of category theory is compositionality of morphisms, but then more subtly the associativity of composition. In other words, order doesn't matter.

Is that what makes FP so special?",True,False,False,haskell,t5_2qh36,68797,public,self,Is the secret sauce to FP associativity?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sguxk8/is_the_secret_sauce_to_fp_associativity/,all_ads,6,,,,,,,,,,,,,,,,,,,,
404.0,[],False,day_li_ly,,[],,text,t2_5ti04om6,False,False,False,[],False,False,1643606167,self.haskell,https://www.reddit.com/r/haskell/comments/sgt6dm/ann_cleff_fast_and_consise_extensible_effects/,{},sgt6dm,False,True,False,True,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sgt6dm/ann_cleff_fast_and_consise_extensible_effects/,False,self,"{'enabled': False, 'images': [{'id': '92va8dCF0Gx5vjidZWm1VxmwbAlmgRtc79d2Sjc9MBE', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/aLXRLuIZl-icaB_rzqUOEQHS7ZhOd-KHVwLN-E7KvNM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=02eeba3ef78d9df46108e1acfa7d6e744e3ccbda', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/aLXRLuIZl-icaB_rzqUOEQHS7ZhOd-KHVwLN-E7KvNM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c0857ec10a050273f215d7ab1037dc1a19bb5441', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/aLXRLuIZl-icaB_rzqUOEQHS7ZhOd-KHVwLN-E7KvNM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0f0ee77ad88e161de0368ba299bb1305a39b8ff1', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/aLXRLuIZl-icaB_rzqUOEQHS7ZhOd-KHVwLN-E7KvNM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d107dbdb61418c854a1de613d7212338123e3a8c', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/aLXRLuIZl-icaB_rzqUOEQHS7ZhOd-KHVwLN-E7KvNM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b99a4cd15e07c03f584fd7d582c9430170e7d84b', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/aLXRLuIZl-icaB_rzqUOEQHS7ZhOd-KHVwLN-E7KvNM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=6eb2fdbaa02d80aaa10fd5b1c186b9420dc9e7d7', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/aLXRLuIZl-icaB_rzqUOEQHS7ZhOd-KHVwLN-E7KvNM.jpg?auto=webp&amp;s=c596ae8188a3ac387ee907168f87d5c41b7d1697', 'width': 1200}, 'variants': {}}]}",6,1643606177,1,"I'm pleased to announce `cleff`, a new extensible effects library for Haskell: [https://github.com/re-xyr/cleff](https://github.com/re-xyr/cleff).

These are some key features of this library:

* It has an API similar to `polysemy` and `freer-simple`, i.e. you can write effect interpreters as simple case-splitting functions. This means effects are low-boilerplate, easy to understand, and that users of similar libraries can easily get along with `cleff`.
* It supports higher-order effects implementation, and provides a set of easy-to-use combinators for that. The expressiveness of these combinators are on par with `polysemy`'s `Tactics` language, and also harder to use incorrectly.
* It uses a `ReaderT IO` monad as the underlying `Eff` monad implementation, instead of free monads.
   * Therefore, the overhead of effects is reduced greatly (and gives pretty impressive microbenchmark results).
   * IO-based effect implementations provides good interaction with exceptions and concurrency (no more losing changes to `State` due to exceptions).

The library and documentation are already available on Hackage: [https://hackage.haskell.org/package/cleff](https://hackage.haskell.org/package/cleff).",True,False,False,haskell,t5_2qh36,68797,public,self,[ANN] cleff - fast and consise extensible effects,0,[],1.0,https://www.reddit.com/r/haskell/comments/sgt6dm/ann_cleff_fast_and_consise_extensible_effects/,all_ads,6,,,,,,,,,,,,,,,,,,,,
405.0,[],False,stucco_pastries,,[],,text,t2_xi46ph2,False,False,False,[],False,False,1643579614,self.haskell,https://www.reddit.com/r/haskell/comments/sgk19z/coming_from_imperative_programming/,{},sgk19z,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sgk19z/coming_from_imperative_programming/,False,,,6,1643579625,1,"I am a Java guy and making the arduous trek into Haskell for the purposes of expanding my general knowledge and for Cardano development. I have been going through some material and documentation recommended on the Haskell site. Any good video lecture courses out there that are digestible y’all would recommend? 
I noticed the FP and AFP courses on YouTube have been made private 😕 which is unfortunate.",True,False,False,haskell,t5_2qh36,68794,public,self,Coming from Imperative Programming,0,[],1.0,https://www.reddit.com/r/haskell/comments/sgk19z/coming_from_imperative_programming/,all_ads,6,,,,,,,,,,,,,,,,,,,,
406.0,[],False,isovector,,[],,text,t2_pir4g,False,False,False,[],False,False,1643571009,anchor.fm,https://www.reddit.com/r/haskell/comments/sggrou/solomon_bothwell_the_cofree_coffee_cast/,{},sggrou,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sggrou/solomon_bothwell_the_cofree_coffee_cast/,False,link,"{'enabled': False, 'images': [{'id': '4RbT-AybJgwDQkY_BAwoCrwvat75OEtVGdZPPfhlkIU', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/th7yemwWnJI46w7NmpetZs2JGwDn-FhxM3P_1WVf4PI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=09364d98c87743abbf7d52da5e340f385db22cf8', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/th7yemwWnJI46w7NmpetZs2JGwDn-FhxM3P_1WVf4PI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=db6c3df1a7b857cc4942134a06cf20d6aafaadea', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/th7yemwWnJI46w7NmpetZs2JGwDn-FhxM3P_1WVf4PI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7a981caba8319c5be67ef4c01e7c3231eeada57b', 'width': 320}], 'source': {'height': 400, 'url': 'https://external-preview.redd.it/th7yemwWnJI46w7NmpetZs2JGwDn-FhxM3P_1WVf4PI.jpg?auto=webp&amp;s=e7968fed7a0c20b5e3f10548c2a42f6faf3d72ab', 'width': 400}, 'variants': {}}]}",6,1643571020,1,,True,False,False,haskell,t5_2qh36,68790,public,default,Solomon Bothwell -- The Cofree Coffee Cast,0,[],1.0,https://anchor.fm/cofree-coffee/episodes/Solomon-Bothwell-e1dm5tg,all_ads,6,25c3bc14-5d7e-11eb-8d29-0e2c6cfa9d83,audio,https://anchor.fm/cofree-coffee/episodes/Solomon-Bothwell-e1dm5tg,140.0,140.0,,,,,,,"{'oembed': {'author_name': 'Solomon Bothwell by The Cofree Coffee Cast', 'description': ""In which Solomon Bothwell discusses starting a radio station, building collaborative communities, pair programming, building a functional chat bot, the meaning of utopia, a new residency program, the Curry-Howard isomorphism, and renegotiating your place in society. You can get in touch about Solomon's residency program here."", 'height': 102, 'html': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed%2Fepisodes%2FSolomon-Bothwell-e1dm5tg&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fepisodes%2FSolomon-Bothwell-e1dm5tg&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_episode400%2F21070805%2F21070805-1643570884067-b4b3e3f7e4f79.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'provider_name': 'Anchor FM Inc.', 'provider_url': 'https://anchor.fm', 'thumbnail_height': 400, 'thumbnail_url': 'https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_episode400/21070805/21070805-1643570884067-b4b3e3f7e4f79.jpg', 'thumbnail_width': 400, 'title': 'Solomon Bothwell by The Cofree Coffee Cast', 'type': 'rich', 'version': '1.0', 'width': 400}, 'type': 'anchor.fm'}","{'content': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed%2Fepisodes%2FSolomon-Bothwell-e1dm5tg&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fepisodes%2FSolomon-Bothwell-e1dm5tg&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_episode400%2F21070805%2F21070805-1643570884067-b4b3e3f7e4f79.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'height': 102, 'scrolling': False, 'width': 400}","{'oembed': {'author_name': 'Solomon Bothwell by The Cofree Coffee Cast', 'description': ""In which Solomon Bothwell discusses starting a radio station, building collaborative communities, pair programming, building a functional chat bot, the meaning of utopia, a new residency program, the Curry-Howard isomorphism, and renegotiating your place in society. You can get in touch about Solomon's residency program here."", 'height': 102, 'html': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed%2Fepisodes%2FSolomon-Bothwell-e1dm5tg&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fepisodes%2FSolomon-Bothwell-e1dm5tg&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_episode400%2F21070805%2F21070805-1643570884067-b4b3e3f7e4f79.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'provider_name': 'Anchor FM Inc.', 'provider_url': 'https://anchor.fm', 'thumbnail_height': 400, 'thumbnail_url': 'https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_episode400/21070805/21070805-1643570884067-b4b3e3f7e4f79.jpg', 'thumbnail_width': 400, 'title': 'Solomon Bothwell by The Cofree Coffee Cast', 'type': 'rich', 'version': '1.0', 'width': 400}, 'type': 'anchor.fm'}","{'content': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed%2Fepisodes%2FSolomon-Bothwell-e1dm5tg&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fepisodes%2FSolomon-Bothwell-e1dm5tg&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_episode400%2F21070805%2F21070805-1643570884067-b4b3e3f7e4f79.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'height': 102, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/sggrou', 'scrolling': False, 'width': 400}",,,,,
407.0,[],False,twistier,,[],,text,t2_lpoq6,False,False,False,[],False,False,1643563038,bobkonf.de,https://www.reddit.com/r/haskell/comments/sgdtml/purely_functional_distributed_programming_for/,{},sgdtml,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sgdtml/purely_functional_distributed_programming_for/,False,,,6,1643563049,1,,True,False,False,haskell,t5_2qh36,68787,public,default,Purely functional distributed programming for collaborative applications (talk and slides),0,[],1.0,https://bobkonf.de/2019-summer/leijnse.html,all_ads,6,,,https://bobkonf.de/2019-summer/leijnse.html,,,,,,,,,,,,,,,,,
408.0,[],False,FlamboyantFag,,[],,text,t2_17ksrswh,False,False,False,[],False,False,1643516174,self.haskell,https://www.reddit.com/r/haskell/comments/sg0iyx/alternative_mapping/,{},sg0iyx,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sg0iyx/alternative_mapping/,False,,,6,1643516185,1,I want to be able to map 2 different functions depending on odd and even indexes without using if and else,True,False,False,haskell,t5_2qh36,68781,public,self,Alternative Mapping,0,[],1.0,https://www.reddit.com/r/haskell/comments/sg0iyx/alternative_mapping/,all_ads,6,,,,,,,,,,,,,,,,,,,,
409.0,[],False,teilchen010,,[],,text,t2_a8zynd1e,False,False,False,[],False,False,1643501944,self.haskell,https://www.reddit.com/r/haskell/comments/sfvvoj/a_stack_version_of_how_to_write_a_haskell_program/,{},sfvvoj,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sfvvoj/a_stack_version_of_how_to_write_a_haskell_program/,False,,,6,1643501954,1,"Simply put, how much of [this](https://wiki.haskell.org/How_to_write_a_Haskell_program) can be trusted if we're not using cabal, rather, stack?",True,False,False,haskell,t5_2qh36,68776,public,self,"A stack version of ""How to write a Haskell program""",0,[],1.0,https://www.reddit.com/r/haskell/comments/sfvvoj/a_stack_version_of_how_to_write_a_haskell_program/,all_ads,6,,,,,,,,,,,,,,,,,,,,
410.0,[],False,s-i-n-a,,[],,text,t2_c41dr,False,False,False,[],False,False,1643495384,self.haskell,https://www.reddit.com/r/haskell/comments/sftiuv/i_wrote_a_wordle_solver_in_haskell_as_my_first/,{},sftiuv,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sftiuv/i_wrote_a_wordle_solver_in_haskell_as_my_first/,False,self,"{'enabled': False, 'images': [{'id': 'ZJENVBRWZROg7FXoWNcMEK_08uwv0Vm3X7TmkWGegb8', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/D1-DRJyJNSLtY53O1cTh4w-BXMpl74xS2GqHxP2Bc7s.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b38fc3cc071ab7d155d8147b46ecdac37b8060f1', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/D1-DRJyJNSLtY53O1cTh4w-BXMpl74xS2GqHxP2Bc7s.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=78653a24ab4b94387cbbb5c216f4863443b23633', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/D1-DRJyJNSLtY53O1cTh4w-BXMpl74xS2GqHxP2Bc7s.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=501d40f75a4f5be50c5f093a80f4592981c0a2d3', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/D1-DRJyJNSLtY53O1cTh4w-BXMpl74xS2GqHxP2Bc7s.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=59edecb6d7fa8b8c4b53f3b50e82e004c989fc72', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/D1-DRJyJNSLtY53O1cTh4w-BXMpl74xS2GqHxP2Bc7s.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=8fb02614fcf944d2a0679db54e595d51986194c5', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/D1-DRJyJNSLtY53O1cTh4w-BXMpl74xS2GqHxP2Bc7s.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=afeb791cb082cea8a1372632c04275ee36dd42e6', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/D1-DRJyJNSLtY53O1cTh4w-BXMpl74xS2GqHxP2Bc7s.jpg?auto=webp&amp;s=3384f0bb471845982e5d3ed07c9024bb533b3568', 'width': 1200}, 'variants': {}}]}",6,1643495394,1,"Hi all! I am learning Haskell and this is my first program. I was wondering if anyone could provide some feedback on what I could improve on it. Thank you!!

[https://github.com/siadat/wordle-solver-haskell/](https://github.com/siadat/wordle-solver-haskell/)",True,False,False,haskell,t5_2qh36,68776,public,self,I wrote a Wordle solver in Haskell as my first project,0,[],1.0,https://www.reddit.com/r/haskell/comments/sftiuv/i_wrote_a_wordle_solver_in_haskell_as_my_first/,all_ads,6,,,,,,,,,,,,,,,,,,,,
411.0,[],False,SantiagoOrDunbar,,[],,text,t2_nbzcy,False,False,False,[],False,False,1643483724,self.haskell,https://www.reddit.com/r/haskell/comments/sfpbpf/return_maximum_pair_from_list_of_pairs/,{},sfpbpf,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sfpbpf/return_maximum_pair_from_list_of_pairs/,False,,,6,1643483734,1,"I'm trying to determine the product of each pair from a list of pairs and return the pair that possesses the maximum product. For example: 

`maximumPair [(7,1),(5,4)] = (5,4)`

The code that I have written:

`maximumPair [] = []`

`maximumPair ((x,y):xys) = max (x + y) (maximumPair xys)`

However, this is giving me a slew of errors. What is going wrong?",True,False,False,haskell,t5_2qh36,68776,public,self,Return maximum pair from list of pairs?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sfpbpf/return_maximum_pair_from_list_of_pairs/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
412.0,[],False,teilchen010,,[],,text,t2_a8zynd1e,False,False,False,[],False,False,1643477818,self.haskell,https://www.reddit.com/r/haskell/comments/sfn5d8/roll_your_own_instances/,{},sfn5d8,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sfn5d8/roll_your_own_instances/,False,,,6,1643477828,1,"I as a beginner am so used to simply doing `deriving` and getting an automatic default `Enum`, `Eq`, and `Ord` that I don't really know how to create instances of these by hand. For example, if I have 

    data MyColor = MyRed | MyGreen | MyBlue deriving Show

and I only allow myself `Show`, what would the code for the instances for `Enum`, `Eq`, and `Ord` look like? Especially the superclass constraint situation, i.e., how do they ""nest?"" So how does Haskell automatically figure out these instances when using the default `deriving` trick?",True,False,False,haskell,t5_2qh36,68777,public,self,Roll your own instances,0,[],1.0,https://www.reddit.com/r/haskell/comments/sfn5d8/roll_your_own_instances/,all_ads,6,,,,,,,,,,,,,,,,,,,,
413.0,[],False,samtoth,,[],,text,t2_7k1caz2t,False,False,False,[],False,False,1643472976,self.haskell,https://www.reddit.com/r/haskell/comments/sfldp2/typenat_constraint_issues/,{},sfldp2,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sfldp2/typenat_constraint_issues/,False,,,6,1643472987,1,"Hi, I am trying to figure out how to get the following excerpt to compile. Haskell complains that it can't deduce that (1 &lt;= n + 1). It seems that given the constraint (1 &lt;= n), it should be able to deduce this. Obviously you can give that (1 &lt;= n +1) but then it complains about (1 &lt;= (n + 1) + 1). Is there a way of writing this as an inductive proof or something similar? My guess that there would be some way of using coercions to achieve this but am struggling to find any resources that are helpful. Thanks in advance.

&amp;#x200B;

    {-# LANGUAGE DataKinds, GADTs, TypeFamilies, TypeOperators,  StandaloneKindSignatures, UndecidableInstances, LambdaCase #-}
    
    import GHC.TypeLits
    
    fooInt :: (1 &lt;= n) =&gt; Foo n -&gt; Int
    fooInt = \case
      Foo1 -&gt; 1
      Foo2 f1 f2 -&gt; fooInt f1 + fooInt f2
      Foo3 b f -&gt; barInt b + fooInt f
    
    
    barInt :: (1 &lt;= n) =&gt; Bar n -&gt; Int
    barInt = \case
      Bar1 -&gt; 1
      Bar2 b1 b2 -&gt; barInt b1 + barInt b2
    
    type FooBar :: * -&gt; *
    type family FooBar a where
      FooBar (Foo n) = Bar (n + 1)
    
    data Foo :: Nat -&gt; * where
      Foo1 :: Foo n
      Foo2 :: Foo n -&gt; Foo n -&gt; Foo n
      Foo3 :: (a ~ Foo n) =&gt; FooBar a -&gt; a -&gt; Foo n
    
    data Bar :: Nat -&gt; * where
      Bar1 :: Bar n
      Bar2 :: Bar n -&gt; Bar n -&gt; Bar n
    
    lift :: Foo n -&gt; FooBar (Foo n)
    lift = \case
      Foo1 -&gt; Bar1
      Foo2 f1 f2 -&gt; Bar2 (lift f1) (lift f2)
      Foo3 b f -&gt; Bar2 b (lift f)

&amp;#x200B;

    * Could not deduce: (1 &lt;=? (n + 1)) ~ 'True
            arising from a use of `barInt'
          from the context: 1 &lt;= n
            bound by the type signature for:
                       fooInt :: forall (n :: Nat). (1 &lt;= n) =&gt; Foo n -&gt; Int
            at Main.hs:8:1-34
        * In the first argument of `(+)', namely `barInt b'
          In the expression: barInt b + fooInt f
          In a case alternative: Foo3 b f -&gt; barInt b + fooInt f
        * Relevant bindings include
            fooInt :: Foo n -&gt; Int (bound at Main.hs:9:1)
       |
    12 |   Foo3 b f -&gt; barInt b + fooInt f
       |",True,False,False,haskell,t5_2qh36,68775,public,self,TypeNat constraint issues,0,[],1.0,https://www.reddit.com/r/haskell/comments/sfldp2/typenat_constraint_issues/,all_ads,6,,,,,,,,,,,,,,,,,,,,
414.0,[],False,JackSchpeck,,[],,text,t2_qualg,False,False,False,[],False,False,1643457779,self.haskell,https://www.reddit.com/r/haskell/comments/sfgsev/what_happened_with_githubs_semantic_project/,{},sfgsev,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sfgsev/what_happened_with_githubs_semantic_project/,False,self,"{'enabled': False, 'images': [{'id': 'EWxd8jNuOfY1Si0AJ2VL3NRmISLWuNAFYZQrxw0clRY', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/oXosIaz16NcdamKugnWXtvGIVwlctP7dM69qbjqulMM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e0faf6e553b0270f15885dd8dfcf5a1a02d8a11e', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/oXosIaz16NcdamKugnWXtvGIVwlctP7dM69qbjqulMM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=13d5819a7d6c27c8a8788d96f6c75107ce1dacb3', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/oXosIaz16NcdamKugnWXtvGIVwlctP7dM69qbjqulMM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=55ccd03336703bb4ba6b26d0e16531b28ad37fe2', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/oXosIaz16NcdamKugnWXtvGIVwlctP7dM69qbjqulMM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=35fb09ddf0d95507d32ae9b3a5ca229a3c01f8c1', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/oXosIaz16NcdamKugnWXtvGIVwlctP7dM69qbjqulMM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=61844c357bc173e89d538c6f3f1794f61dde95dd', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/oXosIaz16NcdamKugnWXtvGIVwlctP7dM69qbjqulMM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a9425af70db70b59346b7c8f75cb34a47d221f0a', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/oXosIaz16NcdamKugnWXtvGIVwlctP7dM69qbjqulMM.jpg?auto=webp&amp;s=c60767e894cbcd2183400c44c86c9680f42937c2', 'width': 1200}, 'variants': {}}]}",6,1643457790,1,"I'm just curious. It seems there hasn't been much activity in [https://github.com/github/semantic](https://github.com/github/semantic)   
Is GitHub still using semantic it to power some code navigation features?  
Has it been abandoned or is there some successor project that has taken its place?  
Is there any writeup / lessons learned about this project?",True,False,False,haskell,t5_2qh36,68773,public,self,What happened with GitHub's semantic project?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sfgsev/what_happened_with_githubs_semantic_project/,all_ads,6,,,,,,,,,,,,,,,,,,,,
415.0,[],False,oskargreda,,[],,text,t2_fi2s2co8,False,False,False,[],False,False,1643456620,self.haskell,https://www.reddit.com/r/haskell/comments/sfghnz/mlabs_is_hiring_haskell_developers_and_delivery/,{},sfghnz,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sfghnz/mlabs_is_hiring_haskell_developers_and_delivery/,False,,,6,1643456631,1," Description

We are one of the leading Haskell consultancies in the fintech, blockchain and AI space, with a passion for Haskell and open source software. We are looking for a remote Haskeller to join our team.

If you are excited about Haskell, about robust and clean software and are up for a new challenge, you’ve come to the right place!

We have Haskell developer roles from Junior to Senior, as well as roles in Delivery Management.

**As a Haskell Developer your role may include:**  


\- Building and testing smart contracts, traditional applications

\- Helping to define best practices with new application architectures

\- Building tools and libraries to support application development

\- Working in emerging technologies

\- For Senior and Intermediates: Systems Design, Formal Verification, Security and Performance analysis.

**As a Delivery Manager your role may include:**

\- Research and design of financial protocols

\- Providing continuity of care to customers across product lifecycles

\- Escalating issues that arise beyond the scope of a single project/department/client scope

\- Steering products toward MVP, delivery targets, audit-readiness and getting required resources in place to do so.

#### Requirements

* Strong Haskell skills
* Strong software engineering and architecture skills
* Strong problem solving and analytical skills
* Basic knowledge of security, concurrency, backend systems, system scaling and databases
* Version control (git)
* Strong verbal skills in English
* Experience with blockchain, smart contracts, compilers, nix and/or purescript is a bonus

#### Benefits

* Focus on learning and individual growth in Haskell and Computer Science
* Work with other great Haskellers, open source contributors and computer scientists
* Interesting and challenging projects
* Talk with anyone in the organization, regardless of team
* Remote work
* Flexible working hours
* 6 weeks of paid vacation
* Competitive salary

We have a variety of projects to work on at any time, ranging from payment stacks to smart contracts and blockchain to open source libraries, DSLs and compilers.

If you like Haskell and challenging projects, MLabs is the place for you, so please apply now!

If you are interested in one of our internships please send your CV to [internships@mlabs.city](mailto:internships@mlabs.city) 

&amp;#x200B;

We look forward to hearing from you!",True,False,False,haskell,t5_2qh36,68773,public,self,"MLabs is Hiring Haskell Developers and Delivery Managers 100% Remote, Worldwide, Internships places also available!",0,[],1.0,https://www.reddit.com/r/haskell/comments/sfghnz/mlabs_is_hiring_haskell_developers_and_delivery/,all_ads,6,,,,,,,,,,,,,,,,,,,,
416.0,[],False,friedbrice,,[],,text,t2_4vn89,False,False,True,[],False,False,1643413711,danielbrice.net,https://www.reddit.com/r/haskell/comments/sf4cg0/haskell_gof_abstract_factory/,{},sf4cg0,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sf4cg0/haskell_gof_abstract_factory/,False,link,"{'enabled': False, 'images': [{'id': '36FaMPPl7xtUL1W5mYPW1xo3EZxiRjzlS39uQhSO7dE', 'resolutions': [{'height': 63, 'url': 'https://external-preview.redd.it/7og6leElz5rqlJrQbzm8J9Hk1IMWG1oVbrZedMDp1yI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=66aa4e906e250f32bd5f4c60e64b4e09d0af7445', 'width': 108}, {'height': 126, 'url': 'https://external-preview.redd.it/7og6leElz5rqlJrQbzm8J9Hk1IMWG1oVbrZedMDp1yI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=15f7756e79b0d464beadc03347335036805d4b01', 'width': 216}, {'height': 188, 'url': 'https://external-preview.redd.it/7og6leElz5rqlJrQbzm8J9Hk1IMWG1oVbrZedMDp1yI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1333a05dfadc3d571bf1336862376d58482b47c3', 'width': 320}, {'height': 376, 'url': 'https://external-preview.redd.it/7og6leElz5rqlJrQbzm8J9Hk1IMWG1oVbrZedMDp1yI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=424203a67dfee9ddb5dab1df4885b3ead58de67b', 'width': 640}, {'height': 564, 'url': 'https://external-preview.redd.it/7og6leElz5rqlJrQbzm8J9Hk1IMWG1oVbrZedMDp1yI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=90baa9d9838812bd08df9eb89f8f8da2bbedd35e', 'width': 960}, {'height': 634, 'url': 'https://external-preview.redd.it/7og6leElz5rqlJrQbzm8J9Hk1IMWG1oVbrZedMDp1yI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d0af0278ff4990955557b34d1d69cf1405f06674', 'width': 1080}], 'source': {'height': 856, 'url': 'https://external-preview.redd.it/7og6leElz5rqlJrQbzm8J9Hk1IMWG1oVbrZedMDp1yI.jpg?auto=webp&amp;s=8373088eed1ffb84a4351875346d03883e53f5bd', 'width': 1456}, 'variants': {}}]}",6,1643413721,1,,True,False,False,haskell,t5_2qh36,68767,public,default,Haskell GoF - Abstract Factory,0,[],1.0,https://www.danielbrice.net/blog/abstract-factory/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://www.danielbrice.net/blog/abstract-factory/,82.0,140.0,,reddit,,,,,,,,,,,,,
417.0,[],False,visortelle,,[],,text,t2_15hg9d,False,False,False,[],False,False,1643408447,self.haskell,https://www.reddit.com/r/haskell/comments/sf2e1f/does_anybody_have_in_mind_a_good_way_how_to_show/,{},sf2e1f,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sf2e1f/does_anybody_have_in_mind_a_good_way_how_to_show/,False,,,6,1643408458,1,"Probably something other than this [https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/haskell.html](https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/haskell.html)

Maybe anyone has real experience of migrating the project from JVM to Haskell or something similar?

The target audience is a manager, former software engineer 45+ who doesn't touch a code for 5+ years.

Or another average type of person who makes decisions in an average enterprise in your mind.

Thank you.",True,False,False,haskell,t5_2qh36,68766,public,self,Does anybody have in mind a good way how to show people not familiar with Haskell that it's really fast?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sf2e1f/does_anybody_have_in_mind_a_good_way_how_to_show/,all_ads,6,,,,,,,,,,,,,,,,,,,,
418.0,[],False,NR3-IT-Lda,,[],,text,t2_3wd4ghmt,False,False,False,[],False,False,1643387983,self.haskell,https://www.reddit.com/r/haskell/comments/seuu9f/looking_for_haskell_developers/,{},seuu9f,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/seuu9f/looking_for_haskell_developers/,False,,,6,1643387994,1,[removed],True,False,False,haskell,t5_2qh36,68761,public,self,Looking for Haskell Developers!,0,[],1.0,https://www.reddit.com/r/haskell/comments/seuu9f/looking_for_haskell_developers/,all_ads,6,,,,,,,moderator,,,,,,,,,,,,,
419.0,[],False,jamesjean2001,,[],,text,t2_46us7vrv,False,False,False,[],False,False,1643340811,self.haskell,https://www.reddit.com/r/haskell/comments/seh2oy/what_does_this_syntax_mean/,{},seh2oy,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/seh2oy/what_does_this_syntax_mean/,False,,,6,1643340821,1,getOutCall :: (OOProgram r) =&gt; Name -&gt; GeneralState (Statement r),True,False,False,haskell,t5_2qh36,68756,public,self,What does this syntax mean?,0,[],1.0,https://www.reddit.com/r/haskell/comments/seh2oy/what_does_this_syntax_mean/,all_ads,6,,,,,,,,,,,,,,,,,,,,
420.0,[],False,jamesjean2001,,[],,text,t2_46us7vrv,False,False,False,[],False,False,1643330582,self.haskell,https://www.reddit.com/r/haskell/comments/sedlgs/what_does_this_syntax_mean/,{},sedlgs,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sedlgs/what_does_this_syntax_mean/,False,,,6,1643330593,1,"RenderThis a =&gt; \[(Component, String)\]",True,False,False,haskell,t5_2qh36,68755,public,self,What does this syntax mean?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sedlgs/what_does_this_syntax_mean/,all_ads,6,,,,,,,,,,,,,,,,,,,,
421.0,[],False,Comprehensive-Ad3963,,[],,text,t2_5zg4jvtk,False,False,False,[],False,False,1643321059,self.haskell,https://www.reddit.com/r/haskell/comments/sea0tn/how_do_i_load_a_variable_with_values_from_a_text/,{},sea0tn,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sea0tn/how_do_i_load_a_variable_with_values_from_a_text/,False,,,6,1643321069,1,"Suppose I have a type ""Person"" with a name and an age. I have a txt file with people, and each line looks like this:

Brian 30

Carol 31

...

I want to load each person from the txt file into Haskell for processing.

In C++, I can do something like:

`Person loadPerson(string personString)`

`{`

`stringstream ss;`

`ss &lt;&lt; personString;`

`string personName;`

`ss &gt;&gt; personName;`

`int personAge;`

`ss &gt;&gt; personAge;`

`return Person(personName,personAge);`

`}`

What about in Haskell?",True,False,False,haskell,t5_2qh36,68752,public,self,How do I load a variable with values from a text file?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sea0tn/how_do_i_load_a_variable_with_values_from_a_text/,all_ads,6,ebb4b74c-16d0-11eb-9ff6-0e5aacb57bb7,homework,,,,,,,,,,,,,,,,,,
422.0,[],False,sridfr,,[],,text,t2_f1wkk8ou,False,False,False,[],False,False,1643297835,amelia.how,https://www.reddit.com/r/haskell/comments/se15bg/dependent_types_in_haskell_sort_of/,{},se15bg,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/se15bg/dependent_types_in_haskell_sort_of/,False,,,6,1643297846,1,,False,False,False,haskell,t5_2qh36,68749,public,default,Dependent types in Haskell - Sort of,0,[],1.0,https://amelia.how/posts/dependent-types-in-haskell-sort-of.html,all_ads,6,,,https://amelia.how/posts/dependent-types-in-haskell-sort-of.html,,,,,,,,,,,,,,,,,
423.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1643291585,haskellweekly.news,https://www.reddit.com/r/haskell/comments/sdyw4e/issue_300_haskell_weekly_newsletter/,{},sdyw4e,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sdyw4e/issue_300_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1643291595,1,,True,False,False,haskell,t5_2qh36,68745,public,default,Issue 300 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/300.html,all_ads,6,,,https://haskellweekly.news/issue/300.html,140.0,140.0,,,,,,,,,,,,,,,
424.0,[],False,vulnwatcher,,[],,text,t2_5i4j9oct,False,False,False,[],False,False,1643273113,haskell.careers,https://www.reddit.com/r/haskell/comments/sdtwws/haskell_job_site_adds_haskell_news_section/,{},sdtwws,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sdtwws/haskell_job_site_adds_haskell_news_section/,False,,,6,1643273124,1,,True,False,False,haskell,t5_2qh36,68745,public,default,Haskell Job site adds Haskell news section,0,[],1.0,https://haskell.careers/news,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://haskell.careers/news,,,,,,,,,,,,,,,,,
425.0,[],False,audion00ba,,[],,text,t2_qzgkn,False,False,False,[],False,False,1643247330,self.haskell,https://www.reddit.com/r/haskell/comments/sdmau2/iec_60870_httpsgithubcommzautomationlib60870/,{},sdmau2,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sdmau2/iec_60870_httpsgithubcommzautomationlib60870/,False,,,6,1643247340,1,"It would be useful if this C library were to be ported to Haskell or perhaps someone has already implemented a native version of the IEC 60870 family of protocols. 

Some years ago there was an industrial automation company that might have implemented code to do that.",True,False,False,haskell,t5_2qh36,68740,public,self,IEC 60870 - https://github.com/mz-automation/lib60870,0,[],1.0,https://www.reddit.com/r/haskell/comments/sdmau2/iec_60870_httpsgithubcommzautomationlib60870/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
426.0,[],False,Comprehensive-Ad3963,,[],,text,t2_5zg4jvtk,False,False,False,[],False,False,1643238981,self.haskell,https://www.reddit.com/r/haskell/comments/sdjeay/data_constructor_not_in_scope_despite_me_having/,{},sdjeay,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sdjeay/data_constructor_not_in_scope_despite_me_having/,False,,,6,1643238991,1,"I'm new to Haskell and have been working through an old problem set.

I have a Log.hs file that contains these data types:

 

data MessageType = Info  
                 | Warning  
                 | Error Int  
 deriving (Show, Eq)  
type TimeStamp = Int  
data LogMessage = LogMessage MessageType TimeStamp String  
                | Unknown String  
 deriving (Show, Eq)  
data MessageTree = Leaf  
                 | Node MessageTree LogMessage MessageTree  
 deriving (Show, Eq)

I have another file, LogAnalysis.hs, that imports LogMessage and MessageType from Log.hs

module LogAnalysis where  
 import Log (LogMessage, MessageType(Error))  
 parse :: (String) -&gt; LogMessage  
    parse str = LogMessage (Error 10) 4500 ""hello""

Haskell complains that the LogMessage data constructor my code is trying to use is not in scope:

LogAnalysis.hs:4:17: error:

\* Data constructor not in scope:

LogMessage :: MessageType -&gt; t0 -&gt; \[Char\] -&gt; LogMessage

\* Perhaps you want to add \`LogMessage' to the import list

in the import of \`Log' (LogAnalysis.hs:2:5-47).

 |

4 |     parse str = LogMessage (Error 10) 4500 ""hello""",True,False,False,haskell,t5_2qh36,68741,public,self,"Data constructor ""not in scope"" despite me having imported it",0,[],1.0,https://www.reddit.com/r/haskell/comments/sdjeay/data_constructor_not_in_scope_despite_me_having/,all_ads,6,,,,,,,,,,,,,,,,,,,,
427.0,[],False,kluge0,,[],,text,t2_4j9o1k5p,False,False,False,[],False,False,1643219833,self.haskell,https://www.reddit.com/r/haskell/comments/sdbzyc/looking_for_a_paid_tutor_for_intro_to_haskell/,{},sdbzyc,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sdbzyc/looking_for_a_paid_tutor_for_intro_to_haskell/,False,,,6,1643219843,1,I am a beginner to Haskell and am taking an Intro to Haskell course. I would like some help understanding concepts and filling knowledge gaps. Will compensate the tutor. Please send me a private message if interested.,True,False,False,haskell,t5_2qh36,68738,public,self,Looking for a paid tutor for Intro to Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/sdbzyc/looking_for_a_paid_tutor_for_intro_to_haskell/,all_ads,6,ebb4b74c-16d0-11eb-9ff6-0e5aacb57bb7,homework,,,,,,,,,,,,,,,,,,
428.0,[],False,Comprehensive-Ad3963,,[],,text,t2_5zg4jvtk,False,False,False,[],False,False,1643216595,self.haskell,https://www.reddit.com/r/haskell/comments/sdaq4u/gpubased_deep_learning_in_haskell/,{},sdaq4u,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sdaq4u/gpubased_deep_learning_in_haskell/,False,,,6,1643216606,1,"I've been picking up Haskell these past few days, and I am wondering if there is a way to create and train a neural network in Haskell. After all, a neural network can be mathematically described as a function that, given a series of inputs, will return a series of outputs.

Any ideas on how I might go about building and training a neural network in Haskell?",True,False,False,haskell,t5_2qh36,68737,public,self,GPU-based deep learning in Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/sdaq4u/gpubased_deep_learning_in_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
429.0,[],False,Faucelme,,[],,text,t2_6ofev,False,False,False,[],False,False,1643205145,oleg.fi,https://www.reddit.com/r/haskell/comments/sd6gel/folding_the_unfoldable/,{},sd6gel,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sd6gel/folding_the_unfoldable/,False,,,6,1643205155,1,,False,False,False,haskell,t5_2qh36,68732,public,default,Folding the unfoldable,0,[],1.0,https://oleg.fi/gists/posts/2022-01-25-folding-unfoldable.html,all_ads,6,,,https://oleg.fi/gists/posts/2022-01-25-folding-unfoldable.html,,,,,,,,,,,,,,,,,
430.0,[],False,fabiomolinar,,[],,text,t2_1f5w5eug,False,False,False,[],False,False,1643175146,self.haskell,https://www.reddit.com/r/haskell/comments/scyfih/simulation_of_dynamic_systems/,{},scyfih,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/scyfih/simulation_of_dynamic_systems/,False,,,6,1643175157,1,"Are there any Haskell libraries out there focused on simulating dynamic systems? E.g., simulation of an electrical circuit, or a wind turbine, social dynamics, etc? 

Something akin to MATLAB's Simulink (with or without a UI).",True,False,False,haskell,t5_2qh36,68722,public,self,Simulation of dynamic systems,0,[],1.0,https://www.reddit.com/r/haskell/comments/scyfih/simulation_of_dynamic_systems/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
431.0,[],False,upzylon,,[],,text,t2_60icba3q,False,False,False,[],False,False,1643158532,self.haskell,https://www.reddit.com/r/haskell/comments/scsya3/writing_pointfree_code_sure_requires_writing_a/,{},scsya3,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/scsya3/writing_pointfree_code_sure_requires_writing_a/,False,,,6,1643158543,1,,True,False,False,haskell,t5_2qh36,68720,public,self,Writing point-free code sure requires writing a lot more points than the name suggests… r/HaskellShowerthoughts,0,[],1.0,https://www.reddit.com/r/haskell/comments/scsya3/writing_pointfree_code_sure_requires_writing_a/,all_ads,6,,,,,,,,,,,,,,,,,,,,
432.0,[],False,SrPeixinho,,[],,text,t2_7u4u3,False,False,False,[],False,False,1643152465,stackoverflow.com,https://www.reddit.com/r/haskell/comments/scqquu/why_is_quacksort_twice_as_fast_as_datalists_sort/,{},scqquu,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/scqquu/why_is_quacksort_twice_as_fast_as_datalists_sort/,False,link,"{'enabled': False, 'images': [{'id': 'nfayPavSUB5ngYv6-19UHNBThsXfcLIDQl4HkEe3Cv0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b1c8a90e5690a7186afdb269ad05279551994d09', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=533bd055cdae7998d1b8f9cd9d7dedabc1715bda', 'width': 216}], 'source': {'height': 316, 'url': 'https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?auto=webp&amp;s=8cd5e918e2bde6ca72d4445d6fc007f203689799', 'width': 316}, 'variants': {}}]}",6,1643152475,1,,True,False,False,haskell,t5_2qh36,68719,public,default,Why is QuackSort twice as fast as Data.List's sort for random lists?,0,[],1.0,https://stackoverflow.com/questions/70856865/why-quacksort-is-2x-faster-than-data-lists-sort-for-random-lists,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://stackoverflow.com/questions/70856865/why-quacksort-is-2x-faster-than-data-lists-sort-for-random-lists,140.0,140.0,,reddit,,,,,,,,,,,,,
433.0,[],False,GregTheAlmighty,,[],,text,t2_159g2b,False,False,False,[],False,False,1643124811,typeville.io,https://www.reddit.com/r/haskell/comments/scgdbd/missing_haskell_offline_conferences_check_out/,{},scgdbd,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/scgdbd/missing_haskell_offline_conferences_check_out/,False,link,"{'enabled': False, 'images': [{'id': 'aj2vAmHiByZlGN1GHC-y1PVT2Ne_TAuh2ya1Pp3C8fI', 'resolutions': [{'height': 60, 'url': 'https://external-preview.redd.it/tn7hiykxhqi3N19DEhx-T1SoquvtnCxd2r3ZrMPAOAA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=afaed9d500222c30c934963cc415bfc7682254f9', 'width': 108}, {'height': 121, 'url': 'https://external-preview.redd.it/tn7hiykxhqi3N19DEhx-T1SoquvtnCxd2r3ZrMPAOAA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ba6bf0ddd945f56c0586a9fd38b2992748608198', 'width': 216}, {'height': 180, 'url': 'https://external-preview.redd.it/tn7hiykxhqi3N19DEhx-T1SoquvtnCxd2r3ZrMPAOAA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f0e60d94c2aa5af27348ae5ae61c29056c8657a2', 'width': 320}, {'height': 360, 'url': 'https://external-preview.redd.it/tn7hiykxhqi3N19DEhx-T1SoquvtnCxd2r3ZrMPAOAA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4e79d5b2cd2ea992e08335bdf2f2f0210ecd9cc3', 'width': 640}, {'height': 540, 'url': 'https://external-preview.redd.it/tn7hiykxhqi3N19DEhx-T1SoquvtnCxd2r3ZrMPAOAA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2631f955e8fe43c3e975ecaedb9c127247a56587', 'width': 960}, {'height': 607, 'url': 'https://external-preview.redd.it/tn7hiykxhqi3N19DEhx-T1SoquvtnCxd2r3ZrMPAOAA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=38f822ac075b31b5eb3e1b857535675c64e80f3e', 'width': 1080}], 'source': {'height': 900, 'url': 'https://external-preview.redd.it/tn7hiykxhqi3N19DEhx-T1SoquvtnCxd2r3ZrMPAOAA.jpg?auto=webp&amp;s=daafd64ec262b8ae16c5d65b664b7a544898e395', 'width': 1600}, 'variants': {}}]}",6,1643124822,1,,True,False,False,haskell,t5_2qh36,68715,public,default,Missing Haskell offline conferences? Check out TypeVille!,0,[],1.0,https://www.typeville.io/,all_ads,6,,,https://www.typeville.io/,78.0,140.0,,reddit,,,,,,,,,,,,,
434.0,[],False,etorreborre,,[],,text,t2_13ljg,False,False,False,[],False,False,1643099090,self.haskell,https://www.reddit.com/r/haskell/comments/sc8wi3/job_software_engineer_at_symbiont_still/,{},sc8wi3,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sc8wi3/job_software_engineer_at_symbiont_still/,False,,,6,1643099101,1,"Hi,

3 months ago I wrote a post about an opening for a Haskell software engineer in my team. This position is still opened and maybe someone over wants a new start for 2022!  
We are looking for someone who is already comfortable with Haskell, the main language used in my team. (we also maintain a small Go application and some system tests are written using Python).

Please have a look at the job description for more details about the company and the technology: [https://boards.greenhouse.io/symbiont/jobs/4134418004](https://boards.greenhouse.io/symbiont/jobs/4134418004). You can apply via the Greenhouse website and send me an email directly if you are interested ([eric.torreborre@symbiont.io](mailto:eric.torreborre@symbiont.io)).

This position is opened for remote work if you can align to a US or Europe timezone (the team is currently distributed across EU and Africa, it would be nice to have someone in a US timezone).

I happy to answer questions about our business or the particular flavour of Haskell that we are using on the job :-). Here is a small FAQ from the last post:

\&gt; ""using blockchain technology"" 

That was not a question :-) but this needs some precision. We are using a [BFT algorithm](https://en.wikipedia.org/wiki/Byzantine_fault) on a permissioned network. So what are doing is more akin to a decentralized database with its own application language rather than a cryptocurrency system.

\&gt; Can I apply from India?

Unfortunately this is too far in terms of timezones.

\&gt; What is your team doing exactly?

We are maintaining and evolving the heart of the application logic for the platform, which is the service processing transactions after they have made consensus between all the network nodes. Those transactions are decrypted, verified and some of them are executed using a Virtual Machine supporting our contract language. This updates a local database so that all nodes sharing keys to the same ""channel"" of communication can see consistent information. 

This might not seem like much but there are tons of challenges in making this work reliably, fast and with good support for evolution.

Technically speaking we use a mono-repo with a build system based on Bazel (with some great support from Tweag) and we try to stay on top of GHC's releases.

\&gt; What's the salary / contract rate?

This will depend on your seniority and experience according to salary bands (not really in my hands actually :-))

\&gt; What are the other teams doing?

Plenty of cool stuff! In particular we have a smart contract language, SymPL, which looks like a typechecked version of Python and supports an innovative type system. We also do some great work on distributed systems and how we test our BFT implementation in a deterministic fashion.

Thanks,

Eric",True,False,False,haskell,t5_2qh36,68711,public,self,[Job] Software engineer at Symbiont (still!),0,[],1.0,https://www.reddit.com/r/haskell/comments/sc8wi3/job_software_engineer_at_symbiont_still/,all_ads,6,,,,,,,,,,,,,,,,,,,,
435.0,[],False,_query,,[],,text,t2_fjd8s,False,False,False,[],False,False,1643096386,github.com,https://www.reddit.com/r/haskell/comments/sc88nt/ihp_v0180_has_been_released/,{},sc88nt,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sc88nt/ihp_v0180_has_been_released/,False,link,"{'enabled': False, 'images': [{'id': 'Lexf79PvIDOaGfTam1oIjLzBsnSEiXxmNzZKH1umgv0', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/jgHMlBYmyuTCAWTd6HSLgKyjUGMyWO7MjOmNdC_UnpQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b5ac8a264260fd73a4702bf76468e7b639dfc596', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/jgHMlBYmyuTCAWTd6HSLgKyjUGMyWO7MjOmNdC_UnpQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2cc5b2bcbe6206bf81600cee379ee00af9879acf', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/jgHMlBYmyuTCAWTd6HSLgKyjUGMyWO7MjOmNdC_UnpQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1bab3ce0478eccb946c1ab938ae63d08a1621e1b', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/jgHMlBYmyuTCAWTd6HSLgKyjUGMyWO7MjOmNdC_UnpQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=2b54fcd94d74e8fa5f776eed7d4c2b578d307169', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/jgHMlBYmyuTCAWTd6HSLgKyjUGMyWO7MjOmNdC_UnpQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ae5543c5811eb9935e657117fdb63b5ee26c5153', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/jgHMlBYmyuTCAWTd6HSLgKyjUGMyWO7MjOmNdC_UnpQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=dce5f5100bc63d143295ce7b2facff3a932a8ccd', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/jgHMlBYmyuTCAWTd6HSLgKyjUGMyWO7MjOmNdC_UnpQ.jpg?auto=webp&amp;s=ea4735f88cc2da9c6caec7dc5f9b9ed8d09d01ea', 'width': 1200}, 'variants': {}}]}",6,1643096396,1,,True,False,False,haskell,t5_2qh36,68711,public,default,IHP v0.18.0 has been released 🎉,0,[],1.0,https://github.com/digitallyinduced/ihp/releases/tag/v0.18.0,all_ads,6,,,https://github.com/digitallyinduced/ihp/releases/tag/v0.18.0,70.0,140.0,,,,,,,,,,,,,,,
436.0,[],False,BDSMm4asubthrowaway,,[],,text,t2_d85s2vjf,False,False,False,[],False,False,1643081709,self.haskell,https://www.reddit.com/r/haskell/comments/sc41tj/learn_haskell_by_doing/,{},sc41tj,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sc41tj/learn_haskell_by_doing/,False,,,6,1643081720,1,Are there any decent books which introduce you to haskell and its core concepts by building out an actual application?,True,False,False,haskell,t5_2qh36,68707,public,self,Learn haskell by doing?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sc41tj/learn_haskell_by_doing/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
437.0,[],False,Infinisil,,[],,text,t2_zmasn,False,False,False,[],False,False,1643065455,self.haskell,https://www.reddit.com/r/haskell/comments/sbz94r/webauthn_server_library_for_public_keybased/,{},sbz94r,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sbz94r/webauthn_server_library_for_public_keybased/,False,self,"{'enabled': False, 'images': [{'id': '0Evd6UWXs4A11yT0I3bSUdOWKNqr9Az0qWvc-WhxMes', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a559bb4d890ff015d6259a06083f8cea81389ab2', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b67964ddc7f6a4e974672b382f7c786c8d3526fe', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=61e37c5f638b0d156c5fdcbc1a5335a3bdbb8729', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=298dca15f47ae031413bbd031ffd301b05793915', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=81eb47deb6039cc11cc169b056aee661e37b1789', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3b60b078d6771ef7f153290885f77a8f50774cdb', 'width': 1080}], 'source': {'height': 4096, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?auto=webp&amp;s=6803e63008eaa75aac55167a9225dd6c2f0316a7', 'width': 4096}, 'variants': {}}]}",6,1643065465,1,"[Tweag](https://www.tweag.io/) and [Mercury](https://mercury.com/) is happy to announce a server-side library for the the [WebAuthn](https://www.w3.org/TR/webauthn-2/) standard (part of the [FIDO2](https://fidoalliance.org/fido2/) project), available as [webauthn](https://hackage.haskell.org/package/webauthn) on Hackage! If you have a web server written in Haskell that allows users to create and log into accounts, this library might interest you, and we'd love to have feedback as we refine the interface of the library. The source of the library is available [here](https://github.com/tweag/webauthn), feel free to open issues, PRs or leave a comment here!

The WebAuthn standard allows users to easily and securely authenticate to websites with public key credentials, generated and stored on secure authenticators like Yubikeys, TouchID, TPM and more. This can either be used to secure accounts with second-factor authentication, or as a first factor, allowing users to log in without a password or even a username. See [here](https://webauthn.guide/) for a WebAuthn guide and demo. Here's [another](https://fido2-net-lib.passwordless.dev/) and [another](https://webauthn.me/) demo.

Originally forked from a [hackathon project](https://github.com/arianvp/haskell-fido2) by [Arian](https://github.com/arianvp) and taking inspiration from an [alternative implementation](https://github.com/fumieval/webauthn) by [Fumiaki](https://github.com/fumieval) (also known as [webauthn-0](https://hackage.haskell.org/package/webauthn-0) on Hackage), this library has been developed by a team at [Tweag](https://www.tweag.io/), as contracted by [Mercury](https://mercury.com/), whose intention is to sponsor a good open-source library for the Haskell ecosystem, many thanks!

While the general design of the library isn't expected to change very much, it should currently still be considered an alpha version, as Mercury and ideally others try out the library and give feedback. As such, if you have a website with user accounts running on Haskell, we'd love for you to try it out and tell us what could be improved! To get started, here are our recommendations:

- Read the [introduction to the WebAuthn standard](https://www.w3.org/TR/webauthn-2/#sctn-intro) to get a sense of what the standard does
- Read the documentation of the main [Crypto.WebAuthn](https://hackage.haskell.org/package/webauthn-0.1.1.0/docs/Crypto-WebAuthn.html) module, which gives an overview of the library
- Check out and run the code of our [demo server](https://github.com/tweag/webauthn/tree/master/server) implementation, which shows an example of how the library might be used
- Use [this chrome extension](https://github.com/google/virtual-authenticators-tab) to simulate authenticators if you don't have one yourself",True,False,False,haskell,t5_2qh36,68705,public,self,WebAuthn server library for public key-based authentication,0,[],1.0,https://www.reddit.com/r/haskell/comments/sbz94r/webauthn_server_library_for_public_keybased/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
438.0,[],False,ambroslins,,[],,text,t2_5pvf0y0k,False,False,False,[],False,False,1643062549,self.haskell,https://www.reddit.com/r/haskell/comments/sby5hi/how_to_make_most_illegal_states_unrepresentable/,{},sby5hi,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sby5hi/how_to_make_most_illegal_states_unrepresentable/,False,,,6,1643062559,1,[removed],True,False,False,haskell,t5_2qh36,68705,public,self,How to make most illegal states unrepresentable?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sby5hi/how_to_make_most_illegal_states_unrepresentable/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,reddit,,,,,,,,,,,,,
439.0,[],False,Duarte_ML,,[],,text,t2_2dyg60tn,False,False,False,[],False,False,1643058488,self.haskell,https://www.reddit.com/r/haskell/comments/sbwj6w/is_it_possible_to_convert_an_io_int_into_an_int/,{},sbwj6w,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sbwj6w/is_it_possible_to_convert_an_io_int_into_an_int/,False,,,6,1643058498,1,"I have a function that uses ranomRIO to generate a random number from a list, Int -&gt; IO Int. The output is IO Int. I need the Int from the output to apply to other functions. Is it possible. If not is there any other way to generate a ramndom number without IO (). Would appreciate some help with this. Hope I explained the problem properly.",True,False,False,haskell,t5_2qh36,68707,public,self,Is it possible to convert an IO Int into an Int ??,0,[],1.0,https://www.reddit.com/r/haskell/comments/sbwj6w/is_it_possible_to_convert_an_io_int_into_an_int/,all_ads,6,,,,,,,,,,,,,,,,,,,,
440.0,[],False,myShoggoth,,[],,text,t2_fpj4y,False,False,False,[],False,False,1643056470,haskell.foundation,https://www.reddit.com/r/haskell/comments/sbvrvr/haskell_foundation_is_hiring_for_a_devops/,{},sbvrvr,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/sbvrvr/haskell_foundation_is_hiring_for_a_devops/,False,link,"{'enabled': False, 'images': [{'id': 'oIs4kKgDLMdgFFunf20_4im_HgxrsIEAfsttoWp9viU', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=21ffc6743780333b01291efa4542f3c5ca1f2c0d', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d8d09664e98e4c19b58acdecf761f94934fb638a', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b1dd27539912721c36c26e0952cc633e97e5aee9', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ac413af80a52736df15d8141a74e010ba4fdaa54', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=d5d003535ecc151ac1f867af218d5b9116943279', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=1722bd773a51491c44083279c1315e134b5c21bb', 'width': 1080}], 'source': {'height': 5000, 'url': 'https://external-preview.redd.it/ukUwgDB35SAL6tW40S70BCe5LIAgcAfAnnTH6TmG-7w.jpg?auto=webp&amp;s=68ad82b1ec59fb1a13583b639f0b9de7db0bd2e2', 'width': 5000}, 'variants': {}}]}",6,1643056481,1,,True,False,False,haskell,t5_2qh36,68705,public,default,"Haskell Foundation is hiring for a DevOps position, supporting GHC and core Haskell projects.",0,[],1.0,https://haskell.foundation/careers/devops.html,all_ads,6,,,https://haskell.foundation/careers/devops.html,140.0,140.0,,,,,,,,,,,,,,,
441.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1643056376,github.com,https://www.reddit.com/r/haskell/comments/sbvqpg/proposal_add_ix_instances_for_foreignctype/,{},sbvqpg,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sbvqpg/proposal_add_ix_instances_for_foreignctype/,False,link,"{'enabled': False, 'images': [{'id': 'XvT5RwV-MssQzy7KKd_BS05mBBhLCwB7pgSHPGROUfI', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/vcZX0-1uu7w-5h7QOzQVX7f2qkJApBraOCtUd4bAPr4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=551939597af9c883b43047496a8db3e6ed6de3ac', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/vcZX0-1uu7w-5h7QOzQVX7f2qkJApBraOCtUd4bAPr4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=11a21ec87c4e674cdc73b8826a9cf51979b88c5e', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/vcZX0-1uu7w-5h7QOzQVX7f2qkJApBraOCtUd4bAPr4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=91f56bdb774dddb9f57812355024864915e6b185', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/vcZX0-1uu7w-5h7QOzQVX7f2qkJApBraOCtUd4bAPr4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e5928e6ac969401f3eb1d62e191d6fef553dcba8', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/vcZX0-1uu7w-5h7QOzQVX7f2qkJApBraOCtUd4bAPr4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=941737cc4d025ddc12d584a0c1fedef183837203', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/vcZX0-1uu7w-5h7QOzQVX7f2qkJApBraOCtUd4bAPr4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=68954b0a7dc619240d1f1a3daeaafd14c0216c93', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/vcZX0-1uu7w-5h7QOzQVX7f2qkJApBraOCtUd4bAPr4.jpg?auto=webp&amp;s=75866039716182668de4692980aa9b8be008a4a1', 'width': 1200}, 'variants': {}}]}",6,1643056386,1,,True,False,False,haskell,t5_2qh36,68705,public,default,Proposal: Add Ix instances for Foreign.C.Type newtypes,0,[],1.0,https://github.com/haskell/core-libraries-committee/issues/30,all_ads,6,a01b58a0-6553-11eb-b2eb-0eb19e8d97a5,RFC,https://github.com/haskell/core-libraries-committee/issues/30,70.0,140.0,,,,,,,,,,,,,,,
442.0,[],False,admodev,,[],,text,t2_5yw7pdvw,False,False,False,[],False,False,1643053232,self.haskell,https://www.reddit.com/r/haskell/comments/sbuiea/recommendations_on_good_advanced_haskell_courses/,{},sbuiea,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sbuiea/recommendations_on_good_advanced_haskell_courses/,False,,,6,1643053243,1," I'm looking for some good courses that cover the most advanced haskell concepts, any recommendations? thanks in advance, regards.",True,False,False,haskell,t5_2qh36,68704,public,self,Recommendations on good advanced Haskell courses,0,[],1.0,https://www.reddit.com/r/haskell/comments/sbuiea/recommendations_on_good_advanced_haskell_courses/,all_ads,6,,,,,,,,,,,,,,,,,,,,
443.0,[],False,cdsmith,,[],,text,t2_1trov,False,False,False,[],False,False,1643009865,cdsmithus.medium.com,https://www.reddit.com/r/haskell/comments/sbgkmb/monoids_are_composable_list_summarizers/,{},sbgkmb,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sbgkmb/monoids_are_composable_list_summarizers/,False,link,"{'enabled': False, 'images': [{'id': 'DjkacjJNxNDzAbNDS7uiuUeqbTg3gfNpTXgsH42XU9k', 'resolutions': [{'height': 71, 'url': 'https://external-preview.redd.it/74pb1QysU8OP_INxH4PjO-vnhzoHv50H-4nNGZeUWEE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f1c5d894356269b85e0f00e12c6c90dd26dea60e', 'width': 108}, {'height': 143, 'url': 'https://external-preview.redd.it/74pb1QysU8OP_INxH4PjO-vnhzoHv50H-4nNGZeUWEE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d96be545b5c361a1909ebf1fa3eb92d93212bc2c', 'width': 216}], 'source': {'height': 183, 'url': 'https://external-preview.redd.it/74pb1QysU8OP_INxH4PjO-vnhzoHv50H-4nNGZeUWEE.jpg?auto=webp&amp;s=fe6e05f3ac31528caf5fc147f81ed620b4ffecd2', 'width': 275}, 'variants': {}}]}",6,1643009875,1,,True,False,False,haskell,t5_2qh36,68683,public,default,Monoids are Composable List Summarizers,0,[],1.0,https://cdsmithus.medium.com/monoids-are-composable-list-summarizers-77d2baf23ffc,all_ads,6,,,https://cdsmithus.medium.com/monoids-are-composable-list-summarizers-77d2baf23ffc,93.0,140.0,,,,,,,,,,,,,,,
444.0,[],False,viraldigger4488,,[],,text,t2_6fdenn37,False,False,False,[],False,False,1643009446,itstechengine.com,https://www.reddit.com/r/haskell/comments/sbggpw/the_benefits_of_learning_to_code_at_a_young_age/,{},sbggpw,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sbggpw/the_benefits_of_learning_to_code_at_a_young_age/,False,link,"{'enabled': False, 'images': [{'id': 'nJ1TieHXv9jBpFcPOzUlzOm_Lx6KNrC0vIh7a3Bw65k', 'resolutions': [{'height': 60, 'url': 'https://external-preview.redd.it/82HjTPtShElVkK8ZXOTVlVXurPZ-TpJVSPj1f_HbXmI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ec5927fc2f3af66ad9226df2b3e2b9cb179f0e6b', 'width': 108}, {'height': 121, 'url': 'https://external-preview.redd.it/82HjTPtShElVkK8ZXOTVlVXurPZ-TpJVSPj1f_HbXmI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b2336944525a61858a80593aa3187ecd4b994dda', 'width': 216}, {'height': 180, 'url': 'https://external-preview.redd.it/82HjTPtShElVkK8ZXOTVlVXurPZ-TpJVSPj1f_HbXmI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1954a73e589f0f9d6f3e39bb5770e9f36c07678a', 'width': 320}, {'height': 360, 'url': 'https://external-preview.redd.it/82HjTPtShElVkK8ZXOTVlVXurPZ-TpJVSPj1f_HbXmI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=a4a38ca6b6131e50059b57345ae54ba61224a059', 'width': 640}, {'height': 540, 'url': 'https://external-preview.redd.it/82HjTPtShElVkK8ZXOTVlVXurPZ-TpJVSPj1f_HbXmI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b4b6e457ce49094f776d0e63d1e1b40df43a59c5', 'width': 960}], 'source': {'height': 563, 'url': 'https://external-preview.redd.it/82HjTPtShElVkK8ZXOTVlVXurPZ-TpJVSPj1f_HbXmI.jpg?auto=webp&amp;s=8e2af67c6bb08e392e436e4b9182336507e1f94c', 'width': 1000}, 'variants': {}}]}",6,1643009456,1,,True,False,False,haskell,t5_2qh36,68683,public,default,The Benefits Of Learning To Code At A Young Age,0,[],1.0,https://itstechengine.com/2022/01/20/benefits-of-learning-to-code/,all_ads,6,,,https://itstechengine.com/2022/01/20/benefits-of-learning-to-code/,78.0,140.0,,reddit,,,,,,,,,,,,,
445.0,[],False,RoboZoomDax,,[],,text,t2_cug7bwwn,False,False,False,[],False,False,1642999722,self.haskell,https://www.reddit.com/r/haskell/comments/sbdn3h/what_is_haskell_void/,{},sbdn3h,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sbdn3h/what_is_haskell_void/,False,self,"{'enabled': False, 'images': [{'id': 'gC9mRI-Lu1BDaWz30CT_7C-7W_lkp6ySw7dc5vhfnkA', 'resolutions': [{'height': 125, 'url': 'https://external-preview.redd.it/qzBp9uo8aA2V015Pr6oBRX6lfDuDRBvmPA9cd4xzhcc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b5384e5c09574c5cb0c5e07a01e8391a8090e85e', 'width': 108}, {'height': 250, 'url': 'https://external-preview.redd.it/qzBp9uo8aA2V015Pr6oBRX6lfDuDRBvmPA9cd4xzhcc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=79db7a4536310a1a68133ccd78d226bc4d73b768', 'width': 216}], 'source': {'height': 299, 'url': 'https://external-preview.redd.it/qzBp9uo8aA2V015Pr6oBRX6lfDuDRBvmPA9cd4xzhcc.jpg?auto=webp&amp;s=15e59af1c000144be825aba8ff926efd4b3e3383', 'width': 258}, 'variants': {}}]}",6,1642999733,1,"I'm going through ""[Category Theory for Programmers](https://bartoszmilewski.com/2014/11/24/types-and-functions/)"" and I'm trying to make sense of the author's description of the type Void.

An excerpt:

&gt;It’s a type that’s not inhabited by any values. You can define a function that takes Void, but you can never call it. To call it, you would have to provide a value of the type Void, and there just aren’t any. As for what this function can return, there  are no restrictions whatsoever. It can return any type (although it  never will, because it can’t be called).

Then it proceeds to explain that a singleton set is actually type `()`

This doesn't make sense to me -  why isn't a function that is the equivalent of { return 32 }  the same as a morphism mapping an empty set to a non-empty set?  And why can't you call a function whose argument is the equivalent of an empty set?  And finally, how is () the equivalent of a set with a single member?

UPDATE:  While typing this, I think it finally clicked - still looking for confirmation.  An Empty set can only map to an Empty set because there are no elements to transform. Which is why () is some universal element because it implies that you can map a set with one thing to any one other thing.  Is this right?",True,False,False,haskell,t5_2qh36,68680,public,self,What is Haskell Void?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sbdn3h/what_is_haskell_void/,all_ads,6,,,,,,,,,,,,,,,,,,,,
446.0,[],False,sharctic03,,[],,text,t2_8z0q96d,False,False,False,[],False,False,1642959733,self.haskell,https://www.reddit.com/r/haskell/comments/saz3bc/are_threads_needed_to_execute_a_nondeterministic/,{},saz3bc,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/saz3bc/are_threads_needed_to_execute_a_nondeterministic/,False,,,6,1642959743,1,"So for the purposes of my final year project I'm writing a non-deterministic language by Haskell for the purposes of learning Haskell and to understand language design! Non-determinism in the language arises in the presence of control flow for example : n := 0 Do (n &lt; 10)-&gt; if P.x -&gt; S [] Q.x -&gt; R fi Od So if any of the guards (P.x,Q.x) are True then their statements S,R can be carried out. The caveat here however is that both of the guards could be evaluated to True which means both statements have to be executed. The branch taken that finishes first however is the branch which ultimately gives the final result so for example if the two guards where checking if n is an even number and if n was less than say five then both branches would have to be taken. &amp;#x200B; After just completing a class on Parallel Computing, my first thought was to use threads but then I came across numerous articles and blogs about how the List Monad can handle non-determinism. &amp;#x200B; So my two approaches where to either use threads which I do have some experience with or to see if the List Monad could actually work. I'm inclined to use threads given that each branch obtains its own instance of the program therefore it would make sense to use them but I am quite aware that Haskell‍ is more or less magic so I figured there's probably another way to achieve the effect I desire. &amp;#x200B; Could something along the lines Lisp's amb be of any use? I found the Haskell implementation [https://wiki.haskell.org/Amb](https://wiki.haskell.org/Amb) but it appears to generally be used for more trivial programs than anything else. &amp;#x200B; My apologies if this post isn't allowed, was just looking to rubberduck a bit",True,False,False,haskell,t5_2qh36,68672,public,self,Are threads needed to execute a non-deterministic program or can the List Monad handle it .,0,[],1.0,https://www.reddit.com/r/haskell/comments/saz3bc/are_threads_needed_to_execute_a_nondeterministic/,all_ads,6,,,,,,,,,,,,,,,,,,,,
447.0,[],False,AdOdd5690,,[],,text,t2_77ggiprk,False,False,False,[],False,False,1642953257,self.haskell,https://www.reddit.com/r/haskell/comments/sawlwr/happy_alex_or_parsec/,{},sawlwr,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sawlwr/happy_alex_or_parsec/,False,,,6,1642953268,1,"Hello!

I am going to take my final course at my University and for the project I decided to create a simple theorem prover that my professor provided the full Syntax rules (expressions, operator precedence, keyords, etc.). Should I use Happy &amp; Alex or Parsec?",True,False,False,haskell,t5_2qh36,68672,public,self,Happy &amp; Alex or Parsec?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sawlwr/happy_alex_or_parsec/,all_ads,6,,,,,,,,,,,,,,,,,,,,
448.0,[],False,MazenAmria,,[],,text,t2_6ndu2yci,False,False,False,[],False,False,1642947510,self.haskell,https://www.reddit.com/r/haskell/comments/saumi9/functional_programming_performance_in_terms_of/,{},saumi9,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/saumi9/functional_programming_performance_in_terms_of/,False,,,6,1642947521,1,"Hi, I was looking at functional programming for months, and I was studying haskell in particular. I can see how preventing mutation and side effects helps increasing the correctness of the program especially in parallel and concurrent programming. But I wonder how this affects the performance of the program in terms of  space and time ?",True,False,False,haskell,t5_2qh36,68672,public,self,Functional Programming Performance in terms of Space and Time,0,[],1.0,https://www.reddit.com/r/haskell/comments/saumi9/functional_programming_performance_in_terms_of/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
449.0,[],False,enobayram,,[],,text,t2_90u7a,False,False,False,[],False,False,1642942854,self.haskell,https://www.reddit.com/r/haskell/comments/sat5wv/simplest_way_to_retain_state_in_ghci/,{},sat5wv,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sat5wv/simplest_way_to_retain_state_in_ghci/,False,,,6,1642942865,1,"Dear Haskellers, there's some neat behavior of GHCI that I've discovered by accident and I've grown to take advantage of it quite a bit and I realized that it's probably not common knowledge, since I don't ever remember anyone mentioning it, so I've decided to mention it myself.

As you know, when you `:reload` in GHCI, it only reloads the modules that has changed (themselves or their dependecies, modulo unnecessary `TemplateHaskell` reloads) since the last `:reload`. What I've noticed is that when a module doesn't get reloaded, it gets to keep the value of any top-level `IORef`s too! 

Here's an example of how I've been using this feature; Say I have a `Server.DevServer` module that `import`s most of the project and sets up an environment that enables serving most of the project's functionality in a development-friendly way. You can think of it as an alternative to project's `Main`, but it mocks many things like authentication or expensive IO or things that require external dependencies that you don't want to deal with during development. By its nature this module will get reloaded whenever pretty much anything changes, so I create another module: `Server.DevServer.SessionState` and make sure that this module doesn't depend on anything, and it just contains some top-level `IORef`s like this:

    {-# NOINLINE serverThreadRef #-}
    serverThreadRef :: IORef (Maybe (Async.Async ()))
    serverThreadRef = unsafePerformIO $ newIORef Nothing

Then in `Server.DevServer`, I define a bunch of utility commands to be used in a GHCI session:

    serveCmd :: String -&gt; IO String
    serveCmd args = return [qc|
      :r
      :def! serve serveCmd
      readIORef serverThreadRef &gt;&gt;= mapM_ Async.cancel
      ... do a bunch of stuff
      serverThread &lt;- async startDevServer &lt;* threadDelay 300000
      writeIORef serverThreadRef (Just serverThread)
      |]

([`qc`](https://hackage.haskell.org/package/interpolatedstring-perl6-1.0.2/docs/Text-InterpolatedString-Perl6.html#v:qc) is just for multi-line strings). Then in my `.ghci` script, I also run `:def! serve serveCmd`, this way, in GHCI, I can just run `:serve`, which reloads my modules, kills any currently running server and restarts a new one from the newly loaded modules.

Note that I've chosen to put `serverThreadRef` in a very boring module that doesn't depend on anything and doesn't have any reason to ever change, so I know I'll always retain `serverThreadRef`, but you can also keep other low-dependency things, like say a mocked application state that you carefully keep lower in the module hierarchy, so that most of the time, your development server retains that state when you reload your code.

I think taking your time to set up a good GHCI environment pays itself over a million times.",True,False,False,haskell,t5_2qh36,68670,public,self,Simplest way to retain state in GHCI,0,[],1.0,https://www.reddit.com/r/haskell/comments/sat5wv/simplest_way_to_retain_state_in_ghci/,all_ads,6,,,,,,,,,,,,,,,,,,,,
450.0,[],False,Substantial-Curve-33,,[],,text,t2_8hpl9m0n,False,False,False,[],False,False,1642939235,self.haskell,https://www.reddit.com/r/haskell/comments/sas6bw/whats_the_most_effective_way_to_learn_haskell/,{},sas6bw,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sas6bw/whats_the_most_effective_way_to_learn_haskell/,False,,,6,1642939246,1,"Taking into account that I already know procedural and object-oriented programming. I've also studied data structure and algorithms in college, and we're going to use haskell in functional programming class, so I wanted to get ahead of myself so I wouldn't get lost in the subject.",True,False,False,haskell,t5_2qh36,68673,public,self,What's the most effective way to learn haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sas6bw/whats_the_most_effective_way_to_learn_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
451.0,[],False,Competitive_Ad2539,,[],,text,t2_8g6liftg,False,False,False,[],False,False,1642922857,self.haskell,https://www.reddit.com/r/haskell/comments/sao2xk/selfanswered_question_what_is_the_contravariant/,{},sao2xk,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/sao2xk/selfanswered_question_what_is_the_contravariant/,False,,,6,1642922868,1,"Title. I'm not really sure that [Comonad](https://hackage.haskell.org/package/comonad-5.0.8/docs/Control-Comonad.html) is the answer, because it's dual on how layers can be transformed. &gt;!F.e. Monad's!&lt;

&gt;!join :: Monad m =&gt; m (m a) -&gt; m a !&lt;

&gt;!opposed to comonad's !&lt;

&gt;!duplicate :: Comonad w =&gt; w a -&gt; w (w a) !&lt;

&gt;!and !&lt;

&gt;!return :: Monad  m =&gt; a -&gt; m a !&lt;

&gt;!opposed to !&lt;

&gt;!extract :: Comonad w =&gt; w a -&gt; a,!&lt;

&gt;!it's not about whether the value is stored, like in a covariant functor, or is it consumed, like in a contravariant functor. 
Is there any typeclass that allowes this: ?
cobind :: Contramonad c =&gt; c b -&gt; (a -&gt; c b) -&gt; c a!&lt;

&gt;!And is (would have been) it usefull? I'm asking from theoretical point of view + I'm curious (mostly curious, I don't know much category theory).!&lt;  


UPD: upon writing this, I wrote the following piece of code, that typechecks  
 

    (&gt;&gt;~) :: (Contravariant w, Comonad w) =&gt; w b -&gt; (a -&gt; w b) -&gt; w a
wb &gt;&gt;~ f = contramap f $ duplicate wb

My own question answered by myself, I guess? The answer is (Comonad + Contravariant).",True,False,False,haskell,t5_2qh36,68675,public,self,Self-answered Question: What is the contravariant version of the Monad typeclass?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sao2xk/selfanswered_question_what_is_the_contravariant/,all_ads,6,,,,,,,,,,,,,,,,,,,,
452.0,[],False,DetriusXii,,[],,text,t2_fxk16,False,False,False,[],False,False,1642914434,self.haskell,https://www.reddit.com/r/haskell/comments/salsxd/trying_to_build_the_library_time_in_windows/,{},salsxd,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/salsxd/trying_to_build_the_library_time_in_windows/,False,,,6,1642914444,1,"Hi,

&amp;#x200B;

Attached is the cabal build output when using **cabal build** on my project.  


Build profile: -w ghc-9.0.2 -O1

In order, the following will be built (use -v for more details):

 \- time-1.10 (lib:time) (requires build)

 \- uuid-1.3.15 (lib) (requires build)

 \- time-compat-1.9.6.1 (lib) (requires build)

 \- selda-0.5.1.0 (lib) (requires build)

 \- aeson-1.5.6.0 (lib) (requires build)

 \- selda-json-0.1.1.0 (lib) (requires build)

 \- postgresql-binary-0.12.4.1 (lib) (requires build)

 \- selda-postgresql-0.1.8.1 (lib) (requires build)

 \- happstackEureka-database-0.1.0.0 (exe:happstackEureka-database) (first run)

Starting     time-1.10 (all, legacy fallback)

&amp;#x200B;

Failed to build time-1.10. The failure occurred during the configure step.

Build log (

C:\\Users\\detriusxii\\AppData\\Roaming\\cabal\\logs\\ghc-9.0.2\\time-1.10-c2a1f70f679e45fb4ac03275811844d9a316505a.log

):

Configuring time-1.10...

checking for gcc... C:\\GHC-90\~1.2-X\\lib\\../mingw/bin\\gcc.exe

checking whether the C compiler works... yes

checking for C compiler default output file name... a.exe

checking for suffix of executables... .exe

checking whether we are cross compiling... no

checking for suffix of object files... o

checking whether we are using the GNU C compiler... yes

checking whether C:\\GHC-90\~1.2-X\\lib\\../mingw/bin\\gcc.exe accepts -g... yes

checking for C:\\GHC-90\~1.2-X\\lib\\../mingw/bin\\gcc.exe option to accept ISO C89... none needed

checking how to run the C preprocessor... C:\\GHC-90\~1.2-X\\lib\\../mingw/bin\\gcc.exe -E

checking for grep that handles long lines and -e... configure: error: no acceptable grep could be found in

&amp;#x200B;

I switched to using ghc 9.0.2 as ghc 8.6.5 gave me folder permission grief for unknown reasons.   ghc 9.2.1 uses a version of template-haskell that haskell-selda is not compatible with.  I'm using cabal [3.6.0.0](https://3.6.0.0).   I'm using Windows 10.

I've tried using both cygwin and msys2.   They both have a grep application installed. I receive the same error attempting to compile **time** in either environment.",True,False,False,haskell,t5_2qh36,68674,public,self,Trying to build the library time in Windows,0,[],1.0,https://www.reddit.com/r/haskell/comments/salsxd/trying_to_build_the_library_time_in_windows/,all_ads,6,,,,,,,,,,,,,,,,,,,,
453.0,[],False,pretty-crab-111,,[],,text,t2_hmcmruyx,False,False,False,[],False,False,1642907575,self.haskell,https://www.reddit.com/r/haskell/comments/sajpj8/how_do_i_kill_infinite_recursion_thread_on_timeout/,{},sajpj8,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sajpj8/how_do_i_kill_infinite_recursion_thread_on_timeout/,False,,,6,1642907585,1,"Helloo. I am terribly sorry if this is a common knowledge, but I have been unable to find an answer to this question of mine. What I want to achieve is stopping infinite recursion started by a thread, on a timeout. I tried using `System.Timeout.timeout`, too, and it didn't help. After a bit of googling I found out that recursion can be optimized in such a way that thread in question never yields, so I tried compiling with `-fno-omit-yields`, and it didn't do anything. I also am compiling with `-threaded`.

```Main.hs
module Main where

import Control.Concurrent (killThread, forkIO, threadDelay)
import Control.Concurrent.MVar (newEmptyMVar, putMVar, takeMVar)

runWithTimeout :: IO (Maybe String)
runWithTimeout = do
    mvar &lt;- newEmptyMVar
    threadId &lt;- forkIO  $ do
        let res = Just $ show (f 5)
        putMVar mvar res

    threadKiller &lt;- forkIO $ do
        threadDelay $ 2 * (10^6) -- 2 seconds
        killThread threadId
        putMVar mvar Nothing

    res &lt;- takeMVar mvar
    killThread threadKiller
    return res

f :: Int -&gt; Int
f n = n * f(n - 1)

main :: IO ()
main = do
    res &lt;- runWithTimeout
    mapM_ putStrLn res
```

```.cabal
executable test
    main-is:          Main.hs
    ghc-options: -threaded -rtsopts -fno-omit-yields
    build-depends:    base ^&gt;=4.14.3.0
    hs-source-dirs:   app
    default-language: Haskell2010
```",True,False,False,haskell,t5_2qh36,68673,public,self,How do I kill infinite recursion thread on timeout?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sajpj8/how_do_i_kill_infinite_recursion_thread_on_timeout/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
454.0,[],False,NixOverSlicedBread,,[],,text,t2_1s3ukhhs,False,False,False,[],False,False,1642885098,self.haskell,https://www.reddit.com/r/haskell/comments/sabygj/please_explain_to_me_once_and_for_all_what_the/,{},sabygj,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sabygj/please_explain_to_me_once_and_for_all_what_the/,False,,,6,1642885108,1,"I have been coding Haskell for years but (I am very ashamed to admit) I **still** don't quite **get** what's so great about laziness.

I look at laziness only as a nice-to-have trick where I occasionally do something like `indexedBoom = zip boom [0..]`, but that's it. I don't quite **get** what's so **PROFOUND** about laziness.

I'm sure there are many things in Haskell that I use all the time that not only utilize laziness but **simply would not be possible at all without laziness,** but I don't quite **grasp** what those things are.",False,False,False,haskell,t5_2qh36,68674,public,self,"Please explain to me, once and for all, what the excitement about laziness is all about.",0,[],1.0,https://www.reddit.com/r/haskell/comments/sabygj/please_explain_to_me_once_and_for_all_what_the/,all_ads,6,,,,,,,,,,,,,,,,,,,,
455.0,[],False,Sea-Permission-9428,,[],,text,t2_d9s49u33,False,False,False,[],False,False,1642879727,self.haskell,https://www.reddit.com/r/haskell/comments/saa1ge/chartsvg02/,{},saa1ge,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/saa1ge/chartsvg02/,False,,,6,1642879737,1,"I am cheerful to announce a major release of ⠀[chart-svg](https://hackage.haskell.org/package/chart-svg). 0.2 now has experimental reanimate support, and is otherwise a sharper, better documented chart library, focused on svg production. Shout out to haddock maintainers - it's a lovely medium to write in. Thanks to contributors, upstream and downstream.",True,False,False,haskell,t5_2qh36,68672,public,self,chart-svg-0.2. !,0,[],1.0,https://www.reddit.com/r/haskell/comments/saa1ge/chartsvg02/,all_ads,6,,,,,,,,,,,,,,,,,,,,
456.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1642877203,self.haskell,https://www.reddit.com/r/haskell/comments/sa94ok/clc_election_january_2022_call_for_nominations/,{},sa94ok,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sa94ok/clc_election_january_2022_call_for_nominations/,False,,,6,1642877214,1,"The Core Libraries Committee is seeking for a new member!
We are grateful to George Wilson, who steps down after three years of hard work, and are looking for someone to take his seat.

## Who should apply?

Anyone who meets the following criteria should apply:

*   Candidates should have enough bandwidth to review merge requests to `base` on a semi-frequent basis (2 to 3 per month), and sustain this for their 3 years term in a healthy manner.
*   Candidates should be able to contribute opinions and analysis to issues raised by the community as a part of the CLC proposal process on a semi-frequent basis (2 to 3 per month).
*   Candidates should be good communicators, and at least be able to articulate to the CLC team when they will be available vs. unavailable.
*   Candidates should be productive, and be able to follow through on merge requests and conversations to their completion in a diligent and timely manner.

We encourage any and all who satisfy these requirements to apply. Please note that we are not looking for the biggest galaxy brain in the room - quite the opposite. We are looking for productive, motivated individuals who want to help support the ecosystem that we love. As such, we hope to build a broad sample of the community.

Candidates, who stand for CLC Elections back in September, are most welcome to apply again.

## How can I apply?

To apply for one of these positions, send an email to core-libraries-committee@haskell.org that consists of the following data:

*   The header ""CLC Election January 2022 - {your name}"".
*   Why you think you’re a good fit given the above criteria.
*   If applicable, please point us to some code you’ve written.

Please apply before Feb 1.",True,False,False,haskell,t5_2qh36,68672,public,self,CLC Election January 2022 - call for nominations,0,[],1.0,https://www.reddit.com/r/haskell/comments/sa94ok/clc_election_january_2022_call_for_nominations/,all_ads,6,,,,,,,,,,,,,,,,,,,,
457.0,[],False,sunnyata,,[],,text,t2_4lxh3lrv,False,False,False,[],False,False,1642852458,self.haskell,https://www.reddit.com/r/haskell/comments/sa0y7k/who_is_still_using_happstack_and_whywhy_not/,{},sa0y7k,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/sa0y7k/who_is_still_using_happstack_and_whywhy_not/,False,,,6,1642852469,1,"Happstack seems a well maintained and fully featured, well-documented platform for web apps of various kinds but I don't see people talking about using it or recommending it when others ask what to use. That seems more likely to be servant, scotty or (less often?) Yesod. Am I right in thinking this and, if so, why is it? 

I should say I've not used any of these frameworks in production. I have some teaching materials based on Happstack that I'd be happy to migrate if there are good technical reasons, otherwise I'll leave well alone.",True,False,False,haskell,t5_2qh36,68661,public,self,Who is still using Happstack and why/why not?,0,[],1.0,https://www.reddit.com/r/haskell/comments/sa0y7k/who_is_still_using_happstack_and_whywhy_not/,all_ads,6,,,,,,,,,,,,,,,,,,,,
458.0,[],False,RishabhRD,,[],,text,t2_5vnua48e,False,False,False,[],False,False,1642828818,self.haskell,https://www.reddit.com/r/haskell/comments/s9uylb/any_book_recommended_for_reactive_functional/,{},s9uylb,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s9uylb/any_book_recommended_for_reactive_functional/,False,,,6,1642828828,1,,True,False,False,haskell,t5_2qh36,68662,public,self,Any book recommended for reactive functional programming in haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s9uylb/any_book_recommended_for_reactive_functional/,all_ads,6,,,,,,,,,,,,,,,,,,,,
459.0,[],False,Dust_077,,[],,text,t2_273jsleu,False,False,False,[],False,False,1642827866,self.haskell,https://www.reddit.com/r/haskell/comments/s9uotu/just_few_questions_on_miso_and_ghcjs/,{},s9uotu,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s9uotu/just_few_questions_on_miso_and_ghcjs/,False,,,6,1642827877,1,"1. How can I install only GHCjs binary form cachix. Just like installing normal packages in Nix ?
2. I  tired to build an example form miso (sample-app). It takes long time to compile and consumes all of my ram. Is GHCjs very slow on compilation ?",True,False,False,haskell,t5_2qh36,68661,public,self,Just few questions on Miso and GHCjs,0,[],1.0,https://www.reddit.com/r/haskell/comments/s9uotu/just_few_questions_on_miso_and_ghcjs/,all_ads,6,,,,,,,,,,,,,,,,,,,,
460.0,[],False,zeta_00,,[],,text,t2_3o8oqw5e,False,False,False,[],False,False,1642814515,self.haskell,https://www.reddit.com/r/haskell/comments/s9qjcs/a_question_about_the_current_state_of_haskell/,{},s9qjcs,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/s9qjcs/a_question_about_the_current_state_of_haskell/,False,,,6,1642814525,1,"What is the current state of Haskell working natively on m1 Macs(as of January 2022), and if it does work, then what version of the GHC compiler is currently recommended?

I'm mostly focused on Python for work, but I'd like to get back to learning Haskell and doing projects with it again. It would be awesome if I could run it natively on my M1 Mac Mini.",True,False,False,haskell,t5_2qh36,68655,public,self,A question about the current state of Haskell running natively on Apple silicon:,0,[],1.0,https://www.reddit.com/r/haskell/comments/s9qjcs/a_question_about_the_current_state_of_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
461.0,[],False,zeta_00,,[],,text,t2_3o8oqw5e,False,False,False,[],False,False,1642814261,self.haskell,https://www.reddit.com/r/haskell/comments/s9qg5d/questions_about_the_state_of_haskell_in_industry/,{},s9qg5d,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s9qg5d/questions_about_the_state_of_haskell_in_industry/,False,,,6,1642814271,1,"Greetings,

Currently I'm specializing in Python web development, and I resigned from my job a couple of months ago to become a freelancer, but, I was just curious, currently as of 2022 what is the state of Haskell in industry?

Is there more Haskell job openings?

Are companies looking to hire Haskell freelancers?

Any statistical graphs to show if Haskell is growing or not?

Anyways, I was just wondering. I'm going to learn Haskell and do a bunch of personal Haskell projects as a hobby for now, but it would be motivator for me to learn even more Haskell if more Haskell jobs opened up in industry.

Currently, languages like Python have a lot of job openings, that's why I'm spending most of my time with Python, but I'm also very interesting in getting back into pure lazy functional programming.

Thanks in advance!

Cheers!",True,False,False,haskell,t5_2qh36,68655,public,self,Questions about the state of Haskell in Industry:,0,[],1.0,https://www.reddit.com/r/haskell/comments/s9qg5d/questions_about_the_state_of_haskell_in_industry/,all_ads,6,,,,,,,,,,,,,,,,,,,,
462.0,[],False,last_shawerma,,[],,text,t2_ih4vohmo,False,False,False,[],False,False,1642771304,self.haskell,https://www.reddit.com/r/haskell/comments/s9am2o/job_opportunity_remote_or_from_office/,{},s9am2o,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s9am2o/job_opportunity_remote_or_from_office/,False,self,"{'enabled': False, 'images': [{'id': '2MeGPrFu0ZBIHSNzQj5nNmqjMAP5RkaS-az_1ATgLxg', 'resolutions': [{'height': 37, 'url': 'https://external-preview.redd.it/Axe0fBFPd7nYo7qzluqKvKcE7DjkoqClZNMSCaSCQMs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f1e3c87297f8cee2a54554c7a3ed060a33b93472', 'width': 108}, {'height': 74, 'url': 'https://external-preview.redd.it/Axe0fBFPd7nYo7qzluqKvKcE7DjkoqClZNMSCaSCQMs.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e7d5e08e55ba563c849a3bd12f9cd3ffee9a5564', 'width': 216}, {'height': 110, 'url': 'https://external-preview.redd.it/Axe0fBFPd7nYo7qzluqKvKcE7DjkoqClZNMSCaSCQMs.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f48fd0ee494d69b4b5fcfa5ff4b81eec2aa1b7e5', 'width': 320}], 'source': {'height': 174, 'url': 'https://external-preview.redd.it/Axe0fBFPd7nYo7qzluqKvKcE7DjkoqClZNMSCaSCQMs.jpg?auto=webp&amp;s=2b27ee75a697b175ab4528795c37624f309ec5c4', 'width': 504}, 'variants': {}}]}",6,1642771314,1,"Evoli is a company with a focus on insurtech that challenges the Swedish insurance industry with affordable insurance to a carefully selected target group. Among the founders are both experienced entrepreneurs, IT developers and people with specialist knowledge in insurance. At evoli, the working day is eventful, and we are a tight team that has fun together.

We are now looking for a Haskell developer who is not afraid of a challenge. Someone that will help with daily operations, maintaining and developing our platform. We have an agile way of working and combine working remotely with days together at our office in central Stockholm.

**Your daily work will involve:**

* Working with tech like Haskell, GCP, PostgreSQL.
* Working with a microservice architecture.
* Collaborate with the PMO, data scientists, and other developers in the team on different products.

**Experience:**

* 1+ years of experience working with Haskell.
* Knowledge in PostgreSQL, Docker and GCP. Basic understanding of Linux.
* Experience in GKE
* Experience in one or more of the following languages is a plus: Javascript, Java, or Python.

**In addition, you:**

* Communicates fluently in English (we also speak Swedish)
* Enjoys working in a team environment, sharing knowledge and ideas with colleagues.  


To apply for the role, please visit [https://evoli.se/om-oss/jobb-och-karriar/haskell-developer/](https://evoli.se/om-oss/jobb-och-karriar/haskell-developer/)",True,False,False,haskell,t5_2qh36,68653,public,self,Job opportunity - Remote or from office,0,[],1.0,https://www.reddit.com/r/haskell/comments/s9am2o/job_opportunity_remote_or_from_office/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,,,,,,,,,,,,,,
463.0,[],False,peesooshhvusog,,[],,text,t2_c86iiu03,False,False,False,[],False,False,1642766395,self.haskell,https://www.reddit.com/r/haskell/comments/s996bp/hiring_1_job_in_haskell_hiring_now/,{},s996bp,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s996bp/hiring_1_job_in_haskell_hiring_now/,False,,,6,1642766406,1,"Company Name | Title | City
--|--|--|--|--|--
[DRIFT Services](https://redejobs.com/job.php?j=a1f606&amp;p=8&amp;s1=reddit&amp;s2=haskell) | [Certified Nursing Assistant (CNA) Phoenix Center for Rehabilitation &amp; Pediatrics, Haskell, NJ](https://redejobs.com/job.php?j=a1f606&amp;p=8&amp;s1=reddit&amp;s2=haskell) | [Bryant](https://redejobs.com/job.php?j=a1f606&amp;p=8&amp;s1=reddit&amp;s2=haskell)


Hey guys, here are some recent job openings , feel free to comment here if you have any questions, I'm at the community's disposal! If you encounter any problems with any of these job openings please let me know that I will modify the table accordingly. Thanks!",True,False,False,haskell,t5_2qh36,68653,public,self,[HIRING] 1 Job in haskell Hiring Now!,0,[],1.0,https://www.reddit.com/r/haskell/comments/s996bp/hiring_1_job_in_haskell_hiring_now/,all_ads,6,,,,,,,,,,,,,,,,,,,,
464.0,[],False,tomejaguar,,[],,text,t2_45sug,False,False,False,[],False,False,1642761104,self.haskell,https://www.reddit.com/r/haskell/comments/s97ue9/has_anyone_seen_these_applicative_laws/,{},s97ue9,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s97ue9/has_anyone_seen_these_applicative_laws/,False,,,6,1642761115,1,"Just as the standard Monad laws look simpler from another angle, it seems that the Applicative laws do too. I don't think I can be the first person to notice this formulation. Does anyone know where it was written down before? Specifically, the [standard Monad laws](https://hackage.haskell.org/package/base-4.16.0.0/docs/Control-Monad.html#t:Monad) are

    return a &gt;&gt;= k = k a
    m &gt;&gt;= return = m
    m &gt;&gt;= (\x -&gt; k x &gt;&gt;= h) = (m &gt;&gt;= k) &gt;&gt;= h

and the simpler formulation is

    return &gt;=&gt; f = f
    f &gt;=&gt; return = f
    (f &gt;=&gt; g) &gt;=&gt; h = f &gt;=&gt; (g &gt;=&gt; h)

The [standard Applicative laws](https://hackage.haskell.org/package/base-4.16.0.0/docs/Control-Applicative.html) are

    pure id &lt;*&gt; v = v
    u &lt;*&gt; pure y = pure ($ y) &lt;*&gt; u
    pure (.) &lt;*&gt; u &lt;*&gt; v &lt;*&gt; w = u &lt;*&gt; (v &lt;*&gt; w)
    pure f &lt;*&gt; pure x = pure (f x)

and the simpler formulation is

    pure id &lt;.&gt; f = f
    f &lt;.&gt; pure id = f
    f &lt;.&gt; (g &lt;.&gt; h) = (f &lt;.&gt; g) &lt;.&gt; h
    pure f &lt;.&gt; pure g = pure (f . g)

(I'm skeptical whether the last law (the ""homomorphism law"") is actually needed. Feels like it should be derivable from the others, but that's an investigation for another day.)",True,False,False,haskell,t5_2qh36,68652,public,self,Has anyone seen these Applicative laws?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s97ue9/has_anyone_seen_these_applicative_laws/,all_ads,6,,,,,,,,,,,,,,,,,,,,
465.0,[],False,teilchen010,,[],,text,t2_a8zynd1e,False,False,False,[],False,False,1642744086,self.haskell,https://www.reddit.com/r/haskell/comments/s93mox/what_is_ints_data_type/,{},s93mox,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s93mox/what_is_ints_data_type/,False,self,"{'enabled': False, 'images': [{'id': 'WTzsTf14Yxk3W5bTcnGcJPqTm4Q6VOc_o4P43x4EgVU', 'resolutions': [{'height': 91, 'url': 'https://external-preview.redd.it/aBa2ahUK4e90rMFCV7lQtuCxjh38uP5lxRKRG3QO5y4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6c7e00b7f6eda6ccc2db31758dea0251a8da2ed7', 'width': 108}, {'height': 182, 'url': 'https://external-preview.redd.it/aBa2ahUK4e90rMFCV7lQtuCxjh38uP5lxRKRG3QO5y4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ad83692007c5e646677b662e1a2b3a857f351925', 'width': 216}, {'height': 270, 'url': 'https://external-preview.redd.it/aBa2ahUK4e90rMFCV7lQtuCxjh38uP5lxRKRG3QO5y4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9d5ee7fa57448334d40a4afd2cb0721c5458117a', 'width': 320}, {'height': 541, 'url': 'https://external-preview.redd.it/aBa2ahUK4e90rMFCV7lQtuCxjh38uP5lxRKRG3QO5y4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=69687f8d5fed5157c4f88fed99fce47dcee06016', 'width': 640}, {'height': 812, 'url': 'https://external-preview.redd.it/aBa2ahUK4e90rMFCV7lQtuCxjh38uP5lxRKRG3QO5y4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=58fb40c8f7752fa952d5ec39e850e858f03317ab', 'width': 960}], 'source': {'height': 909, 'url': 'https://external-preview.redd.it/aBa2ahUK4e90rMFCV7lQtuCxjh38uP5lxRKRG3QO5y4.jpg?auto=webp&amp;s=c9050f40279284a6d96b5208e0f5c6fe38455c47', 'width': 1074}, 'variants': {}}]}",6,1642744096,1,"I'm guessing that the type `Int` is a sum type with nullary constructors that are the actual numbers. But obviously we don't have 

    data Int = ... | -1 | 0 | 1 | 2 ...

instead I see `Int` defined as

    data {-# CTYPE ""HsInt"" #-} Int = I# Int#

which must somehow be creating \``Int` as above ""virtually."" Or am I wrong about that? In any event can someone give me some details? Here's a statement that got me on this trail

&amp;#x200B;

&gt;The first step to realise is that all literal numbers in Haskell are constructors that construct some instance of the `Num` typeclass.

[https://gist.github.com/CMCDragonkai/fab0980b3325e8a788c9](https://gist.github.com/CMCDragonkai/fab0980b3325e8a788c9)",True,False,False,haskell,t5_2qh36,68651,public,self,What is Int's data type?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s93mox/what_is_ints_data_type/,all_ads,6,,,,,,,,,,,,,,,,,,,,
466.0,[],False,userOp123gg,,[],,text,t2_i0x26p8z,False,False,False,[],False,False,1642724790,self.haskell,https://www.reddit.com/r/haskell/comments/s8x6py/is_it_possible_for_haskell_stack_app_that_uses/,{},s8x6py,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s8x6py/is_it_possible_for_haskell_stack_app_that_uses/,False,,,6,1642724801,1,"main program should spawn ten “user” threads, and each of these threads model a user in the social network

should define an appropriate Haskell data type User, which should include their username, and a Message type to keep track of messages between users

should also contain a main thread which creates ten “users” (ten values of type User), and spawns ten threads, one for each of these users

user thread should behave as follows: at random time intervals, the thread should select one of the other users at random, and send a random message to that user

 should simulate 100 messages, and then terminate and output the final count of how many messages each user received",True,False,False,haskell,t5_2qh36,68644,public,self,is it possible for Haskell stack app that uses threads and concurrent computation,0,[],1.0,https://www.reddit.com/r/haskell/comments/s8x6py/is_it_possible_for_haskell_stack_app_that_uses/,all_ads,6,,,,,,,,,,,,,,,,,,,,
467.0,[],False,ellipticcode0,,[],,text,t2_2wtr8i2y,False,False,False,[],False,False,1642715101,self.haskell,https://www.reddit.com/r/haskell/comments/s8ttci/what_is_an_example_of_a_morphism_which_is_not_a/,{},s8ttci,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s8ttci/what_is_an_example_of_a_morphism_which_is_not_a/,False,,,6,1642715111,1,"In Haskell, or in category theory. Most of examples are use function as morphism.

What is an example in Haskell or other simple example  that is morphism but not a function?",True,False,False,haskell,t5_2qh36,68640,public,self,What is an example of a morphism which is not a function in category theory?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s8ttci/what_is_an_example_of_a_morphism_which_is_not_a/,all_ads,6,,,,,,,,,,,,,,,,,,,,
468.0,[],False,xwinus,,[],,text,t2_kjucw,False,False,False,[],False,False,1642705418,self.haskell,https://www.reddit.com/r/haskell/comments/s8qbzo/headrom_v0430_released_adds_support_for_dart/,{},s8qbzo,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s8qbzo/headrom_v0430_released_adds_support_for_dart/,False,self,"{'enabled': False, 'images': [{'id': '43GVTqdECk7owCX_nHPQeIcJhSF818qE_vAlLj6AW6A', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/wxxDP_tRi2W5OuXrqZ6N90GBGoPaNZ_15u0qXkl-S00.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3dc03947ec20bb646ffc5a3cc14a9e14f15c15ed', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/wxxDP_tRi2W5OuXrqZ6N90GBGoPaNZ_15u0qXkl-S00.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8cc81d20b5b96ab2dcd0184ba18d8beebf3d42d9', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/wxxDP_tRi2W5OuXrqZ6N90GBGoPaNZ_15u0qXkl-S00.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ef2c5cd0e799f83e5075b1500b343aa60433a068', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/wxxDP_tRi2W5OuXrqZ6N90GBGoPaNZ_15u0qXkl-S00.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=6a4658abbafcf23103e235d60b9afbf15324881c', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/wxxDP_tRi2W5OuXrqZ6N90GBGoPaNZ_15u0qXkl-S00.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=d479be385cc1e6a373f919f022c7f24bbd184b62', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/wxxDP_tRi2W5OuXrqZ6N90GBGoPaNZ_15u0qXkl-S00.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=7685fc3b26bf558635141443ad55c07dfd9a17f0', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/wxxDP_tRi2W5OuXrqZ6N90GBGoPaNZ_15u0qXkl-S00.jpg?auto=webp&amp;s=c01d958bb0c8402020759716ff3c0c41f15be914', 'width': 1200}, 'variants': {}}]}",6,1642705428,1,"Hello fellow Haskellers,

today I released new version of [headroom](https://github.com/vaclavsvejcar/headroom), this release ([release notes](https://doc.norcane.com/headroom/v0.4.3.0/whats-new/)) brings support for managing license/copyright headers in *Dart*, *Kotlin* and *PHP* source code files. Also it [fixes annoying issue](https://github.com/vaclavsvejcar/headroom/issues/83) in copyright year updater feature and finally makes headroom fully compilable with GHC 9 (9.0.2 or newer).

In case you never heard of *headroom* \- it's small command line utility that manages license/copyright headers in your source code files. All needed is to create Markdown templates for license/copyright, fill-in some variables and that's it. It can also do some nice stuff like above mentioned feature that [updates years in copyrights](https://doc.norcane.com/headroom/v0.4.3.0/documentation/post-processing/#update-copyright-years) for you. Also some languages have [extended support](https://doc.norcane.com/headroom/v0.4.3.0/documentation/templates/#content-aware-templates), where for example in *Java*/*Scala*/*Kotlin* files you can use class package name as template variable, and in Haskell it can even [extract and reuse variables from whole Haddock module header](https://doc.norcane.com/headroom/v0.4.3.0/documentation/templates/#haskell-support). This release also automatically checks for new versions once per week and notifies user to command line (using [this](https://api.github.com/repos/vaclavsvejcar/headroom/releases/latest) GitHub REST API) - no data collection or telemetry bullshit is happening), but if you don't like it, it [can be easily disabled](https://doc.norcane.com/headroom/v0.4.3.0/documentation/configuration/#global-configuration) in configuration.

*Headroom* is already few years out, but I'm always happy to hear ideas about new features or improvements, feel free to open new issue or PR in such case.",True,False,False,haskell,t5_2qh36,68637,public,self,"headrom v0.4.3.0 released - adds support for Dart, Kotlin &amp; PHP",0,[],1.0,https://www.reddit.com/r/haskell/comments/s8qbzo/headrom_v0430_released_adds_support_for_dart/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
469.0,[],False,mynjj,,[],,text,t2_41zs2dy5,False,False,False,[],False,False,1642697463,self.haskell,https://www.reddit.com/r/haskell/comments/s8nbo8/hoogle_search_for_functions_using_typeclass/,{},s8nbo8,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s8nbo8/hoogle_search_for_functions_using_typeclass/,False,,,6,1642697473,1,"Hi 👋🏻 is there a way I can query Hoogle like that?

The reason of this: I want to get inspiration on usage of Monad implementations that actually require for correctness, for example, associativity of bind. 

The simple examples I can think of don’t strictly require monad properties. Maybe something along the lines of monad transformers or effects, but I still can’t clearly see the need. Maybe the `sequence` function? Or maybe this is more of theoretic interest to prove function properties/uniqueness? I’d love to read your insight on this.",True,False,False,haskell,t5_2qh36,68638,public,self,Hoogle search for functions using typeclass implementations / Insight on monad properties,0,[],1.0,https://www.reddit.com/r/haskell/comments/s8nbo8/hoogle_search_for_functions_using_typeclass/,all_ads,6,,,,,,,,,,,,,,,,,,,,
470.0,[],False,mboes,,[],,text,t2_5d5l,False,False,False,[],False,False,1642693599,tweag.io,https://www.reddit.com/r/haskell/comments/s8lvyj/why_liquid_haskell_matters_tweag/,{},s8lvyj,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s8lvyj/why_liquid_haskell_matters_tweag/,False,link,"{'enabled': False, 'images': [{'id': '0Evd6UWXs4A11yT0I3bSUdOWKNqr9Az0qWvc-WhxMes', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a559bb4d890ff015d6259a06083f8cea81389ab2', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b67964ddc7f6a4e974672b382f7c786c8d3526fe', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=61e37c5f638b0d156c5fdcbc1a5335a3bdbb8729', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=298dca15f47ae031413bbd031ffd301b05793915', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=81eb47deb6039cc11cc169b056aee661e37b1789', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3b60b078d6771ef7f153290885f77a8f50774cdb', 'width': 1080}], 'source': {'height': 4096, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?auto=webp&amp;s=6803e63008eaa75aac55167a9225dd6c2f0316a7', 'width': 4096}, 'variants': {}}]}",6,1642693609,1,,True,False,False,haskell,t5_2qh36,68634,public,default,Why Liquid Haskell matters - Tweag,0,[],1.0,https://www.tweag.io/blog/2022-01-19-why-liquid-haskell/,all_ads,6,,,https://www.tweag.io/blog/2022-01-19-why-liquid-haskell/,140.0,140.0,,,,,,,,,,,,,,,
471.0,[],False,adamgundry,,[],,text,t2_6g0pn,False,False,False,[],False,False,1642688203,well-typed.com,https://www.reddit.com/r/haskell/comments/s8jz2v/haskell_development_job_with_welltyped/,{},s8jz2v,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s8jz2v/haskell_development_job_with_welltyped/,False,,,6,1642688214,1,,True,False,False,haskell,t5_2qh36,68633,public,default,Haskell development job with Well-Typed,0,[],1.0,https://well-typed.com/blog/2022/01/haskell-teaching-and-development-jobs-with-well-typed/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,https://well-typed.com/blog/2022/01/haskell-teaching-and-development-jobs-with-well-typed/,,,,,,,,,,,,,,,,,
472.0,[],False,sridfr,,[],,text,t2_f1wkk8ou,False,False,False,[],False,False,1642687840,discourse.haskell.org,https://www.reddit.com/r/haskell/comments/s8julc/what_are_some_advanced_features_of_haskell_that_i/,{},s8julc,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s8julc/what_are_some_advanced_features_of_haskell_that_i/,False,link,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1642687851,1,,True,False,False,haskell,t5_2qh36,68633,public,default,What are some advanced features of Haskell that I should learn?,0,[],1.0,https://discourse.haskell.org/t/what-are-some-advanced-features-of-haskell-that-i-should-learn/1098?u=srid,all_ads,6,,,https://discourse.haskell.org/t/what-are-some-advanced-features-of-haskell-that-i-should-learn/1098?u=srid,140.0,140.0,,,,,,,,,,,,,,,
473.0,[],False,jamhob,,[],,text,t2_12op5ghx,False,False,False,[],False,False,1642680768,self.haskell,https://www.reddit.com/r/haskell/comments/s8hlr2/template_haskell_help/,{},s8hlr2,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s8hlr2/template_haskell_help/,False,,,6,1642680779,1,"Hello!

I have a function that takes a file path and pulls the file in as a string at compile type. I was wanting to change it so that it got the string from a known symbol.

I have the following code:

    embedFile :: Name -&gt; Q Exp
    embedFile f = do
      name &lt;- reify f
      filename &lt;- case name of
                    (VarI _ (AppT _ (LitT (StrTyLit file))) _) -&gt; return file
                    _                                          -&gt; error ""Couldn't get filename""
    ...

The problem is that When I try to use it in a function, I get:

        • ‘f’ is not in the type environment at a reify
        • In the untyped splice: $(embedFile 'f)
       |
    28 |           template f = $(embedFile 'f)
       |                          ^^^^^^^^^^^^^^^

Where f is of type \``Proxy ""Hello.txt""`

&amp;#x200B;

What am I doing wrong?",True,False,False,haskell,t5_2qh36,68633,public,self,Template Haskell Help,0,[],1.0,https://www.reddit.com/r/haskell/comments/s8hlr2/template_haskell_help/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
474.0,[],False,Odd-Fox-8410,,[],,text,t2_7pefb5kd,False,False,False,[],False,False,1642680368,self.haskell,https://www.reddit.com/r/haskell/comments/s8hhlh/what_is_a_library_in_another_language_that_you/,{},s8hhlh,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/s8hhlh/what_is_a_library_in_another_language_that_you/,False,,,6,1642680378,1,"I'm struggling to come up with a hobby project, and wondered if remaking something from OOP in a functional way might be fun. I thought of writing an Elastic Search library, but that already exists... so.",True,False,False,haskell,t5_2qh36,68633,public,self,What is a library in another language that you wish would exist in Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/s8hhlh/what_is_a_library_in_another_language_that_you/,all_ads,6,,,,,,,,,,,,,,,,,,,,
475.0,[],False,NixOverSlicedBread,,[],,text,t2_1s3ukhhs,False,False,False,[],False,False,1642677169,self.haskell,https://www.reddit.com/r/haskell/comments/s8go3q/why_do_complexsounding_words_tend_to_stand_for/,{},s8go3q,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s8go3q/why_do_complexsounding_words_tend_to_stand_for/,False,,,6,1642677180,1,"* **Monad.** Scary, but it turns out it's just a place where you can do one thing after another.
* **EDSL.** Scary, but it [turns out it's just programming](https://www.reddit.com/r/haskell/comments/lz400v/comment/gpzhrux/?utm_source=share&amp;utm_medium=web2x&amp;context=3). (Why the need for a special concept?)

(These two are completely different beasts. I can understand the need for the monad concept, because it's very well defined and incorporates a few precise things. However ""EDSL"" is a very ill-defined concept that seems more useless to me as time goes by.)

In general, do people tend to make things too complicated?",False,False,False,haskell,t5_2qh36,68634,public,self,Why do complex-sounding words tend to stand for simple concepts?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s8go3q/why_do_complexsounding_words_tend_to_stand_for/,all_ads,6,,,,,,,,,,,,,,,,,,,,
476.0,[],False,jmromeroes,,[],,text,t2_u0epm,False,False,False,[],False,False,1642659396,self.haskell,https://www.reddit.com/r/haskell/comments/s8c44s/simple_servant_persistent_katip_template_for/,{},s8c44s,False,True,False,True,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s8c44s/simple_servant_persistent_katip_template_for/,False,self,"{'enabled': False, 'images': [{'id': 'uigiO7RBOO3Ipmt3K07oZ-qWDE00837Q4e7g02_ZHLU', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/EnVNGmEqFS68uFm_e51CbrQfKqnwBEDdM7aKKef8g1s.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=690462b5114ea3b9ff85619f833e4a8ee7caa7a4', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/EnVNGmEqFS68uFm_e51CbrQfKqnwBEDdM7aKKef8g1s.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=20120aa6a86b75ea64179f01607cdae1069eac21', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/EnVNGmEqFS68uFm_e51CbrQfKqnwBEDdM7aKKef8g1s.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a4e5e4173b290d27d1952d15eb41e9d1b7cdc77c', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/EnVNGmEqFS68uFm_e51CbrQfKqnwBEDdM7aKKef8g1s.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=277328a5e56e6d617f479b5e726bcbee342df75c', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/EnVNGmEqFS68uFm_e51CbrQfKqnwBEDdM7aKKef8g1s.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=4ad218c5f7ac2a0ba724a6703c942c3c673e785d', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/EnVNGmEqFS68uFm_e51CbrQfKqnwBEDdM7aKKef8g1s.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=018e4ef7e75bfdb6022d46ecd8318ee18477d67a', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/EnVNGmEqFS68uFm_e51CbrQfKqnwBEDdM7aKKef8g1s.jpg?auto=webp&amp;s=39bf40f1a65c541be316884a41c3412547bbcd0b', 'width': 1200}, 'variants': {}}]}",6,1642659406,1,"[Simple servant-persistent template](https://github.com/jmromeroes/servant-persistent-template) with up-to-date libraries, multipart form data API, basic User management model, property testing, simple JWT authentication, for example, public/private routes, among other things. It's inspired by the amazing [Matt Parsons' template](https://github.com/parsonsmatt/servant-persistent) but has some different approaches for project structure, libraries are updated, and has more features to start playing with Servant like a multipart form data endpoint, property testing, and public/private example routes.

It's not much, but it's honest work. :D",True,False,False,haskell,t5_2qh36,68632,public,self,Simple Servant + Persistent + Katip template for starting a new project,0,[],1.0,https://www.reddit.com/r/haskell/comments/s8c44s/simple_servant_persistent_katip_template_for/,all_ads,6,,,,,,,,,,,,,,,,,,,,
477.0,[],False,simonmic,,[],,text,t2_3a0g0,False,False,False,[],False,False,1642631943,self.haskell,https://www.reddit.com/r/haskell/comments/s82qmo/moldable_development_what_fp_can_learn_from/,{},s82qmo,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/s82qmo/moldable_development_what_fp_can_learn_from/,False,self,"{'enabled': False, 'images': [{'id': 'Q3aiJkpQF9n2lrDm61NZFQqwiWdL6lLR2smRzYctPcQ', 'resolutions': [{'height': 72, 'url': 'https://external-preview.redd.it/I8bHoBmPnskuxHNBZuRsAkh1KGpKkKBDLucsA6RBQ98.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=39e2f78903db18b77c1d5c04197e3f7dbcacbe93', 'width': 108}, {'height': 144, 'url': 'https://external-preview.redd.it/I8bHoBmPnskuxHNBZuRsAkh1KGpKkKBDLucsA6RBQ98.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=024ed2c222a268332999be8351a3cb7cf7523ba6', 'width': 216}, {'height': 214, 'url': 'https://external-preview.redd.it/I8bHoBmPnskuxHNBZuRsAkh1KGpKkKBDLucsA6RBQ98.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f920adfee897cec3784148a3d8f5f8c82bff83cc', 'width': 320}, {'height': 429, 'url': 'https://external-preview.redd.it/I8bHoBmPnskuxHNBZuRsAkh1KGpKkKBDLucsA6RBQ98.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e982f6b5e9076ed4841c023da027c8b1c6e322da', 'width': 640}, {'height': 644, 'url': 'https://external-preview.redd.it/I8bHoBmPnskuxHNBZuRsAkh1KGpKkKBDLucsA6RBQ98.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b7d6aa4cd32c04a42391ee5d1a987b555c064cbc', 'width': 960}, {'height': 724, 'url': 'https://external-preview.redd.it/I8bHoBmPnskuxHNBZuRsAkh1KGpKkKBDLucsA6RBQ98.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d6242a6bd3736cec1cba9d503b07eed022a6b821', 'width': 1080}], 'source': {'height': 1868, 'url': 'https://external-preview.redd.it/I8bHoBmPnskuxHNBZuRsAkh1KGpKkKBDLucsA6RBQ98.jpg?auto=webp&amp;s=a4ca3266d40e455fdd460f4d72666b1a62e049fa', 'width': 2784}, 'variants': {}}]}",6,1642631954,1,"[Two for one:] I have been enjoying [Moldable Development](https://gtoolkit.com), and thinking it could be a meeting point between Smalltalk and Haskell. Then youtube showed me this excellent [Aditya Siram talk from Lambda World 2018](https://www.youtube.com/watch?v=baxtyeFVn3w).",False,False,False,haskell,t5_2qh36,68629,public,self,Moldable Development + What FP can learn from Smalltalk,0,[],1.0,https://www.reddit.com/r/haskell/comments/s82qmo/moldable_development_what_fp_can_learn_from/,all_ads,6,be2af704-5664-11eb-8e65-0ecd290c3053,video,,,,,,,,,,,,,,,,,,
478.0,[],False,AdOdd5690,,[],,text,t2_77ggiprk,False,False,False,[],False,False,1642624912,self.haskell,https://www.reddit.com/r/haskell/comments/s7zz69/advanced_programming_exercisesapps/,{},s7zz69,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s7zz69/advanced_programming_exercisesapps/,False,,,6,1642624923,1,"Hello! I've been using Haskell now for more than a year now and would like to code something more complicated, specifically something that requires me to use Monad &amp; Monad Transformers. I've followed a couple of tutorials but would like to do something from scratch.

Things that I would also like to try out are Concurrency &amp; IPC to add to the complication (nothing that require some web framework - not interested in web right now). If you have any cool project ideas let me know!",True,False,False,haskell,t5_2qh36,68626,public,self,Advanced programming exercises/apps recommendations to code,0,[],1.0,https://www.reddit.com/r/haskell/comments/s7zz69/advanced_programming_exercisesapps/,all_ads,6,,,,,,,,,,,,,,,,,,,,
479.0,[],False,BDSMm4asubthrowaway,,[],,text,t2_d85s2vjf,False,False,False,[],False,False,1642624891,self.haskell,https://www.reddit.com/r/haskell/comments/s7zyu6/best_framework_for_web_json_api/,{},s7zyu6,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s7zyu6/best_framework_for_web_json_api/,False,,,6,1642624901,1,Looking to use haskell for my next project. Whats a good framework without too much magic but thats still fairly usable for building JSON API's?,True,False,False,haskell,t5_2qh36,68626,public,self,Best framework for web JSON API?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s7zyu6/best_framework_for_web_json_api/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
480.0,[],False,portw,,[],,text,t2_131ki2,False,False,False,[],False,False,1642599089,self.haskell,https://www.reddit.com/r/haskell/comments/s7q6vg/file_system_in_ghcjs/,{},s7q6vg,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s7q6vg/file_system_in_ghcjs/,False,,,6,1642599100,1,"Using Reflex platform I'm building a web projects.
As I understood ghcjs won't let you read/write local files.
Do you have any solution (like using browser storage) ?",True,False,False,haskell,t5_2qh36,68620,public,self,File system in GHCJS,0,[],1.0,https://www.reddit.com/r/haskell/comments/s7q6vg/file_system_in_ghcjs/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
481.0,[],False,average_emacs_user,,[],,text,t2_gh8b53ad,False,False,False,[],False,False,1642595339,self.haskell,https://www.reddit.com/r/haskell/comments/s7p29y/letin_vs_function_application_space_leaks/,{},s7p29y,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s7p29y/letin_vs_function_application_space_leaks/,False,,,6,1642595349,1,"Run the following in GHCI:

    n = 10^8 -- Arbitrary big number
    let (a,b) = partition even [0..] in (a!!n,b!!n)
    (\(a,b) -&gt; (a!!n, b!!n)) (partition even 0..)

In theory, it seems like lines 2 and 3 should function the same way. However, there is a difference. 

Executing line 2 uses virtually no additional memory, but a and b are computed separately (there is a noticeable delay between the first value being printed and the second value being printed).

Executing line 3 computes a and b at the same time, but has a memory overhead proportional to n. For sufficiently large n, the process runs out of memory and terminates.

What is the explanation for the observed difference in behavior between let-in and function application?",True,False,False,haskell,t5_2qh36,68619,public,self,let-in vs function application: space leaks,0,[],1.0,https://www.reddit.com/r/haskell/comments/s7p29y/letin_vs_function_application_space_leaks/,all_ads,6,,,,,,,,,,,,,,,,,,,,
482.0,[],False,st-ario,,[],,text,t2_ikumnnbz,False,False,False,[],False,False,1642582988,self.haskell,https://www.reddit.com/r/haskell/comments/s7lytb/ultimate_tictactoe_ai/,{},s7lytb,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/s7lytb/ultimate_tictactoe_ai/,False,self,"{'enabled': False, 'images': [{'id': '_ZDkSFzAGBerr1rQdCcQnFEyHwIpD6Mp5qoye4HE52I', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/F4KJd4YYbNWA8IQnUtOe2u1daEwvxTSIj_Epvb1Vn_g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4133436096fc565b8e3adf354a4782e9692a88cf', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/F4KJd4YYbNWA8IQnUtOe2u1daEwvxTSIj_Epvb1Vn_g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=24c97907a70a08364d78887cbae3c2b1ce25702b', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/F4KJd4YYbNWA8IQnUtOe2u1daEwvxTSIj_Epvb1Vn_g.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a3676b116656425c0fb1f07efbfbc741fbf752d3', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/F4KJd4YYbNWA8IQnUtOe2u1daEwvxTSIj_Epvb1Vn_g.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=39c3943ce2e8b36b84658389595ed1e52f3fd144', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/F4KJd4YYbNWA8IQnUtOe2u1daEwvxTSIj_Epvb1Vn_g.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2627aac3c5b3309c461221f457c516f52ba1fe30', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/F4KJd4YYbNWA8IQnUtOe2u1daEwvxTSIj_Epvb1Vn_g.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=38d09e2ec561c8ca9aff6f030b1ebc0890559ae8', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/F4KJd4YYbNWA8IQnUtOe2u1daEwvxTSIj_Epvb1Vn_g.jpg?auto=webp&amp;s=8b684578ff69015d5ad9d01f6c90aeae5887ff16', 'width': 1200}, 'variants': {}}]}",6,1642582998,1,"A while ago, I did [a project](https://github.com/st-ario/ultimate-tic-hask-toe) consisting of a small AI for [ultimate tic-tac-toe](https://en.wikipedia.org/wiki/Ultimate_tic-tac-toe) as a way to get my hands dirty with Haskell.  I would appreciate any sorts of comments or feedback on it.",True,False,False,haskell,t5_2qh36,68618,public,self,Ultimate tic-tac-toe AI,0,[],1.0,https://www.reddit.com/r/haskell/comments/s7lytb/ultimate_tictactoe_ai/,all_ads,6,,,,,,,,,,,,,,,,,,,,
483.0,[],False,fondaschielkgu,,[],,text,t2_xsra5,False,False,False,[],False,False,1642566381,juicyfield.at,https://www.reddit.com/r/haskell/comments/s7hfoq/juicyfields_cannabis_crowdgrowing_platform/,{},s7hfoq,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s7hfoq/juicyfields_cannabis_crowdgrowing_platform/,False,link,"{'enabled': False, 'images': [{'id': 'GVEXaNdbZdKCl6Y18N6-DVXwbRCkhc2Qw682DcHshyw', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/Pi_TEG1S-xPoiPUO13XwPUmz2TItfoK25UukyjeJj-Q.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=29f66c877b5c5bbbf76ae47b6356b2689f3acc3e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/Pi_TEG1S-xPoiPUO13XwPUmz2TItfoK25UukyjeJj-Q.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e6c155700838df4de13c50d79d11e4ea36253a48', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/Pi_TEG1S-xPoiPUO13XwPUmz2TItfoK25UukyjeJj-Q.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d039eccd0b1b1d55c258a940409bece5a692444d', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/Pi_TEG1S-xPoiPUO13XwPUmz2TItfoK25UukyjeJj-Q.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0bcbdda2d332232222def296a03d9e0b9b6f524b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/Pi_TEG1S-xPoiPUO13XwPUmz2TItfoK25UukyjeJj-Q.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=d3d641a4dca07cf1c018b736fbd4dc2cf0d828df', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/Pi_TEG1S-xPoiPUO13XwPUmz2TItfoK25UukyjeJj-Q.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=217020dd84b80fc28a7c9985b66c380090f9b030', 'width': 1080}], 'source': {'height': 1500, 'url': 'https://external-preview.redd.it/Pi_TEG1S-xPoiPUO13XwPUmz2TItfoK25UukyjeJj-Q.jpg?auto=webp&amp;s=c4f3624990092c657bc5f4c8dd510b346bfff543', 'width': 1500}, 'variants': {}}]}",6,1642566392,1,,False,False,False,haskell,t5_2qh36,68616,public,default,JuicyFields - Cannabis Crowdgrowing Platform,0,[],1.0,https://juicyfield.at,all_ads,6,,,https://juicyfield.at,140.0,140.0,,reddit,,,,,,,,,,,,,
484.0,[],False,jamhob,,[],,text,t2_12op5ghx,False,False,False,[],False,False,1642548738,self.haskell,https://www.reddit.com/r/haskell/comments/s7baaq/question_servant_effects_in_mimerenderer/,{},s7baaq,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s7baaq/question_servant_effects_in_mimerenderer/,False,,,6,1642548749,1,"Hello!

I thought I'd try to make a nice HTML content type for servant using mustache templates.

I have a version that works.... but it uses unsafePerformIO because it has to load the templates from disk.

The mustache library provides a way to load templates at compile time, which I like the idea of! But I can't seem to be able to pass the template file name to the ExpQ function (I get it as a known symbol).

Both options have made me hit my knowledge limit. I have no idea how to grab a known symbol as a string in template haskell, nor do I know if my unsafePerformIO will screw me in the future.

Can anyone shed some light on these two points?",True,False,False,haskell,t5_2qh36,68615,public,self,Question: Servant Effects in MimeRenderer,0,[],1.0,https://www.reddit.com/r/haskell/comments/s7baaq/question_servant_effects_in_mimerenderer/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
485.0,[],False,visortelle,,[],,text,t2_15hg9d,False,False,False,[],False,False,1642544040,self.haskell,https://www.reddit.com/r/haskell/comments/s79gpm/haskell_spotlight_extension_for_vscode_preview/,{},s79gpm,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s79gpm/haskell_spotlight_extension_for_vscode_preview/,False,self,"{'enabled': False, 'images': [{'id': 'k6-gIJqHymf6mPuAn1OE9ijC-29Um1g-VN_Ds6dzees', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/1W9OdFIE3axh_aDL7WXZUBmUt8zywdZt__cyHHcVjxI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6c64fead880b0fad12ab016a0ae06237e4808a8a', 'width': 108}], 'source': {'height': 192, 'url': 'https://external-preview.redd.it/1W9OdFIE3axh_aDL7WXZUBmUt8zywdZt__cyHHcVjxI.jpg?auto=webp&amp;s=10a3fcd725c4376165a441eba746ea18f466c6b7', 'width': 192}, 'variants': {}}]}",6,1642544050,1,"Search on Hoogle and Hackage.

Install: [https://marketplace.visualstudio.com/items?itemName=visortelle.haskell-spotlight](https://marketplace.visualstudio.com/items?itemName=visortelle.haskell-spotlight)

Bug reports: [https://github.com/visortelle/hackage-ui/issues/11](https://github.com/visortelle/hackage-ui/issues/11)

Feedback appreciated.",True,False,False,haskell,t5_2qh36,68612,public,self,Haskell Spotlight extension for VSCode (preview).,0,[],1.0,https://www.reddit.com/r/haskell/comments/s79gpm/haskell_spotlight_extension_for_vscode_preview/,all_ads,6,,,,,,,,,,,,,,,,,,,,
486.0,[],False,johnorford,,[],,text,t2_14ajvp,False,False,False,[],False,False,1642528001,self.haskell,https://www.reddit.com/r/haskell/comments/s737lq/scan/,{},s737lq,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s737lq/scan/,False,,,6,1642528012,1,"I know when to use map and fold - but scan?

&amp;#x200B;

seems straightforward enough,  but never bump into use cases, or maybe there are some times where it could be nice, but i don't reach for it.

&amp;#x200B;

any words of wisdom?",True,False,False,haskell,t5_2qh36,68609,public,self,Scan,0,[],1.0,https://www.reddit.com/r/haskell/comments/s737lq/scan/,all_ads,6,,,,,,,,,,,,,,,,,,,,
487.0,[],False,Tarmen,,[],,text,t2_7mjdo,False,False,False,[],False,False,1642491209,tarmean.github.io,https://www.reddit.com/r/haskell/comments/s6rvbj/pruning_with_applicativedo/,{},s6rvbj,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s6rvbj/pruning_with_applicativedo/,False,,,6,1642491220,1,,True,False,False,haskell,t5_2qh36,68602,public,default,Pruning with ApplicativeDo,0,[],1.0,https://tarmean.github.io/branch_and_bound.html,all_ads,6,,,https://tarmean.github.io/branch_and_bound.html,,,,reddit,,,,,,,,,,,,,
488.0,[],False,Zestyclose-Orange468,,[],,text,t2_6gzulffj,False,False,False,[],False,False,1642480715,self.haskell,https://www.reddit.com/r/haskell/comments/s6os77/question_about_correctbetter_usage_of_stm_tvar_in/,{},s6os77,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s6os77/question_about_correctbetter_usage_of_stm_tvar_in/,False,,,6,1642480725,1,"I've just recently read about STM's and wanted to seek advice on correctness and good practices.

Suppose we have a `ChatSession` defined as below:

    type Message = (UUID, Text)
    
    data ChatSession = ChatSession
        { sessionID      :: UUID
        , clientConns    :: Map UUID WS.Connection
        , chatHistory    :: Seq Message
        , ... -- some more fields
        }

My question concerns modifying `chatHistory` a sequence of all messages sent within a `ChatSession`.  If we were to use `TVar` on  `chatHistory`, we have the following:

    updateChatHistory :: TVar (Seq Message) -&gt; (UUID, Text) -&gt; STM ()

But what if we `TVar` on `ChatSession` itself? Then we would have

    updateChatHistory :: TVar ChatSession -&gt; Message -&gt; STM ()

Where inside it, the actually appending of a `Message` to the `chatHistory` remains a pure operation on `Seq.`

Which of the two makes more sense? Should I split my data structure among multiple `TVar`'s, or have the entire data structure be a `TVar`?

Thanks so much in advance!",True,False,False,haskell,t5_2qh36,68603,public,self,Question about correct/better usage of STM TVar in data types.,0,[],1.0,https://www.reddit.com/r/haskell/comments/s6os77/question_about_correctbetter_usage_of_stm_tvar_in/,all_ads,6,,,,,,,,,,,,,,,,,,,,
489.0,[],False,linalogos,,[],,text,t2_9wydagm6,False,False,False,[],False,False,1642443167,self.haskell,https://www.reddit.com/r/haskell/comments/s6al5v/problem_with_converting_integer_to_string/,{},s6al5v,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s6al5v/problem_with_converting_integer_to_string/,False,,,6,1642443178,1,"Hi everyone!
Complete newbie here, I started with Haskell a few days ago and I’ve been solving some exercises. There is a major blocker I have now: when trying to concatenate the result of the local recursive function which returns an int to a String I receive an error. I was using show to convert int to String. Can’t really figure out how to fix this. 
Thank you in advance for your help!",True,False,False,haskell,t5_2qh36,68596,public,self,Problem with converting Integer to String,0,[],1.0,https://www.reddit.com/r/haskell/comments/s6al5v/problem_with_converting_integer_to_string/,all_ads,6,,,,,,,,,,,,,,,,,,,,
490.0,[],False,notooth1,,[],,text,t2_sm171,False,False,False,[],False,False,1642436972,self.haskell,https://www.reddit.com/r/haskell/comments/s680x1/need_help_with_webdriver/,{},s680x1,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s680x1/need_help_with_webdriver/,False,,,6,1642437006,1,"Can anyone help me fix the error in this code:

    let torConfig = defaultConfig {wdCapabilities = defaultCaps {proxy = Manual ""localhost:9060"" ""localhost:9060"" ""localhost:9060""}}
    runSession torConfig $ do
                        s &lt;- getSession
                        return (Just s)

Error:                    

    BadJSON ""key \""status\"" not found""

My system is: Debian 11.2, Firefox 91.5.0esr, Gecko driver 0.30.0, Selenium webdriver 4.1.1.",True,False,False,haskell,t5_2qh36,68596,public,self,Need help with webdriver,0,[],1.0,https://www.reddit.com/r/haskell/comments/s680x1/need_help_with_webdriver/,all_ads,6,,,,,,,,,,,,,,,,,,,,
491.0,[],False,jjeeb,,[],,text,t2_by8l7,False,False,False,[],False,False,1642416216,self.haskell,https://www.reddit.com/r/haskell/comments/s616wp/logict_usage/,{},s616wp,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s616wp/logict_usage/,False,,,6,1642416227,1,"Hello there, 
I'm trying to understand how to use the logict https://hackage.haskell.org/package/logict

I understand the examples and how it works with basic variables, but I don't manage to use it with a more complex model.

I'm trying to apply it on a Sudoku-like model, first applying the constraint on the rows :

```haskell
import Data.Map ((!))
import Data.Map.Strict (Map)
import qualified Data.Map.Strict as Map
import qualified Data.Set as Set

type Pos = (Int, Int)

type Sudoku a = Map Pos a

numbers :: [Int]
numbers = [1 .. 9]

newSudoku :: Sudoku (Logic Int)
newSudoku = Map.fromList [((r, c), choose numbers) | r &lt;- numbers, c &lt;- numbers]

rows :: [[Pos]]
rows  = [ [(r, c) | c &lt;- numbers] | r &lt;- numbers]

getAll :: Ord k =&gt; Map k v -&gt; [k] -&gt; [v]
getAll m ks = [m ! k | k &lt;- ks ]

problem :: Sudoku (Logic Int) -&gt; Logic (Sudoku Int)
problem s = do
  s' &lt;- sequenceA s
  guard $ and (allDiff . getAll s' &lt;$&gt; rows)
  pure s'

allDiff :: [Int] -&gt; Bool
allDiff xs = length xs == (Set.size . Set.fromList) xs

showSudoku :: Sudoku Int -&gt; String
showSudoku s = unlines [unwords [show (s ! (r, c)) | c &lt;- numbers] | r &lt;- numbers]

choose :: [a] -&gt; Logic a
choose = foldMap pure

main :: IO ()
main =
  (putStrLn . showSudoku) $ observe (problem newSudoku)

```

This usage is probably naive, the program runs forever.
I'm not convinced about the `sequenceA` usage, put it there to typecheck and be able to write my constraint.

I also tried another approach where I traverse the Map, trying to put a constraint on each cell, but I don't manage to insert a variable into the different 3 constraints (rows, columns, square).

My conclusion is I don't understand the library usage, how would you solve this kind of problem?",True,False,False,haskell,t5_2qh36,68596,public,self,LogicT usage,0,[],1.0,https://www.reddit.com/r/haskell/comments/s616wp/logict_usage/,all_ads,6,,,,,,,,,,,,,,,,,,,,
492.0,[],False,rkaippully,,[],,text,t2_s747u,False,False,False,[],False,False,1642401543,self.haskell,https://www.reddit.com/r/haskell/comments/s5xapc/ann_webgear_100_composable_typesafe_http_apis_in/,{},s5xapc,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s5xapc/ann_webgear_100_composable_typesafe_http_apis_in/,False,,,6,1642401553,1,"I am pleased to announce the release of WebGear 1.0.0 - a library to build composable, type-safe APIs.

[https://haskell-webgear.github.io/](https://haskell-webgear.github.io/)

This release features:

* Support to build APIs using arrows.
* Support to build a Warp server from the API definitions
* Support to generate OpenAPI documentation from the API definitions

A detailed user guide is available [here](https://haskell-webgear.github.io/user_guide/1.0.0/index.html). 

A real world example application is available [here](https://github.com/haskell-webgear/webgear-example-realworld).",True,False,False,haskell,t5_2qh36,68594,public,self,"[ANN] WebGear 1.0.0: Composable, type-safe HTTP APIs in Haskell",0,[],1.0,https://www.reddit.com/r/haskell/comments/s5xapc/ann_webgear_100_composable_typesafe_http_apis_in/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
493.0,[],False,typesanitizer,,[],,text,t2_84xgwwcu,False,False,False,[],False,False,1642392270,self.haskell,https://www.reddit.com/r/haskell/comments/s5ughh/what_is_haskells_secret_sauce_for_a_fast_ffi/,{},s5ughh,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s5ughh/what_is_haskells_secret_sauce_for_a_fast_ffi/,False,,,6,1642392280,1,"I've read in multiple places that the Haskell FFI is particularly fast. For example, this [blog post on BigInt benchmarks](https://www.wilfred.me.uk/blog/2014/10/20/the-fastest-bigint-in-the-west/) points out:

&gt; Finally, GHC uses GMP, and its performance is nothing short of extraordinary. GHC is clearly tuned to call into GMP with extremely low overheads.

If you look at the numbers in the [FFI overhead benchmarks](https://github.com/dyu/ffi-overhead), Haskell's overhead is almost the same as other systems languages, and much lower than other GCed languages.

What's the secret sauce behind this result?

I've started reading [Extending the Haskell foreign function interface with concurrency](https://www.microsoft.com/en-us/research/wp-content/uploads/2004/09/conc-ffi.pdf); do y'all have any reading recommendations, such as parts of the source code, apart from this one?",True,False,False,haskell,t5_2qh36,68593,public,self,What is Haskell's secret sauce for a fast FFI?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s5ughh/what_is_haskells_secret_sauce_for_a_fast_ffi/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
494.0,[],False,Tarmen,,[],,text,t2_7mjdo,False,False,False,[],False,False,1642362136,tarmean.github.io,https://www.reddit.com/r/haskell/comments/s5jp2e/abstracting_over_branch_and_bound/,{},s5jp2e,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s5jp2e/abstracting_over_branch_and_bound/,False,,,6,1642362147,1,,True,False,False,haskell,t5_2qh36,68584,public,default,Abstracting over Branch and Bound,0,[],1.0,https://tarmean.github.io/branch_and_bound.html,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://tarmean.github.io/branch_and_bound.html,,,,reddit,,,,,,,,,,,,,
495.0,[],False,thomasballinger,,[],,text,t2_476aj,False,False,False,[],False,False,1642347238,self.haskell,https://www.reddit.com/r/haskell/comments/s5e8xd/pandoc_in_the_browser_w_lua_possible_contract_gig/,{},s5e8xd,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s5e8xd/pandoc_in_the_browser_w_lua_possible_contract_gig/,False,self,"{'enabled': False, 'images': [{'id': 'nJApRzI_LqIaJmZRhzFQbzRyb3_t799qr_nPbyju2mY', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/ct0DBOxuWSV7VMJxmLGlnB2vT2Js6jFIkPwIQYLGIiU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2121899d048e867555641f23c2792086012710d6', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/ct0DBOxuWSV7VMJxmLGlnB2vT2Js6jFIkPwIQYLGIiU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=beabd9eb3bf89fbf8cf054cbdeb876a33d7c637d', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/ct0DBOxuWSV7VMJxmLGlnB2vT2Js6jFIkPwIQYLGIiU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3be29437448860194261229a8c40c27a74fbf167', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/ct0DBOxuWSV7VMJxmLGlnB2vT2Js6jFIkPwIQYLGIiU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d452719ac40d48da61e3d43e521377908a4557b6', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/ct0DBOxuWSV7VMJxmLGlnB2vT2Js6jFIkPwIQYLGIiU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=3a3257ed6d7f4940d4adcf09c4834cf1cc88175a', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/ct0DBOxuWSV7VMJxmLGlnB2vT2Js6jFIkPwIQYLGIiU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=562a5b744da41d9cf1f23b28da90eda93bdf786a', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/ct0DBOxuWSV7VMJxmLGlnB2vT2Js6jFIkPwIQYLGIiU.jpg?auto=webp&amp;s=09c3435360c5a4297a45aab864bb5a4e8385d225', 'width': 1200}, 'variants': {}}]}",6,1642347248,1,"I'd like to get [pandoc](https://github.com/jgm/pandoc) into the browser. I've done some emscripten work (C++ to browser) but know nothing about compiling Haskell to the wasm+js. This could be a contract gig, the goal is an open source repo with the same license as Pandoc that can do a build of Pandoc for the browser that can run lua filters. What I'm worried about is getting emscripten to compile the C code (including the lua vm), getting Asterius or ghcjs to compile the Haskell, and getting these linked up somehow.

Hopefully work in a fork could be upstreamed, but I think having a proof of concept would make that more likely.

related work:

* https://github.com/y-taka-23/wasm-pandoc (works, but no lua filters)
* https://github.com/tweag/asterius/issues/851 (asterius has a demo, but no source, and I -assume no lua filter support)

I'm also looking for free advice. How should I deal with the C pieces? Turn things into dylibs, something something linking? Does ghcjs have a way to link output from emscripten? Presumably I should not compile the lua vm separately and inject a JS shim for Pandoc communicating with it, although this would be more in my comfort zone?

([cross-post from r/webassembly](https://www.reddit.com/r/WebAssembly/comments/s5do4s/pandoc_in_the_browser_possible_contract_gig/))",True,False,False,haskell,t5_2qh36,68579,public,self,Pandoc in the browser w/ lua (possible contract gig?),0,[],1.0,https://www.reddit.com/r/haskell/comments/s5e8xd/pandoc_in_the_browser_w_lua_possible_contract_gig/,all_ads,6,,,,,,,,,,,,,,,,,,,,
496.0,[],False,rbrucesp,,[],,text,t2_cascywq,False,False,False,[],False,False,1642342256,self.haskell,https://www.reddit.com/r/haskell/comments/s5cnld/hindleymilner_type_interference/,{},s5cnld,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s5cnld/hindleymilner_type_interference/,False,,,6,1642342267,1,"Hello,

&amp;#x200B;

I am looking for alternatives for the ""Algorithm W"" for type interference.

I saw another way to implement this in Stephen Diehls book : [http://dev.stephendiehl.com/fun/006\_hindley\_milner.html](http://dev.stephendiehl.com/fun/006_hindley_milner.html) 

I like the idea of splitting up the generation of constraints and solving these constraints.

But I don't know where this algorithm is from and if there are better algorithms/implementations for type interference. 

Can you please help me about that.",True,False,False,haskell,t5_2qh36,68576,public,self,Hindley-Milner Type Interference,0,[],1.0,https://www.reddit.com/r/haskell/comments/s5cnld/hindleymilner_type_interference/,all_ads,6,,,,,,,,,,,,,,,,,,,,
497.0,[],False,Sleezebag,,[],,text,t2_7lfs1,False,False,False,[],False,False,1642338253,self.haskell,https://www.reddit.com/r/haskell/comments/s5bh2p/is_core_the_level_below_haskell_that_we_should/,{},s5bh2p,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s5bh2p/is_core_the_level_below_haskell_that_we_should/,False,,,6,1642338263,1,"I’ve read here on Reddit, that a programmer should understand the level below the one they are programming in. As in a c programmer should understand some assembly, a Java programmer should understand the jvm. What is the equivalent in Haskell and is it something we should learn in order to write better code?",True,False,False,haskell,t5_2qh36,68572,public,self,Is core the level below Haskell that we should understand?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s5bh2p/is_core_the_level_below_haskell_that_we_should/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
498.0,[],False,LittleJian,,[],,text,t2_7kzaagf1,False,False,False,[],False,False,1642320559,self.haskell,https://www.reddit.com/r/haskell/comments/s573pb/whats_the_best_way_to_set_up_haskell_environment/,{},s573pb,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s573pb/whats_the_best_way_to_set_up_haskell_environment/,False,,,6,1642320570,1,"I tried to install stack by home-brew, but it works weirdly, such as, return a segment fall when I run `stack new my-project`. Should I use rosetta 2 to run a x86 stack? I'm new to macOS.",True,False,False,haskell,t5_2qh36,68573,public,self,What's the best way to set up Haskell environment on m1 pro ?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s573pb/whats_the_best_way_to_set_up_haskell_environment/,all_ads,6,,,,,,,,,,,,,,,,,,,,
499.0,[],False,VincyThePrincy,,[],,text,t2_z2irrj2,False,False,False,[],False,False,1642307373,self.haskell,https://www.reddit.com/r/haskell/comments/s53hb2/is_id_special/,{},s53hb2,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s53hb2/is_id_special/,False,,,6,1642307383,1,"`id` seems like the only polymorphic function which doesn't use a type class somehow. Does this make id a special case? I see other `a -&gt; a` functions (no class constraints) on Hoogle, but they appear to be mostly evaluation control primitive variants of id. Does that type checker have to make a special case for id?",True,False,False,haskell,t5_2qh36,68572,public,self,Is id special?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s53hb2/is_id_special/,all_ads,6,,,,,,,,,,,,,,,,,,,,
500.0,[],False,_jackdk_,,[],,text,t2_5is3sv9k,False,False,False,[],False,False,1642293858,jackkelly.name,https://www.reddit.com/r/haskell/comments/s4z1z9/how_long_is_your_list/,{},s4z1z9,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s4z1z9/how_long_is_your_list/,False,,,6,1642293868,1,,True,False,False,haskell,t5_2qh36,68568,public,default,How Long is your List?,0,[],1.0,http://jackkelly.name/blog/archives/2022/01/15/how_long_is_your_list/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,http://jackkelly.name/blog/archives/2022/01/15/how_long_is_your_list/,,,,,,,,,,,,,,,,,
501.0,[],False,isovector,,[],,text,t2_pir4g,False,False,False,[],False,False,1642291968,anchor.fm,https://www.reddit.com/r/haskell/comments/s4yegv/the_cofree_coffee_cast_a_new_podcast_interviewing/,{},s4yegv,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/s4yegv/the_cofree_coffee_cast_a_new_podcast_interviewing/,False,link,"{'enabled': False, 'images': [{'id': 'ylToKQUblWewmvcF1lXVqrNnd1bzxklhaakgflxJdRI', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/sG9NjCdWMTYauhv6LQP18eqg3A8sWOIpcZDqcHG-U2g.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=809e5bc3d228203449fef7ad5004b81adb4c8517', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/sG9NjCdWMTYauhv6LQP18eqg3A8sWOIpcZDqcHG-U2g.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=4dd94a323c0d54f4b8633ae40ed071d48a24b18d', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/sG9NjCdWMTYauhv6LQP18eqg3A8sWOIpcZDqcHG-U2g.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f3286664ccc94d71e2b7454f0e53c241bbc933ff', 'width': 320}], 'source': {'height': 400, 'url': 'https://external-preview.redd.it/sG9NjCdWMTYauhv6LQP18eqg3A8sWOIpcZDqcHG-U2g.jpg?auto=webp&amp;s=da2d53058ca8a192ba4ec52d7a563fd7277f8560', 'width': 400}, 'variants': {}}]}",6,1642291979,1,,True,False,False,haskell,t5_2qh36,68567,public,default,"The Cofree Coffee Cast --- a new podcast interviewing the FP community, hosted by Sandy Maguire",0,[],1.0,https://anchor.fm/cofree-coffee,all_ads,6,25c3bc14-5d7e-11eb-8d29-0e2c6cfa9d83,audio,https://anchor.fm/cofree-coffee,140.0,140.0,,,,,,,"{'oembed': {'author_name': 'The Cofree Coffee Cast', 'description': 'In which Jonathan Lorimer discusses getting into programming as an adult, hiring a programming coach, building communities, mentorship, data vs codata, the use of philosophy in the modern world, and the importance of taking yourself seriously.', 'height': 102, 'html': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_nologo400%2F21070805%2F21070805-1642291722503-7db6d800aa332.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'provider_name': 'Anchor FM Inc.', 'provider_url': 'https://anchor.fm', 'thumbnail_height': 400, 'thumbnail_url': 'https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_nologo400/21070805/21070805-1642291722503-7db6d800aa332.jpg', 'thumbnail_width': 400, 'title': 'The Cofree Coffee Cast', 'type': 'rich', 'version': '1.0', 'width': 400}, 'type': 'anchor.fm'}","{'content': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_nologo400%2F21070805%2F21070805-1642291722503-7db6d800aa332.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'height': 102, 'scrolling': False, 'width': 400}","{'oembed': {'author_name': 'The Cofree Coffee Cast', 'description': 'In which Jonathan Lorimer discusses getting into programming as an adult, hiring a programming coach, building communities, mentorship, data vs codata, the use of philosophy in the modern world, and the importance of taking yourself seriously.', 'height': 102, 'html': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_nologo400%2F21070805%2F21070805-1642291722503-7db6d800aa332.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'provider_name': 'Anchor FM Inc.', 'provider_url': 'https://anchor.fm', 'thumbnail_height': 400, 'thumbnail_url': 'https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_nologo400/21070805/21070805-1642291722503-7db6d800aa332.jpg', 'thumbnail_width': 400, 'title': 'The Cofree Coffee Cast', 'type': 'rich', 'version': '1.0', 'width': 400}, 'type': 'anchor.fm'}","{'content': '&lt;iframe class=""embedly-embed"" src=""https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fanchor.fm%2Fcofree-coffee%2Fembed&amp;display_name=Anchor+FM+Inc.&amp;url=https%3A%2F%2Fanchor.fm%2Fcofree-coffee&amp;image=https%3A%2F%2Fd3t3ozftmdmh3i.cloudfront.net%2Fproduction%2Fpodcast_uploaded_nologo400%2F21070805%2F21070805-1642291722503-7db6d800aa332.jpg&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=anchor"" width=""400"" height=""102"" scrolling=""no"" title=""Anchor FM Inc. embed"" frameborder=""0"" allow=""autoplay; fullscreen"" allowfullscreen=""true""&gt;&lt;/iframe&gt;', 'height': 102, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/s4yegv', 'scrolling': False, 'width': 400}",,,,,
502.0,[],False,_sras_,,[],,text,t2_z24oy,False,False,False,[],False,False,1642258992,hackage.haskell.org,https://www.reddit.com/r/haskell/comments/s4m5ow/ann_spade_a_simple_programming_language_with/,{},s4m5ow,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/s4m5ow/ann_spade_a_simple_programming_language_with/,False,,,6,1642259003,1,,True,False,False,haskell,t5_2qh36,68558,public,default,"[ANN] S.P.A.D.E, A simple programming language with built-in terminal IDE",0,[],1.0,https://hackage.haskell.org/package/spade,all_ads,6,,,https://hackage.haskell.org/package/spade,,,,,,,,,,,,,,,,,
503.0,[],False,Wismill,,[],,text,t2_i61xi9vm,False,False,False,[],False,False,1642243686,self.haskell,https://www.reddit.com/r/haskell/comments/s4hsv4/ann_unicodedata030_apis_to_efficiently_access_the/,{},s4hsv4,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s4hsv4/ann_unicodedata030_apis_to_efficiently_access_the/,False,,,6,1642243696,1,"On behalf of the maintainers team I’m happy to announce [`unicode-data-0.3.0`](https://hackage.haskell.org/package/unicode-data-0.3.0).

`unicode-data` provides Haskell APIs to efficiently access the **Unicode character database**. It is up to [*5 times faster than* `base:Data.Char`](https://github.com/composewell/unicode-data#performance).

This release features:

* Support for big-endian architectures.
* Support for `General_Category` property.
* All the predicates and case mapping functions found in `base:Data.Char`.

It follows the 0.2.0 release which added support for:

* [Unicode 14.0.0.](https://www.unicode.org/versions/Unicode14.0.0/)
* Unicode Identifier and Pattern Syntax.

See the [complete ChangeLog](https://hackage.haskell.org/package/unicode-data-0.3.0/changelog) for details.",True,False,False,haskell,t5_2qh36,68558,public,self,[ANN] unicode-data-0.3.0: APIs to efficiently access the Unicode character database,0,[],1.0,https://www.reddit.com/r/haskell/comments/s4hsv4/ann_unicodedata030_apis_to_efficiently_access_the/,all_ads,6,,,,,,,,,,,,,,,,,,,,
504.0,[],False,shmidt87,,[],,text,t2_zcqjfz5,False,False,False,[],False,False,1642239839,self.haskell,https://www.reddit.com/r/haskell/comments/s4gvc3/free_get_programming_with_haskell_book/,{},s4gvc3,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s4gvc3/free_get_programming_with_haskell_book/,False,self,"{'enabled': False, 'images': [{'id': 'zhHGpXS_Ua8ciIh8Rg6Er-c2LI2bX9vslY5V1pqiE9U', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/4VgHK7CRNUtrr5nlUQNiRIlfKxS4ZsDU90HCEbQnnZE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5151cba1360e724811f13c04739c82199067f0be', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/4VgHK7CRNUtrr5nlUQNiRIlfKxS4ZsDU90HCEbQnnZE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a1f3c1e00902068d25a684f2c9e7db4a970279ea', 'width': 216}], 'source': {'height': 274, 'url': 'https://external-preview.redd.it/4VgHK7CRNUtrr5nlUQNiRIlfKxS4ZsDU90HCEbQnnZE.jpg?auto=webp&amp;s=7f3adb0a66f3009d04286764a183a952bdf8aead', 'width': 274}, 'variants': {}}]}",6,1642239850,1,[removed],True,False,False,haskell,t5_2qh36,68559,public,self,Free Get Programming with Haskell book,0,[],1.0,https://www.reddit.com/r/haskell/comments/s4gvc3/free_get_programming_with_haskell_book/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
505.0,[],False,turionwtf,,[],,text,t2_64grvvyl,False,False,False,[],False,False,1642233624,self.haskell,https://www.reddit.com/r/haskell/comments/s4fcoy/should_i_commit_cabal_freeze_files_to_my_repo/,{},s4fcoy,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s4fcoy/should_i_commit_cabal_freeze_files_to_my_repo/,False,,,6,1642233634,1,"I recently discovered the `cabal freeze` command and like it out of principle because I like reproducible builds. But I'm not sure what to do with the freeze file. Should I commit it to my repository and push it? Or should I treat it like `cabal.project.local`?

### Some arguments in favour of committing

* People who fork my library will be able to build it exactly the way I did, possibly simplifying bug reports
* I'll be able to build it in the same way on a different machine, or when cloning

### Some arguments against committing

* The freeze file pins `base`, and thus the major GHC version, but on CI I want to test multiple GHC versions, so I need to disregard the freeze file there.

None of these are crucial reasons to do one or the other. I'm wondering whether I've missed any important other reasons, since I have little experience with freeze files yet.",True,False,False,haskell,t5_2qh36,68559,public,self,Should I commit cabal freeze files to my repo?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s4fcoy/should_i_commit_cabal_freeze_files_to_my_repo/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
506.0,[],False,n00bomb,,[],,text,t2_fhy7z,False,False,False,[],False,False,1642232313,jackkelly.name,https://www.reddit.com/r/haskell/comments/s4f0tj/great_haskell_learning_resource_collection_with/,{},s4f0tj,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s4f0tj/great_haskell_learning_resource_collection_with/,False,,,6,1642232323,1,,False,False,False,haskell,t5_2qh36,68559,public,default,Great Haskell learning resource collection with short introduction,0,[],1.0,http://jackkelly.name/wiki/haskell.html,all_ads,6,,,http://jackkelly.name/wiki/haskell.html,,,,,,,,,,,,,,,,,
507.0,[],False,Common-Program-2617,,[],,text,t2_ean7aj0y,False,False,False,[],False,False,1642227138,self.haskell,https://www.reddit.com/r/haskell/comments/s4dnp7/haskell_sqlite_sqlitesimple_or_esqueleto_or/,{},s4dnp7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s4dnp7/haskell_sqlite_sqlitesimple_or_esqueleto_or/,False,,,6,1642227148,1,"Hi all -

I'm building a small app that converts JSON files to SQLite database files in Haskell right now. I got the idea from the end of _Haskell Programming from First Principles_, which has you implement a very bare bones `finger` daemon using SQLite; prior to this I never worked with the technology before.

But I also understand that when it comes to SQL, `esqueleto` seems to have a great reputation as a library. Should I stick with what I've already learned, or should I jump ship?",True,False,False,haskell,t5_2qh36,68560,public,self,"Haskell + SQLite - `SQLite.Simple`, or `esqueleto`, or something else?",0,[],1.0,https://www.reddit.com/r/haskell/comments/s4dnp7/haskell_sqlite_sqlitesimple_or_esqueleto_or/,all_ads,6,,,,,,,,,,,,,,,,,,,,
508.0,[],False,jumper149,,[],,text,t2_rglr6,False,False,False,[],False,False,1642204141,felixspringer.xyz,https://www.reddit.com/r/haskell/comments/s4696q/beyond_typeclassopedia/,{},s4696q,False,True,False,True,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s4696q/beyond_typeclassopedia/,False,,,6,1642204152,1,,True,False,False,haskell,t5_2qh36,68552,public,default,beyond Typeclassopedia,0,[],1.0,https://felixspringer.xyz/homepage/blog/beyondTypeclassopedia,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://felixspringer.xyz/homepage/blog/beyondTypeclassopedia,,,,,,,,,,,,,,,,,
509.0,[],False,HydroxideOH-,,[],,text,t2_5pdfk4mq,False,False,False,[],False,False,1642203506,micahcantor.com,https://www.reddit.com/r/haskell/comments/s4616k/about_that_reader_trick/,{},s4616k,False,True,False,True,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s4616k/about_that_reader_trick/,False,link,"{'enabled': False, 'images': [{'id': 'uUV4evts7i9aEzNUkdWzjWVLsCrTKymtEq4C6yx0GS8', 'resolutions': [{'height': 60, 'url': 'https://external-preview.redd.it/rULqQnkyuPUokGo4h975NmFIMv9AsJeR5rPwfsYlTXI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ea32d37cb6c821997a4f9f577dc583be36199857', 'width': 108}, {'height': 121, 'url': 'https://external-preview.redd.it/rULqQnkyuPUokGo4h975NmFIMv9AsJeR5rPwfsYlTXI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=19e584db56a4dd0154739aa8ae62dc4a22e354c7', 'width': 216}, {'height': 180, 'url': 'https://external-preview.redd.it/rULqQnkyuPUokGo4h975NmFIMv9AsJeR5rPwfsYlTXI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=14b702b19b0ca6b6aa38f88e278a38ca3286a932', 'width': 320}, {'height': 360, 'url': 'https://external-preview.redd.it/rULqQnkyuPUokGo4h975NmFIMv9AsJeR5rPwfsYlTXI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=feefd70c28ed318737e0256d4a899d21264237d8', 'width': 640}, {'height': 540, 'url': 'https://external-preview.redd.it/rULqQnkyuPUokGo4h975NmFIMv9AsJeR5rPwfsYlTXI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=6dd8050e8bc75410ee686488644125051ac357ac', 'width': 960}, {'height': 607, 'url': 'https://external-preview.redd.it/rULqQnkyuPUokGo4h975NmFIMv9AsJeR5rPwfsYlTXI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=f85ac29d53514244e50f1e56035d42a5ab02f584', 'width': 1080}], 'source': {'height': 720, 'url': 'https://external-preview.redd.it/rULqQnkyuPUokGo4h975NmFIMv9AsJeR5rPwfsYlTXI.jpg?auto=webp&amp;s=8f5a795a611b2196e7ce0e7b8b5211a2b58160d8', 'width': 1280}, 'variants': {}}]}",6,1642203516,1,,True,False,False,haskell,t5_2qh36,68551,public,default,About that Reader trick,0,[],1.0,https://www.micahcantor.com/blog/about-that-reader-trick/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://www.micahcantor.com/blog/about-that-reader-trick/,78.0,140.0,,,,,,,,,,,,,,,
510.0,[],False,mdunnio,,[],,text,t2_2ldlwafx,False,False,False,[],False,False,1642182827,self.haskell,https://www.reddit.com/r/haskell/comments/s3ycj8/bitnomial_is_hiring_haskell_software_engineers/,{},s3ycj8,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s3ycj8/bitnomial_is_hiring_haskell_software_engineers/,False,,,6,1642182837,1,"r/Haskell,

Bitnomial is looking for **Haskell Software Engineers** to join the team. Bitnomial is a US based, CFTC licensed and regulated bitcoin derivatives exchange, headquartered in Chicago. Bitnomial develops and operates exchange, clearing, and settlement infrastructure for physically settled bitcoin futures and options.

This role can be worked remotely from anywhere in the world.

Check out our job listing at: [https://bitnomial.com/jobs/](https://bitnomial.com/jobs/)

Looking forward to hearing from some of you!",True,False,False,haskell,t5_2qh36,68540,public,self,Bitnomial is hiring Haskell Software Engineers,0,[],1.0,https://www.reddit.com/r/haskell/comments/s3ycj8/bitnomial_is_hiring_haskell_software_engineers/,all_ads,6,,,,,,,,,,,,,,,,,,,,
511.0,[],False,fluz1994,,[],,text,t2_4kuh2ocs,False,False,False,[],False,False,1642158119,self.haskell,https://www.reddit.com/r/haskell/comments/s3prgy/exploring_ideas_in_haskell/,{},s3prgy,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s3prgy/exploring_ideas_in_haskell/,False,,,6,1642158129,1,"For learning purpose, I am wondering if there are any concepts (with maintained libraries) which in your opinion,  worth to be explored in Haskell.

Some examples would be

1. Functional reactive programming - `reflex-frp`
2. Entity component system - `apecs`
3. Recursive descent parsing - `megaparsec`
4. Software transcational memories - `stm`

and more... 

I know this question might sounds vague, but any input is appreciated :)",True,False,False,haskell,t5_2qh36,68533,public,self,Exploring ideas in Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/s3prgy/exploring_ideas_in_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
512.0,[],False,juicy_ream,,[],,text,t2_hwg5gxhi,False,False,False,[],False,False,1642141172,blog.sigplan.org,https://www.reddit.com/r/haskell/comments/s3lc23/provably_spaceefficient_parallel_functional/,{},s3lc23,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s3lc23/provably_spaceefficient_parallel_functional/,False,link,"{'enabled': False, 'images': [{'id': 'LOBuRxJCWKKZaXqE1A3j_TXx54xVAVQQUCN9kquTKfw', 'resolutions': [{'height': 65, 'url': 'https://external-preview.redd.it/U976We3StYUOlvOkE_01BO04Fq3DpKoJ3nONSkqjidY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e7f9f8e8eed01a96c04f8c04120e475a4a78ba27', 'width': 108}, {'height': 130, 'url': 'https://external-preview.redd.it/U976We3StYUOlvOkE_01BO04Fq3DpKoJ3nONSkqjidY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ee48dca5e78342de79f7ba3ffe60ccb7b509213b', 'width': 216}, {'height': 193, 'url': 'https://external-preview.redd.it/U976We3StYUOlvOkE_01BO04Fq3DpKoJ3nONSkqjidY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4300c79ea80a17ea4d477e93f782ccff3c9f9c5a', 'width': 320}, {'height': 387, 'url': 'https://external-preview.redd.it/U976We3StYUOlvOkE_01BO04Fq3DpKoJ3nONSkqjidY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=483854624b65a7bed4377c3ce638aee922721963', 'width': 640}, {'height': 581, 'url': 'https://external-preview.redd.it/U976We3StYUOlvOkE_01BO04Fq3DpKoJ3nONSkqjidY.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=70e9c1abaedc2e93824901e649bda5d7d6a2932b', 'width': 960}, {'height': 653, 'url': 'https://external-preview.redd.it/U976We3StYUOlvOkE_01BO04Fq3DpKoJ3nONSkqjidY.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=152785c1d36c8ab1c1d9f4689911704c84527a02', 'width': 1080}], 'source': {'height': 680, 'url': 'https://external-preview.redd.it/U976We3StYUOlvOkE_01BO04Fq3DpKoJ3nONSkqjidY.jpg?auto=webp&amp;s=340592f3298046a79ea0d39b71d0d34a6f831ee0', 'width': 1123}, 'variants': {}}]}",6,1642141182,1,,True,False,False,haskell,t5_2qh36,68531,public,default,Provably Space-Efficient Parallel Functional Programming,0,[],1.0,https://blog.sigplan.org/2022/01/13/provably-space-efficient-parallel-functional-programming/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://blog.sigplan.org/2022/01/13/provably-space-efficient-parallel-functional-programming/,84.0,140.0,,,,,,,,,,,,,,,
513.0,[],False,jamesjean2001,,[],,text,t2_46us7vrv,False,False,False,[],False,False,1642130130,self.haskell,https://www.reddit.com/r/haskell/comments/s3hsaj/what_does_deflist_do/,{},s3hsaj,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s3hsaj/what_does_deflist_do/,False,,,6,1642130141,1,"Could someone please provide a simple explanation for what defList actually does?

&amp;#x200B;

[https://hackage.haskell.org/package/html-1.0.1.2/docs/src/Text-Html.html#defList](https://hackage.haskell.org/package/html-1.0.1.2/docs/src/Text-Html.html#defList)",True,False,False,haskell,t5_2qh36,68530,public,self,What does defList do?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s3hsaj/what_does_deflist_do/,all_ads,6,,,,,,,,,,,,,,,,,,,,
514.0,[],False,jamesjean2001,,[],,text,t2_46us7vrv,False,False,False,[],False,False,1642129770,self.haskell,https://www.reddit.com/r/haskell/comments/s3hnuh/what_does_get_mean/,{},s3hnuh,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s3hnuh/what_does_get_mean/,False,,,6,1642129781,1,"In the following function, what does &lt;- get mean?

&amp;#x200B;

myInput = do     

g &lt;- get     

p &lt;- phys

let Desc False = """"

return ""this""",True,False,False,haskell,t5_2qh36,68529,public,self,What does &lt;- get mean?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s3hnuh/what_does_get_mean/,all_ads,6,,,,,,,,,,,,,,,,,,,,
515.0,[],False,AlistairBuzz,,[],,text,t2_a9lzi3nv,False,False,False,[],False,False,1642113417,discourse.haskell.org,https://www.reddit.com/r/haskell/comments/s3bqra/haskell_official_docker_images_now_support_arm64/,{},s3bqra,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s3bqra/haskell_official_docker_images_now_support_arm64/,False,link,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1642113428,1,,True,False,False,haskell,t5_2qh36,68527,public,default,Haskell Official Docker Images now support arm64 (and other updates),0,[],1.0,https://discourse.haskell.org/t/haskell-official-docker-images-now-support-arm64-and-other-updates/3917,all_ads,6,,,https://discourse.haskell.org/t/haskell-official-docker-images-now-support-arm64-and-other-updates/3917,140.0,140.0,,,,,,,,,,,,,,,
516.0,[],False,visortelle,,[],,text,t2_15hg9d,False,False,False,[],False,False,1642110355,reddit.com,https://www.reddit.com/r/haskell/comments/s3ak53/haskell_spotlight_new_browser_extension_to_search/,{},s3ak53,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s3ak53/haskell_spotlight_new_browser_extension_to_search/,False,,,6,1642110365,1,,True,False,False,haskell,t5_2qh36,68527,public,default,Haskell Spotlight - new browser extension to search over Hoogle and Hackage.,0,[],1.0,https://www.reddit.com/gallery/s3ak53,all_ads,6,,,https://www.reddit.com/gallery/s3ak53,86.0,140.0,"{'ejkaq8clzib81': {'e': 'Image', 'id': 'ejkaq8clzib81', 'm': 'image/png', 'p': [{'u': 'https://preview.redd.it/ejkaq8clzib81.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=d1aca1719236474b3842ebbe69e1062fe0ac08e7', 'x': 108, 'y': 66}, {'u': 'https://preview.redd.it/ejkaq8clzib81.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=56a5a2764b19cc5c2c1141ee36a13fb9bbccdadc', 'x': 216, 'y': 133}, {'u': 'https://preview.redd.it/ejkaq8clzib81.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=a548c1c5369acb43d0247205154d6997b82991ad', 'x': 320, 'y': 197}, {'u': 'https://preview.redd.it/ejkaq8clzib81.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=78b972c3ebde8f2c086dc4fc11a46c1d2ad5cfda', 'x': 640, 'y': 394}, {'u': 'https://preview.redd.it/ejkaq8clzib81.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=3ba7510491682ec287451beeb38e2fa341e34a3e', 'x': 960, 'y': 591}, {'u': 'https://preview.redd.it/ejkaq8clzib81.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=355f6ef869d429b5a7ff3310bffff5f02e0750e6', 'x': 1080, 'y': 665}], 's': {'u': 'https://preview.redd.it/ejkaq8clzib81.png?width=2480&amp;format=png&amp;auto=webp&amp;s=91f4c567a494a1f1fa7bd3a765ad0577c6a8ddca', 'x': 2480, 'y': 1528}, 'status': 'valid'}, 'g3tlkmfmzib81': {'e': 'Image', 'id': 'g3tlkmfmzib81', 'm': 'image/png', 'p': [{'u': 'https://preview.redd.it/g3tlkmfmzib81.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=590dd0b5471bc70a9e149b21b0880ec4d8c359b6', 'x': 108, 'y': 69}, {'u': 'https://preview.redd.it/g3tlkmfmzib81.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=831a849204e6be0900f3b0fda38c4c76cd48a4c7', 'x': 216, 'y': 138}, {'u': 'https://preview.redd.it/g3tlkmfmzib81.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=6f6b3972e3070e9576830cfab5b5d983fba920dc', 'x': 320, 'y': 204}, {'u': 'https://preview.redd.it/g3tlkmfmzib81.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=f23fd3a07ce1802a1fa86a973c1532119221b96c', 'x': 640, 'y': 409}, {'u': 'https://preview.redd.it/g3tlkmfmzib81.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=aeb85ca1d4d0ac1e588779bac24ddc3a054e9c60', 'x': 960, 'y': 614}, {'u': 'https://preview.redd.it/g3tlkmfmzib81.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=605f89a7e5120e0ec5884725fd17939e8b1aa468', 'x': 1080, 'y': 691}], 's': {'u': 'https://preview.redd.it/g3tlkmfmzib81.png?width=2508&amp;format=png&amp;auto=webp&amp;s=d63f8dac31bcf831d536254cb722ddfe732a40aa', 'x': 2508, 'y': 1606}, 'status': 'valid'}}",,"{'items': [{'id': 102036619, 'media_id': 'ejkaq8clzib81'}, {'id': 102036620, 'media_id': 'g3tlkmfmzib81'}]}",True,,,,,,,,,,,
517.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1642098224,haskellweekly.news,https://www.reddit.com/r/haskell/comments/s35yyj/issue_298_haskell_weekly_newsletter/,{},s35yyj,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/s35yyj/issue_298_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1642098235,1,,True,False,False,haskell,t5_2qh36,68524,public,default,Issue 298 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/298.html,all_ads,6,,,https://haskellweekly.news/issue/298.html,140.0,140.0,,,,,,,,,,,,,,,
518.0,[],False,xbalaj,,[],,text,t2_i09bqp9s,False,False,False,[],False,False,1642097403,self.haskell,https://www.reddit.com/r/haskell/comments/s35nc8/problem_composing_monadlogger_types/,{},s35nc8,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s35nc8/problem_composing_monadlogger_types/,False,self,"{'enabled': False, 'images': [{'id': 'nfayPavSUB5ngYv6-19UHNBThsXfcLIDQl4HkEe3Cv0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b1c8a90e5690a7186afdb269ad05279551994d09', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=533bd055cdae7998d1b8f9cd9d7dedabc1715bda', 'width': 216}], 'source': {'height': 316, 'url': 'https://external-preview.redd.it/QgPvRTknlY3rMNDqH1k4I37XGiq9tZF_FsygC_Xht4o.jpg?auto=webp&amp;s=8cd5e918e2bde6ca72d4445d6fc007f203689799', 'width': 316}, 'variants': {}}]}",6,1642097413,1,"Hello community, I'm having a problem with enabling/disabling logging by a parameter with the `monad-logger` library.  

I've created a StackOverflow issue yesterday but I haven't solved it yet. Is there anyone that could point me in the right direction please? I'm not that skilled with the Haskell type system yet.

Here is my issue: https://stackoverflow.com/questions/70689239/couldnt-match-loggingt-with-nologgingt/70689573?noredirect=1#comment124986375_70689573",True,False,False,haskell,t5_2qh36,68524,public,self,Problem composing monad-logger types,0,[],1.0,https://www.reddit.com/r/haskell/comments/s35nc8/problem_composing_monadlogger_types/,all_ads,6,,,,,,,,,,,,,,,,,,,,
519.0,[],False,ymishima,,[],,text,t2_46jackwb,False,False,False,[],False,False,1642096995,self.haskell,https://www.reddit.com/r/haskell/comments/s35hms/mtl_monad_transformer_deriving_monadio_still/,{},s35hms,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s35hms/mtl_monad_transformer_deriving_monadio_still/,False,,,6,1642097006,1,"Why do I still need to use liftIO when I've supposedly created a flattened monad transformer and derive MonadIO:

`newtype Misc a = Misc { unMisc :: StateT Int IO a}`

`deriving (Functor, Applicative, Monad, MonadState Int, MonadIO)`

`misc :: Misc ()`

`misc = do`

  `var &lt;- get`

  `putStrLn $ ""hi""`

  `return ()`

&amp;#x200B;

this won't compile - I can't just do putStrLn $ ""hi"", I must do either return $ putStrLn ""hi"" or liftIO $ putStrLn ""hi"". Why does it work this way for IO?",True,False,False,haskell,t5_2qh36,68524,public,self,"mtl monad transformer deriving MonadIO, still needing to lift?",0,[],1.0,https://www.reddit.com/r/haskell/comments/s35hms/mtl_monad_transformer_deriving_monadio_still/,all_ads,6,,,,,,,,,,,,,,,,,,,,
520.0,[],False,notooth1,,[],,text,t2_sm171,False,False,False,[],False,False,1642095018,self.haskell,https://www.reddit.com/r/haskell/comments/s34qac/how_to_downgrade_the_base/,{},s34qac,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s34qac/how_to_downgrade_the_base/,False,,,6,1642095028,1,"Hello everyone,

base==4.15.0.0 is installed on my system. Is it possible to downgrade it to base&lt;4.15?",True,False,False,haskell,t5_2qh36,68523,public,self,How to downgrade the base?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s34qac/how_to_downgrade_the_base/,all_ads,6,,,,,,,,,,,,,,,,,,,,
521.0,[],False,Serokell,,[],,text,t2_fvl0rbg,False,False,False,[],False,False,1642091888,serokell.io,https://www.reddit.com/r/haskell/comments/s33jnu/typed_template_haskell_in_ghc_9/,{},s33jnu,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s33jnu/typed_template_haskell_in_ghc_9/,False,link,"{'enabled': False, 'images': [{'id': 'NzUS3rhFzdAF74rhdFeCuZ9PXfyZCSxNxlH_fmb6STc', 'resolutions': [{'height': 64, 'url': 'https://external-preview.redd.it/qkuF90dx9GBHKFTp3qtLkN2DM7t19_Yzm9sVXeFDZAw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=6c7f42295cbc510ad277b620fa0c225fd5b7baf9', 'width': 108}, {'height': 128, 'url': 'https://external-preview.redd.it/qkuF90dx9GBHKFTp3qtLkN2DM7t19_Yzm9sVXeFDZAw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b9554b45b12d7e39cca5c0111da06f4c1cf3122e', 'width': 216}, {'height': 190, 'url': 'https://external-preview.redd.it/qkuF90dx9GBHKFTp3qtLkN2DM7t19_Yzm9sVXeFDZAw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=30eb14ee564abc6a21cc431d2051309405d2254c', 'width': 320}, {'height': 381, 'url': 'https://external-preview.redd.it/qkuF90dx9GBHKFTp3qtLkN2DM7t19_Yzm9sVXeFDZAw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ee582af314765f675a26bb206d9898db4d074a21', 'width': 640}, {'height': 572, 'url': 'https://external-preview.redd.it/qkuF90dx9GBHKFTp3qtLkN2DM7t19_Yzm9sVXeFDZAw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b293618d0ec9d1c8039525b6c21b450bf1ba1ef6', 'width': 960}, {'height': 644, 'url': 'https://external-preview.redd.it/qkuF90dx9GBHKFTp3qtLkN2DM7t19_Yzm9sVXeFDZAw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=bb0d3173b8d9f054a817f1e866f020b70c457638', 'width': 1080}], 'source': {'height': 716, 'url': 'https://external-preview.redd.it/qkuF90dx9GBHKFTp3qtLkN2DM7t19_Yzm9sVXeFDZAw.jpg?auto=webp&amp;s=060779f2091310b2a6e6a6aa49005a7e98103433', 'width': 1200}, 'variants': {}}]}",6,1642091898,1,,True,False,False,haskell,t5_2qh36,68522,public,default,Typed Template Haskell in GHC 9,0,[],1.0,https://serokell.io/blog/typed-template-haskell-in-ghc-9,all_ads,6,,,https://serokell.io/blog/typed-template-haskell-in-ghc-9,83.0,140.0,,,,,,,,,,,,,,,
522.0,[],False,asdfasdf666_,,[],,text,t2_xzsrvpw,False,False,False,[],False,False,1642079039,self.haskell,https://www.reddit.com/r/haskell/comments/s2yzcr/how_do_you_deal_with_gui/,{},s2yzcr,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s2yzcr/how_do_you_deal_with_gui/,False,,,6,1642079049,1,"Hi! As I'm learning more about Haskell I often think about how I would solve the problem of GUI.

Say there is a project that requires complex and professional GUI, how would you solve that with Haskell? Write the BL in Haskell and use it as a library, use some Haskell GUI library, or perhaps Haskell isn't the right choice at all in this case? 

There are no specific requirements, I would just like to hear how you guys handle GUI :)",True,False,False,haskell,t5_2qh36,68517,public,self,How do you deal with GUI?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s2yzcr/how_do_you_deal_with_gui/,all_ads,6,,,,,,,,,,,,,,,,,,,,
523.0,[],False,Common-Program-2617,,[],,text,t2_ean7aj0y,False,False,False,[],False,False,1642077016,self.haskell,https://www.reddit.com/r/haskell/comments/s2ydj6/is_knowing_haskell_a_cool_thing_to_put_on_a/,{},s2ydj6,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s2ydj6/is_knowing_haskell_a_cool_thing_to_put_on_a/,False,,,6,1642077027,1,"Opinions from people who hire other people especially appreciated here. 

I finished _Haskell Programming From First Principles_ a few days ago, and I'm trying to figure out how to write up a resume to land my first job in 'real' software, as opposed to IT.

My position before this was a kind of junior cloud sysadmin / hosting engineer gig, which I filled with as much Azure and PowerShell as I could get them to give me.",True,False,False,haskell,t5_2qh36,68517,public,self,"Is knowing Haskell a cool thing to put on a resume, even if you don't plan to actually use it on the job?",0,[],1.0,https://www.reddit.com/r/haskell/comments/s2ydj6/is_knowing_haskell_a_cool_thing_to_put_on_a/,all_ads,6,,,,,,,,,,,,,,,,,,,,
524.0,[],False,vladl1,,[],,text,t2_4k22h0qq,False,False,False,[],False,False,1642076628,self.haskell,https://www.reddit.com/r/haskell/comments/s2y9n2/help_haskell/,{},s2y9n2,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s2y9n2/help_haskell/,False,,,6,1642076639,1,[removed],True,False,False,haskell,t5_2qh36,68517,public,self,Help haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/s2y9n2/help_haskell/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
525.0,[],False,hiende,,[],,text,t2_eyqp5qtm,False,False,False,[],False,False,1642047178,self.haskell,https://www.reddit.com/r/haskell/comments/s2q5p4/is_it_possible_to_manually_update_the_value_of_a/,{},s2q5p4,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s2q5p4/is_it_possible_to_manually_update_the_value_of_a/,False,,,6,1642047188,1,"I really hope I'm not gone down a dead-end here. I have a Behaviour that gives the currently selected Color, and the current mouse coordinates, then carries out a task when the mouse is clicked. The fact that I can ""store"" the selected color gives me hope that storing a list can be done in a similar manner. I'm just at a dead end and not sure how to solve this. Would really appreciate some help.

```
-- There is a Blue button and a Red button on our UI. Whichever
-- button was clicked last is our current color selection.
colorRedSelected = const ColorRed &lt;$ UI.click redButton
colorBlueSelected = const ColorBlue &lt;$ UI.click blueButton

-- we combine both the above Events to create a new one that tells us the current selected color
colorSelected = unionWith const colorRedSelected colorBlueSelected

-- accumulate values for our Behaviour, starting with ColorRed selected by default
colorMode       &lt;- accumB ColorRed modeEvent

-- create a Behaviour
mouseCoordinate   &lt;- stepper (0,0) $ UI.mousemove canvas

-- want to start with the list [1,2,3,4], but this value should change later.
-- I have 'never' here, as I don't know what else to put here yet.

listState      &lt;- accumB ([1,2,3,4]) never

-- Combine the Behaviours, we now have a tuple (chosenColorMode, mouseCoordinateTuple, savedList)

let choices = (,,) &lt;$&gt; colorMode &lt;*&gt; mouseCoordinate &lt;*&gt; listState

-- Apply the event (of the user clicking the canvas) to the Behaviour,
-- creating a new Event that returns the above tuple when it fires    

makeChoice = choicePosition &lt;@ UI.click canvas

onEvent makeChoice $ \(colorMode, (x,y), savedList) -&gt; do    
	...
	-- in this block we use the savedList, and generate a newList.
	-- I want to update the choicePosition behaviour so that the newList
	-- replaces the old savedList.
```",False,False,False,haskell,t5_2qh36,68513,public,self,"Is it possible to manually update the value of a Behaviour? (Functional Reactive Programming, Threepenny)",0,[],1.0,https://www.reddit.com/r/haskell/comments/s2q5p4/is_it_possible_to_manually_update_the_value_of_a/,all_ads,6,,,,,,,,,,,,,,,,,,,,
526.0,[],False,hiende,,[],,text,t2_eyqp5qtm,False,False,False,[],False,False,1642047018,self.haskell,https://www.reddit.com/r/haskell/comments/s2q3od/is_it_possible_to_manually_update_the_value_of_a/,{},s2q3od,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s2q3od/is_it_possible_to_manually_update_the_value_of_a/,False,,,6,1642047028,1," I really hope I'm not gone down a dead-end here. I have a Behaviour that gives the currently selected Color, and the current mouse coordinates, then carries out a task when the mouse is clicked. The fact that I can ""store"" the selected color gives me hope that storing a list can be done in a similar manner. I'm just at a dead end and not sure how to solve this. Would really appreciate some help.

`-- There is a Blue button and a Red button on our UI. Whichever`  
`-- button was clicked last is our current color selection.`   
`colorRedSelected = const ColorRed &lt;$ UI.click redButton`  
`colorBlueSelected = const ColorBlue &lt;$ UI.click blueButton`  
`-- we combine both the above Events to create a new one that tells us the current selected color`  
`colorSelected = unionWith const colorRedSelected colorBlueSelected`  
`-- accumulate values for our Behaviour, starting with ColorRed selected by default`  
`colorMode       &lt;- accumB ColorRed modeEvent`  
`-- create a Behaviour`   
`mouseCoordinate   &lt;- stepper (0,0) $ UI.mousemove canvas`  
`-- want to start with the list [1,2,3,4], but this value should change later.`  
`-- I have 'never' here, as I don't know what else to put here yet.`  
`listState      &lt;- accumB ([1,2,3,4]) never`  
`-- Combine the Behaviours, we now have a tuple (chosenColorMode, mouseCoordinateTuple, savedList)`  
`let choices = (,,) &lt;$&gt; colorMode &lt;*&gt; mouseCoordinate &lt;*&gt; listState`  
 `-- Apply the event (of the user clicking the canvas) to the Behaviour,`   
 `-- creating a new Event that returns the above tuple when it fires`  
    `makeChoice = choicePosition &lt;@ UI.click canvas`  
`onEvent makeChoice $ \(colorMode, (x,y), savedList) -&gt; do`  
    `...`  
 `-- in this block we use the savedList, and generate a newList.`  
 `-- I want to update the choicePosition behaviour so that the newList`  
 `-- replaces the old savedList.`",False,False,False,haskell,t5_2qh36,68513,public,self,"Is it possible to manually update the value of a Behaviour? (Functional Reactive Programming, Threepenny)",0,[],1.0,https://www.reddit.com/r/haskell/comments/s2q3od/is_it_possible_to_manually_update_the_value_of_a/,all_ads,6,,,,,,,,,,,,,,,,,,,,
527.0,[],False,epoberezkin,,[],,text,t2_13t18x,False,False,False,[],False,False,1642023201,self.selfhosted,https://www.reddit.com/r/haskell/comments/s2hl89/simplex_chat_v1_released_the_most_private_and/,{},s2hl89,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s2hl89/simplex_chat_v1_released_the_most_private_and/,False,link,"{'enabled': False, 'images': [{'id': 'U3iCf8GjcquT1qPFC8OR00SlD9Hnw9Acft2_3PjJN9Y', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/PAfHS3IZ634_axqDop1LTgM5m7ZHZ3bNhL4kDYjWxxA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b71291e855880c47b9cbc5a32d8b21b1f18c000d', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/PAfHS3IZ634_axqDop1LTgM5m7ZHZ3bNhL4kDYjWxxA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=bed86faa2931c9df6570b13747cd7e910533a24d', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/PAfHS3IZ634_axqDop1LTgM5m7ZHZ3bNhL4kDYjWxxA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=50cd1c3d5a760b166ffb4e3232815cb73f33ceb4', 'width': 320}], 'source': {'height': 320, 'url': 'https://external-preview.redd.it/PAfHS3IZ634_axqDop1LTgM5m7ZHZ3bNhL4kDYjWxxA.jpg?auto=webp&amp;s=fe6e12335bd3ee8ce2d13b063385e3d3539263db', 'width': 320}, 'variants': {}}]}",6,1642023212,1,,True,False,False,haskell,t5_2qh36,68502,public,default,SimpleX Chat v1 released - the most private and secure chat and application platform!,0,[],1.0,/r/selfhosted/comments/s2hil6/simplex_chat_v1_released_the_most_private_and/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,/r/selfhosted/comments/s2hil6/simplex_chat_v1_released_the_most_private_and/,,,,,,,t3_s2hil6,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'epoberezkin', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_13t18x', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1642023032.0, 'created_utc': 1642023032.0, 'discussion_type': None, 'distinguished': None, 'domain': 'self.selfhosted', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 's2hil6', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': True, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': 'chatsystem', 'link_flair_richtext': [], 'link_flair_template_id': '0d52d76a-7e68-11e9-977c-0eabae61418e', 'link_flair_text': 'Chat System', 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_s2hil6', 'no_follow': True, 'num_comments': 0, 'num_crossposts': 3, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/selfhosted/comments/s2hil6/simplex_chat_v1_released_the_most_private_and/', 'pinned': False, 'post_hint': 'self', 'preview': {'enabled': False, 'images': [{'id': 'U3iCf8GjcquT1qPFC8OR00SlD9Hnw9Acft2_3PjJN9Y', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/PAfHS3IZ634_axqDop1LTgM5m7ZHZ3bNhL4kDYjWxxA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b71291e855880c47b9cbc5a32d8b21b1f18c000d', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/PAfHS3IZ634_axqDop1LTgM5m7ZHZ3bNhL4kDYjWxxA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=bed86faa2931c9df6570b13747cd7e910533a24d', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/PAfHS3IZ634_axqDop1LTgM5m7ZHZ3bNhL4kDYjWxxA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=50cd1c3d5a760b166ffb4e3232815cb73f33ceb4', 'width': 320}], 'source': {'height': 320, 'url': 'https://external-preview.redd.it/PAfHS3IZ634_axqDop1LTgM5m7ZHZ3bNhL4kDYjWxxA.jpg?auto=webp&amp;s=fe6e12335bd3ee8ce2d13b063385e3d3539263db', 'width': 320}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 1, 'secure_media': None, 'secure_media_embed': {}, 'selftext': '[https://simplex.chat/](https://simplex.chat/)\n\nThanks to your ongoing support and feedback - it would not have happened without it - we have just released v1 of [SimpleX Chat](https://simplex.chat/) – it can be used from the terminal (command line) on major desktop platforms (Linux/Mac/Win) and on Android phones in termux!\n\nSimpleX is a new platform for distributed Internet applications where privacy of the messages *and* the network matters most. SimpleX Chat is our first application, a messaging application built on the SimpleX platform.\n\nThere is currently no messaging app other than SimpleX Chat that guarantees metadata privacy - who is talking to whom and when. SimpleX is designed to not use any permanent users identities to protect meta-data privacy. See [SimpleX overview](https://github.com/simplex-chat/simplexmq/blob/master/protocol/overview-tjr.md) for more details.\n\nSimpleX v1 has big changes in E2E encryption (now with double-ratchet), protocol encoding (overhead in transmitted bytes is reduced from 15% to 3.7%), performance and invitation link size (no more long RSA keys in URLs, we switched to Curve448/25519 keys). See more details in our [v1 announcement](https://github.com/simplex-chat/simplex-chat/blob/master/blog/20220112-simplex-chat-v1-released.md).\n\nWith all these changes the new version is not backwards compatible. We now have built forward compatibility and version agreement into the protocol, so there will be no more breaking changes going forward.\n\nWe really look forward to you using it and your feedback – we have couple of groups you can join once you download the chat - you can connect to the team with /simplex command (it will be myself or somebody else meeting you there:)\n\nThank you!', 'selftext_html': '&lt;!-- SC_OFF --&gt;&lt;div class=""md""&gt;&lt;p&gt;&lt;a href=""https://simplex.chat/""&gt;https://simplex.chat/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Thanks to your ongoing support and feedback - it would not have happened without it - we have just released v1 of &lt;a href=""https://simplex.chat/""&gt;SimpleX Chat&lt;/a&gt; – it can be used from the terminal (command line) on major desktop platforms (Linux/Mac/Win) and on Android phones in termux!&lt;/p&gt;\n\n&lt;p&gt;SimpleX is a new platform for distributed Internet applications where privacy of the messages &lt;em&gt;and&lt;/em&gt; the network matters most. SimpleX Chat is our first application, a messaging application built on the SimpleX platform.&lt;/p&gt;\n\n&lt;p&gt;There is currently no messaging app other than SimpleX Chat that guarantees metadata privacy - who is talking to whom and when. SimpleX is designed to not use any permanent users identities to protect meta-data privacy. See &lt;a href=""https://github.com/simplex-chat/simplexmq/blob/master/protocol/overview-tjr.md""&gt;SimpleX overview&lt;/a&gt; for more details.&lt;/p&gt;\n\n&lt;p&gt;SimpleX v1 has big changes in E2E encryption (now with double-ratchet), protocol encoding (overhead in transmitted bytes is reduced from 15% to 3.7%), performance and invitation link size (no more long RSA keys in URLs, we switched to Curve448/25519 keys). See more details in our &lt;a href=""https://github.com/simplex-chat/simplex-chat/blob/master/blog/20220112-simplex-chat-v1-released.md""&gt;v1 announcement&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;With all these changes the new version is not backwards compatible. We now have built forward compatibility and version agreement into the protocol, so there will be no more breaking changes going forward.&lt;/p&gt;\n\n&lt;p&gt;We really look forward to you using it and your feedback – we have couple of groups you can join once you download the chat - you can connect to the team with /simplex command (it will be myself or somebody else meeting you there:)&lt;/p&gt;\n\n&lt;p&gt;Thank you!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;', 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'selfhosted', 'subreddit_id': 't5_32hch', 'subreddit_name_prefixed': 'r/selfhosted', 'subreddit_subscribers': 157562, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'self', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'SimpleX Chat v1 released - the most private and secure chat and application platform!', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 1, 'upvote_ratio': 1.0, 'url': 'https://www.reddit.com/r/selfhosted/comments/s2hil6/simplex_chat_v1_released_the_most_private_and/', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
528.0,[],False,SkeetSk8r,,[],,text,t2_b2exp8vb,False,False,False,[],False,False,1642003365,self.haskell,https://www.reddit.com/r/haskell/comments/s29q21/fair_salary_for_haskell_developer/,{},s29q21,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s29q21/fair_salary_for_haskell_developer/,False,,,6,1642003375,1,"Hello,

This is related to another post I had put up a couple hours back. It got me thinking about what you guys and girls feel is a fair salary for a Haskell developer.

To keep things consistent, let me know what you think about the ""monthly"" salary for a developer with:

a. Little to no experience with production Haskell.  
b. 1-2 years experience  
c. 2-5 years experience  
d. 5 years+

Curious to see what ya'll think!",True,False,False,haskell,t5_2qh36,68502,public,self,Fair Salary for Haskell Developer,0,[],1.0,https://www.reddit.com/r/haskell/comments/s29q21/fair_salary_for_haskell_developer/,all_ads,6,,,,,,,,,,,,,,,,,,,,
529.0,[],False,tkx68,,[],,text,t2_56gja,False,False,False,[],False,False,1641995811,self.haskell,https://www.reddit.com/r/haskell/comments/s26typ/nix_error_when_building_reflexexamples/,{},s26typ,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s26typ/nix_error_when_building_reflexexamples/,False,self,"{'enabled': False, 'images': [{'id': 'nAFq0HIkQzGpgDsf_0d14TYroD4XlaJe8f99v05mfws', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/WNGTfpezoGJjb7XTSDcRf7xpO06vUFIaPZgHdscEfPQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1538ee15f4a60e63083472c7019b94d2b8ca904c', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/WNGTfpezoGJjb7XTSDcRf7xpO06vUFIaPZgHdscEfPQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=4ffa0e19994968261c2704507430f9d3a8f0b4e5', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/WNGTfpezoGJjb7XTSDcRf7xpO06vUFIaPZgHdscEfPQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=be3e8f02979058863b35e56c48c1d56e7e47dce3', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/WNGTfpezoGJjb7XTSDcRf7xpO06vUFIaPZgHdscEfPQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=8666c169891c64540823b47d6c0d51b72e49eaf2', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/WNGTfpezoGJjb7XTSDcRf7xpO06vUFIaPZgHdscEfPQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=dece3f87d3aeaaf64a8355696492d00a2698d6fe', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/WNGTfpezoGJjb7XTSDcRf7xpO06vUFIaPZgHdscEfPQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d708a3088a4f3951ad2fcb792b890b8fe043e64d', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/WNGTfpezoGJjb7XTSDcRf7xpO06vUFIaPZgHdscEfPQ.jpg?auto=webp&amp;s=3ca6a1681e14febb29d4b9316f90939b82ef59a5', 'width': 1200}, 'variants': {}}]}",6,1641995821,1,"I try to build the reflex-examples ([https://github.com/reflex-frp/reflex-examples](https://github.com/reflex-frp/reflex-examples)). After freshly cloning this repo I get the below error:

&amp;#x200B;

\`\`\`

\&gt;&gt;&gt; git clone [https://github.com/reflex-frp/reflex-examples.git](https://github.com/reflex-frp/reflex-examples.git)

Cloning into 'reflex-examples'...

remote: Enumerating objects: 1637, done.

remote: Total 1637 (delta 0), reused 0 (delta 0), pack-reused 1637

Receiving objects: 100% (1637/1637), 2.14 MiB | 875.00 KiB/s, done.

Resolving deltas: 100% (681/681), done.

\&gt;&gt;&gt; cd reflex-examples 

\&gt;&gt;&gt; ob run 

./.obelisk/impl: command not cached, building ...

DONE Built on ./.obelisk/impl \[command\]

Process exited with code 1; 'nix' 'eval' '-f' '.' '(let a = import ./. {}; in toString (a.reflex.nixpkgs.lib.isDerivation a.passthru.staticFilesImpure))' '--raw'

\`\`\`

&amp;#x200B;

What should I do? What can I do in general to figure out what this type of nix message might mean? How to debug nix?",True,False,False,haskell,t5_2qh36,68497,public,self,Nix error when building reflex-examples,0,[],1.0,https://www.reddit.com/r/haskell/comments/s26typ/nix_error_when_building_reflexexamples/,all_ads,6,,,,,,,,,,,,,,,,,,,,
530.0,[],False,SkeetSk8r,,[],,text,t2_b2exp8vb,False,False,False,[],False,False,1641992285,self.haskell,https://www.reddit.com/r/haskell/comments/s25o7y/advice_on_hiring_a_haskell_developer/,{},s25o7y,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s25o7y/advice_on_hiring_a_haskell_developer/,False,,,6,1641992296,1,"Hello!

I've got a SaaS operation (built with Haskell) that now has paying users. I want to start shipping features faster and get some help on the dev side so I can focus on growing the user base. Based on the revenue from the business right now, I can pay a salary of $2k USD full time.

My questions:

1. What kind of talent do you think I can get at that salary level?
2. Do you think it would be better to hire and train now or hire at a later stage once the user base is larger and I can afford a higher salary?
3. Where would you look for devs? Any general tips?

Either way, depending on the experience of the dev, I'd bump up the salary as the app continues to acquire more users.

I appreciate any input and feedback :)",True,False,False,haskell,t5_2qh36,68496,public,self,Advice on Hiring a Haskell Developer,0,[],1.0,https://www.reddit.com/r/haskell/comments/s25o7y/advice_on_hiring_a_haskell_developer/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
531.0,[],False,Actual_Ad4965,,[],,text,t2_gp85uzof,False,False,False,[],False,False,1641983716,self.haskell,https://www.reddit.com/r/haskell/comments/s23akq/avoiding_orphans_via_deriving/,{},s23akq,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s23akq/avoiding_orphans_via_deriving/,False,,,6,1641983726,1,[removed],True,False,False,haskell,t5_2qh36,68494,public,self,Avoiding orphans via deriving,0,[],1.0,https://www.reddit.com/r/haskell/comments/s23akq/avoiding_orphans_via_deriving/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
532.0,[],False,Zestyclose-Orange468,,[],,text,t2_6gzulffj,False,False,False,[],False,False,1641969201,self.haskell,https://www.reddit.com/r/haskell/comments/s1zifm/seeking_advice_for_haskellbased_webapp_ie/,{},s1zifm,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s1zifm/seeking_advice_for_haskellbased_webapp_ie/,False,,,6,1641969212,1,"Hello everyone! I am an undergrad who recently fell in love with Haskell (\~4 months!). As a hobby project, I am building a collaborative web-based code editor with a Haskell-backend and a Typescript+React frontend.

I have finished implementing the Operational Transformation logic (the core logic behind resolving multiple asynchronous edits to a central document) in Haskell, and am now in the process of designing the backend. Architecturally, I think clients communicating with the server via WebSockets would be the obvious choice.

To that end, what would be the best tool to set up WebSocket servers? I’ve spend some time googling about yesod-websockets and Network.Websockets (jaspervdj/websockets), but I am having trouble deciding which would be best for my context. Could anyone who has experience with either share some insight?

Thank you so much!!",True,False,False,haskell,t5_2qh36,68495,public,self,Seeking advice for Haskell-based web-app! (i.e. Collaborative web-based code editor),0,[],1.0,https://www.reddit.com/r/haskell/comments/s1zifm/seeking_advice_for_haskellbased_webapp_ie/,all_ads,6,,,,,,,,,,,,,,,,,,,,
533.0,[],False,dons,,[],,text,t2_jzjf,False,False,False,[],False,False,1641959532,donsbot.com,https://www.reddit.com/r/haskell/comments/s1wj9l/indexing_reactjavascript_glean_on_aarch64_on/,{},s1wj9l,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s1wj9l/indexing_reactjavascript_glean_on_aarch64_on/,False,link,"{'enabled': False, 'images': [{'id': 'QyKb-6oWyy7DOJEVc2buvBqmNVfrOxb1CluxvQYJIls', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/6v_hQWWvhy_2FwHz-KiCMGkPEgwAYypTD_8LarvsZB8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e5f87883f1d63209a98c179e9faff3d50eb70f50', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/6v_hQWWvhy_2FwHz-KiCMGkPEgwAYypTD_8LarvsZB8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9fd83c6155b51c662266d10f1aa75565b2249c07', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/6v_hQWWvhy_2FwHz-KiCMGkPEgwAYypTD_8LarvsZB8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6b29416de596721aec2c72ee5f915fb59247a477', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/6v_hQWWvhy_2FwHz-KiCMGkPEgwAYypTD_8LarvsZB8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b1e73a9c7629e5cdd052f0a3c8f46040865d9dc6', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/6v_hQWWvhy_2FwHz-KiCMGkPEgwAYypTD_8LarvsZB8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=d84261793496b793b5a7c878b9b734d60c29221e', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/6v_hQWWvhy_2FwHz-KiCMGkPEgwAYypTD_8LarvsZB8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=0cd1be7e290fa763f1025c34e72395db8f7d17cb', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/6v_hQWWvhy_2FwHz-KiCMGkPEgwAYypTD_8LarvsZB8.jpg?auto=webp&amp;s=5f9839c16a53effdbd7df919d917a48a27f25033', 'width': 1200}, 'variants': {}}]}",6,1641959542,1,,True,False,False,haskell,t5_2qh36,68496,public,default,Indexing React/JavaScript (Glean on aarch64 on Apple Silicon : part 3),0,[],1.0,https://donsbot.com/2022/01/11/glean-on-aarch64-on-apple-silicon-part-3/,all_ads,6,,,https://donsbot.com/2022/01/11/glean-on-aarch64-on-apple-silicon-part-3/,70.0,140.0,,,,,,,,,,,,,,,
534.0,[],False,M-barber,,[],,text,t2_ef73h8bo,False,False,False,[],False,False,1641951700,self.haskell,https://www.reddit.com/r/haskell/comments/s1tu2j/job_2x_haskell_developer_bellroy_remote/,{},s1tu2j,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s1tu2j/job_2x_haskell_developer_bellroy_remote/,False,self,"{'enabled': False, 'images': [{'id': 'v4tR3_XxODsat55UMq9U8Qtuwra_2ER3xHwhR67ylpg', 'resolutions': [{'height': 48, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=836d7cfa6660c48774759681b0e94215b3d31305', 'width': 108}, {'height': 96, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=571ef5dced4f28e50df884ed735393349dfe4538', 'width': 216}, {'height': 142, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=41663b11129ed5e756d15c30d317bb3501c7f0da', 'width': 320}, {'height': 284, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ac51d7201fa6e1cb837cbbd4a04428ae3226b901', 'width': 640}, {'height': 426, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ee36d6eab59cb261862c685885421ab1843ab82a', 'width': 960}, {'height': 480, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=80f66b6b9d5b44ae8a97ec5e19c4ace6b046edd8', 'width': 1080}], 'source': {'height': 800, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?auto=webp&amp;s=2ba2bc0943a5a2dfc739073107c052a687f1fdb9', 'width': 1800}, 'variants': {}}]}",6,1641951711,1,"[Bellroy](https://bellroy.com/) helps people carry better by making great bags, phone cases, and wallets. We’re [Australia’s Best Place to Work](https://greatplacetowork.com.au/best-places-to-work-australia-2021-small-companies/) (&lt; 100 employees category), we’ve grown rapidly, and we’re now looking to expand our Technology Team to keep pace with that ongoing growth. We’re not a software company, but software development is one of our core competencies. This means the Technology Team rarely works to hard delivery deadlines (we prioritise “correct” over “now”) and we regularly make open-source contributions.  
We have about 40KLOC of backend Haskell code supporting our systems, and we're looking for two more Haskell developers who can balance shipping features with improving this codebase every time they change it. While we're not afraid of the occasional inelegant hack, we'd much prefer to look back and see that we used the right tools and abstractions, instead of brute force.  
We don’t mind where you live - you can join us in the office in Melbourne, Australia, or work remotely from anywhere in the world. The Technology Team has members on five continents, and our remote developers are first-class team members. You’ll need to overlap Melbourne office hours (UTC+10/UTC+11 depending on DST) for at least a few hours each day, but how you arrange that is up to you.  
**We’re looking for someone with the following qualities (but we also love fast learners if you can’t say yes to every single point):**  


* Has at least 2-3 years (professional or dedicated hobbyist) experience with Haskell and functional programming
* Gets excited about great ideas, wherever they come from – books, blogs and podcasts, technical and non-technical
* Has some AWS experience - most of our Haskell code runs as AWS Lambda functions talking to DynamoDB.
* Has used Apache Kafka to build streaming applications
* Has experience wrangling Nix

Most of our tech stack is built on Free and Open Source Software, and we give back wherever we can - either by upstreaming fixes or publishing libraries. In the Haskell world, we’ve open-sourced [wai-handler-hal](https://hackage.haskell.org/package/wai-handler-hal) and [aws-arn](https://hackage.haskell.org/package/aws-arn), and we have more on the way.If you’re interested, here’s our [applications page](https://grnh.se/ab46ccc01us). If you have questions, you can ask them here or email [careers@bellroy.com](mailto:careers@bellroy.com).",True,False,False,haskell,t5_2qh36,68492,public,self,[JOB] 2x Haskell Developer @ Bellroy (Remote),0,[],1.0,https://www.reddit.com/r/haskell/comments/s1tu2j/job_2x_haskell_developer_bellroy_remote/,all_ads,6,,,,,,,,,,,,,,,,,,,,
535.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1641947951,github.com,https://www.reddit.com/r/haskell/comments/s1shi0/proposal_show_char_and_show_string_shouldnt/,{},s1shi0,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s1shi0/proposal_show_char_and_show_string_shouldnt/,False,link,"{'enabled': False, 'images': [{'id': 'YLGA7FaxGmt7A1Ms9TTK-tbgK_fE2xnYGBiKHyXN4oY', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/1Wkc_pPmNgXhbxnPn1a9HthptdbbnLVyphwWSmWs-Kg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0369f29b81259f036bfdb0d8d87e1e0774920d5a', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/1Wkc_pPmNgXhbxnPn1a9HthptdbbnLVyphwWSmWs-Kg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e42052265fa686894c3b1091acdecc052109761d', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/1Wkc_pPmNgXhbxnPn1a9HthptdbbnLVyphwWSmWs-Kg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=794de1a2f0ac8164e84c183966e52b5e25aa39bb', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/1Wkc_pPmNgXhbxnPn1a9HthptdbbnLVyphwWSmWs-Kg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=3437c6b21be67923e995932a1b905f9b839293a7', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/1Wkc_pPmNgXhbxnPn1a9HthptdbbnLVyphwWSmWs-Kg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=d8570de3508a8fc4c742c449cff24f7735680d95', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/1Wkc_pPmNgXhbxnPn1a9HthptdbbnLVyphwWSmWs-Kg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ed8e6f5f32bdd54e8f60746c06b7592bd008fd6a', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/1Wkc_pPmNgXhbxnPn1a9HthptdbbnLVyphwWSmWs-Kg.jpg?auto=webp&amp;s=5b50f1fd468d0b59e332971d13b83d4734e4c926', 'width': 1200}, 'variants': {}}]}",6,1641947961,1,,True,False,False,haskell,t5_2qh36,68492,public,default,Proposal: show @Char and show @String shouldn't escape readable Unicode characters,0,[],1.0,https://github.com/haskell/core-libraries-committee/issues/26,all_ads,6,,,https://github.com/haskell/core-libraries-committee/issues/26,70.0,140.0,,,,,,,,,,,,,,,
536.0,[],False,jamhob,,[],,text,t2_12op5ghx,False,False,False,[],False,False,1641942296,hobson.space,https://www.reddit.com/r/haskell/comments/s1qera/making_shared_libraries_without_dynamically/,{},s1qera,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/s1qera/making_shared_libraries_without_dynamically/,False,,,6,1641942307,1,,True,False,False,haskell,t5_2qh36,68492,public,default,Making Shared Libraries without dynamically linking to Haskell dependencies,0,[],1.0,https://www.hobson.space/posts/haskell-foreign-library/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://www.hobson.space/posts/haskell-foreign-library/,,,,,,,,,,,,,,,,,
537.0,[],False,flipester,,[],,text,t2_2ibkf1d0,False,False,False,[],False,False,1641941082,self.haskell,https://www.reddit.com/r/haskell/comments/s1py9n/learn_you_a_haskell_is_back_up/,{},s1py9n,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s1py9n/learn_you_a_haskell_is_back_up/,False,self,"{'enabled': False, 'images': [{'id': 'KFBHVBDTWJLxRAMQShBeCLFjR0IOJAzSH_SSY13rmw0', 'resolutions': [{'height': 142, 'url': 'https://external-preview.redd.it/RoPrjkwMCAZHOV5ftwa8vT02LeipFZ45v0-Xo-RBA08.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a48266d9864b417bad3dd69763c45e74cfb5e273', 'width': 108}, {'height': 285, 'url': 'https://external-preview.redd.it/RoPrjkwMCAZHOV5ftwa8vT02LeipFZ45v0-Xo-RBA08.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1a2683881e1a828545fe4c9f54ea924cd4d72f88', 'width': 216}, {'height': 422, 'url': 'https://external-preview.redd.it/RoPrjkwMCAZHOV5ftwa8vT02LeipFZ45v0-Xo-RBA08.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=17b6456ca654741a2cf777d9ac4cafce48f93e19', 'width': 320}, {'height': 845, 'url': 'https://external-preview.redd.it/RoPrjkwMCAZHOV5ftwa8vT02LeipFZ45v0-Xo-RBA08.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=22fba6a880b3b20b73d4d85e23ec62763d8887da', 'width': 640}], 'source': {'height': 888, 'url': 'https://external-preview.redd.it/RoPrjkwMCAZHOV5ftwa8vT02LeipFZ45v0-Xo-RBA08.jpg?auto=webp&amp;s=cb4bbba67b1c4a0c84cde1620ac2aff66d1f18ea', 'width': 672}, 'variants': {}}]}",6,1641941092,1,"I emailed Starch Press to let them know that the link from [their Learn You a Haskell page](https://nostarch.com/lyah.htm) to [the author's site](http://learnyouahaskell.com/) was down. They contacted the author, and it's back up. 😀",True,False,False,haskell,t5_2qh36,68492,public,self,Learn You a Haskell is back up,0,[],1.0,https://www.reddit.com/r/haskell/comments/s1py9n/learn_you_a_haskell_is_back_up/,all_ads,6,,,,,,,,,,,,,,,,,,,,
538.0,[],False,neverendingcopy,,[],,text,t2_6hi0nu34,False,False,False,[],False,False,1641925101,self.haskell,https://www.reddit.com/r/haskell/comments/s1jkao/event_c4p_last_day_to_submit_your_haskell_talk_to/,{},s1jkao,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s1jkao/event_c4p_last_day_to_submit_your_haskell_talk_to/,False,,,6,1641925112,1,"Hey everyone,

  
In **April 2022** we at [SoftwareMill](https://softwaremill.com) ([we did Scalar](https://scalar-conf.com/) 7 times before so we have lots of experience in throwing tech events) are organizing a special, **all-inclusive onsite programmers conference in the Polish Mountains.** 

  
We invite there every **Type Safety** enthusiast, so of course, **each Haskell develope**r is very much welcomed! Currently, we have **6 rockstars confirmed** (including Paweł Szulc, Haskell Developer at Input Output (IOHK)) but we're looking for more quality talks &amp; speakers to join us in the wild!

  
We close the **Call For Papers** admission on **January 12th** at midnight so better hurry up and submit your talk title &amp; abstract fast! You don't want to miss it - **5 days in 4 stars hotel with the biggest tech stars for free?** Sounds like a no-brainer! 

  
Find the C4P doc here: [https://www.typeville.io/](https://www.typeville.io/)",True,False,False,haskell,t5_2qh36,68489,public,self,[Event C4P] Last day to submit your Haskell talk to TypeVille!,0,[],1.0,https://www.reddit.com/r/haskell/comments/s1jkao/event_c4p_last_day_to_submit_your_haskell_talk_to/,all_ads,6,,,,,,,,,,,,,,,,,,,,
539.0,[],False,last_shawerma,,[],,text,t2_ih4vohmo,False,False,False,[],False,False,1641912361,self.haskell,https://www.reddit.com/r/haskell/comments/s1ej9o/evoli_is_looking_for_a_haskell_developer/,{},s1ej9o,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s1ej9o/evoli_is_looking_for_a_haskell_developer/,False,self,"{'enabled': False, 'images': [{'id': '2MeGPrFu0ZBIHSNzQj5nNmqjMAP5RkaS-az_1ATgLxg', 'resolutions': [{'height': 37, 'url': 'https://external-preview.redd.it/Axe0fBFPd7nYo7qzluqKvKcE7DjkoqClZNMSCaSCQMs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f1e3c87297f8cee2a54554c7a3ed060a33b93472', 'width': 108}, {'height': 74, 'url': 'https://external-preview.redd.it/Axe0fBFPd7nYo7qzluqKvKcE7DjkoqClZNMSCaSCQMs.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e7d5e08e55ba563c849a3bd12f9cd3ffee9a5564', 'width': 216}, {'height': 110, 'url': 'https://external-preview.redd.it/Axe0fBFPd7nYo7qzluqKvKcE7DjkoqClZNMSCaSCQMs.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f48fd0ee494d69b4b5fcfa5ff4b81eec2aa1b7e5', 'width': 320}], 'source': {'height': 174, 'url': 'https://external-preview.redd.it/Axe0fBFPd7nYo7qzluqKvKcE7DjkoqClZNMSCaSCQMs.jpg?auto=webp&amp;s=2b27ee75a697b175ab4528795c37624f309ec5c4', 'width': 504}, 'variants': {}}]}",6,1641912371,1,[removed],True,False,False,haskell,t5_2qh36,68486,public,self,Evoli is looking for a Haskell developer,0,[],1.0,https://www.reddit.com/r/haskell/comments/s1ej9o/evoli_is_looking_for_a_haskell_developer/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,automod_filtered,,,,,,,,,,,,,
540.0,[],False,anton-kho,,[],,text,t2_zac91,False,False,False,[],False,False,1641909213,github.com,https://www.reddit.com/r/haskell/comments/s1deqs/ann_plutussimplemodel_unit_test_library_for/,{},s1deqs,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s1deqs/ann_plutussimplemodel_unit_test_library_for/,False,link,"{'enabled': False, 'images': [{'id': 'eff3rDXu1RSPm_vhqZ-HrXygWUokAPhCs4fZ37hBVL4', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/b5O8kNmDv3NgaQ0LJaIgClNWuTac9nEmW2dycWYHBqw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=88b1bfb1933940dd1076933c853b6e3e2fd65495', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/b5O8kNmDv3NgaQ0LJaIgClNWuTac9nEmW2dycWYHBqw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=00226f3739379ae1d4df1e60a380c6791a30c490', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/b5O8kNmDv3NgaQ0LJaIgClNWuTac9nEmW2dycWYHBqw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1f266c03b8efc7529b01a94dac512be53418262a', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/b5O8kNmDv3NgaQ0LJaIgClNWuTac9nEmW2dycWYHBqw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=3818aa0f289e929c0e3cdf1760b2213d82080515', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/b5O8kNmDv3NgaQ0LJaIgClNWuTac9nEmW2dycWYHBqw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=d46dbd3a6a86dea8037b6d35fc3d8764b278f99a', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/b5O8kNmDv3NgaQ0LJaIgClNWuTac9nEmW2dycWYHBqw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3eb491d7bd4def1cd14e756017abc385c8eb88d3', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/b5O8kNmDv3NgaQ0LJaIgClNWuTac9nEmW2dycWYHBqw.jpg?auto=webp&amp;s=97bb08a3db7674cc339f8ab55f4fa7b08cc84058', 'width': 1200}, 'variants': {}}]}",6,1641909223,1,,True,False,False,haskell,t5_2qh36,68484,public,default,[ANN] plutus-simple-model - Unit test library for plutus. Minimal testing library that is joyful to use and can estimate resource usage for transactions (size and execution units),0,[],1.0,https://github.com/mlabs-haskell/plutus-simple-model,all_ads,6,,,https://github.com/mlabs-haskell/plutus-simple-model,70.0,140.0,,,,,,,,,,,,,,,
541.0,[],False,fumieval,,[],,text,t2_fwirv,False,False,False,[],False,False,1641906706,twitter.com,https://www.reddit.com/r/haskell/comments/s1clbh/antiintellectualism_in_haskell/,{},s1clbh,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s1clbh/antiintellectualism_in_haskell/,False,link,"{'enabled': False, 'images': [{'id': '8YQsdvIU0n1K_ZjchvqAq1tBNjEkF9WhmugzsIheVEQ', 'resolutions': [{'height': 94, 'url': 'https://external-preview.redd.it/G3VKagj61fECrA94wquWU4LEyKNKW5oAYousVsv0eFM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3fdf8b252481eb2e275c8d4156c4333e25dbe76a', 'width': 108}], 'source': {'height': 122, 'url': 'https://external-preview.redd.it/G3VKagj61fECrA94wquWU4LEyKNKW5oAYousVsv0eFM.jpg?auto=webp&amp;s=71a99d767321910738141a80c7cd0fb535eb7479', 'width': 140}, 'variants': {}}]}",6,1641906717,1,,True,False,False,haskell,t5_2qh36,68483,public,default,Anti-intellectualism in Haskell,0,[],1.0,https://twitter.com/graninas/status/1470778940822282246,all_ads,6,,,https://twitter.com/graninas/status/1470778940822282246,122.0,140.0,,,,,,,"{'oembed': {'author_name': 'Alexander Granin', 'author_url': 'https://twitter.com/graninas', 'cache_age': 3153600000, 'height': None, 'html': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;The system of values in Haskell that prevents it from becoming more popular. &lt;a href=""https://t.co/L4Y6uEYUjg""&gt;pic.twitter.com/L4Y6uEYUjg&lt;/a&gt;&lt;/p&gt;&amp;mdash; Alexander Granin (@graninas) &lt;a href=""https://twitter.com/graninas/status/1470778940822282246?ref_src=twsrc%5Etfw""&gt;December 14, 2021&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'provider_name': 'Twitter', 'provider_url': 'https://twitter.com', 'type': 'rich', 'url': 'https://twitter.com/graninas/status/1470778940822282246', 'version': '1.0', 'width': 350}, 'type': 'twitter.com'}","{'content': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;The system of values in Haskell that prevents it from becoming more popular. &lt;a href=""https://t.co/L4Y6uEYUjg""&gt;pic.twitter.com/L4Y6uEYUjg&lt;/a&gt;&lt;/p&gt;&amp;mdash; Alexander Granin (@graninas) &lt;a href=""https://twitter.com/graninas/status/1470778940822282246?ref_src=twsrc%5Etfw""&gt;December 14, 2021&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'height': 200, 'scrolling': False, 'width': 350}","{'oembed': {'author_name': 'Alexander Granin', 'author_url': 'https://twitter.com/graninas', 'cache_age': 3153600000, 'height': None, 'html': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;The system of values in Haskell that prevents it from becoming more popular. &lt;a href=""https://t.co/L4Y6uEYUjg""&gt;pic.twitter.com/L4Y6uEYUjg&lt;/a&gt;&lt;/p&gt;&amp;mdash; Alexander Granin (@graninas) &lt;a href=""https://twitter.com/graninas/status/1470778940822282246?ref_src=twsrc%5Etfw""&gt;December 14, 2021&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'provider_name': 'Twitter', 'provider_url': 'https://twitter.com', 'type': 'rich', 'url': 'https://twitter.com/graninas/status/1470778940822282246', 'version': '1.0', 'width': 350}, 'type': 'twitter.com'}","{'content': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;The system of values in Haskell that prevents it from becoming more popular. &lt;a href=""https://t.co/L4Y6uEYUjg""&gt;pic.twitter.com/L4Y6uEYUjg&lt;/a&gt;&lt;/p&gt;&amp;mdash; Alexander Granin (@graninas) &lt;a href=""https://twitter.com/graninas/status/1470778940822282246?ref_src=twsrc%5Etfw""&gt;December 14, 2021&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/s1clbh', 'scrolling': False, 'width': 350}",,,,,
542.0,[],False,VeloxAquilae,,[],,text,t2_c9mfu,False,False,False,[],False,False,1641906460,self.haskell,https://www.reddit.com/r/haskell/comments/s1cil0/frequencyindexed_timeseries/,{},s1cil0,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s1cil0/frequencyindexed_timeseries/,False,,,6,1641906471,1,"Dear haskellers,

I'm toying with time-series data structures, similar to `pandas.DatetimeIndex` if you're familiar.

One thing that I wish I could do was clearly distinguish between unknown frequency, and fixed frequency (e.g. hourly, daily, etc).

My solution right now is to use phantom types, such as:

```haskell
import Data.Time (UTCTime) -- from time package
newtype Index f = Index [UTCTime]

data UnknownFreq
data Daily

mkIndex :: [UTCTime] -&gt; Index UnknownFreq

daily :: UTCTime -&gt; UTCTime -&gt; Index Daily
daily start stop = ...

toDaily :: Index UnknownFreq -&gt; Index Daily
toDaily (Index ts) = daily (minimum t) (maximum t)
```

Then, if I don't export the constructor for `Index`, it's harder to misuse and have an index which has type frequency `Daily`, but a real frequency of some other value.

Another possibility would be to enforce the frequency of the index structurally, e.g.:

```haskell
data Frequency = Hourly | Daily
data Index = Index { indexStart :: UTCTime
                   , indexStop  :: UTCTime
                   , indexFreq  :: Frequency
                   }
```

but then how can I also track the frequency a the type-level?",True,False,False,haskell,t5_2qh36,68483,public,self,Frequency-indexed timeseries?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s1cil0/frequencyindexed_timeseries/,all_ads,6,,,,,,,,,,,,,,,,,,,,
543.0,[],False,portw,,[],,text,t2_131ki2,False,False,False,[],False,False,1641898707,self.haskell,https://www.reddit.com/r/haskell/comments/s1acdf/playing_with_publickey_cryptography/,{},s1acdf,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s1acdf/playing_with_publickey_cryptography/,False,self,"{'enabled': False, 'images': [{'id': 'F4-sT1KpSaE8MA6Rx3wA11eDGapmVlA7_iZCJNUaUtI', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/S0K2UmUMdD5O_6_eRlE3TclFSQ6ELci9wEAYLrM02NE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=22605486803f7724e88665fb2d56e9768b92fe60', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/S0K2UmUMdD5O_6_eRlE3TclFSQ6ELci9wEAYLrM02NE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=04edf4585bbf0dafc400b10b1d572509f60e5f73', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/S0K2UmUMdD5O_6_eRlE3TclFSQ6ELci9wEAYLrM02NE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=57b36867d2c8abf58f7e059dddd97b8f89e7d489', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/S0K2UmUMdD5O_6_eRlE3TclFSQ6ELci9wEAYLrM02NE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=491e5c014851ddd739aa8a0deb3505c5d8029982', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/S0K2UmUMdD5O_6_eRlE3TclFSQ6ELci9wEAYLrM02NE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=29d0b1b60dc5beb923e721d9a0a09d74208dfeb0', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/S0K2UmUMdD5O_6_eRlE3TclFSQ6ELci9wEAYLrM02NE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8c6e5f7aa5d4451255f079e9c9772b42035e25ce', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/S0K2UmUMdD5O_6_eRlE3TclFSQ6ELci9wEAYLrM02NE.jpg?auto=webp&amp;s=35d5b76fd45f355de16ec86b853fecd42852c2d0', 'width': 1200}, 'variants': {}}]}",6,1641898717,1,[https://github.com/ProgressiveSweiry/PubKeyExample](https://github.com/ProgressiveSweiry/PubKeyExample),True,False,False,haskell,t5_2qh36,68481,public,self,Playing with Public-key cryptography,0,[],1.0,https://www.reddit.com/r/haskell/comments/s1acdf/playing_with_publickey_cryptography/,all_ads,6,,,,,,,,,,,,,,,,,,,,
544.0,[],False,ramin-honary-xc,,[],,text,t2_8mof715w,False,False,False,[],False,False,1641897965,self.haskell,https://www.reddit.com/r/haskell/comments/s1a61p/ghc_question_possible_to_use_posix_fork_without/,{},s1a61p,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s1a61p/ghc_question_possible_to_use_posix_fork_without/,False,,,6,1641897975,1,"The problem I am trying to solve is that I have foreign bindings to an external C library that occasionally crashes due to code in the C library beyond my control. I would like to isolate the code that runs in the C library in a child process and restart the child process when it crashses, and I want to continue using the Haskell API we built around it. I would like to `fork()` the Haskell server process but not call `execve()`, rather have the child process call into the `IO ()` function that runs the foreign code.

Unfortunately, the `System.Process.CmdSpec` data type in the `process` package doesn't allow you to fork an arbitrary `IO` function, you MUST provide it a path to an executable as a `RawCommand` or `ShellCommand`. I am wondering if there is an easy way to solve my problem without going through the hassle of rolling my own version of `createProcess` using the POSIX APIs in the `unix` package?",True,False,False,haskell,t5_2qh36,68481,public,self,"[GHC question] Possible to use POSIX ""fork()"" without ""execve()""?",0,[],1.0,https://www.reddit.com/r/haskell/comments/s1a61p/ghc_question_possible_to_use_posix_fork_without/,all_ads,6,,,,,,,,,,,,,,,,,,,,
545.0,[],False,TekDevelop,,[],,text,t2_ft0gh,False,False,False,[],False,False,1641889049,self.haskell,https://www.reddit.com/r/haskell/comments/s181hn/how_to_create_my_functor_eq_num_combination_on/,{},s181hn,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s181hn/how_to_create_my_functor_eq_num_combination_on/,False,,,6,1641889059,1,"I'm trying to get a grip on creating my own types in haskell. 

As a starting point I created:

    data Coords = Coords (Int, Int, Int) deriving (Show)
    
    instance Eq Coords where
      (Coords (x,y,z)) == (Coords (x',y',z')) = x==x' &amp;&amp; y==y' &amp;&amp; z==z'
    
    instance Num Coords where
      (Coords (x,y,z)) + (Coords (x',y',z')) = Coords(x+x', y+y', z+z')
      (Coords (x,y,z)) - (Coords (x',y',z')) = Coords(x-x', y-y', z-z')
      (Coords (x,y,z)) * (Coords (x',y',z')) = Coords(x*x', y*y', z*z')
      negate (Coords (x,y,z))                = Coords (-x,-y,-z)
      abs    (Coords (x,y,z))                = Coords(abs x, abs y, abs z)
      signum (Coords (x,y,z))                = Coords(signum x, signum y, signum z)
      fromInteger a                          = Coords(fromInteger a,fromInteger a,fromInteger a)
    

This enables me to do things like
 
    Coords (1,2,3) + Coords (4,5,6)


To my understanding I would need to create an instance of Functor when I have a function that operates on the 3-tuple but does not know about Coords:

    move n (x,y,z) = (x+n, y+n, z+n)

In the hopes I can use it like this:

    move 6 &lt;$&gt; Coords (1,2,3)

I created this:

    instance Functor Coords where
      fmap f (Coords a) = Coords (f a)
    
Upon which the compiler complains: Expected kind '* -&gt; *' but Coords has kind '*'

Suppose I define the type like:

    data Coords a = Coords a deriving (Show)

Than my functor works but I've no Idea how to implement the instances for Eq and Num

What am I missing or what am I doing wrong?",True,False,False,haskell,t5_2qh36,68477,public,self,How to create my Functor / Eq / Num combination on Coords?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s181hn/how_to_create_my_functor_eq_num_combination_on/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
546.0,[],False,iedoub,,[],,text,t2_jxviuup,False,False,False,[],False,False,1641874427,youtube.com,https://www.reddit.com/r/haskell/comments/s13vth/haskell_beginners_2022_lecture_1/,{},s13vth,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s13vth/haskell_beginners_2022_lecture_1/,False,rich:video,"{'enabled': False, 'images': [{'id': 'vkaAtVhdcs-wpRdBO6il9phyxagYEer_gsr3GVP8wjU', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/MEWsaJHNZGPstQi0MD7LM1Oc8QJFA-dj_TUx8AqcISU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=78aadcf5680fb4d06d2e97190a493a0f38cc1809', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/MEWsaJHNZGPstQi0MD7LM1Oc8QJFA-dj_TUx8AqcISU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6f7b87b65ac3a37f59f44085054843d9a842c288', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/MEWsaJHNZGPstQi0MD7LM1Oc8QJFA-dj_TUx8AqcISU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0e13ac29e1b9ddb5d11e8ed5d48d8a45ca2b11e8', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/MEWsaJHNZGPstQi0MD7LM1Oc8QJFA-dj_TUx8AqcISU.jpg?auto=webp&amp;s=b22d7614e32a4d699087736449f1fdcad56c98c9', 'width': 480}, 'variants': {}}]}",6,1641874437,1,,True,False,False,haskell,t5_2qh36,68473,public,image,Haskell Beginners 2022: Lecture 1,0,[],1.0,https://www.youtube.com/watch?v=6MsQcUprO9o,all_ads,6,,,https://www.youtube.com/watch?v=6MsQcUprO9o,105.0,140.0,,,,,,,"{'oembed': {'author_name': 'chshersh', 'author_url': 'https://www.youtube.com/c/chshersh', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/6MsQcUprO9o?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/6MsQcUprO9o/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Haskell Beginners 2022: Lecture 1', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/6MsQcUprO9o?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'chshersh', 'author_url': 'https://www.youtube.com/c/chshersh', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/6MsQcUprO9o?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/6MsQcUprO9o/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Haskell Beginners 2022: Lecture 1', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/6MsQcUprO9o?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/s13vth', 'scrolling': False, 'width': 356}",,,,,
547.0,[],False,Axman6,,[],,text,t2_37j8m,False,False,False,[],False,False,1641859869,i.redd.it,https://www.reddit.com/r/haskell/comments/s0yw7v/no_separation_between_church_and_state/,{},s0yw7v,False,False,False,False,True,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s0yw7v/no_separation_between_church_and_state/,False,image,"{'enabled': True, 'images': [{'id': '0tErXE_cgHYPHv5l2seQtruPmj8v20-tkD2LPwDhfOk', 'resolutions': [{'height': 110, 'url': 'https://preview.redd.it/b6f0tq8laya81.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=08e88f2ce8da52046cbdbed6b173220445cfc891', 'width': 108}, {'height': 220, 'url': 'https://preview.redd.it/b6f0tq8laya81.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=374393cb81e68ab7013c8ad7db0121c1f29fe3d9', 'width': 216}, {'height': 326, 'url': 'https://preview.redd.it/b6f0tq8laya81.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=cce1c82723b141bbfb295c75c79dae07ae8c59a3', 'width': 320}, {'height': 653, 'url': 'https://preview.redd.it/b6f0tq8laya81.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=e930367fe7885dcc197e6b7bcd8ce00ea5677583', 'width': 640}], 'source': {'height': 899, 'url': 'https://preview.redd.it/b6f0tq8laya81.png?auto=webp&amp;s=b50a3acfc5ec15b8c2578ad069b5be514cb80166', 'width': 880}, 'variants': {}}]}",6,1641859880,1,,True,False,False,haskell,t5_2qh36,68471,public,image,No separation between Church and state,0,[],1.0,https://i.redd.it/b6f0tq8laya81.png,all_ads,6,,,https://i.redd.it/b6f0tq8laya81.png,140.0,140.0,,moderator,,,,,,,,,,,,,
548.0,[],False,yaxu,,[],,text,t2_ploc,False,False,False,[],False,False,1641850726,mzadel.github.io,https://www.reddit.com/r/haskell/comments/s0vbv8/learning_tidal_fundamentals_nice_groundup_intro/,{},s0vbv8,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/s0vbv8/learning_tidal_fundamentals_nice_groundup_intro/,False,,,6,1641850737,1,,True,False,False,haskell,t5_2qh36,68470,public,default,Learning Tidal Fundamentals - nice ground-up intro to TidalCycles by Mark Zadel,0,[],1.0,https://mzadel.github.io/tidalfundamentals/,all_ads,6,,,https://mzadel.github.io/tidalfundamentals/,,,,,,,,,,,,,,,,,
549.0,[],False,doctorcezar,,[],,text,t2_6ii8g4vo,False,False,False,[],False,False,1641835166,self.haskell,https://www.reddit.com/r/haskell/comments/s0p68e/side_job_someone_with_23_free_hours_tomorrow/,{},s0p68e,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/s0p68e/side_job_someone_with_23_free_hours_tomorrow/,False,,,6,1641835176,1,"Hey, was told this might be a good place to find a suitable person for this little side quest. Need someone with decent/intermediate knowledge in Haskell to help me with a task I need to complete in 3 hours. Not looking to scam or underpay anyone, I will pay a deposit before we start and I’ll make sure everyone is happy with the price before we start. Good way to earn some change if you’re off work for now. Thanks and look forward to hearing from anyone.",True,False,False,haskell,t5_2qh36,68469,public,self,(Side job) Someone with 2/3 free hours tomorrow morning and experience with Haskell.,0,[],1.0,https://www.reddit.com/r/haskell/comments/s0p68e/side_job_someone_with_23_free_hours_tomorrow/,all_ads,6,,,,,,,,,,,,,,,,,,,,
550.0,[],False,LoYodeya,,[],,text,t2_gonnrdbg,False,False,False,[],False,False,1641834629,self.haskell,https://www.reddit.com/r/haskell/comments/s0oycb/vse_haskell_extension_is_not_working_lately/,{},s0oycb,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s0oycb/vse_haskell_extension_is_not_working_lately/,False,,,6,1641834640,1,[removed],True,False,False,haskell,t5_2qh36,68469,public,self,VSE Haskell Extension is not working lately,0,[],1.0,https://www.reddit.com/r/haskell/comments/s0oycb/vse_haskell_extension_is_not_working_lately/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
551.0,[],False,sheshanaag,,[],,text,t2_tac4g,False,False,False,[],False,False,1641830018,hackage.haskell.org,https://www.reddit.com/r/haskell/comments/s0n59g/my_quickanddirty_approach_to_building_dlloadable/,{},s0n59g,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s0n59g/my_quickanddirty_approach_to_building_dlloadable/,False,,,6,1641830029,1,,True,False,False,haskell,t5_2qh36,68467,public,default,My quick-and-dirty approach to building dl-loadable shared libraries with Cabal spec and commands,0,[],1.0,https://hackage.haskell.org/package/ngx-export-distribution-0.3.2.0/docs/NgxExport-Distribution.html,all_ads,6,,,https://hackage.haskell.org/package/ngx-export-distribution-0.3.2.0/docs/NgxExport-Distribution.html,,,,,,,,,,,,,,,,,
552.0,[],False,zim0369,,[],,text,t2_cellbbuu,False,False,False,[],False,False,1641820031,self.haskell,https://www.reddit.com/r/haskell/comments/s0jmuq/need_help_with_a_config_file_written_in_haskell/,{},s0jmuq,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s0jmuq/need_help_with_a_config_file_written_in_haskell/,False,,,6,1641820042,1,"I need help with xmonad
config
```
myManageHook = composeAll
    [ className =? ""MPlayer""        --&gt; doFloat
    , className =? ""Gimp""           --&gt; doFloat
    , resource  =? ""desktop_window"" --&gt; doIgnore
    , resource  =? ""kdesktop""       --&gt; doIgnore ]

defaults = def {
      -- simple stuff
        terminal           = myTerminal,
.
.
.
        manageHook         = myManageHook,
}
```
This is the current state of my config related to managehook
I want to use scratchpads in xmonad
So I read the docs about configuring it
I've done almost everything except:
```
, manageHook = namedScratchpadManageHook scratchpads
```
which was given in the docs
how do I combine this line with the config I have above?
so that my current config doesn't break and scratchpads would work successfully?",True,False,False,haskell,t5_2qh36,68464,public,self,Need help with a config file written in haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/s0jmuq/need_help_with_a_config_file_written_in_haskell/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
553.0,[],False,Common-Program-2617,,[],,text,t2_ean7aj0y,False,False,False,[],False,False,1641817039,self.haskell,https://www.reddit.com/r/haskell/comments/s0irui/so_ive_finished_hask_ell_programming_from_first/,{},s0irui,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s0irui/so_ive_finished_hask_ell_programming_from_first/,False,,,6,1641817049,1,"Hey everyone -

I've just closed the last page of the last chapter of _Haskell Programming from First Principles_. It took me about 2 months of mostly consistent effort.

I really liked a lot of the concepts I've grokked from this little adventure; the chapters from monoids through monad transformers in particular showed me a new, very different level of abstraction with which I could think through common programming problems in the future.

What I _haven't_ done is make any big contributions or study what the job ecosystem looks like yet. Someone just recommended if I wanted to start programming right I should work through this book, and I had a few months of downtime between finishing my degree and starting the job search, so I did it.

So the only question I have left is: What's next? What would you recommend to someone who just finished this book, but doesn't have any other significant coding experience they can put on their resume?",True,False,False,haskell,t5_2qh36,68463,public,self,So I've finished _Hask ell Programming from First Principles_. What's next?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s0irui/so_ive_finished_hask_ell_programming_from_first/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
554.0,[],False,hydbird,,[],,text,t2_y4fwj,False,False,False,[],False,False,1641809562,self.haskell,https://www.reddit.com/r/haskell/comments/s0gqz4/i_cant_reach_httplearnyouahaskellcom_does_anybody/,{},s0gqz4,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s0gqz4/i_cant_reach_httplearnyouahaskellcom_does_anybody/,False,,,6,1641809573,1,"Hi, as of yesterday I can't reach [http://learnyouahaskell.com/](http://learnyouahaskell.com/) . I get "" **www.learnyouahaskell.com**’s server IP address could not be found. "" from the browser. I figured it may be a dns problem and checked it on [https://dnschecker.org/#A/www.learnyouahaskell.com](https://dnschecker.org/#A/www.learnyouahaskell.com) and none of the DNS' can solve the address. Any idea what is going on?",True,False,False,haskell,t5_2qh36,68461,public,self,I can't reach http://learnyouahaskell.com/ Does anybody know what is going on?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s0gqz4/i_cant_reach_httplearnyouahaskellcom_does_anybody/,all_ads,6,,,,,,,,,,,,,,,,,,,,
555.0,[],False,Zestyclose-Orange468,,[],,text,t2_6gzulffj,False,False,False,[],False,False,1641803732,self.haskell,https://www.reddit.com/r/haskell/comments/s0fanu/what_makes_a_good_haskell_programmer_valuable/,{},s0fanu,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s0fanu/what_makes_a_good_haskell_programmer_valuable/,False,,,6,1641803743,1,"I’ve frequently heard that a skilled Haskell programmer is almost always worth hiring. 

Is expertise in functional programming / haskell transferrable to general SWE work, even if it doesn’t involve FP or Haskell? What makes a good Haskell programmer valuable?",True,False,False,haskell,t5_2qh36,68460,public,self,What makes a good haskell programmer valuable?,0,[],1.0,https://www.reddit.com/r/haskell/comments/s0fanu/what_makes_a_good_haskell_programmer_valuable/,all_ads,6,,,,,,,,,,,,,,,,,,,,
556.0,[],False,dons,,[],,text,t2_jzjf,False,False,False,[],False,False,1641793235,donsbot.com,https://www.reddit.com/r/haskell/comments/s0cdur/glean_on_aarch64_on_apple_silicon_part_2/,{},s0cdur,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s0cdur/glean_on_aarch64_on_apple_silicon_part_2/,False,link,"{'enabled': False, 'images': [{'id': 'IjBCJUULRACO5NedarJXfdfg08zDbtcisSQ3OqY8_7g', 'resolutions': [{'height': 72, 'url': 'https://external-preview.redd.it/yKSdJDyq4pxPhY0pk-w0rN0viC5-xBG_VknSphXIs98.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7d9ddd4104eb8ec576cbd1e81b0692b5cd9e8832', 'width': 108}, {'height': 144, 'url': 'https://external-preview.redd.it/yKSdJDyq4pxPhY0pk-w0rN0viC5-xBG_VknSphXIs98.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e35cf0ead0c5fa187cd78642fac0d9fe8a1c9e7a', 'width': 216}, {'height': 213, 'url': 'https://external-preview.redd.it/yKSdJDyq4pxPhY0pk-w0rN0viC5-xBG_VknSphXIs98.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d93e28f5b533c8855477ef2f216ad3f91164f3ec', 'width': 320}, {'height': 426, 'url': 'https://external-preview.redd.it/yKSdJDyq4pxPhY0pk-w0rN0viC5-xBG_VknSphXIs98.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4603964e44b2afbb7df519caedc78a4ce51cf6c1', 'width': 640}, {'height': 640, 'url': 'https://external-preview.redd.it/yKSdJDyq4pxPhY0pk-w0rN0viC5-xBG_VknSphXIs98.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=f6758a281c8dd9fe5fa0d5269f2e5203a84a8238', 'width': 960}, {'height': 720, 'url': 'https://external-preview.redd.it/yKSdJDyq4pxPhY0pk-w0rN0viC5-xBG_VknSphXIs98.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=de419456b00022019aa24b47a53da8027c74f274', 'width': 1080}], 'source': {'height': 800, 'url': 'https://external-preview.redd.it/yKSdJDyq4pxPhY0pk-w0rN0viC5-xBG_VknSphXIs98.jpg?auto=webp&amp;s=afe5be196a729f9fb5260b51eff853f4a5577b18', 'width': 1200}, 'variants': {}}]}",6,1641793246,1,,True,False,False,haskell,t5_2qh36,68457,public,default,Glean on aarch64 on Apple Silicon : part 2,0,[],1.0,https://donsbot.com/2022/01/09/glean-on-aarch64-on-apple-silicon-part-2/,all_ads,6,,,https://donsbot.com/2022/01/09/glean-on-aarch64-on-apple-silicon-part-2/,93.0,140.0,,,,,,,,,,,,,,,
557.0,[],False,colonwqbang,,[],,text,t2_md16l,False,False,False,[],False,False,1641772133,self.haskell,https://www.reddit.com/r/haskell/comments/s058af/native_code_generation/,{},s058af,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s058af/native_code_generation/,False,,,6,1641772143,1,"What is the state of native code generation libraries in Haskell? I mean the kind of library you would use to write a compiler. Something that takes code written in some kind of IR and emits machine code. 

I found llvm-hs but it has not seen a release for more than two years and depends on an older version of llvm. Work seems to be underway to port it to a more current version.

Did I miss something? I feel there could be room for a simpler codegen library written in pure Haskell, in addition to big and serious libraries like llvm.",True,False,False,haskell,t5_2qh36,68454,public,self,Native code generation,0,[],1.0,https://www.reddit.com/r/haskell/comments/s058af/native_code_generation/,all_ads,6,,,,,,,,,,,,,,,,,,,,
558.0,[],False,average_emacs_user,,[],,text,t2_gh8b53ad,False,False,False,[],False,False,1641765811,self.haskell,https://www.reddit.com/r/haskell/comments/s02vt6/writer_vs_rws/,{},s02vt6,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s02vt6/writer_vs_rws/,False,,,6,1641765822,1,"In code that would benefit from the Writer monad, is it better to use the RWS monad right away for future-proofing?",True,False,False,haskell,t5_2qh36,68452,public,self,Writer vs RWS,0,[],1.0,https://www.reddit.com/r/haskell/comments/s02vt6/writer_vs_rws/,all_ads,6,,,,,,,,,,,,,,,,,,,,
559.0,[],False,RangerFinal,,[],,text,t2_73idb2zw,False,False,False,[],False,False,1641763278,self.haskell,https://www.reddit.com/r/haskell/comments/s01whn/dynamic_programming_in_haskell/,{},s01whn,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/s01whn/dynamic_programming_in_haskell/,False,self,"{'enabled': False, 'images': [{'id': 'C9qvvjg6bvylTcy-wVBbBGFsgQUm-peAAEA_jIybvlo', 'resolutions': [{'height': 71, 'url': 'https://external-preview.redd.it/nbFYeTYJvZtftD2kJW3DHhOFkQdDwdgcALwhWKdrOpo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5998a0407ea7aa05c52e5e30ac269b2f21f7c6c4', 'width': 108}, {'height': 142, 'url': 'https://external-preview.redd.it/nbFYeTYJvZtftD2kJW3DHhOFkQdDwdgcALwhWKdrOpo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7e4c1b9578bf19d060362b711d07b54f08bd066b', 'width': 216}, {'height': 211, 'url': 'https://external-preview.redd.it/nbFYeTYJvZtftD2kJW3DHhOFkQdDwdgcALwhWKdrOpo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=bc96abad321b232bea8467b8a1a3bd41712332e1', 'width': 320}, {'height': 423, 'url': 'https://external-preview.redd.it/nbFYeTYJvZtftD2kJW3DHhOFkQdDwdgcALwhWKdrOpo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=5c41ad68576f9cc0833588ba821f616c422a58c3', 'width': 640}], 'source': {'height': 494, 'url': 'https://external-preview.redd.it/nbFYeTYJvZtftD2kJW3DHhOFkQdDwdgcALwhWKdrOpo.jpg?auto=webp&amp;s=2422111c010f3b8593e6aa226e1454cc85660de0', 'width': 747}, 'variants': {}}]}",6,1641763288,1,"Hi Reddit! I really enjoy writing Haskell code and maintain a small blog where I write about my experiences with coding. Today's post explores a way for implementing dynamic programming algorithms in an Haskell idiomatic manner. Take a look if this interests you!

[https://fpunfold.com/2022/01/09/haskell-dp.html](https://fpunfold.com/2022/01/09/haskell-dp.html)",True,False,False,haskell,t5_2qh36,68452,public,self,Dynamic Programming in Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/s01whn/dynamic_programming_in_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
560.0,[],False,thma32,,[],,text,t2_1pmnf96k,False,False,False,[],False,False,1641738863,self.haskell,https://www.reddit.com/r/haskell/comments/rzsyal/writing_a_wikiserver_with_yesod/,{},rzsyal,False,True,False,True,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rzsyal/writing_a_wikiserver_with_yesod/,False,self,"{'enabled': False, 'images': [{'id': 'Qsdba9fao-keQ3MVZjSjeKxOBOw_VN2EbNjmE5HKAbU', 'resolutions': [{'height': 55, 'url': 'https://external-preview.redd.it/SQwIo0ZR0ms1s9UvaBMet4t3sfQjUQoU9S3n2PP9QqI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e39a6affde0cbf9bc0994ea5128c6dc2e235ae38', 'width': 108}, {'height': 111, 'url': 'https://external-preview.redd.it/SQwIo0ZR0ms1s9UvaBMet4t3sfQjUQoU9S3n2PP9QqI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=988a1d5bcf44fb015d727ded65f6f0486b73583a', 'width': 216}, {'height': 165, 'url': 'https://external-preview.redd.it/SQwIo0ZR0ms1s9UvaBMet4t3sfQjUQoU9S3n2PP9QqI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2e51f91d36a5de554a51fc02cc574e1f5b5fbaec', 'width': 320}, {'height': 330, 'url': 'https://external-preview.redd.it/SQwIo0ZR0ms1s9UvaBMet4t3sfQjUQoU9S3n2PP9QqI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7a4aae4ed9b3104fa195b8fff5bdce4eb4a405b7', 'width': 640}, {'height': 495, 'url': 'https://external-preview.redd.it/SQwIo0ZR0ms1s9UvaBMet4t3sfQjUQoU9S3n2PP9QqI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=db7521464cbd488ee1b84d363c9e4f386b2144e2', 'width': 960}, {'height': 556, 'url': 'https://external-preview.redd.it/SQwIo0ZR0ms1s9UvaBMet4t3sfQjUQoU9S3n2PP9QqI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=0932ac51efa7b6f329dff175f32e164989e6d707', 'width': 1080}], 'source': {'height': 1869, 'url': 'https://external-preview.redd.it/SQwIo0ZR0ms1s9UvaBMet4t3sfQjUQoU9S3n2PP9QqI.jpg?auto=webp&amp;s=1682bede78bb9cdaf9f2f1c4cbddad266919cb4e', 'width': 3624}, 'variants': {}}]}",6,1641738874,1,"[https://thma.github.io/posts/2022-01-09-Writing-a-Wiki-Server-with-Yesod.html](https://thma.github.io/posts/2022-01-09-Writing-a-Wiki-Server-with-Yesod.html)

In this blog post I’m presenting an implementation of a Wiki System in the spirit of the legendary [C2-Wiki](http://wiki.c2.com/) \- written in Haskell with the [Yesod](https://www.yesodweb.com/) framework.

There will also be some nice add-ons like a graph representation of the page links.",True,False,False,haskell,t5_2qh36,68441,public,self,Writing a Wiki-Server with Yesod,0,[],1.0,https://www.reddit.com/r/haskell/comments/rzsyal/writing_a_wikiserver_with_yesod/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,,,,,,,,,,,,,,,,,,
561.0,[],False,TechnoEmpress,,[],,text,t2_8nmmm9k7,False,False,False,[],False,False,1641736206,discourse.haskell.org,https://www.reddit.com/r/haskell/comments/rzs3vi/a_new_future_for_cryptography_in_haskell/,{},rzs3vi,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rzs3vi/a_new_future_for_cryptography_in_haskell/,False,link,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1641736217,1,,True,False,False,haskell,t5_2qh36,68440,public,default,A new future for cryptography in Haskell,0,[],1.0,https://discourse.haskell.org/t/a-new-future-for-cryptography-in-haskell/3888,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://discourse.haskell.org/t/a-new-future-for-cryptography-in-haskell/3888,140.0,140.0,,,,,,,,,,,,,,,
562.0,[],False,constavrou,,[],,text,t2_4eplggpk,False,False,False,[],False,False,1641727787,self.haskell,https://www.reddit.com/r/haskell/comments/rzpr43/haskell_learning/,{},rzpr43,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rzpr43/haskell_learning/,False,,,6,1641727797,1,[removed],True,False,False,haskell,t5_2qh36,68442,public,self,Haskell Learning,0,[],1.0,https://www.reddit.com/r/haskell/comments/rzpr43/haskell_learning/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
563.0,[],False,joncol79,,[],,text,t2_o3ax0,False,False,False,[],False,False,1641722627,self.haskell,https://www.reddit.com/r/haskell/comments/rzohtn/type_family_therapy/,{},rzohtn,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rzohtn/type_family_therapy/,False,self,"{'enabled': False, 'images': [{'id': 'XSUa2gGSTS5CVWAb6N10lYXox7-2dPtswHFLkVjTq-s', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/ZxlX-RLi5cS90FjFG_BRMrd94Faq9MSY6V5UHxw5t8A.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c73195a2c95957d950b11951a6687195df3ae145', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/ZxlX-RLi5cS90FjFG_BRMrd94Faq9MSY6V5UHxw5t8A.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=539f94a94931d92d1f68ba3fe09344cfbc1c8761', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/ZxlX-RLi5cS90FjFG_BRMrd94Faq9MSY6V5UHxw5t8A.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=23f229afb17fe291186cf0ee12d4fee482fdfd9a', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/ZxlX-RLi5cS90FjFG_BRMrd94Faq9MSY6V5UHxw5t8A.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=14497a7c6e175a7150b3b8e5b124b763b83edc41', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/ZxlX-RLi5cS90FjFG_BRMrd94Faq9MSY6V5UHxw5t8A.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2d9c0f2a857c68160bde6d95f2be9e0617f2514d', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/ZxlX-RLi5cS90FjFG_BRMrd94Faq9MSY6V5UHxw5t8A.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=4d3136ded8ee07d9951e954b6e8b402712e7bdfd', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/ZxlX-RLi5cS90FjFG_BRMrd94Faq9MSY6V5UHxw5t8A.jpg?auto=webp&amp;s=ae6730bf4ae30c0cd84a1347f1c7093f5f8ad2b6', 'width': 1200}, 'variants': {}}]}",6,1641722638,1,"Hi, I'm going through [i-am-tom's Haskell exercises](https://github.com/i-am-tom/haskell-exercises/tree/answers/06-TypeFamilies), currently I'm doing ""06-TypeFamilies"", and I'm not getting the answer to question two to go through the type checker. The problem description is:

&gt;Write a 'flatMap' function that takes a \`Vector n a\`, and a function\`a -&gt; Vector m b\`, and produces a list that is the concatenation of these results.

What we have is:

    data Nat = Z | S Nat
    
    data Vector (count :: Nat) (a :: Type) where
      VNil  :: Vector 'Z a
      VCons :: a -&gt; Vector n a -&gt; Vector ('S n) a
    
    type family (x :: Nat) + (y :: Nat) :: Nat where
  'Z + y = y
  ('S x) + y = 'S (x + y)

    type family (x :: Nat) ** (y :: Nat) :: Nat where
  'Z ** y = 'Z
  ('S x) ** y = y + x ** y
    
    append :: Vector m a -&gt; Vector n a -&gt; Vector (m + n) a
append VNil ys = ys
append (VCons x xs) ys = VCons x (append xs ys)

The definition of \`flatMap\` that I came up with (and that is also in the \`answers\` branch of the repository) is:

    flatMap :: Vector n a -&gt; (a -&gt; Vector m b) -&gt; Vector (n ** m) b
flatMap VNil _ = VNil
flatMap (VCons x xs) f = append (f x) (flatMap xs f)

This gives a type error though:

    Could not deduce: (m + (n1 ** m)) ~ ((m + n1) ** m)
  from the context: n ~ 'S n1
    bound by a pattern with constructor:
               VCons :: forall a (n :: Nat). a -&gt; Vector n a -&gt; Vector ('S n) a,
             in an equation for ‘flatMap’

I'm running \`ghc 8.10.7\` for this. Any idea of what is wrong?",True,False,False,haskell,t5_2qh36,68438,public,self,Type family therapy,0,[],1.0,https://www.reddit.com/r/haskell/comments/rzohtn/type_family_therapy/,all_ads,6,,,,,,,,,,,,,,,,,,,,
564.0,[],False,indrjo,,[],,text,t2_hat80x0i,False,False,False,[],False,False,1641721924,i.redd.it,https://www.reddit.com/r/haskell/comments/rzobfa/how_to_prevent_ghci_from_showing_these_lines/,{},rzobfa,False,False,False,False,True,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rzobfa/how_to_prevent_ghci_from_showing_these_lines/,False,image,"{'enabled': True, 'images': [{'id': 'cfPx3VNMQNdaCWPL1IgBueqFFk5AK0gdVyoT7b4ytNU', 'resolutions': [{'height': 81, 'url': 'https://preview.redd.it/ut5iz2cnwma81.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=bc5019d5bf3c2eb68c7ea0c554e0f2a88627ad03', 'width': 108}, {'height': 162, 'url': 'https://preview.redd.it/ut5iz2cnwma81.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=2c49a9db47f35ee8b180a4fdc21317b8bbe81f6a', 'width': 216}, {'height': 240, 'url': 'https://preview.redd.it/ut5iz2cnwma81.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=989b6d6a046cd9452a2e23c7305dea1f6b4d903c', 'width': 320}, {'height': 481, 'url': 'https://preview.redd.it/ut5iz2cnwma81.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=739fd82b3cb9b059df7faa41f0bb4386f05315eb', 'width': 640}], 'source': {'height': 533, 'url': 'https://preview.redd.it/ut5iz2cnwma81.png?auto=webp&amp;s=5ee2542331fb5201f1e9b1d8a7898025f104a734', 'width': 708}, 'variants': {}}]}",6,1641721935,1,,True,False,False,haskell,t5_2qh36,68436,public,image,How to prevent ghci from showing these lines?,0,[],1.0,https://i.redd.it/ut5iz2cnwma81.png,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,https://i.redd.it/ut5iz2cnwma81.png,105.0,140.0,,moderator,,,,,,,,,,,,,
565.0,[],False,webNoob13,,[],,text,t2_7bmygxmk,False,False,False,[],False,False,1641695507,self.haskell,https://www.reddit.com/r/haskell/comments/rzh5pi/re_int_to_binary_dont_know_how_to_reverse_the/,{},rzh5pi,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rzh5pi/re_int_to_binary_dont_know_how_to_reverse_the/,False,,,6,1641695518,1,"```
\--convert one digit 0 to 9  
\-- only need 4 digits   
intToBinary :: Int -&gt; Int -&gt; \[Int\]  
intToBinary 0 0 = \[0,0,0,0\]  
intToBinary digit remainder =  take 4 binaryNum --remainders of div by 2  
 where quotient = (fromIntegral digit) \`div\` (fromIntegral 2)    
remainder = digit \`mod\` 2   
binaryNum = remainder : intToBinary quotient remainder   
 \--binaryReverseFour = take 4 binaryReverse   
 \--binaryNum = reverse binaryReverseFour  
testOneConversion = intToBinary 3 0  
\--test 0 to 9  
allDigits = \[0,1,2,3,4,5,6,7,8,9\]  
testAllDigits :: \[Int\] -&gt; \[\[Int\]\]  
testAllDigits \[\] = \[\]  
testAllDigits arrDigits = intToBinary (head arrDigits) 0 : testAllDigits (tail arrDigits)
```
The output for testAll is 
```
[[0,0,0,0],[1,0,0,0],[0,1,0,0],[1,1,0,0],[0,0,1,0],[1,0,1,0],[0,1,1,0],[1,1,1,0],[0,0,0,1],[1,0,0,1]]
```
What I really want is to reverse the binary number array 
```
intToBinary digit remainder =  (reverse . take 4) binaryNum --remainders of div by 2

or

intToBinary digit remainder =  reverse $ take 4 binaryNum --remainders of div by 2

```
but when I do this the output is totally wrong.

How can I accomplish this?",True,False,False,haskell,t5_2qh36,68430,public,self,re: Int to Binary don't know how to reverse the solution after division by 2,0,[],1.0,https://www.reddit.com/r/haskell/comments/rzh5pi/re_int_to_binary_dont_know_how_to_reverse_the/,all_ads,6,,,,,,,,,,,,,,,,,,,,
566.0,[],False,RichKat666,,[],,text,t2_26lp84x0,False,False,False,[],False,False,1641688803,self.haskell,https://www.reddit.com/r/haskell/comments/rzev0p/why_doesnt_haskell_have_a_package_manager/,{},rzev0p,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rzev0p/why_doesnt_haskell_have_a_package_manager/,False,,,6,1641688814,1,"So I was trying to install a haskell code formatter to make sure my xmomad config looks nice. I installed stylish-haskell with cabal, since my system doesn't package it in its repos. I tried it, it didn't format the code how I wanted it to, so I thought ""that's fine, I'll just uninstall it and try another formatter"".

Long story short, apparently I can't. I tried to find out why, and apparently the best excuse is ""cabal isn't a package manager"". Ok, so what the fuck am I meant to use to manage packages? Stack can't uninstall either. 

Every github issue asking for uninstall functions is seemingly shut down with a response like ""I can't really see the use case for this"". Like what? What if you just don't want the fucking package anymore? That's like not adding brakes to a car because you ""don't see the use case, the point of a car is to go fast"".

Why does a language like haskell not have a proper package manager? How do you live like this?",True,False,False,haskell,t5_2qh36,68427,public,self,Why doesn't Haskell have a package manager?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rzev0p/why_doesnt_haskell_have_a_package_manager/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
567.0,[],False,dons,,[],,text,t2_jzjf,False,False,False,[],False,False,1641680603,donsbot.com,https://www.reddit.com/r/haskell/comments/rzbrlo/porting_glean_to_aarch64_on_apple_silicon_part_1/,{},rzbrlo,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rzbrlo/porting_glean_to_aarch64_on_apple_silicon_part_1/,False,link,"{'enabled': False, 'images': [{'id': 'vj5asUEVPCrBX6-8Z93q4V6izAHA_vDhVwIwv2RiS9c', 'resolutions': [{'height': 80, 'url': 'https://external-preview.redd.it/PjxsukkP6ReCuTriIJqY_oWms8MMdeoLr_9YzgGvNHA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c24a19cd5d688f3ac757667a548c6b61a9862540', 'width': 108}, {'height': 161, 'url': 'https://external-preview.redd.it/PjxsukkP6ReCuTriIJqY_oWms8MMdeoLr_9YzgGvNHA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=462dc6341a6bacb5ae60def01a069652b357e606', 'width': 216}, {'height': 239, 'url': 'https://external-preview.redd.it/PjxsukkP6ReCuTriIJqY_oWms8MMdeoLr_9YzgGvNHA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e12c7b4868623616255d213481575910be027639', 'width': 320}, {'height': 479, 'url': 'https://external-preview.redd.it/PjxsukkP6ReCuTriIJqY_oWms8MMdeoLr_9YzgGvNHA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=5f2bbd2ec55b9bec8337acd682f51c7db98b2ded', 'width': 640}, {'height': 719, 'url': 'https://external-preview.redd.it/PjxsukkP6ReCuTriIJqY_oWms8MMdeoLr_9YzgGvNHA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=3ef5e25377a3e27fc3e8ab0a6942f978f601e535', 'width': 960}, {'height': 809, 'url': 'https://external-preview.redd.it/PjxsukkP6ReCuTriIJqY_oWms8MMdeoLr_9YzgGvNHA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8ed90628f03979207b461de67783d596fa93b79d', 'width': 1080}], 'source': {'height': 899, 'url': 'https://external-preview.redd.it/PjxsukkP6ReCuTriIJqY_oWms8MMdeoLr_9YzgGvNHA.jpg?auto=webp&amp;s=b84052be248c67ffa4415e2e75730d156c99f84f', 'width': 1200}, 'variants': {}}]}",6,1641680614,1,,False,False,False,haskell,t5_2qh36,68427,public,default,Porting Glean to aarch64 on Apple Silicon : part 1,0,[],1.0,https://donsbot.com/2022/01/07/glean-on-aarch64-on-apple-silicon-part-1/,all_ads,6,,,https://donsbot.com/2022/01/07/glean-on-aarch64-on-apple-silicon-part-1/,104.0,140.0,,,,,,,,,,,,,,,
568.0,[],False,NorfairKing2,,[],,text,t2_154rv6yi,False,False,False,[],False,False,1641677491,github.com,https://www.reddit.com/r/haskell/comments/rzalcf/bevel_command_line_history_in_an_sqlite_database/,{},rzalcf,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rzalcf/bevel_command_line_history_in_an_sqlite_database/,False,link,"{'enabled': False, 'images': [{'id': 'WbcHnOt2bm-Yb4d8r_5KEif3i5Q2B4it1JXj2QpyJiY', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/B5F78sl6e1sy_Q4ZpJ-chnlTjnSuraVZ6KrpZnhvftU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2ea669a849bb3df7f12548e5f097bf96826719d2', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/B5F78sl6e1sy_Q4ZpJ-chnlTjnSuraVZ6KrpZnhvftU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8269ccc56ac9b05b9613c62f51137e78f0d1cebf', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/B5F78sl6e1sy_Q4ZpJ-chnlTjnSuraVZ6KrpZnhvftU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=60cceeb7f4c8e71b1e703805ebcfb7481f189898', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/B5F78sl6e1sy_Q4ZpJ-chnlTjnSuraVZ6KrpZnhvftU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=39b4f38b55f15fe81bd217809e7174a3aa927f92', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/B5F78sl6e1sy_Q4ZpJ-chnlTjnSuraVZ6KrpZnhvftU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=fab445d67c7b6244c0ab1c62812c74ae94db2b75', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/B5F78sl6e1sy_Q4ZpJ-chnlTjnSuraVZ6KrpZnhvftU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=f4612cf582b40772a0a0248b8caf93abe6fd0a1b', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/B5F78sl6e1sy_Q4ZpJ-chnlTjnSuraVZ6KrpZnhvftU.jpg?auto=webp&amp;s=57a5da9b2969233115930b4761cc01f4aea12fae', 'width': 1200}, 'variants': {}}]}",6,1641677502,1,,True,False,False,haskell,t5_2qh36,68425,public,default,Bevel: Command line history in an SQLite database for effective re-use,0,[],1.0,https://github.com/NorfairKing/bevel,all_ads,6,,,https://github.com/NorfairKing/bevel,70.0,140.0,,,,,,,,,,,,,,,
569.0,[],False,totallynotAGI,,[],,text,t2_32sx9lu,False,False,False,[],False,False,1641665703,self.haskell,https://www.reddit.com/r/haskell/comments/rz62sz/blog_post_lenses_to_the_left_of_me_prisms_to_the/,{},rz62sz,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rz62sz/blog_post_lenses_to_the_left_of_me_prisms_to_the/,False,self,"{'enabled': False, 'images': [{'id': 'L26TBCDqnELZn9thkrqTBpi3NjuvrH98tUU4KNGUavA', 'resolutions': [{'height': 66, 'url': 'https://external-preview.redd.it/4ZlP9J0NsbU1M4RKAuAYCz2ZFJ4pERIn7jAw0sXmBak.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0c304c9c37302864be333434d7bc18df2a2b0d35', 'width': 108}, {'height': 133, 'url': 'https://external-preview.redd.it/4ZlP9J0NsbU1M4RKAuAYCz2ZFJ4pERIn7jAw0sXmBak.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c61b2d52cba600e7bfc9293a7ffe968120eeaa66', 'width': 216}, {'height': 197, 'url': 'https://external-preview.redd.it/4ZlP9J0NsbU1M4RKAuAYCz2ZFJ4pERIn7jAw0sXmBak.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=73ec2f3d0feedc1f12b2b1ce5ad5880834f95f71', 'width': 320}, {'height': 395, 'url': 'https://external-preview.redd.it/4ZlP9J0NsbU1M4RKAuAYCz2ZFJ4pERIn7jAw0sXmBak.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d0b67a2652e9b5d8dd423e07430c7393bd1b3ddb', 'width': 640}, {'height': 593, 'url': 'https://external-preview.redd.it/4ZlP9J0NsbU1M4RKAuAYCz2ZFJ4pERIn7jAw0sXmBak.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=da4daab5a89d85826f985651f0968d71760a92d5', 'width': 960}, {'height': 668, 'url': 'https://external-preview.redd.it/4ZlP9J0NsbU1M4RKAuAYCz2ZFJ4pERIn7jAw0sXmBak.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=63ad6b1781b75a9290b5e413b15a277805f5e1c7', 'width': 1080}], 'source': {'height': 683, 'url': 'https://external-preview.redd.it/4ZlP9J0NsbU1M4RKAuAYCz2ZFJ4pERIn7jAw0sXmBak.jpg?auto=webp&amp;s=8a80ee59f8520cbf021af796f09aa9a951e75f77', 'width': 1104}, 'variants': {}}]}",6,1641665713,1,[https://www.brunogavranovic.com/posts/2022-01-05-lenses-to-the-left-of-me.html](https://www.brunogavranovic.com/posts/2022-01-05-lenses-to-the-left-of-me.html),True,False,False,haskell,t5_2qh36,68427,public,self,"[Blog post] Lenses to the left of me, Prisms to the right",0,[],1.0,https://www.reddit.com/r/haskell/comments/rz62sz/blog_post_lenses_to_the_left_of_me_prisms_to_the/,all_ads,6,,,,,,,,,,,,,,,,,,,,
570.0,[],False,thoaionline,,[],,text,t2_5q7b6,False,False,False,[],False,False,1641656877,self.haskell,https://www.reddit.com/r/haskell/comments/rz2qju/guinea_pigs_wanted/,{},rz2qju,False,True,False,True,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rz2qju/guinea_pigs_wanted/,False,self,"{'enabled': False, 'images': [{'id': 'OmYP_snkm2ph3Jz1tkI-XRwFJZD9YVPedO7FZfoOwm0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/tlUQtb99Mx_7yJ0gExgbYXNK_K6vaA6dzWyPOOc1NEA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f6fa05204270f75025c7d848d32218f1729548a7', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/tlUQtb99Mx_7yJ0gExgbYXNK_K6vaA6dzWyPOOc1NEA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=28f711282f77f14f818d13cdfcb13887e151cb93', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/tlUQtb99Mx_7yJ0gExgbYXNK_K6vaA6dzWyPOOc1NEA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3e1350b8ae4b0350165f01972a250a36ef696344', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/tlUQtb99Mx_7yJ0gExgbYXNK_K6vaA6dzWyPOOc1NEA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7dff7195c074dce4a71f443d5a7f0da4425d4eb1', 'width': 640}], 'source': {'height': 900, 'url': 'https://external-preview.redd.it/tlUQtb99Mx_7yJ0gExgbYXNK_K6vaA6dzWyPOOc1NEA.jpg?auto=webp&amp;s=01bd85fc6b03089567bf3644e15b2f1cec857748', 'width': 900}, 'variants': {}}]}",6,1641656888,1,"Story time. After many years of struggle, around a year ago, I finally had my eureka moment and eventually felt comfortable using Haskell in production. In the non-fp realm, I am a tech lead with a good amount of exp &amp; industrial perspective. I'm still learning a lot in FP/Haskell (with the more advanced topics).

As Erik, one of my favorite teacher used to say, ""you don't understand it deep enough until you start teaching it"". At the risk of being a cliché, I'm, ehem, starting a youtube channel: 

[https://www.youtube.com/channel/UCiaFQ7p683Dr-oXMdUGRLHA/videos](https://www.youtube.com/channel/UCiaFQ7p683Dr-oXMdUGRLHA/videos)

The main idea of this channel is to teach FP/Haskell by analogy instead of first principle. I know it's controversial but I think this will help bring down the barrier to entry to the eco system. I believe in the idea of ""know one teach one"" and hope to get rid of the uncontrolled side effects in the world, one function at a time. I plan to upload every 2 weeks or so at this stage.

I'm writing this to look for some initial help, particularly in the following areas.

* I'm looking for people who comes from mainstream (non FP) language and are currently struggling with FP/Haskell to preview and/or suggest contents to ensure developer friendliness.
* I'm looking for people who uses FP in production and have a deep understanding of the topic to yell at me (in private) to ensure that I don't say the wrong thing and leading people down the wrong paths.

I'm after a handful of allies to start a micro community/learning group over email or discord. If this interests you, please drop me a comment here and/or send me a PM, specifying which group above you'd consider yourself to be in, and I'll follow up.

Toward a functional world!",True,False,False,haskell,t5_2qh36,68420,public,self,Guinea pig(s) wanted,0,[],1.0,https://www.reddit.com/r/haskell/comments/rz2qju/guinea_pigs_wanted/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
571.0,[],False,bitconnor,,[],,text,t2_be0esdi4,False,False,False,[],False,False,1641639051,self.haskell,https://www.reddit.com/r/haskell/comments/ryx9ke/using_tailwind_css_in_haskell_with_vs_code/,{},ryx9ke,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ryx9ke/using_tailwind_css_in_haskell_with_vs_code/,False,self,"{'enabled': False, 'images': [{'id': 'P60MVuK_cIISpBC6JIvJSyyA6wb1wFQJbxLHoYs1EwM', 'resolutions': [{'height': 96, 'url': 'https://external-preview.redd.it/fu8xTvqUCk9ppwjHPecnPrLo7rarl81DpUD4uHGYuDY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2dc6d4733c8bde28a60c3bae76ccf541b67465ca', 'width': 108}, {'height': 192, 'url': 'https://external-preview.redd.it/fu8xTvqUCk9ppwjHPecnPrLo7rarl81DpUD4uHGYuDY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d214e58421c0459dd5a90a498cb171bfe162930f', 'width': 216}, {'height': 284, 'url': 'https://external-preview.redd.it/fu8xTvqUCk9ppwjHPecnPrLo7rarl81DpUD4uHGYuDY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e2823ccd630e16fff66301fb914658d862309dd7', 'width': 320}, {'height': 569, 'url': 'https://external-preview.redd.it/fu8xTvqUCk9ppwjHPecnPrLo7rarl81DpUD4uHGYuDY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e1d3825e0405c3c711ab019e4bec90b5749cbe00', 'width': 640}, {'height': 853, 'url': 'https://external-preview.redd.it/fu8xTvqUCk9ppwjHPecnPrLo7rarl81DpUD4uHGYuDY.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=04d9aa32a7afda31ac4ddaae402654854d9aaa66', 'width': 960}], 'source': {'height': 910, 'url': 'https://external-preview.redd.it/fu8xTvqUCk9ppwjHPecnPrLo7rarl81DpUD4uHGYuDY.jpg?auto=webp&amp;s=a2542dc21aa4e668862dc1d5a754f44d8cb9bd9e', 'width': 1023}, 'variants': {}}]}",6,1641639061,1,"For those of you who use VS Code and are interested in using Tailwind CSS in Haskell using Lucid I have figured out how to get the Tailwind extension working so that you get autocomplete and info tooltips. Here is a screenshot:

https://imgur.com/a/EeN4vW9

I would say that autocomplete is essential when authoring HTML with Tailwind because otherwise you have to keep referring to the cheat sheet, and if you make a typo or attempt a sizing that doesn't exist then there is no type safety to tell you.

And info hovers are also useful for reading code because it shows you the actual CSS for each class (otherwise you again have to refer to the cheat sheet all the time or memorize all of the tailwind classes).

Instructions:

First install the tailwind extension for VS Code: https://marketplace.visualstudio.com/items?itemName=bradlc.vscode-tailwindcss

Then you will need to create a `tailwind.config.js` file. You can use this:

    module.exports = {
      content: [""./src/**/*.hs""],
      theme: {
        extend: {},
      },
      plugins: [],
    };

In order for the VS Code extension to work, it seems that it needs a local/project install of tailwind and postcss, so you can run this:

    $ npm init
    $ npm install tailwindcss
    $ npm install postcss

Finally, the crucial step: in your VS Code `settings.json` add these two settings to configure the extension:

        ""tailwindCSS.includeLanguages"": {
            ""haskell"": ""html""
        },
        ""tailwindCSS.experimental.classRegex"": [
            ""class_ \""([^\""]*)""
        ],

I believe that the above regex should also work if you are using blaze-html instead of Lucid (but I have not tested it).

Good luck! 

Btw, here is an additional repo I found with info on Tailwind CSS in Haskell: https://github.com/obsidiansystems/obelisk-tailwind-example",True,False,False,haskell,t5_2qh36,68420,public,self,Using Tailwind CSS in Haskell with VS Code,0,[],1.0,https://www.reddit.com/r/haskell/comments/ryx9ke/using_tailwind_css_in_haskell_with_vs_code/,all_ads,6,,,,,,,,,,,,,,,,,,,,
572.0,[],False,Yuioup_____,,[],,text,t2_goi8g,False,False,False,[],False,False,1641634019,self.haskell,https://www.reddit.com/r/haskell/comments/ryw1go/i_managed_to_get_haskell_to_run_on_a_raspberry_pi/,{},ryw1go,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ryw1go/i_managed_to_get_haskell_to_run_on_a_raspberry_pi/,False,,,6,1641634030,1,"I'm new to the language but just for fun I wanted to see if I can get Haskell up and running on a Raspberry PI 3.

It took a few tries but eventually the right way was to use GHCup on Ubuntu 21.10. Neovim + coc.nvim works, using the haskell-language-server as a back-end, and so does VSCode with remote ssh.

Of course it's not blazingly fast but I stubbornly wanted to get it up and running, and I did.

I just felt like telling someone :-)",True,False,False,haskell,t5_2qh36,68420,public,self,I managed to get haskell to run on a Raspberry PI,0,[],1.0,https://www.reddit.com/r/haskell/comments/ryw1go/i_managed_to_get_haskell_to_run_on_a_raspberry_pi/,all_ads,6,,,,,,,,,,,,,,,,,,,,
573.0,[],False,alphacentauriAB,,[],,text,t2_90tyx,False,False,False,[],False,False,1641628557,self.haskell,https://www.reddit.com/r/haskell/comments/ryuqrf/cardano_vs_daml/,{},ryuqrf,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ryuqrf/cardano_vs_daml/,False,,,6,1641628568,1,Hello I'm looking into functional block chain platforms and smart contract languages written in Haskell and the two significant ones I find are Cardano and DAML. I was wondering if anyone who knows both would be interested in detailing the differences between them? Thank you!,True,False,False,haskell,t5_2qh36,68418,public,self,Cardano vs DAML?,0,[],1.0,https://www.reddit.com/r/haskell/comments/ryuqrf/cardano_vs_daml/,all_ads,6,,,,,,,,,,,,,,,,,,,,
574.0,[],False,kosmikus,,[],,text,t2_30503,False,False,False,[],False,False,1641576153,self.haskell,https://www.reddit.com/r/haskell/comments/rycmc6/the_haskell_interlude_8_théophile_choutri/,{},rycmc6,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rycmc6/the_haskell_interlude_8_théophile_choutri/,False,self,"{'enabled': False, 'images': [{'id': 'Ju-WAwjJzNrUdqX5xMvrFs8x7I2g4cfdnnPZfrcxqi4', 'resolutions': [{'height': 110, 'url': 'https://external-preview.redd.it/EQgAwvI9nFqkKQ05mI4HkB6QXWRI29GKiqoxMNfBSZ4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=eeae39f12f676ad024f2646ab876f96c67084311', 'width': 108}], 'source': {'height': 214, 'url': 'https://external-preview.redd.it/EQgAwvI9nFqkKQ05mI4HkB6QXWRI29GKiqoxMNfBSZ4.jpg?auto=webp&amp;s=30c8ecd0d3e2cfa4531dc2f8cb01742c8bdfde4f', 'width': 209}, 'variants': {}}]}",6,1641576163,1,"Niki Vazou and Andres Löh are joined by guest Théophile Choutri  (they/them), who also goes by Hécate. Théophile coordinates multiple  projects and volunteer groups within the Haskell Foundation, notably the  Haskell School project (intending to provide a free online open source library for teaching Haskell), and works on improving GHC core  documentation and developing an alternative to Hackage. Together they discuss Théophile’s introduction to Haskell and their ongoing projects  with the Foundation and the broader community, with a focus on the  challenges facing Haskell non-experts and how they hope to tackle them.

[https://haskell.foundation/podcast/8/](https://haskell.foundation/podcast/8/)",True,False,False,haskell,t5_2qh36,68407,public,self,The Haskell Interlude: 8 – Théophile Choutri,0,[],1.0,https://www.reddit.com/r/haskell/comments/rycmc6/the_haskell_interlude_8_théophile_choutri/,all_ads,6,,,,,,,,,,,,,,,,,,,,
575.0,[],False,Soham-Chatterjee,,[],,text,t2_8jz7vexo,False,False,False,[],False,False,1641542774,self.haskell,https://www.reddit.com/r/haskell/comments/ry2cc4/unexpected_usage_error_libgmpso_cannot_open/,{},ry2cc4,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ry2cc4/unexpected_usage_error_libgmpso_cannot_open/,False,,,6,1641542784,1,"Whenever i import a module i am getting this error

```
Unexpected usage error libgmp.so: cannot open shared object file: No such file or directory
```

I get this error in vs code, atom and even in neovim.

What this error means and how o overcome",True,False,False,haskell,t5_2qh36,68402,public,self,Unexpected usage error libgmp.so: cannot open shared object file: No such file or directory,0,[],1.0,https://www.reddit.com/r/haskell/comments/ry2cc4/unexpected_usage_error_libgmpso_cannot_open/,all_ads,6,,,,,,,,,,,,,,,,,,,,
576.0,[],False,lochydjango,,[],,text,t2_5kjdgo45,False,False,False,[],False,False,1641540592,redditpagematrics.com,https://www.reddit.com/r/haskell/comments/ry1sva/rhaskell_subdirect_statistics/,{},ry1sva,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ry1sva/rhaskell_subdirect_statistics/,False,link,"{'enabled': False, 'images': [{'id': '5q1AWqF1Hoi6JTTEm9eZZUBa0fLuAfDKrF8FWZfBT3Y', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/zsn20zo4A3dDF_gXBHDZZ4OjY0LHHksZf6tzgL-3dgM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f99baf7aabebe5a16c339451c44140f199080c5f', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/zsn20zo4A3dDF_gXBHDZZ4OjY0LHHksZf6tzgL-3dgM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d142ac16d77da522297a74390084f18a975746b7', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/zsn20zo4A3dDF_gXBHDZZ4OjY0LHHksZf6tzgL-3dgM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=cbab6560cffdbec0c415aa2919a3cb62b4d23c51', 'width': 320}], 'source': {'height': 500, 'url': 'https://external-preview.redd.it/zsn20zo4A3dDF_gXBHDZZ4OjY0LHHksZf6tzgL-3dgM.jpg?auto=webp&amp;s=a299b13cd434f80ae23fad7d61ea2e26a4584858', 'width': 500}, 'variants': {}}]}",6,1641540603,1,,True,False,False,haskell,t5_2qh36,68401,public,default,r/haskell Subdirect Statistics,0,[],1.0,https://redditpagematrics.com/r/haskell,all_ads,6,,,https://redditpagematrics.com/r/haskell,140.0,140.0,,,,,,,,,,,,,,,
577.0,[],False,Isaac22877822,,[],,text,t2_r5c3w,False,False,False,[],False,False,1641522695,downloads.haskell.org,https://www.reddit.com/r/haskell/comments/rxw7hu/sound_the_bell_at_the_start_of_each_garbage/,{},rxw7hu,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rxw7hu/sound_the_bell_at_the_start_of_each_garbage/,False,,,6,1641522706,1,,True,False,False,haskell,t5_2qh36,68397,public,default,Sound the bell at the start of each garbage collection,0,[],1.0,https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/runtime_control.html#rts-flag--B,all_ads,6,,,https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/runtime_control.html#rts-flag--B,,,,,,,,,,,,,,,,,
578.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1641516148,haskellweekly.news,https://www.reddit.com/r/haskell/comments/rxtua4/issue_297_haskell_weekly_newsletter/,{},rxtua4,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rxtua4/issue_297_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1641516158,1,,True,False,False,haskell,t5_2qh36,68397,public,default,Issue 297 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/297.html,all_ads,6,,,https://haskellweekly.news/issue/297.html,140.0,140.0,,,,,,,,,,,,,,,
579.0,[],False,jmorag,,[],,text,t2_wdkfr2j,False,False,False,[],False,False,1641485007,self.haskell,https://www.reddit.com/r/haskell/comments/rxhzhm/hackagetrustees_email_down/,{},rxhzhm,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rxhzhm/hackagetrustees_email_down/,False,,,6,1641485019,1,"I've been trying to get my hackage account added to the uploaders' group, but I get a Mail Delivery System email response that my message is indefinitely delayed. Does anyone here know what the problem is, or have permission to grant uploading privileges? I promise I'm not a bot, my hackage username is the same as this reddit account. Thanks!",True,False,False,haskell,t5_2qh36,68388,public,self,hackage-trustees email down?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rxhzhm/hackagetrustees_email_down/,all_ads,6,,,,,,,,,,,,,,,,,,,,
580.0,[],False,pwmosquito,,[],,text,t2_5bsnc,False,False,False,[],False,False,1641479007,self.haskell,https://www.reddit.com/r/haskell/comments/rxfqtc/job_haskell_engineer_at_artificial/,{},rxfqtc,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rxfqtc/job_haskell_engineer_at_artificial/,False,,,6,1641479017,1,"[Artificial](https://artificial.io/) is a leading UK-based Insurtech company. Our technology enables some of the world's largest insurers to write complex risks better and faster. This reduces costs both for end customers and underwriters alike, a win-win.

Our team is fully remote with some people close to our London office in the City working from there on occasion. The choice is yours.

We are looking for Haskell Engineers to join us!

You will work as part of the team developing our core platform called Brossa. We have built a cool DSL to rapidly and robustly model insurance contracts and a platform around it that enables capturing and processing risks in a highly automated fashion. Once an insurance product is defined in our DSL and this definition is uploaded to our platform it can receive risks via our API. These risks will then be automatically validated, augmented/enriched with information, triaged and ultimately accepted, rejected or referred to a human underwriter for decision making. All driven by the DSL spec. Our language and platform are still rapidly evolving so interesting challenges are abound. Your work will have a direct impact on the product, the company and in turn on the whole industry.

Some semi-random keywords: Haskell, Nix, PostgreSQL, Terraform, AWS, Typescript, React, OpenAPI, Github Actions 

As a software engineer you are comfortable making and communicating technical decisions based on cost–benefit analysis. You like your craft and feel ownership towards the code you write, keeping it simple, clean, robust, maintainable and evolvable. You like learning as well as sharing your knowledge. Being proactive and organised are also important traits to thrive in our distributed work environment. We foster an open and collaborative setting where everyone is free to discuss and debate ideas and approaches.

The hiring process starts with a take home test followed by one or two online interviews.

We offer:
- Salary: £85-100K+ depending on experience
- Remote-first, with the option to work in our London office
- High autonomy
- Flexible benefits package
- Flexible schedule
- Generous holiday
- Private health insurance
- Equipment, learning and conference budget
- Stock options

To apply: https://apply.workable.com/artificial/j/9BE9970D4F/",True,False,False,haskell,t5_2qh36,68384,public,self,[Job] Haskell engineer at Artificial,0,[],1.0,https://www.reddit.com/r/haskell/comments/rxfqtc/job_haskell_engineer_at_artificial/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,,,,,,,,,,,,,,
581.0,[],False,Snoo-35440,,[],,text,t2_6as3dmzn,False,False,False,[],False,False,1641478194,self.haskell,https://www.reddit.com/r/haskell/comments/rxfg45/job_application_problem/,{},rxfg45,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rxfg45/job_application_problem/,False,,,6,1641478205,1,"I got given a task to do for a job application and got given some quite vague feedback just saying that they are looking for someone more experienced.

This was the task I was given:

\`\`\`

(1)

&amp;#x200B;

You are a TA at a university, and you want to evaluate your student’s homework

without executing their (untrusted) code. You decide to write a small

web-service that takes bytecode as input, and interprets the results.

&amp;#x200B;

The bytecode language you need to support includes basic arithmetic and

variables. The bytecode language is stack, rather than register based.

ByteCode (right) is given for the following pseudo code (left):

&amp;#x200B;

&amp;#x200B;

function f() {

&amp;#x200B;

x = 1                   LOAD\_VAL 1

WRITE\_VAR ‘x’

&amp;#x200B;

y = 2                   LOAD\_VAL 2

WRITE\_VAR ‘y’

&amp;#x200B;

return (x + 1) \* y      READ\_VAR ‘x’

LOAD\_VAL 1

ADD

&amp;#x200B;

READ\_VAR ‘y’

MULTIPLY

&amp;#x200B;

RETURN\_VALUE

}

&amp;#x200B;

Add a data type \`ByteCode\` that can represent bytecode like in the example

above, along with an interpreter for said bytecode. Make sure your code is

total and try to use MTL or an effect library. Moreover, make sure your

bytecode is flat, i.e. not nested.

\-}

&amp;#x200B;

\-- data ByteCode = ...

&amp;#x200B;

\-- runByteCode :: ...

&amp;#x200B;

&amp;#x200B;

&amp;#x200B;

&amp;#x200B;

{-

(2)

Extend your interpreter with loops. In particular:

&amp;#x200B;

(a) Extend your \`ByteCode\` datatype with suitable instrucitons to support loops

(b) Modify your interpreter to support said instructions

(c) Try it out and see if it works :)

\-}

&amp;#x200B;

\`\`\`

This was my implementation:

\`\`\`

module Q1Q2Solution where  
import qualified Data.Map as M  
import Control.Monad.State.Strict  
import Debug.Trace  
data *ByteCode*  
 = ReturnVal  
 | LoadVal *Int*  
 | WriteVar *String*  
 | ReadVar *String*  
 \--Arithmetic instructions  
 | Add  
 | Multiply  
 \--""Boolean"" bytecode instructions, add 0 or 1 to the stack to represent false/true  
 | NEqual  
 | Equal  
 | GThan  
 | LThan  
 | GThanEQ  
 | LThanEQ  
 \--Loop instructions and bytecode markers  
 | TestEnd  
 | LoopStart  
 | LoopEnd  
 deriving (*Eq*, *Show*, *Read*)  
type *InterpreterContext* = *State* *InterpreterState*  
data *InterpreterState*  
 = InterpreterState {  
stack :: \[*Int*\],  
vars :: M.*Map* *String* *Int*,  
loopStack :: \[\[*ByteCode*\]\],  
afterLoopStack :: \[\[*ByteCode*\]\]  
}  
runByteCode :: \[*ByteCode*\] -&gt; *Int*  
runByteCode bcp = evalState (interpret bcp) (InterpreterState \[\] M.empty \[\] \[\])  
\--Takes the remaining bytecode to interpret  
interpret :: \[*ByteCode*\] -&gt; *InterpreterContext* *Int*  
interpret \[\] = error ""interpret called with empty list, this should not be \\  
 \\happening interpret may only end by coming across ReturnVal!""  
interpret (bc:bcs) = case bc of  
 LoadVal n -&gt; push n &gt;&gt; interpret bcs  
 WriteVar var -&gt; do  
val &lt;- pop  
modify $ \\st -&gt; st {vars = M.insert var val $ vars st}  
interpret bcs  
 ReadVar var -&gt; do  
val &lt;- (M.! var) &lt;$&gt; gets vars  
push val  
interpret bcs  
 Add -&gt; performStackOp (+) &gt;&gt; interpret bcs  
 Multiply -&gt; performStackOp (\*) &gt;&gt; interpret bcs  
 NEqual -&gt; do  
performStackOp $ \\val1 val2 -&gt; toStackVal $ val1 /= val2  
interpret bcs  
 Equal -&gt; do  
performStackOp $ \\val1 val2 -&gt; toStackVal $ val1 == val2  
interpret bcs  
 GThan -&gt; do  
performStackOp $ \\val1 val2 -&gt; toStackVal $ val1 &gt; val2  
interpret bcs  
 LThan -&gt; do  
performStackOp $ \\val1 val2 -&gt; toStackVal $ val1 &lt; val2  
interpret bcs  
 GThanEQ -&gt; do  
performStackOp $ \\val1 val2 -&gt; toStackVal $ val1 &gt;= val2  
interpret bcs  
 LThanEQ -&gt; do  
performStackOp $ \\val1 val2 -&gt; toStackVal $ val1 &lt;= val2  
interpret bcs  
 LoopStart -&gt; do  
 let (loopBody,afterLoop) = seperateLoopBody bcs  
modify $ \\st -&gt; st {loopStack = loopBody:loopStack st,  
afterLoopStack = afterLoop:afterLoopStack st}  
interpret loopBody  
 TestEnd -&gt; do  
cond &lt;- pop  
 if stackValToBool cond  
 \--Proceed with iteration of loop  
 then interpret bcs  
 \--Exit loop  
 else do  
afterLoop &lt;- head &lt;$&gt; gets afterLoopStack  
modify $ \\st -&gt; st {loopStack = drop 1 $ loopStack st,  
afterLoopStack = drop 1 $ afterLoopStack st}  
interpret afterLoop  
 \--Restart the loop on the top of the loop stack  
 LoopEnd -&gt; gets loopStack &gt;&gt;= interpret . head  
 ReturnVal -&gt; pop  
\-- |Seperate the loop body (those statements up to the first unbalanced LoopEnd) from the statements after the unbalanced LoopEnd  
seperateLoopBody :: \[*ByteCode*\] -&gt; (\[*ByteCode*\], \[*ByteCode*\])  
seperateLoopBody bcs = helper bcs \[\] 1 --Count 1 for the LoopStart that has just passed   
 where  
helper (LoopStart:bcs) acc i = helper bcs (LoopStart:acc) (i + 1)  
helper (LoopEnd:bcs) acc 1 = (reverse (LoopEnd:acc),bcs)  
helper (LoopEnd:bcs) acc i = helper bcs (LoopEnd:acc) (i - 1)  
helper (bc:bcs) acc i = helper bcs (bc:acc) i  
\-- |Push value to operand stack  
push :: *Int* \-&gt; *InterpreterContext* ()  
push i = modify $ \\st -&gt; st {stack = i:stack st}  
\-- |Pop value from operand stack  
pop :: *InterpreterContext* *Int*  
pop = do  
 {-  
I was tempted to use destructuring instead i.e.  
(head:poppedStack) &lt;- gets stack, however this is slightly less  
safe incase the stack is empty, the specification does not  
say what to do in this scenario so I have chosen this approach  
\-}  
head &lt;- head &lt;$&gt; gets stack  
modify $ \\st -&gt; st {stack = drop 1 $ stack st}  
pure head  
\-- |Pop top 2 values from stack and perform given binary operator on them, pushing result to stack  
performStackOp :: (*Int* \-&gt; *Int* \-&gt; *Int*) -&gt; *InterpreterContext* ()  
performStackOp op = do  
val2 &lt;- pop  
val1 &lt;- pop  
push $ op val1 val2  
\-- |Convert True and False to 1 and 0 respectively  
toStackVal :: *Bool* \-&gt; *Int*  
toStackVal b = if b then 1 else 0  
\-- |Convert 1 and 0 to True and False respectively  
stackValToBool :: *Int* \-&gt; *Bool*  
stackValToBool i = case i of  
 1 -&gt; True  
 0 -&gt; False  
\_ -&gt; error ""This function should only be called with 1 or 0!""  
\-- |Utility function I used for debugging inside the InterpreterContext monad  
traceState :: (*Show* a) =&gt; a -&gt; *State* s a  
traceState x = state (\\s -&gt; trace (""test: "" ++ show x) (x, s))

\`\`\`

I also included various tests in my submission to check nested loops etc. worked which they did. Is using state monad quite an inelegant approach to solving this sort of problem (did they mean something else by mtl?), is there a better approach and could this be the reason my implementation wasn't satisfactory?",True,False,False,haskell,t5_2qh36,68384,public,self,Job application problem,0,[],1.0,https://www.reddit.com/r/haskell/comments/rxfg45/job_application_problem/,all_ads,6,,,,,,,,,,,,,,,,,,,,
582.0,[],False,Servant-of_Christ,,[],,text,t2_8w91c,False,False,False,[],False,False,1641421237,self.haskell,https://www.reddit.com/r/haskell/comments/rwyeap/what_happened_to_learn_you_a_haskell/,{},rwyeap,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rwyeap/what_happened_to_learn_you_a_haskell/,False,,,6,1641421248,1,"I've been learning Haskell using learnyouahaskell.com, and I logged on a few days ago to find the site down. I checked again today, and it still appears down.

I can get to it on the wayback machine, but I'm curious as to what happene",True,False,False,haskell,t5_2qh36,68368,public,self,What happened to Learn you a Haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rwyeap/what_happened_to_learn_you_a_haskell/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
583.0,[],False,paulashis0013,,[],,text,t2_1f5b5xfb,False,False,False,[],False,False,1641371113,self.haskell,https://www.reddit.com/r/haskell/comments/rwhzqf/is_there_a_better_way_to_write_this/,{},rwhzqf,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rwhzqf/is_there_a_better_way_to_write_this/,False,,,6,1641371124,1,"Is there a way to merge the two functions into one?

```haskell
gcdt :: Integral a =&gt; (a, a) -&gt; a
gcdt x = gcd' (fst x) (snd x)

gcd' :: Integral a =&gt; a -&gt; a -&gt; a
gcd' n 0 = n
gcd' n m = gcd' m (n `mod` m)
```",True,False,False,haskell,t5_2qh36,68356,public,self,Is there a better way to write this?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rwhzqf/is_there_a_better_way_to_write_this/,all_ads,6,,,,,,,,,,,,,,,,,,,,
584.0,[],False,teilchen010,,[],,text,t2_a8zynd1e,False,False,False,[],False,False,1641335666,self.haskell,https://www.reddit.com/r/haskell/comments/rw6qwo/type_declarations_bring_differing_errors/,{},rw6qwo,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rw6qwo/type_declarations_bring_differing_errors/,False,,,6,1641335677,1,"I have this

    myLength [] = 0
myLength (x:xs) | xs == [] = 1 
                | otherwise = 1 + myLength xs

which offers this as the type definition when I ask it with `:t`

    myLength :: (Num p, Eq a) =&gt; [a] -&gt; p

Adding to the code works. But then my own guess at writing my own definition didn't work, namely,

    myLength :: [a] -&gt; Int

saying 

    No instance for (Eq a) arising from a use of ‘==’
      Possible fix:
        add (Eq a) to the context of
          the type signature for:
            myLength :: forall a. [a] -&gt; Int

But if I change my code to 

    myLength [] = 0
myLength (x:xs) | null xs = 1 
                | otherwise = 1 + myLength xs

`myLength :: [a] -&gt; Int` seems to work. What under the hood is going on here? `null` has the type definition `null :: Foldable t =&gt; t a -&gt; Bool` How does that change the situation, making my supposedly wrong definition right?",True,False,False,haskell,t5_2qh36,68348,public,self,Type declarations bring differing errors,0,[],1.0,https://www.reddit.com/r/haskell/comments/rw6qwo/type_declarations_bring_differing_errors/,all_ads,6,,,,,,,,,,,,,,,,,,,,
585.0,[],False,VincyThePrincy,,[],,text,t2_z2irrj2,False,False,False,[],False,False,1641329345,self.haskell,https://www.reddit.com/r/haskell/comments/rw4c8j/options_for_running_user_scripts/,{},rw4c8j,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rw4c8j/options_for_running_user_scripts/,False,,,6,1641329356,1,"I'm making a game engine right now, and something I'm considering is a scripting system which is relatively isolated from the rest of the game. I was considering creating something like a sandboxed form of IO, but the fact that unsafePerformIO exists the level of isolation I want is not really feasible. I'd definitely appreciate if I could, say, dynamically compile and link these scripts for maximum performance, and have the scripting language just be Haskell. A core principal of this engine is that you may have multiple instances of a game being managed by the same process (for example, a server and client being run simultaneously, multiple servers, some of which might have different scripts, etc). A script could contain anything from a map file to a custom game mode, to say, admin commands, and I want these to have as much isolation from raw IO as I can.",True,False,False,haskell,t5_2qh36,68348,public,self,Options for running user scripts,0,[],1.0,https://www.reddit.com/r/haskell/comments/rw4c8j/options_for_running_user_scripts/,all_ads,6,,,,,,,,,,,,,,,,,,,,
586.0,[],False,jmorag,,[],,text,t2_wdkfr2j,False,False,False,[],False,False,1641328092,blog.josephmorag.com,https://www.reddit.com/r/haskell/comments/rw3v9b/databass_part_2_inserting_into_the_database/,{},rw3v9b,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rw3v9b/databass_part_2_inserting_into_the_database/,False,,,6,1641328103,1,,True,False,False,haskell,t5_2qh36,68345,public,default,"Databass, Part 2: Inserting into the database",0,[],1.0,https://blog.josephmorag.com/posts/databass2/,all_ads,6,,,https://blog.josephmorag.com/posts/databass2/,,,,,,,,,,,,,,,,,
587.0,[],False,dagit,,[],,text,t2_lj2p,False,False,False,[],False,False,1641325722,self.haskell,https://www.reddit.com/r/haskell/comments/rw2yvr/agda2hs_verify_your_haskell_code_in_agda/,{},rw2yvr,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rw2yvr/agda2hs_verify_your_haskell_code_in_agda/,False,self,"{'enabled': False, 'images': [{'id': 'Ayam9krBF9qbZp9vCfNsN9_HIOiuS-ZrFt0hgrL9sZY', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/v6U29Xe8Uee4wjpNR_WJGeEYGFgq7vV6KRxyb_DUwLg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1a8238728499d0537dd1ca37fcdc7ad0cd724b3e', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/v6U29Xe8Uee4wjpNR_WJGeEYGFgq7vV6KRxyb_DUwLg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2c94a8b3de6862427ac1eb06812d66fe172101b0', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/v6U29Xe8Uee4wjpNR_WJGeEYGFgq7vV6KRxyb_DUwLg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e863c84fdd156b310214a374e110b82eeff8a375', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/v6U29Xe8Uee4wjpNR_WJGeEYGFgq7vV6KRxyb_DUwLg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=62786bb8e2847bb3ce50f7889131662ca1eb5b37', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/v6U29Xe8Uee4wjpNR_WJGeEYGFgq7vV6KRxyb_DUwLg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2808f5f1e0d9493dc26300802c6a9680907dacd7', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/v6U29Xe8Uee4wjpNR_WJGeEYGFgq7vV6KRxyb_DUwLg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=0596ea8f804ffb8260decfa7dc89bc0483d53da3', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/v6U29Xe8Uee4wjpNR_WJGeEYGFgq7vV6KRxyb_DUwLg.jpg?auto=webp&amp;s=8918bb2d17c037e7927a9e3f62be89647e1fbf9c', 'width': 1200}, 'variants': {}}]}",6,1641325732,1,"I haven't seen this mentioned here yet. I'm not affiliated with the project in anyway, but I find it interesting. I discovered it recently when looking to see what verification tools exist these days for Haskell. I haven't had an excuse to use it yet.

The tool itself can be found here: https://github.com/agda/agda2hs

This paper appears to introduce the tool: http://resolver.tudelft.nl/uuid:989e34ff-c81f-43ba-a851-59dca559ab90

And there's another 4 papers that go through verification tasks for some Haskell libraries. I see sequence, inductive Graphs, range-sets, and quadtrees.

It looks like you program in a subset of Agda that corresponds to a subset of Haskell 2010. You can write proofs on the Agda side. And then translate your program (but not the proofs) to Haskell code.

The subset of Haskell and Agda that you are using lines up fairly well, thus the translation between the two is focused on translating the surface syntax. In theory this means that you should be able to generate fairly idomatic Haskell code without any deep embedding going on. And that means you should be able to get reasonable performance from the result. In practice, idiomatic or performnant Haskell code is probably harder to write proofs for. So you may run into a balancing act between good performance and good assurances.

The main caveat that comes to mind with the assurances from any proofs you have on the agda side is that they won't assume bottom is an inhabitant of your types. However, once we're on the Haskell side, that's definitely a thing that could happen. As such, I think the proofs you write become conditional like, ""if the program terminates, then ..."". In most cases it should be possible to test for termination on typical inputs with a light bit of testing.

The generated code is restricted in the Haskell you can use, so I would imagine the main place you'd see this in a ""real"" library is in the core of the library. And then if you want or need to use fancy Haskell extensions, those would be part of a user visible API layered on top of that generated core.",True,False,False,haskell,t5_2qh36,68345,public,self,"agda2hs, verify your haskell code in agda?",0,[],1.0,https://www.reddit.com/r/haskell/comments/rw2yvr/agda2hs_verify_your_haskell_code_in_agda/,all_ads,6,583064c4-db4d-11e7-af6d-0ef9fea3bd12,pdf,,,,,,,,,,,,,,,,,,
588.0,[],False,shafinlearns2jam,,[],,text,t2_249ntjyb,False,False,False,[],False,False,1641325180,self.haskell,https://www.reddit.com/r/haskell/comments/rw2rg0/building_a_toy_compiler_in_haskell_what_kind_of/,{},rw2rg0,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rw2rg0/building_a_toy_compiler_in_haskell_what_kind_of/,False,,,6,1641325190,1,"I was wondering whether it would be better to use a hand written recursive descent parser or write my own parser combinator library. What are the pros and cons of each?

Thanks!",True,False,False,haskell,t5_2qh36,68345,public,self,"Building a toy compiler in Haskell, what kind of parser should I be using?",0,[],1.0,https://www.reddit.com/r/haskell/comments/rw2rg0/building_a_toy_compiler_in_haskell_what_kind_of/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
589.0,[],False,sridfr,,[],,text,t2_f1wkk8ou,False,False,False,[],False,False,1641325008,arxiv.org,https://www.reddit.com/r/haskell/comments/rw2p5l/tutorial_implementation_of_hoare_logic_in_haskell/,{},rw2p5l,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rw2p5l/tutorial_implementation_of_hoare_logic_in_haskell/,False,,,6,1641325019,1,,True,False,False,haskell,t5_2qh36,68345,public,default,Tutorial implementation of Hoare logic in Haskell,0,[],1.0,https://arxiv.org/pdf/2101.11320v10.pdf,all_ads,6,,[PDF],https://arxiv.org/pdf/2101.11320v10.pdf,,,,,,,,,,,,,,,,,
590.0,[],False,Soham-Chatterjee,,[],,text,t2_8jz7vexo,False,False,False,[],False,False,1641314188,self.haskell,https://www.reddit.com/r/haskell/comments/rvyjkc/does_where_bindings_work_in_io/,{},rvyjkc,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rvyjkc/does_where_bindings_work_in_io/,False,,,6,1641314199,1,"When i use this code

```
main = do
    num &lt;- getLine
    putStrLn $ ""Successor of the number is "" ++ show (number+1)
        where number = read num
```

It shows error. 

```
Untitled-1.hs:4:29: error:
    • Variable not in scope: num :: String
    • Perhaps you meant ‘sum’ (imported from Prelude)
  |
4 |         where number = read num 
  |                             ^^^
Failed, no modules loaded.
```

But when i do the same with let bindings
 
```
main = do
    num &lt;- getLine
    let number = read num 
        in putStrLn $ ""Successor of the number is "" ++ show (number+1)
```

It is compiling perfectly",True,False,False,haskell,t5_2qh36,68339,public,self,Does Where bindings work in IO ?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rvyjkc/does_where_bindings_work_in_io/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
591.0,[],False,portw,,[],,text,t2_131ki2,False,False,False,[],False,False,1641282858,self.haskell,https://www.reddit.com/r/haskell/comments/rvp2sd/any_news_on_haskell_for_android/,{},rvp2sd,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rvp2sd/any_news_on_haskell_for_android/,False,,,6,1641282868,1,"Searching the internet for implementing Haskell in Android Studio, I found some GitHub projects (Frege, Froid) and some apps that look like they could run on previous versions of Android.

Is there any update or relevant ways to use Haskell in android (currently compatible with Android Studio) or just a way to compile scripts and than use them with Java ?",True,False,False,haskell,t5_2qh36,68339,public,self,Any News On Haskell For Android ?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rvp2sd/any_news_on_haskell_for_android/,all_ads,6,,,,,,,,,,,,,,,,,,,,
592.0,[],False,emutiontkay2,,[],,text,t2_jd8ba50,False,False,False,[],False,False,1641279334,self.haskell,https://www.reddit.com/r/haskell/comments/rvo6hz/is_it_reasonable_to_build/,{},rvo6hz,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rvo6hz/is_it_reasonable_to_build/,False,,,6,1641279344,1,"Goal- build beautiful responsive complex apps that run on web and desktop but with a language that has a strong type system, and overall good language design.
Other info : Open to learning elm(but apparently it is a dying language due to leadership-community politics? Should I do it anyway?)
Not interested in dealing w purescript, html/css/javascript heavily.",True,False,False,haskell,t5_2qh36,68338,public,self,Is it reasonable to build beautiful-responsive-complex frontends in Haskell web frameworks with minimal html css javascript knowledge?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rvo6hz/is_it_reasonable_to_build/,all_ads,6,,,,,,,,,,,,,,,,,,,,
593.0,[],False,webNoob13,,[],,text,t2_7bmygxmk,False,False,False,[],False,False,1641266362,self.haskell,https://www.reddit.com/r/haskell/comments/rvk7eo/re_filter_list_of_lists_for_empty_list_when/,{},rvk7eo,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rvk7eo/re_filter_list_of_lists_for_empty_list_when/,False,,,6,1641266373,1,"```
module XORSubsetSum where

import Data.List
import qualified Data.Map as Map

nums :: [Int]
nums = [1,2,3]

combinations :: Int -&gt; [a] -&gt; [[a]]
combinations 0 _ = [[]]
combinations n xs = [xs !! i : x | i &lt;- [0.. (length xs)-1]
                                 , x &lt;- combinations (n - 1) (drop (i + 1) xs)]

allCombinations :: Int -&gt; [a] -&gt; [[a]]
allCombinations 0 _ = [[]]
allCombinations n xs = filter (null) allCombos --here!!!!
    where allCombos = combinations n xs ++ allCombinations (n-1) xs
```
When I do
```
allCombinations (length nums) nums
```
It gives me `[[]]`

But what I actually want is 
```
[[1,2,3],[1,2],[1,3],[2,3],[1],[2],[3],[]]
```
How can I do a `filter (not null) allComboos`?",True,False,False,haskell,t5_2qh36,68339,public,self,re: filter list of lists for empty list when finding all combinations of a list of integers,0,[],1.0,https://www.reddit.com/r/haskell/comments/rvk7eo/re_filter_list_of_lists_for_empty_list_when/,all_ads,6,,,,,,,,,,,,,,,,,,,,
594.0,[],False,haskellfintech,,[],,text,t2_i7nrjwvv,False,False,False,[],False,False,1641239865,self.haskell,https://www.reddit.com/r/haskell/comments/rvagfx/hiring_consumer_fintech_startup_onsite_los/,{},rvagfx,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rvagfx/hiring_consumer_fintech_startup_onsite_los/,False,,,6,1641239876,1,[removed],True,False,False,haskell,t5_2qh36,68336,public,self,"[Hiring] Consumer Fintech Startup | Onsite: Los Angeles/Remote: USA | Base: $80k - $140k, Meaningful Equity",0,[],1.0,https://www.reddit.com/r/haskell/comments/rvagfx/hiring_consumer_fintech_startup_onsite_los/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
595.0,[],False,HydroxideOH-,,[],,text,t2_5pdfk4mq,False,False,False,[],False,False,1641239498,twitter.com,https://www.reddit.com/r/haskell/comments/rvabec/thinking_about_writing_a_new_version_of_write_you/,{},rvabec,False,True,False,True,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rvabec/thinking_about_writing_a_new_version_of_write_you/,False,link,"{'enabled': False, 'images': [{'id': 'Ub6EUO23ld3XOheTA9l_rhe-Qzp848Qrcm1RnFu0mG4', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/1OCuMek738kqocehBStYcD22OVBEKp8g6q1kcaUgIqE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=64e0094098f1c9371cd5e188505e111f82853663', 'width': 108}], 'source': {'height': 140, 'url': 'https://external-preview.redd.it/1OCuMek738kqocehBStYcD22OVBEKp8g6q1kcaUgIqE.jpg?auto=webp&amp;s=851c789d8247c3960fcb45424ff32a9aae75c0f0', 'width': 140}, 'variants': {}}]}",6,1641239509,1,,True,False,False,haskell,t5_2qh36,68336,public,default,Thinking about writing a new version of Write You a Scheme [Twitter Thread],0,[],1.0,https://twitter.com/micah_cantor/status/1478080626523783170?s=20,all_ads,6,,,https://twitter.com/micah_cantor/status/1478080626523783170?s=20,140.0,140.0,,,,,,,"{'oembed': {'author_name': 'Micah Cantor', 'author_url': 'https://twitter.com/micah_cantor', 'cache_age': 3153600000, 'height': None, 'html': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;I&amp;#39;ve thought about writing a new version of &amp;quot;Write Yourself a Scheme in Haskell.&amp;quot; There are two versions, the original on Wikibooks (&lt;a href=""https://t.co/bP1MP2sUbq""&gt;https://t.co/bP1MP2sUbq&lt;/a&gt;) and a 2016 version by Adam Wespiser (&lt;a href=""https://t.co/P3VIwprgfX""&gt;https://t.co/P3VIwprgfX&lt;/a&gt;) 1/&lt;/p&gt;&amp;mdash; Micah Cantor (@micah_cantor) &lt;a href=""https://twitter.com/micah_cantor/status/1478080626523783170?ref_src=twsrc%5Etfw""&gt;January 3, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'provider_name': 'Twitter', 'provider_url': 'https://twitter.com', 'type': 'rich', 'url': 'https://twitter.com/micah_cantor/status/1478080626523783170', 'version': '1.0', 'width': 350}, 'type': 'twitter.com'}","{'content': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;I&amp;#39;ve thought about writing a new version of &amp;quot;Write Yourself a Scheme in Haskell.&amp;quot; There are two versions, the original on Wikibooks (&lt;a href=""https://t.co/bP1MP2sUbq""&gt;https://t.co/bP1MP2sUbq&lt;/a&gt;) and a 2016 version by Adam Wespiser (&lt;a href=""https://t.co/P3VIwprgfX""&gt;https://t.co/P3VIwprgfX&lt;/a&gt;) 1/&lt;/p&gt;&amp;mdash; Micah Cantor (@micah_cantor) &lt;a href=""https://twitter.com/micah_cantor/status/1478080626523783170?ref_src=twsrc%5Etfw""&gt;January 3, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'height': 200, 'scrolling': False, 'width': 350}","{'oembed': {'author_name': 'Micah Cantor', 'author_url': 'https://twitter.com/micah_cantor', 'cache_age': 3153600000, 'height': None, 'html': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;I&amp;#39;ve thought about writing a new version of &amp;quot;Write Yourself a Scheme in Haskell.&amp;quot; There are two versions, the original on Wikibooks (&lt;a href=""https://t.co/bP1MP2sUbq""&gt;https://t.co/bP1MP2sUbq&lt;/a&gt;) and a 2016 version by Adam Wespiser (&lt;a href=""https://t.co/P3VIwprgfX""&gt;https://t.co/P3VIwprgfX&lt;/a&gt;) 1/&lt;/p&gt;&amp;mdash; Micah Cantor (@micah_cantor) &lt;a href=""https://twitter.com/micah_cantor/status/1478080626523783170?ref_src=twsrc%5Etfw""&gt;January 3, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'provider_name': 'Twitter', 'provider_url': 'https://twitter.com', 'type': 'rich', 'url': 'https://twitter.com/micah_cantor/status/1478080626523783170', 'version': '1.0', 'width': 350}, 'type': 'twitter.com'}","{'content': '&lt;blockquote class=""twitter-video""&gt;&lt;p lang=""en"" dir=""ltr""&gt;I&amp;#39;ve thought about writing a new version of &amp;quot;Write Yourself a Scheme in Haskell.&amp;quot; There are two versions, the original on Wikibooks (&lt;a href=""https://t.co/bP1MP2sUbq""&gt;https://t.co/bP1MP2sUbq&lt;/a&gt;) and a 2016 version by Adam Wespiser (&lt;a href=""https://t.co/P3VIwprgfX""&gt;https://t.co/P3VIwprgfX&lt;/a&gt;) 1/&lt;/p&gt;&amp;mdash; Micah Cantor (@micah_cantor) &lt;a href=""https://twitter.com/micah_cantor/status/1478080626523783170?ref_src=twsrc%5Etfw""&gt;January 3, 2022&lt;/a&gt;&lt;/blockquote&gt;\n&lt;script async src=""https://platform.twitter.com/widgets.js"" charset=""utf-8""&gt;&lt;/script&gt;\n', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/rvabec', 'scrolling': False, 'width': 350}",,,,,
596.0,[],False,Kupernikuus,,[],,text,t2_tbmxb,False,False,False,[],False,False,1641238799,self.haskell,https://www.reddit.com/r/haskell/comments/rva1ro/error_while_trying_to_install_quickcheck/,{},rva1ro,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rva1ro/error_while_trying_to_install_quickcheck/,False,,,6,1641238810,1,"Hello,

I am new to Haskell and I need to install QuickCheck, but when I do I get the following error.

I reinstalled Haskell the way my professor told me to and my Package List is up to date. Can anyone help me fix this?

Thanks in advance :)",True,False,False,haskell,t5_2qh36,68335,public,self,error while trying to install QuickCheck,0,[],1.0,https://www.reddit.com/r/haskell/comments/rva1ro/error_while_trying_to_install_quickcheck/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
597.0,[],False,zarazek,,[],,text,t2_8j9d7,False,False,False,[],False,False,1641224650,self.haskell,https://www.reddit.com/r/haskell/comments/rv4k19/why_using_int_over_word_is_convention_in_haskell/,{},rv4k19,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rv4k19/why_using_int_over_word_is_convention_in_haskell/,False,,,6,1641224661,1,"After reading [https://graphitemaster.github.io/aau/](https://graphitemaster.github.io/aau/) I'm feeling that using signed integers in Haskell makes even less sense than in imperative languages, but unsigned integers (`Word`s) are almost never used. It feels strange for correctness oriented language. I've looked at functions in `Data.List` and 4 out of 5 functions taking integer parameters (`replicate`, `take`, `drop`, `splitAt`) are actually doing `n' = max n 0` with their argument, and only one (`(!!)`)  is crashing with negative argument. In `Data.Vector` a ton of functions is taking integer parameters, and I've checked only the analogs of functions from `Data.List` and they behave the same (indexing crashes, while other functions have this ""wrap to 0"" behavior for negative values).

Isn't it sweeping problems under the rug? Does this convention have other reason than historical one?  


On the related issue: what is the underflow and overflow semantics in (GHC) Haskell?",True,False,False,haskell,t5_2qh36,68330,public,self,Why using Int over Word is convention in Haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rv4k19/why_using_int_over_word_is_convention_in_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
598.0,[],False,Axman6,,[],,text,t2_37j8m,False,False,False,[],False,False,1641208281,youtu.be,https://www.reddit.com/r/haskell/comments/ruzcz2/27_unhelpful_facts_about_category_theory/,{},ruzcz2,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ruzcz2/27_unhelpful_facts_about_category_theory/,False,rich:video,"{'enabled': False, 'images': [{'id': 'Gxx89bsjS5-sjcj0OwJYQss8R3mf2DeOM7zszuij4Yw', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/B-BRlNA-kyLb0Oa8MsfwQT7tYDeSpsIIh8oZx7bvm40.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=aa31b9cd817b35b9312624649cd52043bb170c97', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/B-BRlNA-kyLb0Oa8MsfwQT7tYDeSpsIIh8oZx7bvm40.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=eb8f45452dba318cf20234c5beaafa2832d36bed', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/B-BRlNA-kyLb0Oa8MsfwQT7tYDeSpsIIh8oZx7bvm40.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=555ae654cb53e55ea07074c2dc5c7f0a3cf59aed', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/B-BRlNA-kyLb0Oa8MsfwQT7tYDeSpsIIh8oZx7bvm40.jpg?auto=webp&amp;s=01acd9ae9137a60998601531cc5509ebf5350293', 'width': 480}, 'variants': {}}]}",6,1641208292,1,,True,False,False,haskell,t5_2qh36,68327,public,image,27 Unhelpful Facts About Category Theory,0,[],1.0,https://youtu.be/H0Ek86IH-3Y,all_ads,6,be2af704-5664-11eb-8e65-0ecd290c3053,video,https://youtu.be/H0Ek86IH-3Y,105.0,140.0,,,,,,,"{'oembed': {'author_name': 'Oliver Lugg', 'author_url': 'https://www.youtube.com/c/OliverLugg', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/H0Ek86IH-3Y?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/H0Ek86IH-3Y/hqdefault.jpg', 'thumbnail_width': 480, 'title': '27 Unhelpful Facts About Category Theory', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/H0Ek86IH-3Y?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'Oliver Lugg', 'author_url': 'https://www.youtube.com/c/OliverLugg', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/H0Ek86IH-3Y?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/H0Ek86IH-3Y/hqdefault.jpg', 'thumbnail_width': 480, 'title': '27 Unhelpful Facts About Category Theory', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/H0Ek86IH-3Y?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/ruzcz2', 'scrolling': False, 'width': 356}",,,,,
599.0,[],False,oskargreda,,[],,text,t2_fi2s2co8,False,False,False,[],False,False,1641201225,self.haskell,https://www.reddit.com/r/haskell/comments/ruxkt0/mlabs_is_hiring_haskellerspurescript_developers/,{},ruxkt0,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,2,0,False,all_ads,/r/haskell/comments/ruxkt0/mlabs_is_hiring_haskellerspurescript_developers/,False,self,"{'enabled': False, 'images': [{'id': 'GnuOK9IWNyfPHXokumwalY9XRYCi5oSA4uOxJlBNBp4', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f6c520b66a9e4cf15ae1b4b79af413002418a97e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=78ce6df2b94f79b0ccb5ac2b1439fdbd87be5a53', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d0ed86839ce6deb3d5d37506ef62434b8a77baf3', 'width': 320}], 'source': {'height': 500, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?auto=webp&amp;s=562a0dfc197f2356edb2e6c70d03e94ba27414cf', 'width': 500}, 'variants': {}}]}",6,1641201236,1," MLabs is hiring Haskellers/Purescript Developers! (Full remote, worldwide)

MLabs is a rapidly growing, globally distributed software consultancy, working with Haskell, Rust, and Python.

Currently we are looking to fill a position with a great opportunity to use both Haskell and Purescript.

You will be a part of an established team and work collaboratively to come up with solutions, on an ongoing contract basis.

Experience and/or interest with any of the below technologies/business fields are an asset:-

\- Blockchain, Especially Cardano or Ergo

\- Functional programming

\- Finance

\- Consultancies/Agencies

\- NFTs

\- Web Stack

\- Formal Methods, Dependant types, theorem provers

\- Sales engineering

\- Cybersecurity

We offer competitive salaries and varied shift patterns to suit everyone. Whether you want to work one day or a week or five we want to hear from you!

For more information about these roles and applications, check &lt;[https://apply.workable.com/mlabs/j/63DAAA4AEF/](https://apply.workable.com/mlabs/j/63DAAA4AEF/)\&gt;

In case of any questions please send an email to: [oskar@mlabs.city](mailto:oskar@mlabs.city)

We will get back to you as soon as possible!",True,False,False,haskell,t5_2qh36,68326,public,self,"MLabs is hiring Haskellers/Purescript Developers! (Full remote, worldwide) https://mlabs.city/",0,[],1.0,https://www.reddit.com/r/haskell/comments/ruxkt0/mlabs_is_hiring_haskellerspurescript_developers/,all_ads,6,,,,,,,,,,,,,,,,,,,,
600.0,[],False,lambdandy,,[],,text,t2_hbuz1nlo,False,False,False,[],False,False,1641193802,self.haskell,https://www.reddit.com/r/haskell/comments/ruvr1f/reverse_references_to_papers/,{},ruvr1f,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ruvr1f/reverse_references_to_papers/,False,,,6,1641193813,1,[removed],True,False,False,haskell,t5_2qh36,68321,public,self,Reverse references to papers,0,[],1.0,https://www.reddit.com/r/haskell/comments/ruvr1f/reverse_references_to_papers/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
601.0,[],False,AshleyYakeley,,[],,text,t2_92cbu,False,False,False,[],False,False,1641183727,self.haskell,https://www.reddit.com/r/haskell/comments/russgm/is_this_type_family_shenanigan_safe/,{},russgm,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/russgm/is_this_type_family_shenanigan_safe/,False,,,6,1641183737,1,"Consider:

    type family Fst (a :: (kp, kq)) :: kp where
        Fst '( p, q) = p

    type family Snd (a :: (kp, kq)) :: kq where
        Snd '( p, q) = q

    typeIsPair :: forall kp kq (a :: (kp, kq)). a :~: '( Fst a, Snd a)
    typeIsPair = unsafeCoerce Refl

Is `typeIsPair` safe?",True,False,False,haskell,t5_2qh36,68319,public,self,Is this type family shenanigan safe?,0,[],1.0,https://www.reddit.com/r/haskell/comments/russgm/is_this_type_family_shenanigan_safe/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
602.0,[],False,tobz619,,[],,text,t2_13erzn,False,False,False,[],False,False,1641169883,self.haskell,https://www.reddit.com/r/haskell/comments/ruo0so/haskell_mooc_set1tesths_does_not_run_due_to/,{},ruo0so,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ruo0so/haskell_mooc_set1tesths_does_not_run_due_to/,False,,,6,1641169893,1,"Hello,

when I do the following, I get errors:

`ghci&gt; :q`

`Leaving GHCi.`

`PS D:\Google Drive\Tech Papers\Programming\Haskell\MooC\haskell-mooc-master\exercises&gt; stack runhaskell Set1Test.hs` 

&amp;#x200B;

`Set1Test.hs:52:63: error:`

`* Couldn't match type \`Char' with \`[Char]'`

`Expected type: [String]`

`Actual type: [Char]`

`* In the second argument of \`(?==)', namely \`""eeny""'`

`In the first argument of \`\ k_aabI`

`-&gt; (counterexample`

`(""eeny"" ++ ("" "" ++ (intercalate "" "") (show' (2 * x) : []))))`

`((within timeLimit) (k_aabI (eeny (2 * x))))', namely`

`\`(?== ""eeny"")'`

`In the expression:`

`(\ k_aabI`

`-&gt; (counterexample`

`(""eeny"" ++ ("" "" ++ (intercalate "" "") (show' (2 * x) : []))))`

`((within timeLimit) (k_aabI (eeny (2 * x)))))`

`(?== ""eeny"")`

   `|`

`52 | ex5_eeny_even = forAll_ $ \x -&gt; $(testing [|eeny (2*x)|]) (?==""eeny"")`

   `|                                                               ^^^^^^`

&amp;#x200B;

`Set1Test.hs:53:65: error:`

`* Couldn't match type \`Char' with \`[Char]'`

`Expected type: [String]`

`Actual type: [Char]`

`* In the second argument of \`(?==)', namely \`""meeny""'`

`In the first argument of \`\ k_aacf`

`-&gt; (counterexample`

`(""eeny""`

`++`

`("" "" ++ (intercalate "" "") (show' ((2 * x) + 1) : []))))`

`((within timeLimit) (k_aacf (eeny ((2 * x) + 1))))', namely`

`\`(?== ""meeny"")'`

`In the expression:`

`(\ k_aacf`

`-&gt; (counterexample`

`(""eeny"" ++ ("" "" ++ (intercalate "" "") (show' ((2 * x) + 1) : []))))`

`((within timeLimit) (k_aacf (eeny ((2 * x) + 1)))))`

`(?== ""meeny"")`

   `|`

`53 | ex5_meeny_odd = forAll_ $ \x -&gt; $(testing [|eeny (2*x+1)|]) (?==""meeny"")`

   `|                                                                 ^^^^^^^`

&amp;#x200B;

`Set1Test.hs:86:38: error:`

`* Couldn't match expected type \`Int' with actual type \`Integer'`

`* In the first argument of \`isZero', namely \`n'`

`In the first argument of \`k_aael', namely \`(isZero n)'`

`In the second argument of \`within', namely \`(k_aael (isZero n))'`

   `|`

`86 | ex8_isZero_positive (Positive n) = $(testing [|isZero n|]) (?== False)`

   `|                                      ^^^^^^^^^^^^^^^^^^^^`

&amp;#x200B;

`Set1Test.hs:89:38: error:`

`* Couldn't match expected type \`Int' with actual type \`Integer'`

`* In the first argument of \`isZero', namely \`n'`

`In the first argument of \`k_aaeA', namely \`(isZero n)'`

`In the second argument of \`within', namely \`(k_aaeA (isZero n))'`

   `|`

`89 | ex8_isZero_negative (Positive n) = $(testing [|isZero n|]) (?== False)`

I ran Set2aTest.hs and that worked just fine.

&amp;#x200B;

What should I do?

&amp;#x200B;

Thanks,

&amp;#x200B;

tobz",True,False,False,haskell,t5_2qh36,68317,public,self,Haskell MOOC Set1Test.hs does not run due to errors: What can I do?,0,[],1.0,https://www.reddit.com/r/haskell/comments/ruo0so/haskell_mooc_set1tesths_does_not_run_due_to/,all_ads,6,,,,,,,,,,,,,,,,,,,,
603.0,[],False,captjakk,,[],,text,t2_dtwfy,False,False,False,[],False,False,1641152676,self.haskell,https://www.reddit.com/r/haskell/comments/ruhkr4/haskellnix_vs_haskell4nix/,{},ruhkr4,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/ruhkr4/haskellnix_vs_haskell4nix/,False,,,6,1641152686,1,I'm a long time user of Haskell and I've tried to break into nix several times now. I am once again attempting to learn it. I have come across two different infrastructures. Which do people use and why? Or are they the same thing and I just haven't yet discovered that? What relationship do they have to one another?,True,False,False,haskell,t5_2qh36,68314,public,self,haskell.nix vs haskell4nix,0,[],1.0,https://www.reddit.com/r/haskell/comments/ruhkr4/haskellnix_vs_haskell4nix/,all_ads,6,,,,,,,,,,,,,,,,,,,,
604.0,[],False,adwolesi,,[],,text,t2_n77eo,False,False,False,[],False,False,1641143313,self.haskell,https://www.reddit.com/r/haskell/comments/rue1o6/perspec_0200_scriptable_desktop_app_to_correct/,{},rue1o6,False,True,False,True,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rue1o6/perspec_0200_scriptable_desktop_app_to_correct/,False,self,"{'enabled': False, 'images': [{'id': 'CeybrUGt0PuvMq4ddoI19koteDBWa2DBseAqsPmAOZQ', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/oSEW_yx3-TFT9HUTcABcdRFRpDibWZ0ESoAtW9LbSpM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=774000bb933cbce7671088e830b44df41d1958d4', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/oSEW_yx3-TFT9HUTcABcdRFRpDibWZ0ESoAtW9LbSpM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=40a177b72368476281058c5b7a914c7d3ea841e2', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/oSEW_yx3-TFT9HUTcABcdRFRpDibWZ0ESoAtW9LbSpM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=80a1d67434e5103ca7ccb77bf7d36b8ed83db9be', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/oSEW_yx3-TFT9HUTcABcdRFRpDibWZ0ESoAtW9LbSpM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=3216925a64469403ee99789a8a53ee3c68d68ad4', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/oSEW_yx3-TFT9HUTcABcdRFRpDibWZ0ESoAtW9LbSpM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=25c224d19b34f94569f837659ad27d6b7bec725c', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/oSEW_yx3-TFT9HUTcABcdRFRpDibWZ0ESoAtW9LbSpM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=75de048fcb5c914a9e412838d635b43709ca4b74', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/oSEW_yx3-TFT9HUTcABcdRFRpDibWZ0ESoAtW9LbSpM.jpg?auto=webp&amp;s=79ab0c3240628da32da8e924d6ca8fce2de68f67', 'width': 1200}, 'variants': {}}]}",6,1641143324,1,"I'm excited to announce that I just released Perspec 0.2.0.0! 😁🎉

Notable improvements are:
- Possibility to convert the images to grayscale or black/white on save
- Sub-command ""rename"" for easy renaming of photos

Please check out the GitHub page for more information and downloads: https://github.com/feramhq/Perspec

Additionally you can now also buy a licensed version to fund further development: https://feram.gumroad.com/l/perspec

Looking forward to your feedback! 😊",True,False,False,haskell,t5_2qh36,68311,public,self,Perspec 0.2.0.0 - Scriptable desktop app to correct the perspective of images,0,[],1.0,https://www.reddit.com/r/haskell/comments/rue1o6/perspec_0200_scriptable_desktop_app_to_correct/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
605.0,[],False,ignaciourreta,,[],,text,t2_cxe4mt9,False,False,False,[],False,False,1641133682,self.haskell,https://www.reddit.com/r/haskell/comments/ruaoii/is_there_any_way_to_do_a_n_in_a_show_method/,{},ruaoii,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ruaoii/is_there_any_way_to_do_a_n_in_a_show_method/,False,,,6,1641133693,1,"So, quick story short: I am defining the Show method for a data structure that I have created (hash table), but when doing so, I can't put new lines as the only thing the show method does is print a string, and doesn't work like putStr, which does undestarnd \n as a new line. The problem is I can't use (or dunno how to) putStr in the show function as it returns an IO() and not a String. Surely there is a solution to this but I cant find it😭",True,False,False,haskell,t5_2qh36,68307,public,self,Is there any way to do a \n in a Show method?,0,[],1.0,https://www.reddit.com/r/haskell/comments/ruaoii/is_there_any_way_to_do_a_n_in_a_show_method/,all_ads,6,ebb4b74c-16d0-11eb-9ff6-0e5aacb57bb7,homework,,,,,,,,,,,,,,,,,,
606.0,[],False,Wismill,,[],,text,t2_i61xi9vm,False,False,False,[],False,False,1641123672,self.haskell,https://www.reddit.com/r/haskell/comments/ru7zvv/ann_unicodedata030_apis_to_efficiently_access_the/,{},ru7zvv,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ru7zvv/ann_unicodedata030_apis_to_efficiently_access_the/,False,,,6,1641123682,1,[removed],True,False,False,haskell,t5_2qh36,68305,public,self,[ANN] unicode-data-0.3.0: APIs to efficiently access the Unicode character database,0,[],1.0,https://www.reddit.com/r/haskell/comments/ru7zvv/ann_unicodedata030_apis_to_efficiently_access_the/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
607.0,[],False,SheepySheev,,[],,text,t2_24y6j8mq,False,False,False,[],False,False,1641123615,self.haskell,https://www.reddit.com/r/haskell/comments/ru7zdt/is_there_a_formal_concept_for_power_in_monad_is/,{},ru7zdt,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ru7zdt/is_there_a_formal_concept_for_power_in_monad_is/,False,,,6,1641123625,1,"Typeclassopedia mentions that Monad is more powerful than Applicative. Is there a cs-theoretic concept that corresponds to that / defines what ""power"" means in this context?

Here is the quote from Typeclassopedia:
&gt;  Intuitively, it is this ability to use the output from previous computations to decide what computations to run next that makes Monad more powerful than Applicative

(sorry if this is not formated well, typing from my phone)",True,False,False,haskell,t5_2qh36,68305,public,self,"Is there a formal concept for ""power"" in ""Monad is more powerful than Applicative""?",0,[],1.0,https://www.reddit.com/r/haskell/comments/ru7zdt/is_there_a_formal_concept_for_power_in_monad_is/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
608.0,[],False,angerman,,[],,text,t2_32vnk,False,False,True,[],False,False,1641117447,github.com,https://www.reddit.com/r/haskell/comments/ru6l0w/a_christmas_story/,{},ru6l0w,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/ru6l0w/a_christmas_story/,False,link,"{'enabled': False, 'images': [{'id': '2JTw14xYlfFYPJZXKWi1FVcvVOtd8aLYu1I-6wkbrE8', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/ZT4mzhWo2R-ZzDh-B43sjFzIcRGHj6T50Ym6mx2xKqM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=33253ed6420317cdca78e1e5dba09d5ea4a92b0b', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/ZT4mzhWo2R-ZzDh-B43sjFzIcRGHj6T50Ym6mx2xKqM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b8b4050056ca701b253d9201687a74bb58294567', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/ZT4mzhWo2R-ZzDh-B43sjFzIcRGHj6T50Ym6mx2xKqM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=fa546228731086595b41dd37a6b6e93c19671e36', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/ZT4mzhWo2R-ZzDh-B43sjFzIcRGHj6T50Ym6mx2xKqM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=db3fc01a1a3ac3977c2fa72313744ed84161172a', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/ZT4mzhWo2R-ZzDh-B43sjFzIcRGHj6T50Ym6mx2xKqM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=fe8bbc482cc29204b3124ebfe3c219cd917dec3a', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/ZT4mzhWo2R-ZzDh-B43sjFzIcRGHj6T50Ym6mx2xKqM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=84bd1f9907003cdd30403141a4abe555c1e94d16', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/ZT4mzhWo2R-ZzDh-B43sjFzIcRGHj6T50Ym6mx2xKqM.jpg?auto=webp&amp;s=7fb63dc7b983357d1a5ee25cd35ea325075537e9', 'width': 1200}, 'variants': {}}]}",6,1641117457,1,,True,False,False,haskell,t5_2qh36,68302,public,default,A Christmas Story,0,[],1.0,https://github.com/zw3rk/mobile-core-log/blob/master/LOG.md,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://github.com/zw3rk/mobile-core-log/blob/master/LOG.md,70.0,140.0,,,,,,,,,,,,,,,
609.0,[],False,n00bomb,,[],,text,t2_fhy7z,False,False,False,[],False,False,1641109822,github.com,https://www.reddit.com/r/haskell/comments/ru4tne/github_jamesdbrocklearnyouahaskellnotebook/,{},ru4tne,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ru4tne/github_jamesdbrocklearnyouahaskellnotebook/,False,link,"{'enabled': False, 'images': [{'id': 'PTKKtV8Wn2H3i-8rP95JatWxTJzoI_fcwENL1qcEBEM', 'resolutions': [{'height': 50, 'url': 'https://external-preview.redd.it/4T6cZNBse35BqXPdnSJSyaIh5nf04ikcLcaikg63298.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=14a2918091921383b41f1e161fa8584b2f42eb96', 'width': 108}, {'height': 101, 'url': 'https://external-preview.redd.it/4T6cZNBse35BqXPdnSJSyaIh5nf04ikcLcaikg63298.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=44fd2b01c6d46233e981c48e8e551ae4ace43b55', 'width': 216}, {'height': 150, 'url': 'https://external-preview.redd.it/4T6cZNBse35BqXPdnSJSyaIh5nf04ikcLcaikg63298.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=35d861423c88d23e22c0eb5e4739620da506dfc3', 'width': 320}, {'height': 300, 'url': 'https://external-preview.redd.it/4T6cZNBse35BqXPdnSJSyaIh5nf04ikcLcaikg63298.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=466a0a51278d91ec694743a0105a9f36fce43e00', 'width': 640}, {'height': 450, 'url': 'https://external-preview.redd.it/4T6cZNBse35BqXPdnSJSyaIh5nf04ikcLcaikg63298.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=fa925029af1c99ba2e56350ed428d06919681416', 'width': 960}, {'height': 506, 'url': 'https://external-preview.redd.it/4T6cZNBse35BqXPdnSJSyaIh5nf04ikcLcaikg63298.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=cffdde6aa29024b13871f131e6734f91c29db899', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/4T6cZNBse35BqXPdnSJSyaIh5nf04ikcLcaikg63298.jpg?auto=webp&amp;s=e2397570db9eb7fbae3be687c344f3643470193b', 'width': 1280}, 'variants': {}}]}",6,1641109832,1,,False,False,False,haskell,t5_2qh36,68301,public,default,GitHub - jamesdbrock/learn-you-a-haskell-notebook: Jupyter adaptation of Learn You a Haskell for Great Good!,0,[],1.0,https://github.com/jamesdbrock/learn-you-a-haskell-notebook,all_ads,6,,,https://github.com/jamesdbrock/learn-you-a-haskell-notebook,65.0,140.0,,,,,,,,,,,,,,,
610.0,[],False,adoringBobolink1,,[],,text,t2_i53oim9v,False,False,False,[],False,False,1641064953,tek.brick.do,https://www.reddit.com/r/haskell/comments/rtqc23/my_setup_for_messing_about_with_haskell_scripts/,{},rtqc23,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rtqc23/my_setup_for_messing_about_with_haskell_scripts/,False,link,"{'enabled': False, 'images': [{'id': 'pmuKZZHA1VY2vRUHiG4IOqDPaUrceQtYrEWlVeIEx5c', 'resolutions': [{'height': 64, 'url': 'https://external-preview.redd.it/PWKLb6LOvMaAVZYgvEpJHv5EbYU2e5tsvCTv5c1olAg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=03fd90386b700bd9790a8df080717c006e72ba4e', 'width': 108}, {'height': 128, 'url': 'https://external-preview.redd.it/PWKLb6LOvMaAVZYgvEpJHv5EbYU2e5tsvCTv5c1olAg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=dae7027be13770724bd77d5af8e25d1cf82d79ba', 'width': 216}, {'height': 190, 'url': 'https://external-preview.redd.it/PWKLb6LOvMaAVZYgvEpJHv5EbYU2e5tsvCTv5c1olAg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=00a7b19d99040d93cb716193d0b31e9465cf3f0a', 'width': 320}, {'height': 380, 'url': 'https://external-preview.redd.it/PWKLb6LOvMaAVZYgvEpJHv5EbYU2e5tsvCTv5c1olAg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=bb5947e399e1c692462015aaa3449d602375c8ec', 'width': 640}, {'height': 570, 'url': 'https://external-preview.redd.it/PWKLb6LOvMaAVZYgvEpJHv5EbYU2e5tsvCTv5c1olAg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=12aa8a78bb1a2366cb681a7b4433eceea69ecd54', 'width': 960}, {'height': 642, 'url': 'https://external-preview.redd.it/PWKLb6LOvMaAVZYgvEpJHv5EbYU2e5tsvCTv5c1olAg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=fa23ad41bf856308d31df76c264b4b360be3a2dc', 'width': 1080}], 'source': {'height': 1412, 'url': 'https://external-preview.redd.it/PWKLb6LOvMaAVZYgvEpJHv5EbYU2e5tsvCTv5c1olAg.jpg?auto=webp&amp;s=ffb2835d1701bd22c9c9d319417863db21f10963', 'width': 2374}, 'variants': {}}]}",6,1641064964,1,,True,False,False,haskell,t5_2qh36,68286,public,default,"My setup for messing about with Haskell scripts, 2021 edition!",0,[],1.0,https://tek.brick.do/7b970e60-aa0a-4249-a5ea-a93fec22aa84,all_ads,6,,,https://tek.brick.do/7b970e60-aa0a-4249-a5ea-a93fec22aa84,83.0,140.0,,automod_filtered,,,,,,,,,,,,,
611.0,[],False,teilchen010,,[],,text,t2_a8zynd1e,False,False,False,[],False,False,1641058791,self.haskell,https://www.reddit.com/r/haskell/comments/rto654/recursive_types/,{},rto654,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rto654/recursive_types/,False,,,6,1641058801,1,"One of the things that amazes me about Haskell is the rabbit holes I'm ceaselessly cascading down. For example, what I thought was an [innocent question](https://www.reddit.com/r/haskell/comments/rt7xf7/anonymous_functions_for_two_forms_of_infinite/) turned out to be my latest rabbit hole, i.e. apparently Haskell doesn't have *real* recursive types. Apparently, what I thought was a recursive type, e.g.

    data Peano = Zero | Succ Peano

is not really a recursive type, although I'm not sure why. My previous question about what turned out to be the *omega combinator* brought up the true nature of Haskell recursive types and the mysterious `newtype` ""workaround"". So [this](https://www.schoolofhaskell.com/user/mutjida/typed-tagless-final-linear-lambda-calculus/6-recursive-types) talks about a real natural number recursive type (as does my previous question)

    MyNat = One :+: MyNat
MyList a = One :+: (a :*: MyList a)

I can't truly fathom what's being done/said here, e.g., no idea what is meant first paragraph in by a *typed tagless-final interpreter*. Simple blind acceptance, which is just hand-waving, isn't my style. And the logic programming course it references is, well, my latest rabbit hole. Can somebody give me some intro material to this whole issue of what really is a recursive type. This all started, BTW, with trying to understand what a [type equation](https://wiki.haskell.org/Maybe) meant. Can you guess how many pdfs and web pages I've opened since then? Fazit: Somebody (me?) needs to pull all these threads together into one big Haskell-Omni textbook. The existing beginner texts are too handwavy, IMHO. There's a kiddie version of Haskell and a grownup's version. The kiddie version is pretty much useless, again, IMHO, unless it's to spur you on to the bigger stuff.",True,False,False,haskell,t5_2qh36,68287,public,self,Recursive types,0,[],1.0,https://www.reddit.com/r/haskell/comments/rto654/recursive_types/,all_ads,6,,,,,,,,,,,,,,,,,,,,
612.0,[],False,sridfr,,[],,text,t2_f1wkk8ou,False,False,False,[],False,False,1641058655,github.com,https://www.reddit.com/r/haskell/comments/rto4fv/advent_of_haskell_denotational_design/,{},rto4fv,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rto4fv/advent_of_haskell_denotational_design/,False,link,"{'enabled': False, 'images': [{'id': 'VOKcYb1bPN35e26pOfOTy6S1kcyqyL4g2IJwSTVxJNA', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/LEA0rdNw54ZPCfn2Ytl6vQbw5qPz1z2lvnC_oUdML3k.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=db3a4f72b4568462da9fef98d664827478f8ed34', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/LEA0rdNw54ZPCfn2Ytl6vQbw5qPz1z2lvnC_oUdML3k.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=92bb6b1bf9cc4cf8be361c726d27896a9e6af8af', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/LEA0rdNw54ZPCfn2Ytl6vQbw5qPz1z2lvnC_oUdML3k.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ce4290a96cda26691cc7d8a998f913135c97b151', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/LEA0rdNw54ZPCfn2Ytl6vQbw5qPz1z2lvnC_oUdML3k.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1957dd876f04faa1703134563285a07e4d77f8c7', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/LEA0rdNw54ZPCfn2Ytl6vQbw5qPz1z2lvnC_oUdML3k.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=49ca86e6ec4932c0f4e9697ac414510f3d398b4b', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/LEA0rdNw54ZPCfn2Ytl6vQbw5qPz1z2lvnC_oUdML3k.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=111593150ed359e42065545d0ea5ab422d4ff58a', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/LEA0rdNw54ZPCfn2Ytl6vQbw5qPz1z2lvnC_oUdML3k.jpg?auto=webp&amp;s=611c30cbdab90760d8db30ce452fab20df1b1391', 'width': 1200}, 'variants': {}}]}",6,1641058666,1,,True,False,False,haskell,t5_2qh36,68287,public,default,Advent of Haskell: Denotational Design,0,[],1.0,https://github.com/bolt12/advent-of-haskell-dd,all_ads,6,,,https://github.com/bolt12/advent-of-haskell-dd,70.0,140.0,,,,,,,,,,,,,,,
613.0,[],False,epoberezkin,,[],,text,t2_13t18x,False,False,False,[],False,False,1641048353,medium.com,https://www.reddit.com/r/haskell/comments/rtkrle/recipe_to_compile_haskell_on_termux_for_aarch64/,{},rtkrle,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rtkrle/recipe_to_compile_haskell_on_termux_for_aarch64/,False,link,"{'enabled': False, 'images': [{'id': 'k4wNRZYuiVrKAxuwY3cHVJUsevI6LefrSIuN-Xkoc_o', 'resolutions': [{'height': 52, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5c5037f766a4c92c46201a71d9895cc22e6d69bf', 'width': 108}, {'height': 104, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c4318bb38f5fdbfc516ee6ce9564fa23c4c19426', 'width': 216}, {'height': 155, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f6c0437499c453d92bfa97a379853c99292f5455', 'width': 320}, {'height': 310, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=87415b18d0d34483e7c1cea2a90d3d830a0ab426', 'width': 640}, {'height': 466, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=3d59ee1a79deb64e2d941d5dcde81ba5c24ff863', 'width': 960}, {'height': 524, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ca9e0a35a5291bb1d0671f90eb411e745a4a9102', 'width': 1080}], 'source': {'height': 583, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?auto=webp&amp;s=5cbda7a9a9666da3e5eecc1a147fdff8c6cff240', 'width': 1200}, 'variants': {}}]}",6,1641048364,1,,True,False,False,haskell,t5_2qh36,68287,public,default,Recipe to compile Haskell on Termux for aarch64 architecture!,0,[],1.0,https://medium.com/@vsevolod.mineev/how-to-compile-haskell-on-termux-for-aarch64-architecture-cc15375d3595,all_ads,6,,,https://medium.com/@vsevolod.mineev/how-to-compile-haskell-on-termux-for-aarch64-architecture-cc15375d3595,68.0,140.0,,,,,t3_rqn0aj,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'Sp3k7r0li7', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_7e4yk', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1640718220.0, 'created_utc': 1640718220.0, 'discussion_type': None, 'distinguished': None, 'domain': 'medium.com', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': False, 'id': 'rqn0aj', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': False, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_rqn0aj', 'no_follow': False, 'num_comments': 48, 'num_crossposts': 3, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/termux/comments/rqn0aj/recipe_to_compile_haskell_on_termux_for_aarch64/', 'pinned': False, 'post_hint': 'link', 'preview': {'enabled': False, 'images': [{'id': 'k4wNRZYuiVrKAxuwY3cHVJUsevI6LefrSIuN-Xkoc_o', 'resolutions': [{'height': 52, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5c5037f766a4c92c46201a71d9895cc22e6d69bf', 'width': 108}, {'height': 104, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c4318bb38f5fdbfc516ee6ce9564fa23c4c19426', 'width': 216}, {'height': 155, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f6c0437499c453d92bfa97a379853c99292f5455', 'width': 320}, {'height': 310, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=87415b18d0d34483e7c1cea2a90d3d830a0ab426', 'width': 640}, {'height': 466, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=3d59ee1a79deb64e2d941d5dcde81ba5c24ff863', 'width': 960}, {'height': 524, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ca9e0a35a5291bb1d0671f90eb411e745a4a9102', 'width': 1080}], 'source': {'height': 583, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?auto=webp&amp;s=5cbda7a9a9666da3e5eecc1a147fdff8c6cff240', 'width': 1200}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 16, 'secure_media': None, 'secure_media_embed': {}, 'selftext': '', 'selftext_html': None, 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'termux', 'subreddit_id': 't5_39nh3', 'subreddit_name_prefixed': 'r/termux', 'subreddit_subscribers': 21209, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'default', 'thumbnail_height': 68, 'thumbnail_width': 140, 'title': 'Recipe to compile Haskell on Termux for aarch64 architecture!', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 16, 'upvote_ratio': 0.94, 'url': 'https://medium.com/@vsevolod.mineev/how-to-compile-haskell-on-termux-for-aarch64-architecture-cc15375d3595', 'url_overridden_by_dest': 'https://medium.com/@vsevolod.mineev/how-to-compile-haskell-on-termux-for-aarch64-architecture-cc15375d3595', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
614.0,[],False,epoberezkin,,[],,text,t2_13t18x,False,False,False,[],False,False,1641048064,self.opensource,https://www.reddit.com/r/haskell/comments/rtkofp/happy_new_year_from_me_and_simplex_chat_team/,{},rtkofp,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rtkofp/happy_new_year_from_me_and_simplex_chat_team/,False,link,"{'enabled': False, 'images': [{'id': 'B6rEfjv7GdRQ4N13y-Os--ajmquAumgJWZkT_zID9aA', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=38f201478414774d91e2698ee4dd5710fdd5babb', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2a9aa64d525c0bc38eb11c012d4beb6cf643ba30', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1488df0cf6419cd835ab6d14395040f5afaf8d1c', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d6392ac66ff366d0fc7f56fae6eaf5b4168da629', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5a3de401b3114026bff818782b1a7f5ccd19d4c5', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d7fda67a1059d7aa54b88df24038cf5b2657cac8', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?auto=webp&amp;s=1b8cde328b35cee73178f66129b8a79661c89fb4', 'width': 1200}, 'variants': {}}]}",6,1641048075,1,,True,False,False,haskell,t5_2qh36,68287,public,default,Happy New Year from me and SimpleX Chat team!,0,[],1.0,/r/opensource/comments/rtkmvt/happy_new_year_from_me_and_simplex_chat_team/,all_ads,6,,,/r/opensource/comments/rtkmvt/happy_new_year_from_me_and_simplex_chat_team/,,,,,,,t3_rtkmvt,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'epoberezkin', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_13t18x', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1641047937.0, 'created_utc': 1641047937.0, 'discussion_type': None, 'distinguished': None, 'domain': 'self.opensource', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 'rtkmvt', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': True, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_rtkmvt', 'no_follow': True, 'num_comments': 0, 'num_crossposts': 2, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/opensource/comments/rtkmvt/happy_new_year_from_me_and_simplex_chat_team/', 'pinned': False, 'post_hint': 'self', 'preview': {'enabled': False, 'images': [{'id': 'B6rEfjv7GdRQ4N13y-Os--ajmquAumgJWZkT_zID9aA', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=38f201478414774d91e2698ee4dd5710fdd5babb', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2a9aa64d525c0bc38eb11c012d4beb6cf643ba30', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1488df0cf6419cd835ab6d14395040f5afaf8d1c', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d6392ac66ff366d0fc7f56fae6eaf5b4168da629', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5a3de401b3114026bff818782b1a7f5ccd19d4c5', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d7fda67a1059d7aa54b88df24038cf5b2657cac8', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/gTNgp6CWRd9pPVusV_LhX0BHDTfP7wR_HIc1AvqtOzo.jpg?auto=webp&amp;s=1b8cde328b35cee73178f66129b8a79661c89fb4', 'width': 1200}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 1, 'secure_media': None, 'secure_media_embed': {}, 'selftext': ""Thanks a lot for the questions you asked in 2021 about SimpleX – the most private and secure messaging and application platform.\n\nAnd thanks a lot for huge support we've been lucky to have from you – our users even managed to use SimpleX Chat on Android phones (in termux).\n\nI have just published the new [SimpleX platform overview](https://github.com/simplex-chat/simplexmq/blob/master/protocol/overview-tjr.md) – it explains the motivation for the design – I'd really appreciate your comments and questions.\n\nWe are planning to release v1 of SimpleX Chat in a few days – it will include double ratchet E2E encryption – and the mobile app is coming soon!\n\nPlease try it out (we have few small groups you can join once you run the chat) – any criticism and suggestions are very welcome!\n\nAnd please put a star on [SimpleX Chat GitHub repo](https://github.com/simplex-chat/simplex-chat) if you like what we are doing – it really helps the project!\n\nThank you and Happy New Year!"", 'selftext_html': '&lt;!-- SC_OFF --&gt;&lt;div class=""md""&gt;&lt;p&gt;Thanks a lot for the questions you asked in 2021 about SimpleX – the most private and secure messaging and application platform.&lt;/p&gt;\n\n&lt;p&gt;And thanks a lot for huge support we&amp;#39;ve been lucky to have from you – our users even managed to use SimpleX Chat on Android phones (in termux).&lt;/p&gt;\n\n&lt;p&gt;I have just published the new &lt;a href=""https://github.com/simplex-chat/simplexmq/blob/master/protocol/overview-tjr.md""&gt;SimpleX platform overview&lt;/a&gt; – it explains the motivation for the design – I&amp;#39;d really appreciate your comments and questions.&lt;/p&gt;\n\n&lt;p&gt;We are planning to release v1 of SimpleX Chat in a few days – it will include double ratchet E2E encryption – and the mobile app is coming soon!&lt;/p&gt;\n\n&lt;p&gt;Please try it out (we have few small groups you can join once you run the chat) – any criticism and suggestions are very welcome!&lt;/p&gt;\n\n&lt;p&gt;And please put a star on &lt;a href=""https://github.com/simplex-chat/simplex-chat""&gt;SimpleX Chat GitHub repo&lt;/a&gt; if you like what we are doing – it really helps the project!&lt;/p&gt;\n\n&lt;p&gt;Thank you and Happy New Year!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;', 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'opensource', 'subreddit_id': 't5_2qh4n', 'subreddit_name_prefixed': 'r/opensource', 'subreddit_subscribers': 154337, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'self', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'Happy New Year from me and SimpleX Chat team!', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 1, 'upvote_ratio': 1.0, 'url': 'https://www.reddit.com/r/opensource/comments/rtkmvt/happy_new_year_from_me_and_simplex_chat_team/', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
615.0,[],False,Soham-Chatterjee,,[],,text,t2_8jz7vexo,False,False,False,[],False,False,1641036774,self.haskell,https://www.reddit.com/r/haskell/comments/rthpm7/where_is_my_ghci_configuration_file/,{},rthpm7,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rthpm7/where_is_my_ghci_configuration_file/,False,,,6,1641036785,1,"I installed ghc, cabal, stack with ghcup. I have ghc 9.2.1. but i cant find the ghci configuration file. Where is it.

By the way i use fedora in my machine.",True,False,False,haskell,t5_2qh36,68288,public,self,Where is my ghci configuration file,0,[],1.0,https://www.reddit.com/r/haskell/comments/rthpm7/where_is_my_ghci_configuration_file/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
616.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1641013271,self.haskell,https://www.reddit.com/r/haskell/comments/rtbzbl/monthly_hask_anything_january_2022/,{},rtbzbl,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rtbzbl/monthly_hask_anything_january_2022/,False,,,6,1641013283,1,"This is your opportunity to ask any questions you feel don't deserve their own threads, no matter how small or simple they might be!",False,False,True,haskell,t5_2qh36,68286,public,self,Monthly Hask Anything (January 2022),0,[],1.0,https://www.reddit.com/r/haskell/comments/rtbzbl/monthly_hask_anything_january_2022/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': 'f998970b-a622-480a-aed4-f8d9ad64ee7b', 'created_at_utc': 1612270088.064, 'description': '', 'display_layout': None, 'last_update_utc': 1638361701.739, 'link_ids': ['t3_laur0s', 't3_m0f2y9', 't3_mj7kv5', 't3_n2s8yk', 't3_nqjp2c', 't3_ocz5s5', 't3_p2r52v', 't3_pfxgd4', 't3_pzy3py', 't3_qksh4o', 't3_r6dnmn'], 'permalink': 'https://www.reddit.com/r/haskell/collection/f998970b-a622-480a-aed4-f8d9ad64ee7b', 'subreddit_id': 't5_2qh36', 'title': 'Hask Anything'}]",,
617.0,[],False,cog1tar3,,[],,text,t2_14o50t6f,False,False,False,[],False,False,1641002101,self.haskell,https://www.reddit.com/r/haskell/comments/rt8t0s/will_i_suffer_attempting_to_use_haskell_in_a/,{},rt8t0s,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rt8t0s/will_i_suffer_attempting_to_use_haskell_in_a/,False,,,6,1641002112,1,"I am still learning Haskell, previously using c++/Rust/Python. I am not an expert in any of those languages, however, I am really liking functional programming with Haskell. I am even learning how to do FP in c++. My question is for people that are more experienced with Haskell. Will I suffer trying to do what co-workers do with c++, in Haskell? Mind you, the majority of what we do is security related (RE, exploit dev, secure systems, etc)",True,False,False,haskell,t5_2qh36,68288,public,self,Will I suffer attempting to use Haskell in a company that mainly uses c++,0,[],1.0,https://www.reddit.com/r/haskell/comments/rt8t0s/will_i_suffer_attempting_to_use_haskell_in_a/,all_ads,6,,,,,,,,,,,,,,,,,,,,
618.0,[],False,teilchen010,,[],,text,t2_a8zynd1e,False,False,False,[],False,False,1640999193,self.haskell,https://www.reddit.com/r/haskell/comments/rt7xf7/anonymous_functions_for_two_forms_of_infinite/,{},rt7xf7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rt7xf7/anonymous_functions_for_two_forms_of_infinite/,False,,,6,1640999204,1,"There's this form of infinite loop

    (λx . xx)(λx . xx)

and this form

    (λx . xxx)(λx . xxx)(λx . xxx)

How could they be done as Haskell anonymous functions? I've got this in a similar vein perhaps

    let x = a in let y = λz.x in let x = b in y x

But I've mixed in the parts I can't fathom in Haskell, i.e., the `λz.x` and `y x`  This isn't it `(\x -&gt; \x -&gt; x)`   
 which is, if I'm not mistaken `(λxx . x)`; it just takes two inputs and returns the second; and this doesn't seem to be allowed `(\x -&gt; x x)` so I'm stuck.",True,False,False,haskell,t5_2qh36,68288,public,self,Anonymous functions for two forms of infinite loops,0,[],1.0,https://www.reddit.com/r/haskell/comments/rt7xf7/anonymous_functions_for_two_forms_of_infinite/,all_ads,6,,,,,,,,,,,,,,,,,,,,
619.0,[],False,jmorag,,[],,text,t2_wdkfr2j,False,False,False,[],False,False,1640991964,blog.josephmorag.com,https://www.reddit.com/r/haskell/comments/rt5nm2/databass_part_1_queries/,{},rt5nm2,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rt5nm2/databass_part_1_queries/,False,,,6,1640991975,1,,True,False,False,haskell,t5_2qh36,68289,public,default,"Databass, Part 1: Queries",0,[],1.0,https://blog.josephmorag.com/posts/databass1/,all_ads,6,,,https://blog.josephmorag.com/posts/databass1/,,,,,,,,,,,,,,,,,
620.0,[],False,theron-,,[],,text,t2_15ptz1,False,False,False,[],False,False,1640981041,self.haskell,https://www.reddit.com/r/haskell/comments/rt21jr/type_classes/,{},rt21jr,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rt21jr/type_classes/,False,,,6,1640981051,1,"If     

func :: (Ord a, Num b) =&gt; a -&gt; b -&gt; a 

Can someone please explain why 

:t func 1 2

func 1 2 :: (Ord a, Num a) =&gt; a  ??

&amp;#x200B;

I would have thought this would return Integer.",True,False,False,haskell,t5_2qh36,68288,public,self,Type classes,0,[],1.0,https://www.reddit.com/r/haskell/comments/rt21jr/type_classes/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
621.0,[],False,superstar64,,[],,text,t2_lzo1p,False,False,False,[],False,False,1640980261,self.ProgrammingLanguages,https://www.reddit.com/r/haskell/comments/rt1ryy/type_classes_on_type_variables_bindings/,{},rt1ryy,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rt1ryy/type_classes_on_type_variables_bindings/,False,link,"{'enabled': False, 'images': [{'id': 'fuhZIi2oTwmHgb33W_TQyDCsKSBkVaMgoCLgRwIh-a8', 'resolutions': [{'height': 139, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=802c3a3fa5ad89fe3ebe2b403cf52e81974d1068', 'width': 108}, {'height': 279, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=42d48b692b9f674531d423e1423cd68602202750', 'width': 216}, {'height': 414, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b5db606eb3b73408d9a6345da9436ee28b555521', 'width': 320}, {'height': 828, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=408801673a11e6c47d2612f3ac9e4aa77ea26b14', 'width': 640}, {'height': 1242, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b3194460507ddf8aec1c783f815f71690b15ca98', 'width': 960}, {'height': 1397, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8291cb0b403629e70a11f2888e0168dcc10b097b', 'width': 1080}], 'source': {'height': 3300, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?auto=webp&amp;s=9d896f33d3aaec7e45dd820e5e8b2dc26da0868a', 'width': 2550}, 'variants': {}}]}",6,1640980271,1,,True,False,False,haskell,t5_2qh36,68287,public,default,Type Classes on Type Variables Bindings,0,[],1.0,/r/ProgrammingLanguages/comments/rt1jz0/type_classes_on_type_variables_bindings/,all_ads,6,,,/r/ProgrammingLanguages/comments/rt1jz0/type_classes_on_type_variables_bindings/,,,,,,,t3_rt1jz0,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'superstar64', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_lzo1p', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1640979591.0, 'created_utc': 1640979591.0, 'discussion_type': None, 'distinguished': None, 'domain': 'self.ProgrammingLanguages', 'downs': 0, 'edited': 1640980094.0, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 'rt1jz0', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': True, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_rt1jz0', 'no_follow': True, 'num_comments': 0, 'num_crossposts': 1, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/ProgrammingLanguages/comments/rt1jz0/type_classes_on_type_variables_bindings/', 'pinned': False, 'post_hint': 'self', 'preview': {'enabled': False, 'images': [{'id': 'fuhZIi2oTwmHgb33W_TQyDCsKSBkVaMgoCLgRwIh-a8', 'resolutions': [{'height': 139, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=802c3a3fa5ad89fe3ebe2b403cf52e81974d1068', 'width': 108}, {'height': 279, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=42d48b692b9f674531d423e1423cd68602202750', 'width': 216}, {'height': 414, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b5db606eb3b73408d9a6345da9436ee28b555521', 'width': 320}, {'height': 828, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=408801673a11e6c47d2612f3ac9e4aa77ea26b14', 'width': 640}, {'height': 1242, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b3194460507ddf8aec1c783f815f71690b15ca98', 'width': 960}, {'height': 1397, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=8291cb0b403629e70a11f2888e0168dcc10b097b', 'width': 1080}], 'source': {'height': 3300, 'url': 'https://external-preview.redd.it/AYYaxWTq6a_eCmCjADjUNpyeHszB4OIzUxQENbAYl7E.jpg?auto=webp&amp;s=9d896f33d3aaec7e45dd820e5e8b2dc26da0868a', 'width': 2550}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 1, 'secure_media': None, 'secure_media_embed': {}, 'selftext': ""In Haskell, foralls and constraints are presented as separate constructs. This allows support for multi-parameter type classes, flexible contents, and the like. However, if your making a language that intends to support vanilla Haskell style type classes(single param only, no flexible contents), it might make more sense to attach type class requirements to forall types and type lambdas.\n\nHere are some typing rules I've made to try to model for system-f:[https://imgur.com/a/f4XPUkN](https://imgur.com/a/f4XPUkN)\n\nThis has some small advantages. This make flexible contents syntactically impossible, and make language syntax simpler. This also might be extendable to multi-parameter type classes where every variable is functionally depended on by the first (`class F a b c | a -&gt; b, a -&gt; c`), though I'm not 100% sure on this yet."", 'selftext_html': '&lt;!-- SC_OFF --&gt;&lt;div class=""md""&gt;&lt;p&gt;In Haskell, foralls and constraints are presented as separate constructs. This allows support for multi-parameter type classes, flexible contents, and the like. However, if your making a language that intends to support vanilla Haskell style type classes(single param only, no flexible contents), it might make more sense to attach type class requirements to forall types and type lambdas.&lt;/p&gt;\n\n&lt;p&gt;Here are some typing rules I&amp;#39;ve made to try to model for system-f:&lt;a href=""https://imgur.com/a/f4XPUkN""&gt;https://imgur.com/a/f4XPUkN&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This has some small advantages. This make flexible contents syntactically impossible, and make language syntax simpler. This also might be extendable to multi-parameter type classes where every variable is functionally depended on by the first (&lt;code&gt;class F a b c | a -&amp;gt; b, a -&amp;gt; c&lt;/code&gt;), though I&amp;#39;m not 100% sure on this yet.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;', 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'ProgrammingLanguages', 'subreddit_id': 't5_2qi8m', 'subreddit_name_prefixed': 'r/ProgrammingLanguages', 'subreddit_subscribers': 70678, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'self', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'Type Classes on Type Variables Bindings', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 1, 'upvote_ratio': 1.0, 'url': 'https://www.reddit.com/r/ProgrammingLanguages/comments/rt1jz0/type_classes_on_type_variables_bindings/', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
622.0,[],False,Acrobatic_Hippo_7312,,[],,text,t2_dct08s8z,False,False,False,[],False,False,1640929220,self.haskell,https://www.reddit.com/r/haskell/comments/rsmn3f/looking_for_a_hairshirt_wearing_uncle_bobdoes/,{},rsmn3f,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rsmn3f/looking_for_a_hairshirt_wearing_uncle_bobdoes/,False,,,6,1640929230,1,,True,False,False,haskell,t5_2qh36,68266,public,self,"Looking for a ""Hair-shirt wearing"" Uncle Bob!!Does anyone write about clean coding, and refactoring for Haskell",0,[],1.0,https://www.reddit.com/r/haskell/comments/rsmn3f/looking_for_a_hairshirt_wearing_uncle_bobdoes/,all_ads,6,,,,,,,,,,,,,,,,,,,,
623.0,[],False,webNoob13,,[],,text,t2_7bmygxmk,False,False,False,[],False,False,1640926143,self.haskell,https://www.reddit.com/r/haskell/comments/rslqtd/re_ghcup_cannot_find_systemrandom/,{},rslqtd,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rslqtd/re_ghcup_cannot_find_systemrandom/,False,,,6,1640926153,1,I looked around and there are questions and answers for cabal installation of System.Random but is there an easy way to do this?,True,False,False,haskell,t5_2qh36,68265,public,self,re: GHCup cannot find System.Random,0,[],1.0,https://www.reddit.com/r/haskell/comments/rslqtd/re_ghcup_cannot_find_systemrandom/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
624.0,[],False,YetAnotherChosenOne,,[],,text,t2_qv0j8,False,False,False,[],False,False,1640923709,self.haskell,https://www.reddit.com/r/haskell/comments/rsl0an/solving_puzzle_using_haskell/,{},rsl0an,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rsl0an/solving_puzzle_using_haskell/,False,self,"{'enabled': False, 'images': [{'id': 'OZzk-z5AAiV1U-qmEnO8oCL-6pAz2ntH-YFOclz_uN4', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/lifw9ujU2ocj6uYI3SLk8hhea6xAYIFeTwpUjDmXoWw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d783516b5c03929079720ff9630c142634c8b2e3', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/lifw9ujU2ocj6uYI3SLk8hhea6xAYIFeTwpUjDmXoWw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ca2ddebb482cb3f44d02b15a1bafb181cfebe859', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/lifw9ujU2ocj6uYI3SLk8hhea6xAYIFeTwpUjDmXoWw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=fa8d54ca0f6e4a50674b95c06a01f6fd35fd1b9c', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/lifw9ujU2ocj6uYI3SLk8hhea6xAYIFeTwpUjDmXoWw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=fbf407e2f84b0dcf13cb5f4566c91af6d9c6b716', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/lifw9ujU2ocj6uYI3SLk8hhea6xAYIFeTwpUjDmXoWw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=47c2df09c69708e0a7fdb8512bb3e8cb0c902e59', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/lifw9ujU2ocj6uYI3SLk8hhea6xAYIFeTwpUjDmXoWw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=378fd9dfcf24e63b698654e82b05cf5f5a682d66', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/lifw9ujU2ocj6uYI3SLk8hhea6xAYIFeTwpUjDmXoWw.jpg?auto=webp&amp;s=5826ddd2254244aaf0a5ec1c815769d5c803f368', 'width': 1200}, 'variants': {}}]}",6,1640923720,1,"So my wife gave me puzzle. In the same hour I thrown off everything about who did it and where to find tips and solutions (actually, I even doesn't remember if I had this information) and took it apart without trying to remember. Then I waited for some time to forget everything and then I found that this puzzle is a bit more complex than I thought about it.

So I decided to write some code (surely using Haskell) to solve it. And today I did it.

Here is repository:  
[https://github.com/DKurilo/crest-18-puzzle/](https://github.com/DKurilo/crest-18-puzzle/)

But I have a question: is it possible to make it faster and not using so much memory?",True,False,False,haskell,t5_2qh36,68263,public,self,Solving puzzle using Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/rsl0an/solving_puzzle_using_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
625.0,[],False,fdc_willard,,[],,text,t2_be6rm,False,False,False,[],False,False,1640922158,self.haskell,https://www.reddit.com/r/haskell/comments/rskiqe/so_how_do_i_use_monads_to_make_an_application/,{},rskiqe,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rskiqe/so_how_do_i_use_monads_to_make_an_application/,False,,,6,1640922168,1,"Sorry for the wall of text, but I've been reading a lot of guides and not really getting the answer I need. If anyone wants to help a complete newcomer, I could really use it.

I've read some monad tutorials/lectures and I think I have a beginner's understanding. Basically what I took away was ""without unsafePerformIO, which you should not use, Monad types like `M a` can't be converted to `a`. Instead you compose your Monad functions with pure functions using operators like `&lt;$&gt;` or `&gt;&gt;=`."" I also think I understand this distinction between ""pure"" and ""monad"" functions helps the haskell compiler be extremely cool.

That sounds really good, but I'm having trouble understanding how to structure an application around this. I'm trying to teach myself Haskell by writing an interactive fiction game. So far I have an RPG-style dice roller written, but it's deterministic. I'm creating a seed from the system time inside of a `do`, using the `&lt;-` operator. I then use (basically) `randomRs (_,_) myStdGen`. Because I used `do` and I wasn't sure what to do after that though, so I tried using `unsafePerformIO` and I'm almost certain this is why my dice roller rolls the same numbers every time.

Do I have to make all my roll-processing functions and the entire skill system speak `IO Int` and pass up and down an updated `stdGen`? I am *pretty* sure the answer is ""no,"" since I can use `bind` to invoke pure functions. But if that's true, I'm not sure how to apply that while designing a whole application.

I guess what I'm unsure of is how to structure something larger than a few functions around all of this. Does anyone have any favorite guides or wisdom about the big-picture structure of an application written in Haskell?",True,False,False,haskell,t5_2qh36,68264,public,self,"So, how do I use monads to make an application? (Complete with a Debugging Problem)",0,[],1.0,https://www.reddit.com/r/haskell/comments/rskiqe/so_how_do_i_use_monads_to_make_an_application/,all_ads,6,,,,,,,,,,,,,,,,,,,,
626.0,[],False,ringingraptor,,[],,text,t2_786f2,False,False,False,[],False,False,1640885679,zacwood.me,https://www.reddit.com/r/haskell/comments/rs78zr/building_ihp_projects_with_cabal/,{},rs78zr,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rs78zr/building_ihp_projects_with_cabal/,False,,,6,1640885690,1,,True,False,False,haskell,t5_2qh36,68255,public,default,Building IHP Projects with Cabal,0,[],1.0,https://zacwood.me/posts/2021-12-29-ihp-cabal/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://zacwood.me/posts/2021-12-29-ihp-cabal/,,,,,,,,,,,,,,,,,
627.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1640883868,haskellweekly.news,https://www.reddit.com/r/haskell/comments/rs6jd7/issue_296_haskell_weekly_newsletter/,{},rs6jd7,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rs6jd7/issue_296_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1640883879,1,,True,False,False,haskell,t5_2qh36,68255,public,default,Issue 296 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/296.html,all_ads,6,,,https://haskellweekly.news/issue/296.html,140.0,140.0,,,,,,,,,,,,,,,
628.0,[],False,MangoIV,,[],,text,t2_1ofntlzb,False,False,False,[],False,False,1640877127,self.haskell,https://www.reddit.com/r/haskell/comments/rs3zfu/how_to_work_with_haskell_without_having_a_phd_or/,{},rs3zfu,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rs3zfu/how_to_work_with_haskell_without_having_a_phd_or/,False,,,6,1640877137,1,"This is something I was thinking about for quite some while now. 

I'm an undergrad student very interested in Haskell and functional programming in general. Doing some stuff in my spare time, however, isn't quite satisfying and I want to learn more, especially how it would look to write actual production Haskell. 
 
That is why I would like to apply for an internship or job. But here comes the problem: 

All job offers for Haskell programmers either require years of experience with Haskell in production and/or a PhD. 

I think this is a problem because: 

a) If nobody offers a job for beginners to work with Haskell, how does the community want to get new people who have worked years in Haskell that don't come from academia? 

b) How will there be more programmers writing Haskell in production if the initial hurdles to get a job are that high? 

c) I also think that this closes Haskell to a broader community of non-academics resulting in reinforcement of the general view of Haskell as an ivory tower language. (Which I think it is absolutely not.)

This leads me to my questions: 

Which companies do you think have the best prerequisites to offer internships or jobs for undergraduates/ non-academics to work in Haskell? 

What do you think can the Haskell Foundation do against this problem? From what I have understood the Haskell Foundation also is there to make the language more accessible to the industry which also requires a higher count of programmers who are used to write good and production-ready code in it. A prerequisite for that are accessible internships and jobs that don't require a PhD. 

Do you think this problem can be tackled or is this a kind of hen-egg problem where you would need more industry adaptation to offer more beginner-friendly jobs and more people who are working with the language already to have a broader industry adoption? 

Thanks in advance for your thoughts, suggestions and answers!",True,False,False,haskell,t5_2qh36,68255,public,self,How to work with Haskell without having a PhD or years of experience?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rs3zfu/how_to_work_with_haskell_without_having_a_phd_or/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
629.0,[],False,portw,,[],,text,t2_131ki2,False,False,False,[],False,False,1640861672,self.haskell,https://www.reddit.com/r/haskell/comments/rrz3no/what_is_this_operator/,{},rrz3no,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rrz3no/what_is_this_operator/,False,,,6,1640861682,1,Title,True,False,False,haskell,t5_2qh36,68251,public,self,"What is this operator "":&lt;"" ?",0,[],1.0,https://www.reddit.com/r/haskell/comments/rrz3no/what_is_this_operator/,all_ads,6,,,,,,,,,,,,,,,,,,,,
630.0,[],False,enobayram,,[],,text,t2_90u7a,False,False,False,[],False,False,1640852189,self.haskell,https://www.reddit.com/r/haskell/comments/rrwj7x/what_is_the_best_way_to_report_a_ghc_bug/,{},rrwj7x,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rrwj7x/what_is_the_best_way_to_report_a_ghc_bug/,False,self,"{'enabled': False, 'images': [{'id': 'l-GUO_o8aXaNAx_XU7D79_Z42_L5b2PJIJoUXi-xvls', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/63--tQIQbJHxItLx9Xd4n9GOs7sG30KfbXN7qwACx5Y.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f1c11070ec8d30faa00d32cbca1f238ac4b492de', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/63--tQIQbJHxItLx9Xd4n9GOs7sG30KfbXN7qwACx5Y.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=641f6f5d69c711dc8a01dac1b12208e953179209', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/63--tQIQbJHxItLx9Xd4n9GOs7sG30KfbXN7qwACx5Y.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9c7166fdbe115393d85fbb90a229893967ee021a', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/63--tQIQbJHxItLx9Xd4n9GOs7sG30KfbXN7qwACx5Y.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=3db1f4f7c281cad3472423e9e0bf85182e90a87d', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/63--tQIQbJHxItLx9Xd4n9GOs7sG30KfbXN7qwACx5Y.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b8ceb09693292e8c653acf9bfe9ee40946529bb3', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/63--tQIQbJHxItLx9Xd4n9GOs7sG30KfbXN7qwACx5Y.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c50b75cf3f29cacce432704e32ad774d9e6a037a', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/63--tQIQbJHxItLx9Xd4n9GOs7sG30KfbXN7qwACx5Y.jpg?auto=webp&amp;s=5557a54bddcb5599e718645714b16f58e29d7ec4', 'width': 1200}, 'variants': {}}]}",6,1640852200,1,"I have observed some strange GHC behavior while working on my $DAYJOB project that I'd like to report as an issue on the GHC bug tracker. To do so, I intend to prepare a minimal case that reproduces the issue on the compiler version that the GHC developers would most prefer. I'm having trouble doing that though:

1) Which is the GHC version that would be the most useful for GHC developers? 8.10.7, the one the majority of the users currently use (me included)? 9.2.1 which is the latest stable release? Or GHC HEAD? 

2) Unless the answer to (1) above is GHC 8.10.7, what's the easiest way to obtain that GHC version, very preferably without polluting my system globally? I've built GHC HEAD using the great nix-shell provided by [https://github.com/alpmestan/ghc.nix](https://github.com/alpmestan/ghc.nix), which allowed me to build it without installing any system dependencies globally. But I can't figure out how to run the resulting GHC, I have `./inplace/bin/runghc` which I can use to interpret .hs files and I have `./inplace/bin/ghc-stage2`, but that one results in a billion linker errors when I try to compile anything. I've also tried installing GHC versions via `ghcup`, but that one also fails because I think I'm supposed to install some system dependencies, but I really don't like doing that if at all possible.

It might be a good idea to update the [report a bug page](https://gitlab.haskell.org/ghc/ghc/-/wikis/report-a-bug) in the GHC wiki with this information. The subreddit is probably not the best place to ask these questions, but I'm also not sure where best to engage with the GHC developers.

Thanks for any pointers!",True,False,False,haskell,t5_2qh36,68248,public,self,What is the best way to report a GHC bug?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rrwj7x/what_is_the_best_way_to_report_a_ghc_bug/,all_ads,6,,,,,,,,,,,,,,,,,,,,
631.0,[],False,moonlighter69,,[],,text,t2_57j1hvs0,False,False,False,[],False,False,1640830349,self.haskell,https://www.reddit.com/r/haskell/comments/rrpnoy/recommended_resources_for_learning_category/,{},rrpnoy,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rrpnoy/recommended_resources_for_learning_category/,False,self,"{'enabled': False, 'images': [{'id': 'UdPk52PNhZG9dJeH2OKsq2I9_u7HNhggB0TZ8yingk4', 'resolutions': [{'height': 56, 'url': 'https://external-preview.redd.it/6Y6EVzMhRFzVA1fDjUH9-Gvrg3Ow75WrgaHpY7pq0GM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b0a85c8e285bfaf600dd9e624f09882862d481a0', 'width': 108}, {'height': 113, 'url': 'https://external-preview.redd.it/6Y6EVzMhRFzVA1fDjUH9-Gvrg3Ow75WrgaHpY7pq0GM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=80c8a073418cc67d9d535694331ac487dc5945f1', 'width': 216}, {'height': 168, 'url': 'https://external-preview.redd.it/6Y6EVzMhRFzVA1fDjUH9-Gvrg3Ow75WrgaHpY7pq0GM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d3d6c322628fab063ab62368288a561449fa478b', 'width': 320}, {'height': 336, 'url': 'https://external-preview.redd.it/6Y6EVzMhRFzVA1fDjUH9-Gvrg3Ow75WrgaHpY7pq0GM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=136a786a85447d0c1b381891499e776ebe6f50cb', 'width': 640}, {'height': 504, 'url': 'https://external-preview.redd.it/6Y6EVzMhRFzVA1fDjUH9-Gvrg3Ow75WrgaHpY7pq0GM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c20bd017b429630dc5f671f4ad95d6238559dffb', 'width': 960}, {'height': 567, 'url': 'https://external-preview.redd.it/6Y6EVzMhRFzVA1fDjUH9-Gvrg3Ow75WrgaHpY7pq0GM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a32d94fa9f20c94296850eb33eb76684e1f31e31', 'width': 1080}], 'source': {'height': 630, 'url': 'https://external-preview.redd.it/6Y6EVzMhRFzVA1fDjUH9-Gvrg3Ow75WrgaHpY7pq0GM.jpg?auto=webp&amp;s=7c897630d1f61b86d906d98119c54dde2e27e607', 'width': 1200}, 'variants': {}}]}",6,1640830359,1,"Hello haskellers,

I know this question has been asked in the past, but I'm hoping to get a more modern answer :')

Are there any recommended resources for learning category theory and haskell?

Some background info, I have a math undergrad degree, and I had fun with the pure math, proofs, theorems, etc. so I'd love to dive deeper into the formal math behind category theory.

After graduating, I've had a few different roles before landing a software engineer position about 6 months ago... mainly working with JavaScript/TypeScript/node.js.

I've also worked through the JavaScript [Mostly Adequate Guide to FP](https://mostly-adequate.gitbook.io/mostly-adequate-guide/), which further piqued my interest in FP, also learned some basic Clojure and used it for [Advent of Code](https://adventofcode.com/) this year.

Has anyone worked through the MIT course, [Programming with Categories](http://brendanfong.com/programmingcats.html)? Does this seem like a good place to start? Leafing through the textbook, it seems to strike a good balance between the formal math and introducing haskell basics. I was thinking of working through it, then work through a more in-depth haskell resource (i.e. learn you a haskell or something)

Thanks in advance for your input!",True,False,False,haskell,t5_2qh36,68242,public,self,Recommended resources for learning category theory/haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/rrpnoy/recommended_resources_for_learning_category/,all_ads,6,,,,,,,,,,,,,,,,,,,,
632.0,[],False,webNoob13,,[],,text,t2_7bmygxmk,False,False,False,[],False,False,1640764663,self.haskell,https://www.reddit.com/r/haskell/comments/rr2t4z/what_does_couldnt_match_expected_type_double_with/,{},rr2t4z,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rr2t4z/what_does_couldnt_match_expected_type_double_with/,False,,,6,1640764673,1,"```
stdDev :: (Num a) =&gt; [a] -&gt; a -&gt; a
stdDev xs thisMean = oneOverN * sumOfSquares
    where 
        numXs = length xs
        oneOverN = oneOverNSamples numXs
        sumOfSquares = sumSquareErrors xs thisMean   
```
```
Prelude&gt; :r
[1 of 1] Compiling StandardDeviation ( Unit3StdDev.hs, interpreted )

Unit3StdDev.hs:129:57: error:
    Variable not in scope: sumSquare :: [a] -&gt; a -&gt; a
    |
129 | sumSquareErrors (x:xs) thisMean = ((x - thisMean) ^2) + sumSquare xs thisMean 
    |                                                         ^^^^^^^^^

Unit3StdDev.hs:134:10: error:
    Variable not in scope: sumSquare :: [a1] -&gt; Double -&gt; t
    |
134 | testSS = sumSquare testArrSS testMean
    |          ^^^^^^^^^

Unit3StdDev.hs:148:33: error:
    • Couldn't match expected type ‘Double’ with actual type ‘a’
      ‘a’ is a rigid type variable bound by
        the type signature for:
          stdDev :: forall a. Num a =&gt; [a] -&gt; a -&gt; a
        at Unit3StdDev.hs:147:1-34
    • In the second argument of ‘(*)’, namely ‘sumOfSquares’
      In the expression: oneOverN * sumOfSquares
      In an equation for ‘stdDev’:
          stdDev xs thisMean
            = oneOverN * sumOfSquares
            where
                numXs = length xs
                oneOverN = oneOverNSamples numXs
                sumOfSquares = sumSquareErrors xs thisMean
    • Relevant bindings include
        sumOfSquares :: a (bound at Unit3StdDev.hs:152:9)
        thisMean :: a (bound at Unit3StdDev.hs:148:11)
        xs :: [a] (bound at Unit3StdDev.hs:148:8)
        stdDev :: [a] -&gt; a -&gt; a (bound at Unit3StdDev.hs:148:1)
    |
148 | stdDev xs thisMean = oneOverN * sumOfSquares
    |                                 ^^^^^^^^^^^^
Failed, no modules loaded.
Prelude&gt; 
```",True,False,False,haskell,t5_2qh36,68229,public,self,What does Couldn't match expected type ‘Double’ with actual type ‘a’ ‘a’ is a rigid type variable bound by the type signature for:,0,[],1.0,https://www.reddit.com/r/haskell/comments/rr2t4z/what_does_couldnt_match_expected_type_double_with/,all_ads,6,,,,,,,,,,,,,,,,,,,,
633.0,[],False,glubs9,,[],,text,t2_yhh6i,False,False,False,[],False,False,1640753235,self.haskell,https://www.reddit.com/r/haskell/comments/rqzhe1/is_learn_you_a_haskell_down_forever_i_hope_not/,{},rqzhe1,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rqzhe1/is_learn_you_a_haskell_down_forever_i_hope_not/,False,,,6,1640753245,1,"I can't access the website right now. I loved this book when I learned haskell.

Please come back :(",True,False,False,haskell,t5_2qh36,68226,public,self,"is learn you a haskell down forever, i hope not :(",0,[],1.0,https://www.reddit.com/r/haskell/comments/rqzhe1/is_learn_you_a_haskell_down_forever_i_hope_not/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
634.0,[],False,infinitlybana,,[],,text,t2_2tl6lzvr,False,False,False,[],False,False,1640739018,self.haskell,https://www.reddit.com/r/haskell/comments/rqunya/hoogle/,{},rqunya,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rqunya/hoogle/,False,,,6,1640739028,1,"I'm surprised I haven't seen anything about Hoogle here and wanted to share!

Hoogle is a Haskell API search engine powered by the natural infrastructure of Haskell's types.

[https://hoogle.haskell.org/](https://hoogle.haskell.org/)

[https://hoogleplus.goto.ucsd.edu/](https://hoogleplus.goto.ucsd.edu/)",True,False,False,haskell,t5_2qh36,68223,public,self,Hoogle,0,[],1.0,https://www.reddit.com/r/haskell/comments/rqunya/hoogle/,all_ads,6,,,,,,,,,,,,,,,,,,,,
635.0,[],False,teilchen010,,[],,text,t2_a8zynd1e,False,False,False,[],False,False,1640733360,self.haskell,https://www.reddit.com/r/haskell/comments/rqslqm/type_equation/,{},rqslqm,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rqslqm/type_equation/,False,,,6,1640733371,1,"I landed [here](https://wiki.haskell.org/Maybe) and saw something I'd never seen before, namely,

`Maybe` satisfies the type equation `FX = 1 + X`, where the functor `F` takes a set to a point plus that set.

It sounds brilliant, but I don't know what any of that means. (I have only a beginner's understanding of what a functor is.) Where can I start learning?",True,False,False,haskell,t5_2qh36,68222,public,self,Type Equation?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rqslqm/type_equation/,all_ads,6,,,,,,,,,,,,,,,,,,,,
636.0,[],False,Sp3k7r0li7,,[],,text,t2_7e4yk,False,False,False,[],False,False,1640718738,medium.com,https://www.reddit.com/r/haskell/comments/rqn71v/recipe_to_compile_haskell_on_termux_for_aarch64/,{},rqn71v,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rqn71v/recipe_to_compile_haskell_on_termux_for_aarch64/,False,link,"{'enabled': False, 'images': [{'id': 'k4wNRZYuiVrKAxuwY3cHVJUsevI6LefrSIuN-Xkoc_o', 'resolutions': [{'height': 52, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5c5037f766a4c92c46201a71d9895cc22e6d69bf', 'width': 108}, {'height': 104, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c4318bb38f5fdbfc516ee6ce9564fa23c4c19426', 'width': 216}, {'height': 155, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f6c0437499c453d92bfa97a379853c99292f5455', 'width': 320}, {'height': 310, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=87415b18d0d34483e7c1cea2a90d3d830a0ab426', 'width': 640}, {'height': 466, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=3d59ee1a79deb64e2d941d5dcde81ba5c24ff863', 'width': 960}, {'height': 524, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ca9e0a35a5291bb1d0671f90eb411e745a4a9102', 'width': 1080}], 'source': {'height': 583, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?auto=webp&amp;s=5cbda7a9a9666da3e5eecc1a147fdff8c6cff240', 'width': 1200}, 'variants': {}}]}",6,1640718749,1,,True,False,False,haskell,t5_2qh36,68217,public,default,Recipe to compile Haskell on Termux for aarch64 architecture!,0,[],1.0,https://medium.com/@vsevolod.mineev/how-to-compile-haskell-on-termux-for-aarch64-architecture-cc15375d3595,all_ads,6,,,https://medium.com/@vsevolod.mineev/how-to-compile-haskell-on-termux-for-aarch64-architecture-cc15375d3595,68.0,140.0,,,,,t3_rqn0aj,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'Sp3k7r0li7', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_7e4yk', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1640718220.0, 'created_utc': 1640718220.0, 'discussion_type': None, 'distinguished': None, 'domain': 'medium.com', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 'rqn0aj', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': False, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_rqn0aj', 'no_follow': True, 'num_comments': 0, 'num_crossposts': 2, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/termux/comments/rqn0aj/recipe_to_compile_haskell_on_termux_for_aarch64/', 'pinned': False, 'post_hint': 'link', 'preview': {'enabled': False, 'images': [{'id': 'k4wNRZYuiVrKAxuwY3cHVJUsevI6LefrSIuN-Xkoc_o', 'resolutions': [{'height': 52, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5c5037f766a4c92c46201a71d9895cc22e6d69bf', 'width': 108}, {'height': 104, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c4318bb38f5fdbfc516ee6ce9564fa23c4c19426', 'width': 216}, {'height': 155, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f6c0437499c453d92bfa97a379853c99292f5455', 'width': 320}, {'height': 310, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=87415b18d0d34483e7c1cea2a90d3d830a0ab426', 'width': 640}, {'height': 466, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=3d59ee1a79deb64e2d941d5dcde81ba5c24ff863', 'width': 960}, {'height': 524, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ca9e0a35a5291bb1d0671f90eb411e745a4a9102', 'width': 1080}], 'source': {'height': 583, 'url': 'https://external-preview.redd.it/iBCPpo8CP0XMZUUsssVhha9j8oihJM8vOi6JSv9d0M4.jpg?auto=webp&amp;s=5cbda7a9a9666da3e5eecc1a147fdff8c6cff240', 'width': 1200}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 2, 'secure_media': None, 'secure_media_embed': {}, 'selftext': '', 'selftext_html': None, 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'termux', 'subreddit_id': 't5_39nh3', 'subreddit_name_prefixed': 'r/termux', 'subreddit_subscribers': 21112, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'default', 'thumbnail_height': 68, 'thumbnail_width': 140, 'title': 'Recipe to compile Haskell on Termux for aarch64 architecture!', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 2, 'upvote_ratio': 1.0, 'url': 'https://medium.com/@vsevolod.mineev/how-to-compile-haskell-on-termux-for-aarch64-architecture-cc15375d3595', 'url_overridden_by_dest': 'https://medium.com/@vsevolod.mineev/how-to-compile-haskell-on-termux-for-aarch64-architecture-cc15375d3595', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
637.0,[],False,io_nathan,,[],,text,t2_whw4df9,False,False,False,[],False,False,1640717978,self.haskell,https://www.reddit.com/r/haskell/comments/rqmwyp/the_source_code_of_defect_process/,{},rqmwyp,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rqmwyp/the_source_code_of_defect_process/,False,self,"{'enabled': False, 'images': [{'id': 'edesdMem--TUjzve4dXmzIIdETZrRPQoCG-47vNMIs0', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/QNQ4vkEE4SMmyOpDB_ImBrnadb-FQPqJMR_edUCd5oc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=652914fcd1127f6c8d9fc91245ef9ee0a5560ec6', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/QNQ4vkEE4SMmyOpDB_ImBrnadb-FQPqJMR_edUCd5oc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=407048fb3218234f2f116fd76dc1ca3149eb8c7a', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/QNQ4vkEE4SMmyOpDB_ImBrnadb-FQPqJMR_edUCd5oc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=002c80202663a3cd6713bfd54d91137fb8b44ee6', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/QNQ4vkEE4SMmyOpDB_ImBrnadb-FQPqJMR_edUCd5oc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e68defaf9f216e5ef8e19091eaef7c333b7e863f', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/QNQ4vkEE4SMmyOpDB_ImBrnadb-FQPqJMR_edUCd5oc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=4a2b599869b8f6d4367e035e834c944df35dbe5e', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/QNQ4vkEE4SMmyOpDB_ImBrnadb-FQPqJMR_edUCd5oc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=5c97b924dd5b3e0faeb9f9b3c14342082231a2c1', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/QNQ4vkEE4SMmyOpDB_ImBrnadb-FQPqJMR_edUCd5oc.jpg?auto=webp&amp;s=118d18aa9d9936c8229268e1fe69399c57976b5b', 'width': 1200}, 'variants': {}}]}",6,1640717988,1,Over the Christmas break I took some time to study the source code of Defect Process ([https://github.com/incoherentsoftware/defect-process](https://github.com/incoherentsoftware/defect-process)) to better understand industry-strength software architecture in Haskell and Game Engines. I have written a longer article about my analysis: [https://www.lambdabytes.io/articles/defectprocess/](https://www.lambdabytes.io/articles/defectprocess/),True,False,False,haskell,t5_2qh36,68215,public,self,The Source Code of Defect Process,0,[],1.0,https://www.reddit.com/r/haskell/comments/rqmwyp/the_source_code_of_defect_process/,all_ads,6,,,,,,,,,,,,,,,,,,,,
638.0,[],False,peesooshhvusog,,[],,text,t2_c86iiu03,False,False,False,[],False,False,1640694769,self.haskell,https://www.reddit.com/r/haskell/comments/rqeush/hiring_1_job_in_haskell_hiring_now/,{},rqeush,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rqeush/hiring_1_job_in_haskell_hiring_now/,False,,,6,1640694779,1,"Company Name | Title | City
--|--|--|--|--|--
[DRIFT Services](https://redejobs.com/job.php?j=a1f606&amp;p=8&amp;s1=reddit&amp;s2=haskell) | [Certified Nursing Assistant (CNA) Phoenix Center for Rehabilitation &amp; Pediatrics, Haskell, NJ](https://redejobs.com/job.php?j=a1f606&amp;p=8&amp;s1=reddit&amp;s2=haskell) | [Bryant](https://redejobs.com/job.php?j=a1f606&amp;p=8&amp;s1=reddit&amp;s2=haskell)


Hey guys, here are some recent job openings , feel free to comment here if you have any questions, I'm at the community's disposal! If you encounter any problems with any of these job openings please let me know that I will modify the table accordingly. Thanks!",True,False,False,haskell,t5_2qh36,68204,public,self,[HIRING] 1 Job in haskell Hiring Now!,0,[],1.0,https://www.reddit.com/r/haskell/comments/rqeush/hiring_1_job_in_haskell_hiring_now/,all_ads,6,,,,,,,,,,,,,,,,,,,,
639.0,[],False,paulashis0013,,[],,text,t2_1f5b5xfb,False,False,False,[],False,False,1640687372,self.haskell,https://www.reddit.com/r/haskell/comments/rqcwqy/list_replication/,{},rqcwqy,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rqcwqy/list_replication/,False,,,6,1640687382,1,"Heya, I am pretty new to functional programming, so I was attempting this hackerrank problem and I came up with this solution. I was wondering if my approach is optimal enough. I am having a feeling this list concatenation can be avoided in some way. Any suggestions?

```haskell
    rep :: Int -&gt; Int -&gt; [Int] -- takes 3, 4 and returns [3, 3, 3, 3]
    rep a 0 = []
    rep a n = a : rep a (n-1)
    
    f :: Int -&gt; [Int] -&gt; [Int]
    f n [] = []
    f n arr = (rep (head arr) n ) ++ f n (tail arr)
```",True,False,False,haskell,t5_2qh36,68199,public,self,List Replication,0,[],1.0,https://www.reddit.com/r/haskell/comments/rqcwqy/list_replication/,all_ads,6,,,,,,,,,,,,,,,,,,,,
640.0,[],False,webNoob13,,[],,text,t2_7bmygxmk,False,False,False,[],False,False,1640681763,self.haskell,https://www.reddit.com/r/haskell/comments/rqbfqx/real_type_and_realtofrac/,{},rqbfqx,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rqbfqx/real_type_and_realtofrac/,False,,,6,1640681773,1,"Will Kurt's Get Programming in Haskell, p.243, Extension Exercise to calculate standard deviation of Time Series type TS [Int] [Maybe a], I am using type constraint (Real a) because the book example to calculate mean uses that as Will Kurt states ""The Real type class allows you to use the realToFrac func-
tion to make it easier for you to divide types such as Integer. Your mean will have to return a Maybe type because in two instances there’s no meaningful result: an empty time series and a time series in which all values are Nothing.""

Is there a better way because I keep getting errors compiling with it although I am not sure how I would replace it.  For the extension exercise to calculate moving average based on median, I changed it to (Num a, Ord a) for simplicity but for standard deviation, is Num going to suffice? 

Is Will Kurt's advice best practice here?

Also I am getting errors like 
""Couldn't match expected type ‘[a2]’ with actual type ‘TS Double’""
but in the hierarchy of things isn't type variable a higher than Double?

Basically I want to know how to strip this down and do it as easily as possible, ie. resemble OOP as much as possible.  

My ugly code that does not work is below just in case for reference:

```
stdDevMaybe :: (Real a) =&gt; [Maybe a] -&gt; a -&gt; Maybe a
stdDevMaybe vals thisMean = if any (== Nothing) vals then Nothing 
                            else (Just standardDeviation)
    where standardDeviation = stdDev (map fromJust vals) thisMean 

sumSquare :: (Real a) =&gt; [a] -&gt; a -&gt; a 
sumSquare (x:xs) thisMean = ((x - thisMean) ^2) + sumSquare xs thisMean 
    --where avg = mean (x:xs)

--StdDev = sqrt (1/N sum: i=1 to N (xi -u)^2)
--TS is [Int] [Double]
--find mean
--get list of doubles out of [Maybe a] and for each xi, (xi-u) ^2 and sum
stdDev :: (Real a) =&gt; [a] -&gt; a -&gt; a
stdDev xs thisMean = ((realToFrac 1) `div` (realToFrac n)) * (realToFrac sumOfSquares)
    where 
          sumOfSquares = sumSquare xs thisMean    
          n = length xs

-- get the vaules out of TS
stdDevTS :: (Real a) =&gt; TS a -&gt; a -&gt; a
stdDevTS (TS _ []) _ = Nothing 
stdDevTS (TS times values) thisMean = if all (== Nothing) values -- returns 
                                      then error ""No std dev for array of Nothings""
                                      else standardDeviation 
    where justVals = filter isJust values 
          cleanVals = map fromJust justVals 
          standardDeviation = stdDev cleanVals thisMean

ts1StdDev = stdDevTS ts1
```",True,False,False,haskell,t5_2qh36,68197,public,self,Real type and realToFrac,0,[],1.0,https://www.reddit.com/r/haskell/comments/rqbfqx/real_type_and_realtofrac/,all_ads,6,,,,,,,,,,,,,,,,,,,,
641.0,[],False,waskerdu,,[],,text,t2_g6to9,False,False,False,[],False,False,1640672761,self.haskell,https://www.reddit.com/r/haskell/comments/rq8xu7/learn_you_a_haskell_is_down/,{},rq8xu7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rq8xu7/learn_you_a_haskell_is_down/,False,,,6,1640672772,1,The [website](http://learnyouahaskell.com/) is apparently down? Does anyone have any information on this?,True,False,False,haskell,t5_2qh36,68195,public,self,Learn you a Haskell is down?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rq8xu7/learn_you_a_haskell_is_down/,all_ads,6,,,,,,,,,,,,,,,,,,,,
642.0,[],False,moonlighter69,,[],,text,t2_57j1hvs0,False,False,False,[],False,False,1640659598,self.haskell,https://www.reddit.com/r/haskell/comments/rq4m3m/how_do_haskell_salaries_compare_to_other/,{},rq4m3m,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rq4m3m/how_do_haskell_salaries_compare_to_other/,False,self,"{'enabled': False, 'images': [{'id': '86wG6uTILIC6wFHN2BrfxPx45QiDT5gVIv-bmgM6_84', 'resolutions': [{'height': 56, 'url': 'https://external-preview.redd.it/tliRuffvyCbjw2ojxozWR7Vw4Dbq6Cnn0K7T1cNbIdk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d38e744c565f0ab1ee07a70030b1794faa30179c', 'width': 108}, {'height': 113, 'url': 'https://external-preview.redd.it/tliRuffvyCbjw2ojxozWR7Vw4Dbq6Cnn0K7T1cNbIdk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c8e3882952c4162eeb7752ff57e4dd4e0b5e5a57', 'width': 216}, {'height': 167, 'url': 'https://external-preview.redd.it/tliRuffvyCbjw2ojxozWR7Vw4Dbq6Cnn0K7T1cNbIdk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f0d7c55c07440afd09bf320314a9d9421de6f803', 'width': 320}, {'height': 334, 'url': 'https://external-preview.redd.it/tliRuffvyCbjw2ojxozWR7Vw4Dbq6Cnn0K7T1cNbIdk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=3cedcc01fdab241f04435fbafd15328f9a7565cc', 'width': 640}, {'height': 502, 'url': 'https://external-preview.redd.it/tliRuffvyCbjw2ojxozWR7Vw4Dbq6Cnn0K7T1cNbIdk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=8c2b72bc55770545d746c498f3f33a8215a8cde2', 'width': 960}, {'height': 565, 'url': 'https://external-preview.redd.it/tliRuffvyCbjw2ojxozWR7Vw4Dbq6Cnn0K7T1cNbIdk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=6b14bc27bf2da791664f4130e84d34e1202a3352', 'width': 1080}], 'source': {'height': 628, 'url': 'https://external-preview.redd.it/tliRuffvyCbjw2ojxozWR7Vw4Dbq6Cnn0K7T1cNbIdk.jpg?auto=webp&amp;s=56ed1bb237a201f631a0158456d9282ce3159aef', 'width': 1200}, 'variants': {}}]}",6,1640659609,1,"Hello everybody,

I wanted to reach out to the reddit community about haskell salaries. The only other reddit thread on the topic I could find was [from 8 years ago](https://www.reddit.com/r/haskell/comments/27g0g2/are_haskell_salaries_competitive/), so I was curious if things have changed in the past 8 years.

According to the [Stack Overflow 2021 Developer Survey](https://insights.stackoverflow.com/survey/2021#technology-top-paying-technologies), Haskell developers seem to make much less than some other ""functional"" languages (i.e. Clojure, F#, Elixir). Do you find this to be true in your experience?

I'd also be interested to hear about haskell salaries in the US vs elsewhere.

If you would like, feel free to share your salary here (for others to reference), but no pressure!

Thanks in advance!",True,False,False,haskell,t5_2qh36,68188,public,self,How do Haskell salaries compare to other programming languages?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rq4m3m/how_do_haskell_salaries_compare_to_other/,all_ads,6,,,,,,,,,,,,,,,,,,,,
643.0,[],False,rifasaurous,,[],,text,t2_2m1nido2,False,False,False,[],False,False,1640636221,self.haskell,https://www.reddit.com/r/haskell/comments/rpw9gy/multiple_small_questions_related_to_mapping_over/,{},rpw9gy,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rpw9gy/multiple_small_questions_related_to_mapping_over/,False,,,6,1640636231,1,"I have two functions, 'f1, f2 :: [String] -&gt; String`, and a function `g :: String -&gt; Int`. I would like to create a new function of type`[String] -&gt; Maybe (Int, Int)`. (This came up as part of working with my AOC template, and seemed like a good opportunity to learn something; the actual functions have much longer names.)

I have the following different equivalent working approaches, in order of discovery:

```
    \s -&gt; Just (g $ f1 s, g $ f2 s)
    Just . \s -&gt; (g $ f1 s, g $ f2 s)
    Just . liftM2 (,) (g . f1) (g . f2)
    Just . bimap g g . liftM2 (,) f1 f2     --- Bifunctors
    Just . over both g . liftM2 (,) f1 f2   --- Control.Lens
```

This brought up a few different questions for me.
- I haven't used `liftM2` before; I came to it when I gave `pointfree.io` the expression above it. Looking at the type, I see `liftM2 :: Monad m =&gt; (a1 -&gt; a2 -&gt; r) -&gt; m a1 -&gt; m a2 -&gt; m r`. What is the monad here? How should I think about viewing an expression like `(g . f1)` (which I normally think of as just an ordinary function composition) with `m a1`? I think of the `r` as just being the ""return type"" of `(,)`, so I'm a little confused by the `m r`. I guess in general I'm a little confused here.
- The `bimap` expression isn't very helpful on its own, since I'm still writing `g` (remember, longer names) twice. I did this in the hopes that I was on a path to using [`Data.Bifunctor.Join`](https://hackage.haskell.org/package/bifunctors-5/docs/Data-Bifunctor-Join.html), but I haven't figured out how to use that and don't see any actual fully worked examples. Is that a good idea here, and if so, any advice on how to do it?
- I get the feeling that bringing in `Control.Lens` here (which I've also never used before) is a pretty big move? I did it because I found [a comment](https://stackoverflow.com/questions/13442544/why-does-the-2-tuple-functor-instance-only-apply-the-function-to-the-second-elem), but I'm not attached to it.
- With either `bimap` or `Control.Lens`, I'd initially thought I'd use `(g .)` as the function rather than `g`, but I couldn't make that work. Is this possible? (I'm not saying I'd particularly want to, just trying to deepen my understanding.)

Any other suggestions on the right way to do this, or other good lessons to learn here?",True,False,False,haskell,t5_2qh36,68182,public,self,Multiple small questions related to mapping over a tuple.,0,[],1.0,https://www.reddit.com/r/haskell/comments/rpw9gy/multiple_small_questions_related_to_mapping_over/,all_ads,6,,,,,,,,,,,,,,,,,,,,
644.0,[],False,Soham-Chatterjee,,[],,text,t2_8jz7vexo,False,False,False,[],False,False,1640623527,self.haskell,https://www.reddit.com/r/haskell/comments/rpriun/print_binary_search_tree_in_a_tree_like_structure/,{},rpriun,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rpriun/print_binary_search_tree_in_a_tree_like_structure/,False,,,6,1640623537,1,"I created a binary search tree and tried to print the binary search tree with this instance

    data Tree a = Nil | Node (Tree a) a (Tree a)
    instance Show a =&gt; Show (Tree a) where
            show t = intercalate ""\n""  (map snd (draw t))
    
    draw :: Show a =&gt; Tree a -&gt; [(Int,String)]
    draw Nil                = [(1,""*"")]
    draw (Node Nil x Nil)   = [(1,show x)]
    draw (Node tl x tr)     = zip (repeat 0) (map shiftl (draw tl)) ++ [(1,show x ++ ""-+"")] ++ zip (repeat 2) (map shiftr (draw tr)) where
            shiftl (0,x)    =       spaces ++ ""  "" ++ x 
            shiftl (1,x)    =       spaces ++ ""+-"" ++ x 
            shiftl (2,x)    =       spaces ++ ""| "" ++ x 
            shiftr (0,x)    =       spaces ++ ""| "" ++ x 
            shiftr (1,x)    =       spaces ++ ""+-"" ++ x 
            shiftr (2,x)    =       spaces ++ ""  "" ++ x
            spaces          =       replicate  (length (show x) ) ' '

Now I want to print it horizontally, which i am not able to do so. I want to print the binary search tree like this picture below. (Sorry for the low quality of the picture but you get the idea). How can i do it ?

&amp;#x200B;

https://preview.redd.it/aabp5f2g64881.jpg?width=343&amp;format=pjpg&amp;auto=webp&amp;s=3eabb06ef3eab3997cbaa7d9f68258b809da3cd2",True,False,False,haskell,t5_2qh36,68178,public,self,Print Binary Search Tree in a tree like structure in Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/rpriun/print_binary_search_tree_in_a_tree_like_structure/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,122.0,140.0,"{'aabp5f2g64881': {'e': 'Image', 'id': 'aabp5f2g64881', 'm': 'image/jpg', 'p': [{'u': 'https://preview.redd.it/aabp5f2g64881.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7cf38aaf08e85ac61ff6eb245d92ff214325967b', 'x': 108, 'y': 94}, {'u': 'https://preview.redd.it/aabp5f2g64881.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2bc6fa037dc86a9b3b28c5dd1cbfd16ee513d611', 'x': 216, 'y': 188}, {'u': 'https://preview.redd.it/aabp5f2g64881.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a9533065250fd34e1feba4b91278b6efd00e5e58', 'x': 320, 'y': 278}], 's': {'u': 'https://preview.redd.it/aabp5f2g64881.jpg?width=343&amp;format=pjpg&amp;auto=webp&amp;s=3eabb06ef3eab3997cbaa7d9f68258b809da3cd2', 'x': 343, 'y': 299}, 'status': 'valid'}}",,,,,,,,,,,,,,
645.0,[],False,Aguxez,,[],,text,t2_bx9cn,False,False,False,[],False,False,1640621279,self.haskell,https://www.reddit.com/r/haskell/comments/rpqpy9/binary_conversion_of_numbers_8_bytes/,{},rpqpy9,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rpqpy9/binary_conversion_of_numbers_8_bytes/,False,,,6,1640621289,1,"Hello everyone, as a means to learn Haskell I've decided to write a very basic Web3 implementation in it, everything has been great so far but I'm having a really hard time trying to encode integers that are greater than 8 bytes because of the data types. I've come across some useful libraries but settled on using \`Data.Binary\`. Here's an example of something I want to do in Elixir

&amp;#x200B;

\`\`\`elixir

\# This just gives you a 32 bytes representation of that number

&lt;&lt;3214000000000000000000::signed-256&gt;&gt;

\&gt; &lt;&lt;0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 174, 59,

53, 195, 127, 137, 120, 0, 0&gt;&gt;

\`\`\`

On Haskell I've tried and it works with smaller numbers (Whatever fits into Int64), but with bigger ones:

\`\`\`haskell

B64.encode $ BL.toStrict $ runPut $ putInt64be 3214000000000000000000

&amp;#x200B;

&lt;interactive&gt;:61:48: warning: \[-Woverflowed-literals\]

Literal 3214000000000000000000 is out of the Int range -9223372036854775808..9223372036854775807

""AAB4iX/DNTs=""

\`\`\`

Which does not give me the correct representation since the value is out of bounds (I think the number it sticks with is \`4266531174538018816\` (\`maxBound :: Int64\`) rather than the one I passed)

&amp;#x200B;

So, I wanted to ask, what are my options to encode these numbers in the same way I can do on the first Elixir example? Is there a technique I'm missing?",True,False,False,haskell,t5_2qh36,68178,public,self,Binary conversion of numbers &gt; 8 bytes,0,[],1.0,https://www.reddit.com/r/haskell/comments/rpqpy9/binary_conversion_of_numbers_8_bytes/,all_ads,6,,,,,,,,,,,,,,,,,,,,
646.0,[],False,kuleshevich,,[],,text,t2_14t3l9,False,False,False,[],False,False,1640608307,self.haskell,https://www.reddit.com/r/haskell/comments/rpmjz6/ann_conduitaeson_parsing_large_or_even_infinite/,{},rpmjz6,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rpmjz6/ann_conduitaeson_parsing_large_or_even_infinite/,False,self,"{'enabled': False, 'images': [{'id': '8M_Z6821TtXx1sJQm99Ou8n2y404IOqFeyiGzRhIBcg', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/X-lg4eml-haInHCaYSYr3UH4DedrM0z9eKaanvFWgjY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0dbaf3d6daf74742af66c91273db7af7261cff95', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/X-lg4eml-haInHCaYSYr3UH4DedrM0z9eKaanvFWgjY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=5a8077986e792d0472dc407f86fcfccb1c71b7de', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/X-lg4eml-haInHCaYSYr3UH4DedrM0z9eKaanvFWgjY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2f276273d93db959e1b72d083a89a1c3d3678d44', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/X-lg4eml-haInHCaYSYr3UH4DedrM0z9eKaanvFWgjY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=5bdf765b1d5c7969cc39232dbea9f0828a271034', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/X-lg4eml-haInHCaYSYr3UH4DedrM0z9eKaanvFWgjY.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5f80eb37011715c4d6c8278453c1f0bf3abb6e49', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/X-lg4eml-haInHCaYSYr3UH4DedrM0z9eKaanvFWgjY.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=23178938e104e9a3f74f51c5b0311762b4254199', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/X-lg4eml-haInHCaYSYr3UH4DedrM0z9eKaanvFWgjY.jpg?auto=webp&amp;s=d0e7128fcdc63134db19ea61968af4ab2916f196', 'width': 1200}, 'variants': {}}]}",6,1640608317,1,"During last five years it was twice that I had to figure out how parse JSON in streaming fashion. I figured that I release a library, so I don't have to figure it out again some years in the future. I suspect this library might be useful to others too, since it is likely that I am not the only who ran into such problem. In my particular situation use cases were:

1. Parse a very large JSON file, contents of which was one very big top level dictionary with millions of key value pairs. My requirement was that I needed to modify each individual key/value pair without affecting memory overheaad.
2. Continuously parse an infinite stream of log entries from a service called logentries.com where each entry was formatted as JSON and delimited by a newline.


[`conduit-aeson`](https://github.com/lehins/conduit-aeson) is capable of handling both of these use cases and probably others as well. See haddock for examples and documentation. Here is one such example:

```
&gt;&gt;&gt; :set -XOverloadedStrings
&gt;&gt;&gt; :set -XTypeApplications
&gt;&gt;&gt; import Conduit
&gt;&gt;&gt; let input = ""{ \""foo\"": 1, \""bar\"": 2, \""baz\"": 3 }""
&gt;&gt;&gt; runConduit $ yield input .| conduitObject @String @Int .| printC
(""foo"",1)
(""bar"",2)
(""baz"",3)
```",True,False,False,haskell,t5_2qh36,68178,public,self,[ANN]: conduit-aeson - parsing large or even infinite JSON encoded streams,0,[],1.0,https://www.reddit.com/r/haskell/comments/rpmjz6/ann_conduitaeson_parsing_large_or_even_infinite/,all_ads,6,,,,,,,,,,,,,,,,,,,,
647.0,[],False,webNoob13,,[],,text,t2_7bmygxmk,False,False,False,[],False,False,1640601346,self.haskell,https://www.reddit.com/r/haskell/comments/rpkqqn/re_could_not_deduce_num_a_arising_from_the/,{},rpkqqn,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rpkqqn/re_could_not_deduce_num_a_arising_from_the/,False,,,6,1640601357,1,"```

\--median   
median :: (Ord a) =&gt; \[a\] -&gt; a   
median \[\] = 0  
median xs = sortedXs !! midOfArr   
 where sortedXs = sort xs  
midOfArr = (length xs) \`div\` 2 
```",True,False,False,haskell,t5_2qh36,68180,public,self,re: Could not deduce (Num a) arising from the literal ‘0’,0,[],1.0,https://www.reddit.com/r/haskell/comments/rpkqqn/re_could_not_deduce_num_a_arising_from_the/,all_ads,6,,,,,,,,,,,,,,,,,,,,
648.0,[],False,hipsydoodle,,[],,text,t2_3zxqfh3t,False,False,False,[],False,False,1640559657,self.haskell,https://www.reddit.com/r/haskell/comments/rp8648/is_haskell_suited_for_simulator_game_logic/,{},rp8648,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rp8648/is_haskell_suited_for_simulator_game_logic/,False,self,"{'enabled': False, 'images': [{'id': 'HTdCd_NraYeEBoARphmSsmwt_9_Q6AI4H3Ljjms25LE', 'resolutions': [{'height': 60, 'url': 'https://external-preview.redd.it/c42h0j0su1K81jJossi8XwfpU1C2wgzzk8fYQN1tJ48.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8aaf2f6f7afeec1f65744f9faf3df8c9cf166a1b', 'width': 108}, {'height': 121, 'url': 'https://external-preview.redd.it/c42h0j0su1K81jJossi8XwfpU1C2wgzzk8fYQN1tJ48.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=15859ada37bb2304d1926b5829c3f28bb4f0a0fc', 'width': 216}, {'height': 180, 'url': 'https://external-preview.redd.it/c42h0j0su1K81jJossi8XwfpU1C2wgzzk8fYQN1tJ48.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=8756a2aff7934db1f3aedad596c3f02afb3920af', 'width': 320}, {'height': 360, 'url': 'https://external-preview.redd.it/c42h0j0su1K81jJossi8XwfpU1C2wgzzk8fYQN1tJ48.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=16371f31592006985b24bfd63c0166e21c4a788b', 'width': 640}, {'height': 540, 'url': 'https://external-preview.redd.it/c42h0j0su1K81jJossi8XwfpU1C2wgzzk8fYQN1tJ48.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=59065fbd0d61ca33563177d0833c7e5081e2bc43', 'width': 960}, {'height': 607, 'url': 'https://external-preview.redd.it/c42h0j0su1K81jJossi8XwfpU1C2wgzzk8fYQN1tJ48.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=df91c667af7d543031602ebbe9719baf19911d22', 'width': 1080}], 'source': {'height': 900, 'url': 'https://external-preview.redd.it/c42h0j0su1K81jJossi8XwfpU1C2wgzzk8fYQN1tJ48.jpg?auto=webp&amp;s=592630603e56bda3ad196e16ccfb8e1db924c62e', 'width': 1600}, 'variants': {}}]}",6,1640559668,1,"I am new to Haskell. My motivation for learning is mostly curiosity. I’ve heard that it’s a different way of thinking about problems and solutions and I am giving it a try. 

I am also interested in building a simulation engine for game like [Majesty](https://www.rockpapershotgun.com/majesty-retrospective) (a medival game where all characters are autonomous). Would this be something that would make sense to do in Haskell? I’m not talking about the graphics or other components. As a noob it seems that each unit/node will carry a lot of state so maybe not. But I want to hear from someone who knows about Haskell",True,False,False,haskell,t5_2qh36,68171,public,self,Is Haskell suited for simulator game logic?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rp8648/is_haskell_suited_for_simulator_game_logic/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
649.0,[],False,ironj,,[],,text,t2_oq5dh,False,False,False,[],False,False,1640553294,self.haskell,https://www.reddit.com/r/haskell/comments/rp5wl6/ghci_error_messages/,{},rp5wl6,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rp5wl6/ghci_error_messages/,False,,,6,1640553304,1,"I'm studying Haskell with ""Learn you a Haskell for Great Good!""

I'm at page 30, where there's an example of an error message from ghci when running: `read ""4""`

I just noticed that if I run it in my ghci I get a totally different feedback: instead of the expected

""Ambiguous type variable 'a' in the contstraint:...""

I get a totally different response:

""\*\*\* Exception: [Prelude.read](https://Prelude.read): no parse""

I'm not sure if this is expected or if it's something related to my installation of Haskell.

For the record: I installed Haskell (version 9.0.1) through stack.",True,False,False,haskell,t5_2qh36,68170,public,self,ghci error messages,0,[],1.0,https://www.reddit.com/r/haskell/comments/rp5wl6/ghci_error_messages/,all_ads,6,,,,,,,,,,,,,,,,,,,,
650.0,[],False,bxsx0074,,[],,text,t2_56aqczhz,False,False,False,[],False,False,1640542839,self.haskell,https://www.reddit.com/r/haskell/comments/rp2k3q/how_to_write_generic_function_over_different/,{},rp2k3q,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rp2k3q/how_to_write_generic_function_over_different/,False,,,6,1640542850,1,"Hi, I am new to haskell so this might be a noob question.

Let's say I have a function

```haskell
sequenceMaybe :: [Maybe a] -&gt; Maybe [a]
```
This allows me to do things like
```haskell
sequenceMaybe [Just 1, Just 4]
```
where a is inferred to be Int. All is well

But what if I have an array like
```haskell
[Just 1, Just ""mystring""]
```
is there a way to write a function that will abstract over all these types? I only need a function that return true if any of the Maybes is Nothing, or false otherwise. So I do not need any constraint on the inner type.

Many thanks!",True,False,False,haskell,t5_2qh36,68163,public,self,How to write generic function over different types at the same time? (like dynamic dispatch in oop),0,[],1.0,https://www.reddit.com/r/haskell/comments/rp2k3q/how_to_write_generic_function_over_different/,all_ads,6,,,,,,,,,,,,,,,,,,,,
651.0,[],False,Strict-Soup,,[],,text,t2_2mh60h4r,False,False,False,[],False,False,1640540813,self.haskell,https://www.reddit.com/r/haskell/comments/rp1ubp/web_3_dapps_with_cardano/,{},rp1ubp,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rp1ubp/web_3_dapps_with_cardano/,False,,,6,1640540824,1,"Out of interest how many of you here are working on the cardano Blockchain given that only Haskell is the available language to develop with.

Btw I'm a .net developer in my day job, if I were to get into development for cardano are there any useful readings or links you could provide. 

I was going to look at the Haskell course on future learn. (I have developed with F# in my hobby projects)",True,False,False,haskell,t5_2qh36,68162,public,self,Web 3 dapps with cardano,0,[],1.0,https://www.reddit.com/r/haskell/comments/rp1ubp/web_3_dapps_with_cardano/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
652.0,[],False,xpika2,,[],,text,t2_5wl0a,False,False,False,[],False,False,1640534483,self.haskell,https://www.reddit.com/r/haskell/comments/rozoi1/what_happened_to_the_haskell_platform/,{},rozoi1,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rozoi1/what_happened_to_the_haskell_platform/,False,,,6,1640534493,1,"https://www.haskell.org/platform

redirects to 

[https://www.haskell.org/downloads/](https://www.haskell.org/downloads/)",True,False,False,haskell,t5_2qh36,68160,public,self,What happened to the Haskell platform?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rozoi1/what_happened_to_the_haskell_platform/,all_ads,6,,,,,,,,,,,,,,,,,,,,
653.0,[],False,vectflux,,[],,text,t2_kb6g4,False,False,False,[],False,False,1640501170,self.haskell,https://www.reddit.com/r/haskell/comments/rorf4v/how_to_know_if_aarch_native_is_being_used/,{},rorf4v,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rorf4v/how_to_know_if_aarch_native_is_being_used/,False,,,6,1640501181,1,"Hi all, I just used `ghcup` to update the GHC version to 9.2.1, which is the version that brings a lot of support for M1 processors if I understood correctly. Does this mean that the compiler already knows how to use ARM natively? 

The reason I am asking is just because there tends to be a choice when downloading an installation file of Intel vs Apple Silicon. Thanks everyone!",True,False,False,haskell,t5_2qh36,68155,public,self,How to know if aarch native is being used?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rorf4v/how_to_know_if_aarch_native_is_being_used/,all_ads,6,,,,,,,,,,,,,,,,,,,True,
654.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1640494882,self.haskell,https://www.reddit.com/r/haskell/comments/rops9l/advent_of_code_2021_day_26/,{},rops9l,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rops9l/advent_of_code_2021_day_26/,False,,,6,1640494894,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,68154,public,spoiler,Advent of Code 2021 day 26,0,[],1.0,https://www.reddit.com/r/haskell/comments/rops9l/advent_of_code_2021_day_26/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1640408475.045, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q', 't3_rf7pmo', 't3_rfzr5t', 't3_rgr0w5', 't3_rhj30g', 't3_ri9l7i', 't3_rizwa7', 't3_rjpd80', 't3_rkf69m', 't3_rl6pzb', 't3_rlxifb', 't3_rmnp4b', 't3_rnek6d', 't3_ro2uvb'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
655.0,[],False,teilchen010,,[],,text,t2_a8zynd1e,False,False,False,[],False,False,1640470479,self.haskell,https://www.reddit.com/r/haskell/comments/roint4/the_tuple_operator_whats_really_going_on/,{},roint4,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/roint4/the_tuple_operator_whats_really_going_on/,False,,,6,1640470489,1,"How is this actually happening?

    data (,) a b = (,) a b

At first sight, it seems circular. But then it works

    λ&gt; (,) 1 2
    (1,2)

I found [this](https://hackage.haskell.org/package/ghc-prim-0.8.0/docs/GHC-Tuple.html), but  then I don't follow how `Solo` is/becomes `(,)`. I understand that `(,)` is a product type since it's definitely not a sum type of any sort. Can someone point me to some details on the whole product type theory, as well as how the `(,)` data type definition results in the two arguments being surrounded in parens and separated by a comma, and treated as a tuple.",True,False,False,haskell,t5_2qh36,68147,public,self,"The tuple operator (,), what's really going on?",0,[],1.0,https://www.reddit.com/r/haskell/comments/roint4/the_tuple_operator_whats_really_going_on/,all_ads,6,,,,,,,,,,,,,,,,,,,,
656.0,[],False,bgamari,,[],,text,t2_7d9ta,False,False,False,[],False,False,1640470229,haskell.org,https://www.reddit.com/r/haskell/comments/roil6u/announcement_ghc_902_is_now_available/,{},roil6u,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/roil6u/announcement_ghc_902_is_now_available/,False,,,6,1640470240,1,,True,False,False,haskell,t5_2qh36,68147,public,default,[ANNOUNCEMENT] GHC 9.0.2 is now available!,0,[],1.0,https://www.haskell.org/ghc/blog/20211225-ghc-9.0.2-released.html,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://www.haskell.org/ghc/blog/20211225-ghc-9.0.2-released.html,,,,,,,,,,,,,,,,,
657.0,[],False,korejou,,[],,text,t2_hloi74nz,False,False,False,[],False,False,1640446775,self.haskell,https://www.reddit.com/r/haskell/comments/robv92/just_change_the_damn_variable_from_true_to_false/,{},robv92,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/robv92/just_change_the_damn_variable_from_true_to_false/,False,,,6,1640446786,1,"Screw you.

\&gt;Posting to reddit  
\&gt;1. Remember the human

you didn't do that. Screw you.",True,False,False,haskell,t5_2qh36,68138,public,self,"Just change the damn variable from True to False you fuckshit of a language when I go Blah = False after initializing it anywhere, = is a function to me. It assigns something new.",0,[],1.0,https://www.reddit.com/r/haskell/comments/robv92/just_change_the_damn_variable_from_true_to_false/,all_ads,6,,,,,,,,,,,,,,,,,,,,
658.0,[],False,_jgt,,[],,text,t2_nj5yv,False,False,False,[],False,False,1640446482,jezenthomas.com,https://www.reddit.com/r/haskell/comments/robsic/fast_counting_with_postgresql_and_haskell/,{},robsic,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/robsic/fast_counting_with_postgresql_and_haskell/,False,,,6,1640446492,1,,True,False,False,haskell,t5_2qh36,68138,public,default,Fast Counting with PostgreSQL and Haskell,0,[],1.0,https://jezenthomas.com/fast-counting-with-postgresql-and-haskell/,all_ads,6,,,https://jezenthomas.com/fast-counting-with-postgresql-and-haskell/,,,,,,,,,,,,,,,,,
659.0,[],False,DrearyLisper,,[],,text,t2_gjk1zki1,False,False,False,[],False,False,1640442544,github.com,https://www.reddit.com/r/haskell/comments/roaqyg/my_solutions_for_advent_of_code_in_haskell_very/,{},roaqyg,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/roaqyg/my_solutions_for_advent_of_code_in_haskell_very/,False,link,"{'enabled': False, 'images': [{'id': 'xVzb2PAgBZ36eCOVZBmGbpE4d8hdFu6OOfUr838JHUg', 'resolutions': [{'height': 99, 'url': 'https://external-preview.redd.it/Qxpvjmv_c7-cI-4zfFdBJfrEnIfKBckCvN9BB8JSZ-Q.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d5ebb1329bf5dbcc9ea148b7868801e9e84cb698', 'width': 108}, {'height': 199, 'url': 'https://external-preview.redd.it/Qxpvjmv_c7-cI-4zfFdBJfrEnIfKBckCvN9BB8JSZ-Q.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2c8e35fc9a60cd32e0d31aa5f62b7644833bd482', 'width': 216}, {'height': 294, 'url': 'https://external-preview.redd.it/Qxpvjmv_c7-cI-4zfFdBJfrEnIfKBckCvN9BB8JSZ-Q.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c0158943ba96ab7e468bbb794cdcb91e2ddcb142', 'width': 320}, {'height': 589, 'url': 'https://external-preview.redd.it/Qxpvjmv_c7-cI-4zfFdBJfrEnIfKBckCvN9BB8JSZ-Q.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d9ade57d030b096eb677a60952529078864db086', 'width': 640}, {'height': 884, 'url': 'https://external-preview.redd.it/Qxpvjmv_c7-cI-4zfFdBJfrEnIfKBckCvN9BB8JSZ-Q.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5f91c62dd53ff18965463b76697f6e6ef7e4c768', 'width': 960}, {'height': 995, 'url': 'https://external-preview.redd.it/Qxpvjmv_c7-cI-4zfFdBJfrEnIfKBckCvN9BB8JSZ-Q.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=53f16d62766ee1b30f2e6180a8a204516de96293', 'width': 1080}], 'source': {'height': 1218, 'url': 'https://external-preview.redd.it/Qxpvjmv_c7-cI-4zfFdBJfrEnIfKBckCvN9BB8JSZ-Q.jpg?auto=webp&amp;s=460643679a19cca0ff6d71ededa0b17e7284ab0b', 'width': 1322}, 'variants': {}}]}",6,1640442555,1,,True,False,False,haskell,t5_2qh36,68138,public,default,My solutions for Advent Of Code in Haskell. Very proud of myself!,0,[],1.0,https://github.com/DrearyLisper/aoc-2021,all_ads,6,,,https://github.com/DrearyLisper/aoc-2021,128.0,140.0,,automod_filtered,,,,,,,,,,,,,
660.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1640408474,self.haskell,https://www.reddit.com/r/haskell/comments/ro2uvb/advent_of_code_2021_day_25/,{},ro2uvb,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ro2uvb/advent_of_code_2021_day_25/,False,,,6,1640408485,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,68127,public,spoiler,Advent of Code 2021 day 25,0,[],1.0,https://www.reddit.com/r/haskell/comments/ro2uvb/advent_of_code_2021_day_25/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1640322071.329, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q', 't3_rf7pmo', 't3_rfzr5t', 't3_rgr0w5', 't3_rhj30g', 't3_ri9l7i', 't3_rizwa7', 't3_rjpd80', 't3_rkf69m', 't3_rl6pzb', 't3_rlxifb', 't3_rmnp4b', 't3_rnek6d'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
661.0,[],False,throwoutsjdfk,,[],,text,t2_e11aic7f,False,False,False,[],False,False,1640377193,self.haskell,https://www.reddit.com/r/haskell/comments/rnu1b3/when_running_ghci_i_receive_a_weird_warningmessage/,{},rnu1b3,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rnu1b3/when_running_ghci_i_receive_a_weird_warningmessage/,False,,,6,1640377203,1,"Please bear with me, I'm only starting to learn haskell. (Note: My machine is a M1 Macbook Air)

Recently, after following a guide and installing haskell and necessary stuff from [here](https://www.haskell.org/downloads/), I tried to compile a small program and found out that I needed to install LLVM, I did it and by trial-and-error I managed to get everything working, but though it works, if I run GHCi I get this message.

    % ghci
    
    GHCi, version 8.10.7: https://www.haskell.org/ghc/  :? for help
    
    objc[67464]: Class AMSupportURLConnectionDelegate is implemented in both /usr/lib/libamsupport.dylib (0x1f8097130) and /Library/Apple/System/Library/PrivateFrameworks/MobileDevice.framework/Versions/A/MobileDevice (0x107c742c8). One of the two will be used. Which one is undefined.
    objc[67464]: Class AMSupportURLSession is implemented in both /usr/lib/libamsupport.dylib (0x1f8097180) and /Library/Apple/System/Library/PrivateFrameworks/MobileDevice.framework/Versions/A/MobileDevice (0x107c74318). One of the two will be used. Which one is undefined.

Do you know what's responsible for it? What should I do?",True,False,False,haskell,t5_2qh36,68117,public,self,"When running GHCi, I receive a weird warning/message",0,[],1.0,https://www.reddit.com/r/haskell/comments/rnu1b3/when_running_ghci_i_receive_a_weird_warningmessage/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
662.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1640373264,self.haskell,https://www.reddit.com/r/haskell/comments/rnssrw/text20_with_utf8_is_finally_released/,{},rnssrw,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rnssrw/text20_with_utf8_is_finally_released/,False,,,6,1640373274,1,"I'm happy to announce that `text-2.0` with UTF-8 underlying representation has been finally released: [https://hackage.haskell.org/package/text-2.0](https://hackage.haskell.org/package/text-2.0). The release is identical to `rc2`, circulated [earlier](https://www.reddit.com/r/haskell/comments/rdj1fv/text20rc2_with_utf8_underlying_representation_is/).

Changelog: [https://hackage.haskell.org/package/text-2.0/changelog](https://hackage.haskell.org/package/text-2.0/changelog)

Please give it a try. Here is a `cabal.project` template: [https://gist.github.com/Bodigrim/9834568f075be36a1c65e7aaba6a15db](https://gist.github.com/Bodigrim/9834568f075be36a1c65e7aaba6a15db)

This work would not be complete without a blazingly-fast UTF-8 validator, submitted by Koz Ross into [`bytestring-0.11.2.0`](https://hackage.haskell.org/package/bytestring-0.11.2.0/docs/Data-ByteString.html#v:isValidUtf8), whose contributions were sourced via HF as an in-kind donation from MLabs. I would like to thank Emily Pillmore for encouraging me to take on this project, helping with the proposal and permissions. I'm grateful to my fellow `text` maintainers, who've been carefully reviewing my work in course of the last six months, as well as helpful and responsive maintainers of downstream packages and GHC developers. Thanks all, it was a pleasant journey!",True,False,False,haskell,t5_2qh36,68117,public,self,text-2.0 with UTF8 is finally released!,0,[],1.0,https://www.reddit.com/r/haskell/comments/rnssrw/text20_with_utf8_is_finally_released/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
663.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1640372305,self.haskell,https://www.reddit.com/r/haskell/comments/rnshzj/clc_election_january_2022/,{},rnshzj,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rnshzj/clc_election_january_2022/,False,,,6,1640372315,1,"The Core Libraries Committee is seeking for a new member!

## Who should apply?

Anyone who meets the following criteria should apply:

* Candidates should have enough bandwidth to review merge requests to `base` on a semi-frequent basis (2 to 3 per month), and sustain this for their 3 years term in a healthy manner.
* Candidates should be able to contribute opinions and analysis to issues raised by the community as a part of the CLC proposal process on a semi-frequent basis (2 to 3 per month).
* Candidates should be good communicators, and at least be able to articulate to the CLC team when they will be available vs. unavailable.
* Candidates should be productive, and be able to follow through on merge requests and conversations to their completion in a diligent and timely manner.

We encourage any and all who satisfy these requirements to apply. Please note that we are not looking for the biggest galaxy brain in the room - quite the opposite. We are looking for productive, motivated individuals who want to help support the ecosystem that we love. As such, we hope to build a broad sample of the community.

Candidates, who stand for CLC Elections back in September, are most welcome to apply again.

## How can I apply?

To apply for one of these positions, send an email to [core-libraries-committee@haskell.org](mailto:core-libraries-committee@haskell.org) that consists of the following data:

* The header ""CLC Election January 2022 - {your name}"".
* Why you think you’re a good fit given the above criteria.
* If applicable, please point us to some code you’ve written.

Please apply before Feb 1.",True,False,False,haskell,t5_2qh36,68117,public,self,CLC Election January 2022,0,[],1.0,https://www.reddit.com/r/haskell/comments/rnshzj/clc_election_january_2022/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
664.0,[],False,davidfeuer,,[],,text,t2_tw66w,False,False,False,[],False,False,1640368609,self.haskell,https://www.reddit.com/r/haskell/comments/rnrck0/parallel_list_comprehensions_are_sometimes/,{},rnrck0,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rnrck0/parallel_list_comprehensions_are_sometimes/,False,,,6,1640368619,1,"I wasn't very happy with [the way parallel list comprehensions are desugared](https://ghc.gitlab.haskell.org/ghc/doc/users_guide/exts/parallel_list_comprehensions.html), so [I filed a ticket](https://gitlab.haskell.org/ghc/ghc/-/issues/20850) suggesting an alternative approach. It wasn't very warmly received, unfortunately. So I thought about it a little more, and realized that [the desugaring is totally broken in some cases](https://gitlab.haskell.org/ghc/ghc/-/issues/20855).",True,False,False,haskell,t5_2qh36,68116,public,self,Parallel list comprehensions are sometimes desugared wrong,0,[],1.0,https://www.reddit.com/r/haskell/comments/rnrck0/parallel_list_comprehensions_are_sometimes/,all_ads,6,,,,,,,,,,,,,,,,,,,,
665.0,[],False,sccrstud92,,[],,text,t2_7v2vu,False,False,False,[],False,False,1640358540,self.haskell,https://www.reddit.com/r/haskell/comments/rno57n/how_can_a_library_provide_streams_to_work_with/,{},rno57n,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rno57n/how_can_a_library_provide_streams_to_work_with/,False,,,6,1640358551,1,"When providing a type to users, a library can also provide lenses for that type without actually depending on `lens`. This is because `Lens` is a type synonym, so you can simply write a function with the correct signature and export it, to be used like a Lens. And even though there is a wide variety of lens packages (`lens`, `optics`, `microlens`, etc.) such a function is likely to work with most of them.

This is all preamble to my actual question: how can a library do the same for streams? There are a number of streaming libraries out there (`conduit`, `pipes`, `streaming`, `streamly`, etc.) and a hypothetical library author would might like to provide streams or stream combinators to users that are compatible with as many of them as possible, but don't explicitly rely on those libraries. Does anyone have any information about what this could look like (assuming its even possible)?",True,False,False,haskell,t5_2qh36,68120,public,self,How can a library provide streams to work with it's types without depending on a particular streaming library?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rno57n/how_can_a_library_provide_streams_to_work_with/,all_ads,6,,,,,,,,,,,,,,,,,,,,
666.0,[],False,kate_galkina,,[],,text,t2_h5bgyrcr,False,False,False,[],False,False,1640358461,typeable.io,https://www.reddit.com/r/haskell/comments/rno4az/why_do_we_need_transpilation_into_javascript/,{},rno4az,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rno4az/why_do_we_need_transpilation_into_javascript/,False,link,"{'enabled': False, 'images': [{'id': 'mzu--dvsCZQh5QfhPrst2fEn6_5lbx482nDOPl6rvtE', 'resolutions': [{'height': 60, 'url': 'https://external-preview.redd.it/eZRnRnXM8daOwL0L0ACl1V-STBI2GtHyea0Uk0UM8jE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=bfda3e8fbaadddfe9f91dec33914175e33bcecb5', 'width': 108}, {'height': 121, 'url': 'https://external-preview.redd.it/eZRnRnXM8daOwL0L0ACl1V-STBI2GtHyea0Uk0UM8jE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=728a02e43e00375daf8f38091d9571badd2944da', 'width': 216}, {'height': 179, 'url': 'https://external-preview.redd.it/eZRnRnXM8daOwL0L0ACl1V-STBI2GtHyea0Uk0UM8jE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5e3ea2983e133ee145d1e46977336b2e0b036563', 'width': 320}, {'height': 359, 'url': 'https://external-preview.redd.it/eZRnRnXM8daOwL0L0ACl1V-STBI2GtHyea0Uk0UM8jE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=a96ce87c9e80090e00b8ccbb97c1269926ecb882', 'width': 640}, {'height': 539, 'url': 'https://external-preview.redd.it/eZRnRnXM8daOwL0L0ACl1V-STBI2GtHyea0Uk0UM8jE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=9d75d902e67e8e8ff660dc1230f4067e21afe90e', 'width': 960}], 'source': {'height': 580, 'url': 'https://external-preview.redd.it/eZRnRnXM8daOwL0L0ACl1V-STBI2GtHyea0Uk0UM8jE.jpg?auto=webp&amp;s=831f66920b55708f20ead286381f760d770da043', 'width': 1032}, 'variants': {}}]}",6,1640358471,1,,True,False,False,haskell,t5_2qh36,68120,public,default,Why Do We Need Transpilation Into JavaScript?,0,[],1.0,https://typeable.io/blog/2021-04-05-js-transpilation.html,all_ads,6,,,https://typeable.io/blog/2021-04-05-js-transpilation.html,78.0,140.0,,,,,,,,,,,,,,,
667.0,[],False,marullos_trahaniotis,,[],,text,t2_im7pj3n,False,False,False,[],False,False,1640356285,self.haskell,https://www.reddit.com/r/haskell/comments/rnngwt/using_switch_joy_cons_in_glossy_apecs_game/,{},rnngwt,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rnngwt/using_switch_joy_cons_in_glossy_apecs_game/,False,self,"{'enabled': False, 'images': [{'id': 'lsGZOJY53LHlTdxn8-6yBSqR-60vW9mCg6PLM8w_UEg', 'resolutions': [{'height': 30, 'url': 'https://external-preview.redd.it/KdZMUeVVwLmHe_SQvVK-jNUn1g9IuTG-AHjabmiML9M.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1fecbb419d9d8861077a0580600c54e3513d49df', 'width': 108}, {'height': 61, 'url': 'https://external-preview.redd.it/KdZMUeVVwLmHe_SQvVK-jNUn1g9IuTG-AHjabmiML9M.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=904f9b4a5ff162f01ca7de66b62067cbe9167a5d', 'width': 216}, {'height': 91, 'url': 'https://external-preview.redd.it/KdZMUeVVwLmHe_SQvVK-jNUn1g9IuTG-AHjabmiML9M.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b19fb2dda0782bc9658c7b97604ca7868f25092b', 'width': 320}, {'height': 183, 'url': 'https://external-preview.redd.it/KdZMUeVVwLmHe_SQvVK-jNUn1g9IuTG-AHjabmiML9M.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=6887cc5b58f90797c0b1d564715481990c6a2327', 'width': 640}, {'height': 275, 'url': 'https://external-preview.redd.it/KdZMUeVVwLmHe_SQvVK-jNUn1g9IuTG-AHjabmiML9M.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=77311e956812324e552cc5e8231dda49a3d7463d', 'width': 960}, {'height': 309, 'url': 'https://external-preview.redd.it/KdZMUeVVwLmHe_SQvVK-jNUn1g9IuTG-AHjabmiML9M.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c8045a65c6263f7c7df85b8d99d5581230b5a2a1', 'width': 1080}], 'source': {'height': 550, 'url': 'https://external-preview.redd.it/KdZMUeVVwLmHe_SQvVK-jNUn1g9IuTG-AHjabmiML9M.jpg?auto=webp&amp;s=aeecb8a11539132590fd2cfdb73c57c6f331a3f8', 'width': 1920}, 'variants': {}}]}",6,1640356295,1,"**TL;DR:** Game made with apecs and gloss crashes when trying to read input from Nintendo Switch.

Inspired by this [post](https://www.reddit.com/r/haskellgamedev/comments/ggd49z/i_remade_the_unity_2d_roguelike_tutorial_project/), I am recreating the [Unity 2D tutorial](https://learn.unity.com/project/2d-roguelike-tutorial) in Haskell using [apecs](https://hackage.haskell.org/package/apecs) and [apecs-gloss](https://hackage.haskell.org/package/apecs-gloss). I am nearly done: The graphics are rendered correctly, the levels are generated appropriately, the player responds to keyboard input, etc.

As an extra, I want to be able to control the game with the [Nintendo Switch joy cons](https://hackage.haskell.org/package/switch). I have successfully connected the joy cons and I'm reading the input in the stepping function (6th argument of [play](https://hackage.haskell.org/package/apecs-gloss-0.2.4/docs/Apecs-Gloss.html#v:play) \- called periodically) instead of the event handling function (5th argument), as the latter only recognizes keyboard and mouse input. Here is an excerpt of what I'm doing in the step function, the full details of  handleSwitch can be seen [here](https://github.com/montetzouma/Unity2D/blob/Concurrency/src/HandleInput/Switch.hs) (essentially read input if the buttons are pressed when the stepping function is called, interpret the input and update the scene).

    stepGame :: Float -&gt; C.System' ()
    stepGame dT = do 
      ... 
      ASTM.forkSys (Switch.handleSwitch dT) 
      ...

Unfortunately, the player may respond to the first few inputs  but then the game crashes. I thought it was a race hazard so I wrapped `handleSwitch` in [`forkSys`](https://hackage.haskell.org/package/apecs-stm-0.1.5/docs/Apecs-STM.html#v:forkSys) (creates a new  thread for switch input) but the issue persists.

Any ideas on what might be going wrong and how to fix this?  Any help would be greatly appreciated!",True,False,False,haskell,t5_2qh36,68118,public,self,Using Switch joy cons in glossy apecs game,0,[],1.0,https://www.reddit.com/r/haskell/comments/rnngwt/using_switch_joy_cons_in_glossy_apecs_game/,all_ads,6,,,,,,,,,,,,,,,,,,,,
668.0,[],False,callbyneed,,[],,text,t2_3zw08a1d,False,False,False,[],False,False,1640346132,hackage.haskell.org,https://www.reddit.com/r/haskell/comments/rnkof1/ann_doctestparallel_isolate_and_speed_up_your/,{},rnkof1,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rnkof1/ann_doctestparallel_isolate_and_speed_up_your/,False,,,6,1640346143,1,,True,False,False,haskell,t5_2qh36,68117,public,default,[ANN] doctest-parallel: isolate and speed up your doctests,0,[],1.0,https://hackage.haskell.org/package/doctest-parallel,all_ads,6,,,https://hackage.haskell.org/package/doctest-parallel,,,,,,,,,,,,,,,,,
669.0,[],False,JustADirtyLurker,,[],,text,t2_65mmb,False,False,False,[],False,False,1640334840,self.haskell,https://www.reddit.com/r/haskell/comments/rnhz7c/noob_question_running_on_win10/,{},rnhz7c,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rnhz7c/noob_question_running_on_win10/,False,,,6,1640334851,1,"Hi all, 
First experience running Haskell, I installed the Stack installer for windows to a Win10 core i5 (late 2019) laptop with 8 gigs of ram. I then proceeded to create an 'hello world' project - - stack downloaded GHC 8.10 and created a cabal file (very confused between cabal and stack differences but, I'll go with the flow). The machine behaves well with other programing platform, however, with Haskell/stack it seems very slow... I'm running `stack build` and `stack test` and it takes up to 1 minute in both cases if there is any change to compile (without recompilation, still takes about 30 secs). Was just wondering if this is expected?",True,False,False,haskell,t5_2qh36,68116,public,self,[noob question] running on win10,0,[],1.0,https://www.reddit.com/r/haskell/comments/rnhz7c/noob_question_running_on_win10/,all_ads,6,,,,,,,,,,,,,,,,,,,,
670.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1640322071,self.haskell,https://www.reddit.com/r/haskell/comments/rnek6d/advent_of_code_2021_day_24/,{},rnek6d,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rnek6d/advent_of_code_2021_day_24/,False,,,6,1640322081,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,68118,public,spoiler,Advent of Code 2021 day 24,0,[],1.0,https://www.reddit.com/r/haskell/comments/rnek6d/advent_of_code_2021_day_24/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1640235669.218, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q', 't3_rf7pmo', 't3_rfzr5t', 't3_rgr0w5', 't3_rhj30g', 't3_ri9l7i', 't3_rizwa7', 't3_rjpd80', 't3_rkf69m', 't3_rl6pzb', 't3_rlxifb', 't3_rmnp4b'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
671.0,[],False,pedroabreu,,[],,text,t2_kmn6s,False,False,False,[],False,False,1640297370,typetheoryforall.com,https://www.reddit.com/r/haskell/comments/rn6p1j/type_theory_forall_podcast_13_cc_emacs_haskell/,{},rn6p1j,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rn6p1j/type_theory_forall_podcast_13_cc_emacs_haskell/,False,link,"{'enabled': False, 'images': [{'id': 'a5Nag2K6qQhD0ml9arMNlp-zdUOeOwwM7DqTHgRTtXk', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=86efa8695cdee9b6f828d3c42f3dec5ba598f76e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0d74cc2f1ef8f8a592b91169c361280e53d23dbf', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9ef33847e505fe8a4ef996da0f34af643357e8a9', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=860388e6d4645186d82bf240728124b8649b7c1a', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=0e276cf0a49996906efd31b5a4db7939b74e68ee', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3052a6492555d8602513b501d80d6983bc6d6d1b', 'width': 1080}], 'source': {'height': 1400, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?auto=webp&amp;s=a4d124cda07e750b1912202dbf480cc29b43c156', 'width': 1400}, 'variants': {}}]}",6,1640297381,1,,True,False,False,haskell,t5_2qh36,68111,public,default,"Type Theory Forall Podcast #13 - C/C++, Emacs, Haskell, and Coq. The Journey (John Wiegley)",0,[],1.0,"https://www.typetheoryforall.com/2021/12/23/13-C-C++,-Emacs,-Haskell,-and-Coq,-The-Journey-(John-Wiegley).html#ef147f72",all_ads,6,,,"https://www.typetheoryforall.com/2021/12/23/13-C-C++,-Emacs,-Haskell,-and-Coq,-The-Journey-(John-Wiegley).html#ef147f72",140.0,140.0,,,,,t3_rn6omd,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'pedroabreu', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_kmn6s', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1640297335.0, 'created_utc': 1640297335.0, 'discussion_type': None, 'distinguished': None, 'domain': 'typetheoryforall.com', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 'rn6omd', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': False, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_rn6omd', 'no_follow': True, 'num_comments': 0, 'num_crossposts': 2, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/ProgrammingLanguages/comments/rn6omd/type_theory_forall_podcast_13_cc_emacs_haskell/', 'pinned': False, 'post_hint': 'link', 'preview': {'enabled': False, 'images': [{'id': 'a5Nag2K6qQhD0ml9arMNlp-zdUOeOwwM7DqTHgRTtXk', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=86efa8695cdee9b6f828d3c42f3dec5ba598f76e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0d74cc2f1ef8f8a592b91169c361280e53d23dbf', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9ef33847e505fe8a4ef996da0f34af643357e8a9', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=860388e6d4645186d82bf240728124b8649b7c1a', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=0e276cf0a49996906efd31b5a4db7939b74e68ee', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3052a6492555d8602513b501d80d6983bc6d6d1b', 'width': 1080}], 'source': {'height': 1400, 'url': 'https://external-preview.redd.it/gZy0Etuaf12oMOz1u3V1BuvAIXKBbMWQL5y1EH34qJw.jpg?auto=webp&amp;s=a4d124cda07e750b1912202dbf480cc29b43c156', 'width': 1400}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 1, 'secure_media': None, 'secure_media_embed': {}, 'selftext': '', 'selftext_html': None, 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'ProgrammingLanguages', 'subreddit_id': 't5_2qi8m', 'subreddit_name_prefixed': 'r/ProgrammingLanguages', 'subreddit_subscribers': 70373, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'default', 'thumbnail_height': 140, 'thumbnail_width': 140, 'title': 'Type Theory Forall Podcast #13 - C/C++, Emacs, Haskell, and Coq. The Journey (John Wiegley)', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 1, 'upvote_ratio': 1.0, 'url': 'https://www.typetheoryforall.com/2021/12/23/13-C-C++,-Emacs,-Haskell,-and-Coq,-The-Journey-(John-Wiegley).html#ef147f72', 'url_overridden_by_dest': 'https://www.typetheoryforall.com/2021/12/23/13-C-C++,-Emacs,-Haskell,-and-Coq,-The-Journey-(John-Wiegley).html#ef147f72', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
672.0,[],False,ilikebrckhmptn,,[],,text,t2_1anaklfg,False,False,False,[],False,False,1640296438,self.haskell,https://www.reddit.com/r/haskell/comments/rn6d3e/foldr_const_a_15_why_doesnt_this_work/,{},rn6d3e,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rn6d3e/foldr_const_a_15_why_doesnt_this_work/,False,,,6,1640296449,1,[removed],True,False,False,haskell,t5_2qh36,68110,public,self,foldr const 'a' [1..5] - why doesn't this work?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rn6d3e/foldr_const_a_15_why_doesnt_this_work/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
673.0,[],False,imihnevich,,[],,text,t2_gtbhi7wu,False,False,False,[],False,False,1640293617,self.haskell,https://www.reddit.com/r/haskell/comments/rn5dcu/can_someone_explain_free_monads/,{},rn5dcu,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rn5dcu/can_someone_explain_free_monads/,False,,,6,1640293628,1,[removed],True,False,False,haskell,t5_2qh36,68109,public,self,Can someone explain Free Monads?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rn5dcu/can_someone_explain_free_monads/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
674.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1640287515,haskellweekly.news,https://www.reddit.com/r/haskell/comments/rn37o8/issue_295_haskell_weekly_newsletter/,{},rn37o8,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rn37o8/issue_295_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1640287525,1,,True,False,False,haskell,t5_2qh36,68108,public,default,Issue 295 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/295.html,all_ads,6,,,https://haskellweekly.news/issue/295.html,140.0,140.0,,,,,,,,,,,,,,,
675.0,[],False,hipsydoodle,,[],,text,t2_3zxqfh3t,False,False,False,[],False,False,1640285297,self.haskell,https://www.reddit.com/r/haskell/comments/rn2ebm/is_learnyouahaskell_outdated/,{},rn2ebm,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rn2ebm/is_learnyouahaskell_outdated/,False,,,6,1640285308,1,"Hello. Over the last couple of weeks I asked 2 questions on this sub and both the times I was asked which book I was reading and also that it may be outdated. 

[Q1](https://www.reddit.com/r/haskell/comments/rkle95/num_show_eq/)

[Q2](https://www.reddit.com/r/haskell/comments/rit8ce/t_elem/)

http://learnyouahaskell.com/ is a resource listed in the sidebar of this sub. Is this book really outdated? If so what other similar book would you recommend? I come from a mobile development background (Swift) and for the format of this book makes it very approachable for me.",True,False,False,haskell,t5_2qh36,68107,public,self,is learnyouahaskell outdated?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rn2ebm/is_learnyouahaskell_outdated/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
676.0,[],False,Serokell,,[],,text,t2_fvl0rbg,False,False,False,[],False,False,1640257176,youtube.com,https://www.reddit.com/r/haskell/comments/rmt93r/haskell_operators_in_10_minutes/,{},rmt93r,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rmt93r/haskell_operators_in_10_minutes/,False,rich:video,"{'enabled': False, 'images': [{'id': '-OxwkGwjgWGnPM6iSK4NHqMhx819G1ma5uy3hbfuMs4', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/Wga5Ol9oYuUgKdYCpLjWuCWewQmQ-FaMFwBJcZuPfII.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=db59e4619b33b1d45e6110adef58f4752adbb984', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/Wga5Ol9oYuUgKdYCpLjWuCWewQmQ-FaMFwBJcZuPfII.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1d81d2f9b5b9153ed9ed5b32e39fe19326ccc44a', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/Wga5Ol9oYuUgKdYCpLjWuCWewQmQ-FaMFwBJcZuPfII.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f3d43d9cd0ac5d8f77ae9f35ce63424471168c84', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/Wga5Ol9oYuUgKdYCpLjWuCWewQmQ-FaMFwBJcZuPfII.jpg?auto=webp&amp;s=c0bee7836a0450989ce1332d18f6b8945f8df836', 'width': 480}, 'variants': {}}]}",6,1640257186,1,,True,False,False,haskell,t5_2qh36,68107,public,image,Haskell Operators in 10 Minutes,0,[],1.0,https://www.youtube.com/watch?v=O1K8EMiPEVE,all_ads,6,be2af704-5664-11eb-8e65-0ecd290c3053,video,https://www.youtube.com/watch?v=O1K8EMiPEVE,105.0,140.0,,,,,,,"{'oembed': {'author_name': 'Serokell', 'author_url': 'https://www.youtube.com/c/Serokell', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/O1K8EMiPEVE?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/O1K8EMiPEVE/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Operators in 10 Minutes – Haskell Tutorial – Daniel Rogozin', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/O1K8EMiPEVE?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'Serokell', 'author_url': 'https://www.youtube.com/c/Serokell', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/O1K8EMiPEVE?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/O1K8EMiPEVE/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Operators in 10 Minutes – Haskell Tutorial – Daniel Rogozin', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/O1K8EMiPEVE?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/rmt93r', 'scrolling': False, 'width': 356}",,,,,
677.0,[],False,kindaro,,[],,text,t2_pcbvq,False,False,False,[],False,False,1640250072,github.com,https://www.reddit.com/r/haskell/comments/rmrjup/cabalprettify_prettify_your_cabal_package/,{},rmrjup,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rmrjup/cabalprettify_prettify_your_cabal_package/,False,link,"{'enabled': False, 'images': [{'id': '0JT36bYMfFOoVaT81PP9v7h9h4HajmIVOVKIPMGxZGQ', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/NxfVV7HmK0l9JUM0OvLpQ2mNAVX1RvhybNGpc0cuBVM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=be33bebf5e5d5d5f0231121d06c53463d2cd4d30', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/NxfVV7HmK0l9JUM0OvLpQ2mNAVX1RvhybNGpc0cuBVM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=26d7d3ab8e2edd98e272809c9cb390cb35291117', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/NxfVV7HmK0l9JUM0OvLpQ2mNAVX1RvhybNGpc0cuBVM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f1b649e2d343e880ab8ba303dfd25319bf887b81', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/NxfVV7HmK0l9JUM0OvLpQ2mNAVX1RvhybNGpc0cuBVM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=dc111fbb525b7e357795805061a6e2f9e1424ab9', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/NxfVV7HmK0l9JUM0OvLpQ2mNAVX1RvhybNGpc0cuBVM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b7d6f934bb59a45cd3d1de015b8df3cc93371e44', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/NxfVV7HmK0l9JUM0OvLpQ2mNAVX1RvhybNGpc0cuBVM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=e300013bcd4d314895e5a8cc2f5c04eef7529316', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/NxfVV7HmK0l9JUM0OvLpQ2mNAVX1RvhybNGpc0cuBVM.jpg?auto=webp&amp;s=e71d08a7dc0007c9272fdb05941ed7bcfe441bf0', 'width': 1200}, 'variants': {}}]}",6,1640250083,1,,True,False,False,haskell,t5_2qh36,68105,public,default,`cabal-prettify`: Prettify your Cabal package configuration files!,0,[],1.0,https://github.com/kindaro/cabal-prettify/tree/master,all_ads,6,,,https://github.com/kindaro/cabal-prettify/tree/master,70.0,140.0,,,,,,,,,,,,,,,
678.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1640235668,self.haskell,https://www.reddit.com/r/haskell/comments/rmnp4b/advent_of_code_2021_day_23/,{},rmnp4b,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rmnp4b/advent_of_code_2021_day_23/,False,,,6,1640235679,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,68102,public,spoiler,Advent of Code 2021 day 23,0,[],1.0,https://www.reddit.com/r/haskell/comments/rmnp4b/advent_of_code_2021_day_23/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1640149271.242, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q', 't3_rf7pmo', 't3_rfzr5t', 't3_rgr0w5', 't3_rhj30g', 't3_ri9l7i', 't3_rizwa7', 't3_rjpd80', 't3_rkf69m', 't3_rl6pzb', 't3_rlxifb'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
679.0,[],False,gpugpugpu,,[],,text,t2_ag2s3z4q,False,False,False,[],False,False,1640214735,self.haskell,https://www.reddit.com/r/haskell/comments/rmhea2/monads_leading_to_imperative_code_issues/,{},rmhea2,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rmhea2/monads_leading_to_imperative_code_issues/,False,,,6,1640214746,1,"Has anyone ever overused monads and created bugs because of using them in an imperative style? If so, how did you get past that stage of your learning process? How can I try to use Monads more safely?

I feel like I went full circle with my FP understanding: Noob -&gt; Understands some -&gt; Understands Monads and has mind blown -&gt; Uses them -&gt; Noob",True,False,False,haskell,t5_2qh36,68095,public,self,Monads Leading to Imperative Code Issues,0,[],1.0,https://www.reddit.com/r/haskell/comments/rmhea2/monads_leading_to_imperative_code_issues/,all_ads,6,,,,,,,,,,,,,,,,,,,,
680.0,[],False,Environmental_Rub_18,,[],,text,t2_8bdcozan,False,False,False,[],False,False,1640197169,self.haskell,https://www.reddit.com/r/haskell/comments/rmb96d/learning_haskell/,{},rmb96d,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rmb96d/learning_haskell/,False,,,6,1640197180,1,"hey everyone, 
I’m new here so idk if this has already been addressed in earlier posts but I’m a comp sci minor and I’m taking Haskell in the spring. I’ve taken python which I found decent and enjoyable but I’ve heard mixed reviews about Haskell. I’m taking another programming class but I know myself and once it starts getting harder I might fall behind since I heard Haskell is extremely hard to learn. 

I have about a month before classes resume and would love to do something productive with my time. So I’m wondering if anyone knows any good platforms or sites that do a really good job at teaching Haskell.

Thanks in advance.",True,False,False,haskell,t5_2qh36,68096,public,self,Learning Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/rmb96d/learning_haskell/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
681.0,[],False,SheepySheev,,[],,text,t2_24y6j8mq,False,False,False,[],False,False,1640197139,self.haskell,https://www.reddit.com/r/haskell/comments/rmb8rq/typeclassopedia_exercise_for_free_monad_issue/,{},rmb8rq,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rmb8rq/typeclassopedia_exercise_for_free_monad_issue/,False,,,6,1640197150,1,"Hi all,

I am going through [Typeclassopedia](https://wiki.haskell.org/Typeclassopedia), and currently got stuck at [the first set of exercises in the Monad section](https://wiki.haskell.org/Typeclassopedia#Instances_3), namely the 3rd one:

&gt;Implement `Functor` and `Monad` instances for `Free f`, defined as `data Free f a = Var a | Node (f (Free f a))` You may assume that `f` has a `Functor` instance. This is known as the *free monad* built from the functor `f`.

I got the `Functor` instance for `Free f`, but with my `Monad` instance I am getting this error when trying to load it into ghci:

    • Could not deduce (Applicative (Free f))
        arising from the superclasses of an instance declaration
      from the context: Functor f
        bound by the instance declaration at Freemonad.hs:22:10-36
    • In the instance declaration for ‘Monad (Free f)’

My guess is that that's due to this part in the monad definition in `Control.Monad`

&gt;class **Applicative m =&gt;** Monad m where

which it seems like it wasn't always there.

So:

1. Is there some other way around it, or do I have to provide instance of `Applicative` for `Free f` first? Bonus question: should Typeclassopedia be updated to include this information?
2. I can't figure out how to implement `Applicative` for `Free f`, any hints?

In case it matters, here is my `Monad` instance, that I have convinced myself on paper that it should work

    instance Functor f =&gt; Monad (Free f) where
      return = Var
      (Var x) &gt;&gt;= g = g x
      (Node x) &gt;&gt;= g = Node $ (fmap.(flip (&gt;&gt;=))) g x

but I have also tried implementation from [this stackoverflow answer](https://stackoverflow.com/a/13357359/8959024) and got same error in ghci.",True,False,False,haskell,t5_2qh36,68096,public,self,Typeclassopedia exercise for Free Monad - issue with Applicative instance,0,[],1.0,https://www.reddit.com/r/haskell/comments/rmb8rq/typeclassopedia_exercise_for_free_monad_issue/,all_ads,6,,,,,,,,,,,,,,,,,,,True,
682.0,[],False,HMS_Impractical,,[],,text,t2_53mq9031,False,False,False,[],False,False,1640192059,self.haskell,https://www.reddit.com/r/haskell/comments/rm9dbi/can_i_stop_iterating_when_the_output_of_a/,{},rm9dbi,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rm9dbi/can_i_stop_iterating_when_the_output_of_a/,False,,,6,1640192070,1,"I wrote a program in Emacs Lisp that turns a decimal number into a base-256 number. The numbers involved are very large, so here's the logic of it, where `base256` is an array of unicode characters, `myNum` is a number in the septenseptuagintacentillions, and output is an output variable initially set to nil:

```
  (while (&gt;= myNum 1)
    (setq output (concat output (aref base256 (mod myNum 256))))
    (setq myNum (truncate (/ myNum 256))))
```

I want to rewrite it in Haskell, but I'm having some trouble.
Obviously, I can't use the same logic in Haskell, so here is what I have so far:
```
-- Builds an array of integers by taking the modulus of each iteration of dividing a number by 256
buildNum num = [mod x 256 | x &lt;- (iterate trunkDiv num)]
  where
    trunkDiv l = truncate $ div l 256

-- Create an array by accessing the item in my array of symbols that corresponds to a number in an array of integers
mapNum nums syms = [syms !! y | y &lt;- nums]

main :: IO ()
main = do
  putStrLn $ mapNum (buildNum myNum) base256
```
Now, as far as I can tell, what I need is to stop iterating when the truncated product of my number and 256 reaches 1, but I don't know where to even begin looking for that information.

Could anybody give me some pointers on getting this to work?",True,False,False,haskell,t5_2qh36,68093,public,self,Can I stop iterating when the output of a function reaches 1?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rm9dbi/can_i_stop_iterating_when_the_output_of_a/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
683.0,[],False,_query,,[],,text,t2_fjd8s,False,False,False,[],False,False,1640186036,youtube.com,https://www.reddit.com/r/haskell/comments/rm77il/video_of_ihp_meetup_4/,{},rm77il,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rm77il/video_of_ihp_meetup_4/,False,rich:video,"{'enabled': False, 'images': [{'id': 't4Qy1m0pfq-tpXT5GxLr1QKgz0Jy0ivaG2gG4IermtY', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/WJA-kGVitGMizM9xzByZkrzJ8-DPtvyd4AsV_HtPSDQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=49ce60559311ea791c6df6fc83b03dbbead7f6aa', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/WJA-kGVitGMizM9xzByZkrzJ8-DPtvyd4AsV_HtPSDQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=96935ec010ebfc991ddbb38d4fce3f3c20bcd2cb', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/WJA-kGVitGMizM9xzByZkrzJ8-DPtvyd4AsV_HtPSDQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0f00cb26422ba62c31e9ca33271ce55da4b00471', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/WJA-kGVitGMizM9xzByZkrzJ8-DPtvyd4AsV_HtPSDQ.jpg?auto=webp&amp;s=ed19b2e1b47db3100bc45afb4d24f18e388d9116', 'width': 480}, 'variants': {}}]}",6,1640186047,1,,True,False,False,haskell,t5_2qh36,68090,public,image,Video of IHP Meetup #4,0,[],1.0,https://www.youtube.com/watch?v=hjXyFjB9LI8,all_ads,6,be2af704-5664-11eb-8e65-0ecd290c3053,video,https://www.youtube.com/watch?v=hjXyFjB9LI8,105.0,140.0,,,,,,,"{'oembed': {'author_name': 'digitallyinduced', 'author_url': 'https://www.youtube.com/channel/UCcpsQ2pegPn4YMQO8BZVUbA', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/hjXyFjB9LI8?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/hjXyFjB9LI8/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'IHP Meetup #4', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/hjXyFjB9LI8?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'digitallyinduced', 'author_url': 'https://www.youtube.com/channel/UCcpsQ2pegPn4YMQO8BZVUbA', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/hjXyFjB9LI8?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/hjXyFjB9LI8/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'IHP Meetup #4', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/hjXyFjB9LI8?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/rm77il', 'scrolling': False, 'width': 356}",,,,,
684.0,[],False,nonexistent_,,[],,text,t2_4yn1z,False,False,False,[],False,False,1640182799,incoherentsoftware.com,https://www.reddit.com/r/haskell/comments/rm664w/notes_on_distributing_crossplatform_haskell/,{},rm664w,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rm664w/notes_on_distributing_crossplatform_haskell/,False,,,6,1640182810,1,,True,False,False,haskell,t5_2qh36,68088,public,default,Notes on distributing cross-platform haskell binaries through Steam,0,[],1.0,https://incoherentsoftware.com/defect-process/docs/cross-platform-notes.html,all_ads,6,,,https://incoherentsoftware.com/defect-process/docs/cross-platform-notes.html,,,,,,,,,,,,,,,,,
685.0,[],False,Auslegung,,[],,text,t2_w1gcn,False,False,False,[],False,False,1640182673,self.haskell,https://www.reddit.com/r/haskell/comments/rm64lp/help_us_add_haskell_support_to_renovatebot/,{},rm64lp,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rm64lp/help_us_add_haskell_support_to_renovatebot/,False,,,6,1640182683,1,"[Renovate](https://github.com/renovatebot/renovate) is used widely to help manage dependencies. Since this week was a short week for us at [Caribou](https://www.gocaribou.com/careers), two of us spent some time starting the work to add Haskell support https://github.com/renovatebot/renovate/pull/13224. It needs help.

If anyone is inclined to pick up where we left off, or start a brand new branch using some or all of what we did, please do! Please communicate your intent on the PR itself so if there are others who want to also work on it, you don't have to duplicate their work.

There's another new tool in this same space, [Stack Lint Extra Deps](https://github.com/freckle/stack-lint-extra-deps/). The maintainer was kind enough to get on a phone call with us on Monday to discuss pros and cons of working on SLED vs Renovate, and the consensus is we'd all like to see Renovate support Haskell first. But Renovate is written in TypeScript and SLED is written in Haskell so if you'd like to help but don't like/know TypeScript, SLED is a good candidate to hack on :D",True,False,False,haskell,t5_2qh36,68088,public,self,Help us add Haskell support to Renovate[bot],0,[],1.0,https://www.reddit.com/r/haskell/comments/rm64lp/help_us_add_haskell_support_to_renovatebot/,all_ads,6,,,,,,,,,,,,,,,,,,,,
686.0,[],False,Serokell,,[],,text,t2_fvl0rbg,False,False,False,[],False,False,1640179647,serokell.io,https://www.reddit.com/r/haskell/comments/rm58md/parser_combinators_in_haskell/,{},rm58md,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rm58md/parser_combinators_in_haskell/,False,link,"{'enabled': False, 'images': [{'id': 'Q2Wfj3uiLcJ-aRoB4gA8y0kgr79yLzOk8Ku_2SowFTM', 'resolutions': [{'height': 64, 'url': 'https://external-preview.redd.it/KsfhyOmcHA9wU5YWDsobNFu7tlmkd3MkiDhrTwwTmEo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=79b3e966189fef18103c34c684fe4bffec66f718', 'width': 108}, {'height': 128, 'url': 'https://external-preview.redd.it/KsfhyOmcHA9wU5YWDsobNFu7tlmkd3MkiDhrTwwTmEo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1981ff8219501227a021c48a4d2fa8e250c198ae', 'width': 216}, {'height': 190, 'url': 'https://external-preview.redd.it/KsfhyOmcHA9wU5YWDsobNFu7tlmkd3MkiDhrTwwTmEo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0fdbf1530bfc8c1a2727ed08eb03e82aebafed1d', 'width': 320}, {'height': 381, 'url': 'https://external-preview.redd.it/KsfhyOmcHA9wU5YWDsobNFu7tlmkd3MkiDhrTwwTmEo.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=15124590d858fce09ddb670b66fca4e6d7f80a9d', 'width': 640}, {'height': 572, 'url': 'https://external-preview.redd.it/KsfhyOmcHA9wU5YWDsobNFu7tlmkd3MkiDhrTwwTmEo.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=0502a5bd5813f88cc86a885d60e8bc4e2eef839c', 'width': 960}, {'height': 644, 'url': 'https://external-preview.redd.it/KsfhyOmcHA9wU5YWDsobNFu7tlmkd3MkiDhrTwwTmEo.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3342f6ee3eba5c153a7340032b4bbc4f081af2ac', 'width': 1080}], 'source': {'height': 716, 'url': 'https://external-preview.redd.it/KsfhyOmcHA9wU5YWDsobNFu7tlmkd3MkiDhrTwwTmEo.jpg?auto=webp&amp;s=1bb1fe0e0931d48bf2ccc501c0c960090ead9c35', 'width': 1200}, 'variants': {}}]}",6,1640179658,1,,True,False,False,haskell,t5_2qh36,68088,public,default,Parser Combinators in Haskell,0,[],1.0,https://serokell.io/blog/parser-combinators-in-haskell,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://serokell.io/blog/parser-combinators-in-haskell,83.0,140.0,,,,,,,,,,,,,,,
687.0,[],False,Oooo_ola,,[],,text,t2_5m8jp0wv,False,False,False,[],False,False,1640161733,self.haskell,https://www.reddit.com/r/haskell/comments/rm0rge/typeville_conference_call_for_papers_till_9/,{},rm0rge,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rm0rge/typeville_conference_call_for_papers_till_9/,False,self,"{'enabled': False, 'images': [{'id': 'psYYMU-1dnOXEUMACo6Udd0nc2J7YyZIyIBDNQAAQ6Q', 'resolutions': [{'height': 60, 'url': 'https://external-preview.redd.it/ozABYH7SNSV2JXGXZl4TGY2e0AZUe_PC-KbTzZR_MG0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f8cb372d6dea529e163d153fbedb2a939bf6adea', 'width': 108}, {'height': 121, 'url': 'https://external-preview.redd.it/ozABYH7SNSV2JXGXZl4TGY2e0AZUe_PC-KbTzZR_MG0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d598f3e21f54474ae815264cac874ee1fa76551c', 'width': 216}, {'height': 180, 'url': 'https://external-preview.redd.it/ozABYH7SNSV2JXGXZl4TGY2e0AZUe_PC-KbTzZR_MG0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a6aabfe81f0d3c24e5dcd5c16ffb9333b0708600', 'width': 320}, {'height': 360, 'url': 'https://external-preview.redd.it/ozABYH7SNSV2JXGXZl4TGY2e0AZUe_PC-KbTzZR_MG0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d63b1c8b10677243ec3c7cadd477c5429283fdf6', 'width': 640}, {'height': 540, 'url': 'https://external-preview.redd.it/ozABYH7SNSV2JXGXZl4TGY2e0AZUe_PC-KbTzZR_MG0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=225d8f9541a5e69111c4014f4983e873555da04a', 'width': 960}, {'height': 607, 'url': 'https://external-preview.redd.it/ozABYH7SNSV2JXGXZl4TGY2e0AZUe_PC-KbTzZR_MG0.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9e7935fbc4db1dc31dcd2f91bd0cfb814d7abc4b', 'width': 1080}], 'source': {'height': 900, 'url': 'https://external-preview.redd.it/ozABYH7SNSV2JXGXZl4TGY2e0AZUe_PC-KbTzZR_MG0.jpg?auto=webp&amp;s=fa1047ff180febb285c249c14459ebb012ef72b8', 'width': 1600}, 'variants': {}}]}",6,1640161744,1,"Submit your talk to TypeVille’s #C4P and get a chance to become one of the speakers at a   
5-day all-inclusive conference in the Polish mountains!   
We’re looking for talks around Type Safety and #Scala, #Java, #Haskell, #Rust, #Kotlin or #TypeScript.   
More: [https://www.typeville.io/](https://www.typeville.io/)",True,False,False,haskell,t5_2qh36,68086,public,self,TypeVille Conference - Call For Papers till 9 January,0,[],1.0,https://www.reddit.com/r/haskell/comments/rm0rge/typeville_conference_call_for_papers_till_9/,all_ads,6,,,,,,,,,,,,,,,,,,,,
688.0,[],False,average_emacs_user,,[],,text,t2_gh8b53ad,False,False,False,[],False,False,1640158262,self.haskell,https://www.reddit.com/r/haskell/comments/rlzxj3/what_is_your_favorite_programming_language_that/,{},rlzxj3,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rlzxj3/what_is_your_favorite_programming_language_that/,False,,,6,1640158272,1,,True,False,False,haskell,t5_2qh36,68086,public,self,What is your favorite programming language that isn't Haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rlzxj3/what_is_your_favorite_programming_language_that/,all_ads,6,,,,,,,,,,,,,,,,,,,,
689.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1640149270,self.haskell,https://www.reddit.com/r/haskell/comments/rlxifb/advent_of_code_2021_day_22/,{},rlxifb,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rlxifb/advent_of_code_2021_day_22/,False,,,6,1640149281,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,68085,public,spoiler,Advent of Code 2021 day 22,0,[],1.0,https://www.reddit.com/r/haskell/comments/rlxifb/advent_of_code_2021_day_22/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1640149271.242, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q', 't3_rf7pmo', 't3_rfzr5t', 't3_rgr0w5', 't3_rhj30g', 't3_ri9l7i', 't3_rizwa7', 't3_rjpd80', 't3_rkf69m', 't3_rl6pzb', 't3_rlxifb'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
690.0,[],False,AriFordsham,,[],,text,t2_aedtrphe,False,False,False,[],False,False,1640106606,self.haskell,https://www.reddit.com/r/haskell/comments/rlj75o/fuzz_testing_with_quickcheck/,{},rlj75o,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rlj75o/fuzz_testing_with_quickcheck/,False,,,6,1640106616,1," I’m doing QuickCheck property testing, and I want to invert things a bit: Given some minimal valid example, randomly permute fields, to make sure they fail and confirm that all the checks are being run.

1. Is there any library/research to help with this?
2. What would be the easiest approach?",True,False,False,haskell,t5_2qh36,68071,public,self,Fuzz testing with QuickCheck,0,[],1.0,https://www.reddit.com/r/haskell/comments/rlj75o/fuzz_testing_with_quickcheck/,all_ads,6,,,,,,,,,,,,,,,,,,,,
691.0,[],False,mmaruseacph2,,[],,text,t2_3ubxw,False,False,False,[],False,False,1640100707,self.haskell,https://www.reddit.com/r/haskell/comments/rlh2pz/updated_version_of_googles_haskell_101102/,{},rlh2pz,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rlh2pz/updated_version_of_googles_haskell_101102/,False,,,6,1640100718,1,"Over the pandemic (and for one training session before it started), we have used a different set of materials for the Haskell 101 and Haskell 102 classes at Google. Although Haskell is not an officially supported language, this material was still presented to over 200 participants.

The materials are available at https://github.com/google/haskell-trainings and any feedback is much appreciated.",True,False,False,haskell,t5_2qh36,68070,public,self,Updated version of Google's Haskell 101/102 training is now available on GitHub,0,[],1.0,https://www.reddit.com/r/haskell/comments/rlh2pz/updated_version_of_googles_haskell_101102/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
692.0,[],False,_Chiyoku,,[],,text,t2_2jz9p8m4,False,False,False,[],False,False,1640097822,self.haskell,https://www.reddit.com/r/haskell/comments/rlg3jj/typing_an_rpg_in_haskell/,{},rlg3jj,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rlg3jj/typing_an_rpg_in_haskell/,False,,,6,1640097833,1,"I'm trying to learn how to use some ghc extensions with a simple multiplayer terminal based RPG and i would like to ask about creative ways to use extensions like TypeFamilies, KindSignatures, GADTs, DataKinds or TypeClasses to make some mechanic of RPG (like if an item is tradable so i can use functions that are related to selling and trading). 

I thought about using DataKinds and KindSignatures to set if the Item can be used in trades and i thought about putting the class of a mage like if he is a Mage as a Phantom type. I dunno if it's a dumb but i want to learn creative ways to enforce some properties.

What are the cool mechanics that u can enforce using types in Haskell? :)",True,False,False,haskell,t5_2qh36,68069,public,self,Typing an RPG in Haskell!,0,[],1.0,https://www.reddit.com/r/haskell/comments/rlg3jj/typing_an_rpg_in_haskell/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
693.0,[],False,arnemcnuggets,,[],,text,t2_7egzysxc,False,False,False,[],False,False,1640088314,self.haskell,https://www.reddit.com/r/haskell/comments/rldafj/hunit_type_assertion/,{},rldafj,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rldafj/hunit_type_assertion/,False,,,6,1640088325,1,"Hello, i just started to be a good citizen and write some regression tests for my code.

Considering i have some error-type and a function that might result in an error:

\`\`\`haskell  
newtype Username = Username{unUsername::Text}  
data UsernameError = ErrorNameLength | ErrorNameIllegalCharacter

\-- smart constructor for username  
newUsername :: Text -&gt; Either LoginError Username  
newUsername name = ... -- inspects argument and might return Left  
\`\`\`

in my HUnit test, how would I assert that e.g. login with """" results in \`ErrorNameLength\`?

My thoughts is to do it with pattern matching, relying on the MonadFail instance of IO.   
While this works, i see that HUnits assertion-functions allow to provide a descriptive error message in case of failure.

Therefore I am questioning wether this would be the correct way.",True,False,False,haskell,t5_2qh36,68064,public,self,HUnit type assertion,0,[],1.0,https://www.reddit.com/r/haskell/comments/rldafj/hunit_type_assertion/,all_ads,6,,,,,,,,,,,,,,,,,,,,
694.0,[],False,Soham-Chatterjee,,[],,text,t2_8jz7vexo,False,False,False,[],False,False,1640077869,self.haskell,https://www.reddit.com/r/haskell/comments/rlaqvg/how_to_write_haskell_in_latex/,{},rlaqvg,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rlaqvg/how_to_write_haskell_in_latex/,False,,,6,1640077879,1,"Initially i was suggested to write haskell code in Latex by Minted Package. But when i am compiling this code

\`\`\`\\documentclass\[12pt\]{article}

\\usepackage{minted}

\\begin{document}

\\begin{minted}{haskell}

\--type Stack a = \[a\]  

\--push :: Stack a -&gt; a -&gt; Stack a

\--push xs x = x:xs

&amp;#x200B;

\--pop :: Stack a -&gt; (a, Stack a)

\--pop \[\] = error ""Empty List""

\--pop (x:xs) = (x, xs)

&amp;#x200B;

data Stack a = Stack \[a\]

instance Show a =&gt; Show (Stack a) where

show (Stack \[a\]) = show \[a\]

	

push :: Stack a -&gt; a -&gt; Stack a

	push (Stack xs) x = Stack (x:xs)

	

pop :: Stack a -&gt; (a,Stack a)

pop (Stack xs) 

	| null xs = error ""Empty List""

	|  otherwise = (head xs, Stack xs) 

\\end{minted}

\\end{document}\`\`

&amp;#x200B;

It was showing the error

\`\`\`

line 3: Package minted Error: You must invoke LaTeX with the -shell-escape flag. \\begin

line 3: Emergency stop. \\begin{document}

: shell escape is disabled, so I can only detect \\ifwindows.\`\`\`

&amp;#x200B;

Why it is happening and how to overcome it ?",True,False,False,haskell,t5_2qh36,68065,public,self,How to write Haskell in Latex,0,[],1.0,https://www.reddit.com/r/haskell/comments/rlaqvg/how_to_write_haskell_in_latex/,all_ads,6,,,,,,,,,,,,,,,,,,,,
695.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1640062876,self.haskell,https://www.reddit.com/r/haskell/comments/rl6pzb/advent_of_code_2021_day_21/,{},rl6pzb,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rl6pzb/advent_of_code_2021_day_21/,False,,,6,1640062887,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,68063,public,spoiler,Advent of Code 2021 day 21,0,[],1.0,https://www.reddit.com/r/haskell/comments/rl6pzb/advent_of_code_2021_day_21/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1639976471.924, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q', 't3_rf7pmo', 't3_rfzr5t', 't3_rgr0w5', 't3_rhj30g', 't3_ri9l7i', 't3_rizwa7', 't3_rjpd80', 't3_rkf69m'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
696.0,[],False,cratimode,,[],,text,t2_ho1p7jcw,False,False,False,[],False,False,1640050989,self.haskell,https://www.reddit.com/r/haskell/comments/rl2ylc/syntax_question_7_mod_vs_mod_7/,{},rl2ylc,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rl2ylc/syntax_question_7_mod_vs_mod_7/,False,,,6,1640050999,1,"at a textbook I see the line `7 'mod' 2`. However that gives me an error in my GHCi and instead for me it seems like I have to do `mod 7 2` (note that the textbook version surrounds `mod` with `'`, whereas when I do it I can not surround `mod` in quotes or I will get an error Is there some version where GHCi allowed functions ‏‏‎ to be called this way? Sorry if this is stupid, I'm very new",True,False,False,haskell,t5_2qh36,68064,public,self,[Syntax question] 7 'mod' ; VS mod 7 ;,0,[],1.0,https://www.reddit.com/r/haskell/comments/rl2ylc/syntax_question_7_mod_vs_mod_7/,all_ads,6,,,,,,,,,,,,,,,,,,,,
697.0,[],False,rifasaurous,,[],,text,t2_2m1nido2,False,False,False,[],False,False,1640048128,self.haskell,https://www.reddit.com/r/haskell/comments/rl1zyd/help_wanted_with_basic_cabal_importing_in_the/,{},rl1zyd,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rl1zyd/help_wanted_with_basic_cabal_importing_in_the/,False,,,6,1640048139,1,"In my continued attempt to get mstksg's [AOC template](https://github.com/mstksg/advent-of-code-dev) working, I temporarily gave up on my [MacOS attempt](https://www.reddit.com/r/haskell/comments/rjm0x8/help_wanted_for_llvm_config_for_haskell_on_mac/) (thanks again /u/simonmic for the help so far!) and switched to my Linux box. After a long failure trying to use `apt-get install haskell-platform` and getting unfixable (by me) dependency errors, I switched to using `ghcup` (why do we even have `haskell-platform` if it's not going to work?), and things seem to be compiling and running.

But now I have some (hopefully basic) questions.
- The ""Interactive"" section of the documentation says I should be able to import an `AOC.Run.Interactive` package. I do not see how to do this. Where / how do I run ghci to import this? I can see the Haskell file in `src/AOC/Run/Interactive.hs`, but `import AOC.Run.Interactive` fails with ghci run in either the top level or down in `src`. If I `:l src/AOC/Run/Interactive.hs` I get `Illegal lambda-case (use LambdaCase)`, but I didn't think that was the right thing in the first place. I assume I'm missing something simple and obvious here?
- The ""Executable"" section of the documentation says I should be able to get a plain old runnable executable `aoc-dev`. How do I get this? Right now I'm using `cabal run aoc-dev run 1 a` for instance. (If I do build an executable, do I need to rebuild it when I change a day's solution?)

As always any help is most appreciated.",True,False,False,haskell,t5_2qh36,68064,public,self,Help wanted with basic cabal / importing (in the context of mstksg's AOC template).,0,[],1.0,https://www.reddit.com/r/haskell/comments/rl1zyd/help_wanted_with_basic_cabal_importing_in_the/,all_ads,6,,,,,,,,,,,,,,,,,,,,
698.0,[],False,robstewartUK,,[],,text,t2_5h873,False,False,False,[],False,False,1640015978,self.haskell,https://www.reddit.com/r/haskell/comments/rkqgni/job_postdoc_position_on_hardware_acceleration_of/,{},rkqgni,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rkqgni/job_postdoc_position_on_hardware_acceleration_of/,False,,,6,1640015989,1,"An opening for a Post Doctoral position on hardware acceleration of functional programming languages (specifically, Haskell), at Heriot-Watt University in Edinburgh.

The role will involve **developing a special purpose processor for Haskell**, aimed at outperforming the throughput and energy performance of CPUs. The project is inspired by graph reduction machines like GRIN from the 1980s, and modern FPGA/ASIC protypes PilGRIM and Reduceron.

Candidates should have a background in hardware design and FPGA programming. Hardware engineering experience should include circuit design, developing processor architectures, memory hierarchies and/or instruction sets. Candidates should have some understanding of functional programming. Programming language implementation experience is desirable, but not essential. The project has close industry ties with Xilinx in Ireland and QBayLogic in the Netherlands.

It is a three year project, starting in May 2022.

The HAFLANG project:

  [https://haflang.github.io](https://haflang.github.io)

Job details and application form:

  [https://enzj.fa.em3.oraclecloud.com/hcmUI/CandidateExperience/en/sites/CX/job/1716/](https://enzj.fa.em3.oraclecloud.com/hcmUI/CandidateExperience/en/sites/CX/job/1716/)

The application deadline is 28th February 2022.

Contact the project's Principle Investigator, Rob Stewart ([R.Stewart@hw.ac.uk](mailto:R.Stewart@hw.ac.uk)), with inquiries.",True,False,False,haskell,t5_2qh36,68063,public,self,[Job] Postdoc position on hardware acceleration of Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/rkqgni/job_postdoc_position_on_hardware_acceleration_of/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,,,,,,,,,,,,,,
699.0,[],False,Martinsos,,[],,text,t2_bng1b,False,False,False,[],False,False,1640008066,self.haskell,https://www.reddit.com/r/haskell/comments/rknnv0/how_can_i_test_exe_code_in_stack_or_cabal_project/,{},rknnv0,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rknnv0/how_can_i_test_exe_code_in_stack_or_cabal_project/,False,,,6,1640008077,1,"Asking this for u/Lucky-Lambda since he is a new user and has been waiting for days for moderators to approve his post:

I am trying to test a Stack project that contains an exe, lib, and tests. We have tests for lib now (with lib listed under test \`dependencies:\`), and exe depends on lib in the same way, but there is an aspect of the exe I'd like to test.

I have tried to use \`verbatim\` in my package.yaml to get hpack to pass along \`build-tool-depends\`:, which should allow me to reference a \`project:executable\`. I do see it does include it at the bottom of that \`test-suite\` in the generated Cabal output, but I still get a \`Could not find module\` in the test file itself (what I am importing there is listed in the \`executable\` section \`other-modules:\`) when running \`stack test\`.

I have also tried referencing the exe in the new test with \`build-tools:\`. It makes it into the cabal file, but without the project name prefix I originally included, and does not seem to help either.

Any possible things I am missing or should try instead? It generates a cabal file with what I thought should work, but it does not seem to be exposing the module I am trying to import from exe in the test. Thanks so much! 

Versions: 
* Stack resolver: lts-18.15
* Cabal: Cabal-3.2.1.0
* Running on a M1 Mac 12.1 in a Rosetta terminal (should not be ARM related, as it builds/tests just fine without the above attempt, just giving for context)

Remark from me (u/Martinsos): We also read that one solution is to move all the exe code to the lib and then exe just becomes an extremely thin wrapper. However, I love having this separation between exe and lib, on one hand to make sure that lib doesn't in any way depend on exe, and also because external/hackage dependencies are nicely separated.",True,False,False,haskell,t5_2qh36,68064,public,self,How can I test exe code in Stack (or Cabal) project?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rknnv0/how_can_i_test_exe_code_in_stack_or_cabal_project/,all_ads,6,,,,,,,,,,,,,,,,,,,,
700.0,[],False,hipsydoodle,,[],,text,t2_3zxqfh3t,False,False,False,[],False,False,1640000331,self.haskell,https://www.reddit.com/r/haskell/comments/rkle95/num_show_eq/,{},rkle95,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rkle95/num_show_eq/,False,,,6,1640000342,1,"""To join Num, a type must already be friends with Show and Eq.""

There wasn't a followup given to this statement in the book I am reading and I am trying to wrap my head around it. It is easy to follow how a `Num` must be `Eq`, but why does it also have to be a `Show`. If anything I would imagine conforming to `Read` would be required. 

So when you do `5 * (6::Double)`, internally do a read as Double for 5. Is it that compiler does `read (show 5)::Double`?",True,False,False,haskell,t5_2qh36,68062,public,self,Num - Show &amp; Eq,0,[],1.0,https://www.reddit.com/r/haskell/comments/rkle95/num_show_eq/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
701.0,[],False,NixOverSlicedBread,,[],,text,t2_1s3ukhhs,False,False,False,[],False,False,1640000239,self.haskell,https://www.reddit.com/r/haskell/comments/rkldfc/how_come_haskell_ended_up_with_a_repl_ghci_as_a/,{},rkldfc,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rkldfc/how_come_haskell_ended_up_with_a_repl_ghci_as_a/,False,,,6,1640000250,1,I am grateful for GHCi.,False,False,False,haskell,t5_2qh36,68062,public,self,How come Haskell ended up with a REPL (GHCi) as a widely used first-class citizen but some/many other languages didn't? There have got to be some good reasons for this.,0,[],1.0,https://www.reddit.com/r/haskell/comments/rkldfc/how_come_haskell_ended_up_with_a_repl_ghci_as_a/,all_ads,6,,,,,,,,,,,,,,,,,,,,
702.0,[],False,loisch,,[],,text,t2_37ac7,False,False,False,[],False,False,1639990762,self.haskell,https://www.reddit.com/r/haskell/comments/rkiy60/medical_solutions_with_haskelltypescript_in/,{},rkiy60,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rkiy60/medical_solutions_with_haskelltypescript_in/,False,,,6,1639990773,1,"We're hiring german-speaking, full-time Haskell or TypeScript developers to work on user-friendly web- and mobile applications for doctors, nurses, patients and all other people involved.

We have over 400.000 lines of Haskell code running in production. We're also using TypeScript (300 kloc), Flutter/Dart (28 kloc), Scala (30 kloc) and Objective-C (120 kloc). With Docker and our continuous integration pipeline we'd be able to release our code daily to excited customers that can't believe how agile methods, static typing, tests and modern technology and architecture allow us to deliver solutions unbelievably fast. 

We're not Haskell programmers, system administrators, project managers or frontend designers. We're not about one skill or technology. We're hackers. We love building and understanding. But we're not only hackers concerned with the beauty of algorithms, formal languages and digital systems. We're also real-world hackers. We love understanding and solving real-world problems of hard-working nurses, doctors and coping patients. We find and use the best tools for getting the job done. That's why we're using Haskell. And Flutter, TypeScript, PostgreSQL, Docker, Grafana and lot's of other great tools, languages and technologies. And when nothing seems to fit we build our own languages, tools or libraries.

Our system enables patients, doctors, nurses to get information they need, document progress and easily interact and communicate with another. We've built a distributed platform with an event/notification-based data integration hub interfacing existing medical systems along with native mobile and web-based user-interface platforms that can be programmed and extended by us and our customers to implement custom solutions such as task management, appointment booking or chat. The platform plugins are written in JavaScript/TypeScript and are executed in our distributed system. The platform backend and many of its interfaces are implemented using Haskell. Those parts of the plugin code concerned with clinical data run on our servers and the parts concerned with UI run on the mobile devices or in web-browsers. The plugin developer can focus on the use case and doesn't have to think about network connectivity, scalability, synchronization and edit-conflicts, security and data-access because all of that is handled by our platform.

As our platform is still maturing we closely work with our customers to discover requirements and implement new solutions. Sometimes we even work a few days on site at a hospital like Charité in Berlin spending time with nurses and doctors doing user-centered design and implementation. In these situations we change and deploy plugins on the live system and deploy a new platform release every night receiving feedback and gratitude each day. At the moment all of our customers are German speaking and we're a German speaking team. We value teamwork very much and for us it's important that every team member is fully included and can participate - including talking to our highly valued users. That's the reason why we're currently looking for German speaking developers.

Our office is located in the beautiful city center of Freiburg just at the edge of the Black Forest with great opportunities for hiking, climbing, cycling or just hanging out at the Dreisam river.

We’d love to hear and see what you have built and how you’d want to help our team. Please send your application to [jobs@cp-med.com](mailto:jobs@cp-med.com).",True,False,False,haskell,t5_2qh36,68061,public,self,Medical Solutions with Haskell+TypeScript in Freiburg (German speaker required),0,[],1.0,https://www.reddit.com/r/haskell/comments/rkiy60/medical_solutions_with_haskelltypescript_in/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,,,,,,,,,,,,,,
703.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1639976471,self.haskell,https://www.reddit.com/r/haskell/comments/rkf69m/advent_of_code_2021_day_20/,{},rkf69m,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rkf69m/advent_of_code_2021_day_20/,False,,,6,1639976482,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,68056,public,spoiler,Advent of Code 2021 day 20,0,[],1.0,https://www.reddit.com/r/haskell/comments/rkf69m/advent_of_code_2021_day_20/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1639890076.467, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q', 't3_rf7pmo', 't3_rfzr5t', 't3_rgr0w5', 't3_rhj30g', 't3_ri9l7i', 't3_rizwa7', 't3_rjpd80'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
704.0,[],False,bxsx0074,,[],,text,t2_56aqczhz,False,False,False,[],False,False,1639957471,self.haskell,https://www.reddit.com/r/haskell/comments/rk93s0/whatever_happened_to_haskell2020/,{},rk93s0,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rk93s0/whatever_happened_to_haskell2020/,False,,,6,1639957482,1,I never hear about it anymore?,True,False,False,haskell,t5_2qh36,68054,public,self,Whatever happened to haskell2020?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rk93s0/whatever_happened_to_haskell2020/,all_ads,6,,,,,,,,,,,,,,,,,,,,
705.0,[],False,optimismauditor,,[],,text,t2_l59wilx,False,False,False,[],False,False,1639955215,self.haskell,https://www.reddit.com/r/haskell/comments/rk8c6x/using_a_where_statement_after_return_statement/,{},rk8c6x,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rk8c6x/using_a_where_statement_after_return_statement/,False,,,6,1639955225,1,"I am writing a code in Haskell, and I was wondering if we can put a `where` statement (pattern matching) after a `return` statement in a do block? I tried doing this however it seems like my code is having trouble reading comments after doing so, so I am thinking that it might be confusing the comments as being part of the do block or a similar such error?",True,False,False,haskell,t5_2qh36,68053,public,self,Using a where statement after return statement,0,[],1.0,https://www.reddit.com/r/haskell/comments/rk8c6x/using_a_where_statement_after_return_statement/,all_ads,6,,,,,,,,,,,,,,,,,,,,
706.0,[],False,UmbrellaShade,,[],,text,t2_96kwzjum,False,False,False,[],False,False,1639953062,self.haskell,https://www.reddit.com/r/haskell/comments/rk7koq/rewriting_the_odd_function_using_if_else/,{},rk7koq,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rk7koq/rewriting_the_odd_function_using_if_else/,False,,,6,1639953073,1,"I'm basically trying to learn how to use if else statements in haskell. Specifically if else statements that have multiple else conditions. 

let odd\` x =

	if x == 1 

		then True		

	if' x \`mod\` 2 = 0 --if divided by 2 gives no remainder then number is even

	then False

	else True

that is my attempt to define a function odd\`, where it takes a single input, a number x, then outputs True of False depending on if it is odd or even.

this does not work.

also when I try to simplify by removing the case when x=1, temporarily, I get:

odd\` x =

	if (x \`mod\` 2) == 0 

	then False

	else True

&amp;#x200B;

this gives the same error message :

"" 

**listComp.hs:18:8: error:**

**parse error on input ‘=’**

**Perhaps you need a 'let' in a 'do' block?**

**e.g. 'let x = 5' instead of 'x = 5'**

**|**

**18   |** odd\` x **=**

**|**              **\^**

Failed, no modules loaded.""

&amp;#x200B;

any help would be appreciated. Thank you.",True,False,False,haskell,t5_2qh36,68052,public,self,rewriting the odd function using if else,0,[],1.0,https://www.reddit.com/r/haskell/comments/rk7koq/rewriting_the_odd_function_using_if_else/,all_ads,6,,,,,,,,,,,,,,,,,,,,
707.0,[],False,ltielen,,[],,text,t2_1q2pxsi,False,False,False,[],False,False,1639948871,luctielen.com,https://www.reddit.com/r/haskell/comments/rk62r9/write_your_gdb_scripts_in_haskell/,{},rk62r9,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rk62r9/write_your_gdb_scripts_in_haskell/,False,link,"{'enabled': False, 'images': [{'id': 'CkimTh1Qz-S2jtzuVqrFBm2qJrWQzGeVTdsUz_vENYs', 'resolutions': [{'height': 75, 'url': 'https://external-preview.redd.it/WubwPNwkEcAp1VnBIadMFSQamgrfwcqAw2vfmNBLXtg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=40d3631df229218b82181fc54d19d970377f5444', 'width': 108}, {'height': 150, 'url': 'https://external-preview.redd.it/WubwPNwkEcAp1VnBIadMFSQamgrfwcqAw2vfmNBLXtg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=69a6391f7cddbe9554d1a60c205bbcffaf8c7e06', 'width': 216}, {'height': 222, 'url': 'https://external-preview.redd.it/WubwPNwkEcAp1VnBIadMFSQamgrfwcqAw2vfmNBLXtg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=640b3c8e8a4fefd3e903d80849b973c5248d7ac1', 'width': 320}, {'height': 445, 'url': 'https://external-preview.redd.it/WubwPNwkEcAp1VnBIadMFSQamgrfwcqAw2vfmNBLXtg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=58a17dfc681205e6823dfac50f0e125a7b092a61', 'width': 640}], 'source': {'height': 596, 'url': 'https://external-preview.redd.it/WubwPNwkEcAp1VnBIadMFSQamgrfwcqAw2vfmNBLXtg.jpg?auto=webp&amp;s=31e186b6ab2fb5e481d1d548449dea66f1fdb941', 'width': 856}, 'variants': {}}]}",6,1639948882,1,,True,False,False,haskell,t5_2qh36,68049,public,default,Write your GDB scripts in Haskell,0,[],1.0,https://luctielen.com/posts/write_your_gdb_scripts_in_haskell/,all_ads,6,,,https://luctielen.com/posts/write_your_gdb_scripts_in_haskell/,97.0,140.0,,,,,,,,,,,,,,,
708.0,[],False,someacnt,,[],,text,t2_euebihog,False,False,False,[],False,False,1639913442,self.haskell,https://www.reddit.com/r/haskell/comments/rjuygc/which_projectdomain_could_i_work_on_i_want_to_aid/,{},rjuygc,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rjuygc/which_projectdomain_could_i_work_on_i_want_to_aid/,False,,,6,1639913453,1,[removed],True,False,False,haskell,t5_2qh36,68044,public,self,Which project(domain) could I work on? I want to aid in haskell ecosystem.,0,[],0.99,https://www.reddit.com/r/haskell/comments/rjuygc/which_projectdomain_could_i_work_on_i_want_to_aid/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
709.0,[],False,Commie1984,,[],,text,t2_eioy6jy,False,False,False,[],False,False,1639896136,self.haskell,https://www.reddit.com/r/haskell/comments/rjqz87/parallel_bfs_strategies/,{},rjqz87,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rjqz87/parallel_bfs_strategies/,False,,,6,1639896147,1,"Hello r/hashkell !

I'm working on a programming assignment where I'm asked to speed up a BFS type algorithm (a N-puzzle solver to be specific). I've tried using parMap to evaluate the next the potential moves and their costs in parallel. But this has only made my program slower. Is there something wrong with my approach? 

I'd also like to run the actual path finding recursion with all candidates (or the best two) at the same time but I've heard this isn't really possible due to the function returning an IO(). Is there anything I can do to make this part of the program go faster? 

Ideally I want something like this:

    for each state in possible_future_states: 
        new thread(target=BFS, args=variables updated with this state being chosen)

Thank you for reading this. Any advice is greatly appreciated.",True,False,False,haskell,t5_2qh36,68040,public,self,Parallel BFS strategies,0,[],1.0,https://www.reddit.com/r/haskell/comments/rjqz87/parallel_bfs_strategies/,all_ads,6,ebb4b74c-16d0-11eb-9ff6-0e5aacb57bb7,homework,,,,,,,,,,,,,,,,,,
710.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1639890076,self.haskell,https://www.reddit.com/r/haskell/comments/rjpd80/advent_of_code_2021_day_19/,{},rjpd80,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rjpd80/advent_of_code_2021_day_19/,False,,,6,1639890086,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,68040,public,spoiler,Advent of Code 2021 day 19,0,[],1.0,https://www.reddit.com/r/haskell/comments/rjpd80/advent_of_code_2021_day_19/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1639890076.467, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q', 't3_rf7pmo', 't3_rfzr5t', 't3_rgr0w5', 't3_rhj30g', 't3_ri9l7i', 't3_rizwa7', 't3_rjpd80'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
711.0,[],False,mcthenaynvwr,,[],,text,t2_c8bnnqbv,False,False,False,[],False,False,1639881415,github.com,https://www.reddit.com/r/haskell/comments/rjmu1y/using_recent_wxhaskell_with_stack/,{},rjmu1y,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rjmu1y/using_recent_wxhaskell_with_stack/,False,link,"{'enabled': False, 'images': [{'id': '7GNtI9xzhQ66nwRMQ-k966PH9gaFQaYItv9vufaRHSI', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/-naG-hqoPivAWHSj3ZfnQWqRve3xT_SQSJYohmmhr-k.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=dc0c88f70dc3fcc85eb81d20ccbdafb033ecd78f', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/-naG-hqoPivAWHSj3ZfnQWqRve3xT_SQSJYohmmhr-k.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c60cba9447c9623d073fff72db4fb862fe9bf273', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/-naG-hqoPivAWHSj3ZfnQWqRve3xT_SQSJYohmmhr-k.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=fe343c24f3a6ab9f10be528c81b2600de1254322', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/-naG-hqoPivAWHSj3ZfnQWqRve3xT_SQSJYohmmhr-k.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4b1470c5766ded954fc4569cf09c4243a7635f46', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/-naG-hqoPivAWHSj3ZfnQWqRve3xT_SQSJYohmmhr-k.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=eec7d53d8ba8a284da9610ee3fa77d755d1e08c8', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/-naG-hqoPivAWHSj3ZfnQWqRve3xT_SQSJYohmmhr-k.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=2c0d6e5568321e0445005905dd477bd03bf96a9f', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/-naG-hqoPivAWHSj3ZfnQWqRve3xT_SQSJYohmmhr-k.jpg?auto=webp&amp;s=fc337146d422539e815b2352647d5dfc690ab9e0', 'width': 1200}, 'variants': {}}]}",6,1639881425,1,,True,False,False,haskell,t5_2qh36,68036,public,default,Using recent wxHaskell with stack!,0,[],1.0,https://github.com/ironchicken/wx-experiments,all_ads,6,,,https://github.com/ironchicken/wx-experiments,70.0,140.0,,,,,,,,,,,,,,,
712.0,[],False,rifasaurous,,[],,text,t2_2m1nido2,False,False,False,[],False,False,1639878776,self.haskell,https://www.reddit.com/r/haskell/comments/rjm0x8/help_wanted_for_llvm_config_for_haskell_on_mac/,{},rjm0x8,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/rjm0x8/help_wanted_for_llvm_config_for_haskell_on_mac/,False,self,"{'enabled': False, 'images': [{'id': 'HZ8QHZIZt0XweB8gaUxb0V40QwVJ1Sn_Ve5coeRtdSY', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/P9aILYSyrWq0BDoQmxR3vo1duOWUpfFn5aW9t4jCYSM.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c0a9885b23715cb5f4ecf0286c19fb6bcf4f5907', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/P9aILYSyrWq0BDoQmxR3vo1duOWUpfFn5aW9t4jCYSM.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8f19fac03d1922d54006704f85671ffc739c6ca9', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/P9aILYSyrWq0BDoQmxR3vo1duOWUpfFn5aW9t4jCYSM.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=a64335cf6d0a45ddd63e7dc0d72db2d416ee0be6', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/P9aILYSyrWq0BDoQmxR3vo1duOWUpfFn5aW9t4jCYSM.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=5a37a926c9e0c40c48b4080930f668c8a6a65f82', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/P9aILYSyrWq0BDoQmxR3vo1duOWUpfFn5aW9t4jCYSM.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b8a269bb21f5c2c6549f55878033edc2756b763f', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/P9aILYSyrWq0BDoQmxR3vo1duOWUpfFn5aW9t4jCYSM.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=7e36c60f4cad80930f333b7d213c7a4324963bdb', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/P9aILYSyrWq0BDoQmxR3vo1duOWUpfFn5aW9t4jCYSM.jpg?auto=webp&amp;s=60e8fb501990672b3790481cb5aa435f53a89a9b', 'width': 1200}, 'variants': {}}]}",6,1639878787,1,"I'm trying to run mstksg's [AOC template](https://github.com/mstksg/advent-of-code-dev), but I'm guessing this is a generic issue. When I \`cabal run\` the executable, I get errors like:

\`\`\`

**&lt;no location info&gt;: error:**

**Warning: Couldn't figure out LLVM version!**

**Make sure you have installed LLVM between \[9 and 13)**

\`\`\`

I thought I'd solved this by (following some instructions at the bottom of [this link](https://club.tidalcycles.org/t/trouble-installing-tidal-library-macos-big-sur-failed-to-build-warning-couldnt-figure-out-llvm-version/3481)) installing LLVM using homebrew and adding \`/usr/local/opt/llvm/bin\` to my path; in fact, I even seem to have one repo where it's working and another where it isn't, and I have absolutely no clue why. Can anyone offer any suggestions, or suggest other forums to ask?",True,False,False,haskell,t5_2qh36,68036,public,self,Help wanted for LLVM config for Haskell on Mac.,0,[],1.0,https://www.reddit.com/r/haskell/comments/rjm0x8/help_wanted_for_llvm_config_for_haskell_on_mac/,all_ads,6,,,,,,,,,,,,,,,,,,,,
713.0,[],False,jumper149,,[],,text,t2_rglr6,False,False,False,[],False,False,1639861735,github.com,https://www.reddit.com/r/haskell/comments/rjgnyr/derivingvia_for_monad_transformers/,{},rjgnyr,False,True,False,True,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rjgnyr/derivingvia_for_monad_transformers/,False,link,"{'enabled': False, 'images': [{'id': 'fEOBXxn7_JW9a3fG6g1q_bWqWrIYKyVL1DgeVYrZIoA', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/thhX7pVvsSdH7aiLb2KzJRwjbHoUEd6xZjxx4N0BYgI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1c17edc6b3dc89039cd8c63872685cb55faa17c3', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/thhX7pVvsSdH7aiLb2KzJRwjbHoUEd6xZjxx4N0BYgI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2e0005699001b2e59c8d5fbcf5fe5b4868193436', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/thhX7pVvsSdH7aiLb2KzJRwjbHoUEd6xZjxx4N0BYgI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b5b6cdf3c0bf30f1a3b0f112a094c8bb112d89ff', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/thhX7pVvsSdH7aiLb2KzJRwjbHoUEd6xZjxx4N0BYgI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=29fe0f7e28f887d1ca267395fa2b1319582502dd', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/thhX7pVvsSdH7aiLb2KzJRwjbHoUEd6xZjxx4N0BYgI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=1e53546332bd40287cb781116a2d8feb49ad6ce5', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/thhX7pVvsSdH7aiLb2KzJRwjbHoUEd6xZjxx4N0BYgI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=4ef8a55aaa3187f104d1d52a841c1f387ec09ee5', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/thhX7pVvsSdH7aiLb2KzJRwjbHoUEd6xZjxx4N0BYgI.jpg?auto=webp&amp;s=5cc8111aff6f07fd8c5e2c25c88b8cd900043e06', 'width': 1200}, 'variants': {}}]}",6,1639861745,1,,True,False,False,haskell,t5_2qh36,68030,public,default,DerivingVia for monad transformers,0,[],1.0,https://github.com/jumper149/elevator-tutorial/blob/main/src/Main.lhs,all_ads,6,,,https://github.com/jumper149/elevator-tutorial/blob/main/src/Main.lhs,70.0,140.0,,,,,,,,,,,,,,,
714.0,[],False,brandonchinn178,,[],,text,t2_ognt1qc,False,False,False,[],False,False,1639860457,self.haskell,https://www.reddit.com/r/haskell/comments/rjg8db/ann_httpapidataqq_0100_quasiquoter_for/,{},rjg8db,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rjg8db/ann_httpapidataqq_0100_quasiquoter_for/,False,,,6,1639860468,1,"We've been using `string-interpolate` to interpolate variables to build URL paths in tests, but it uses the `Show` instance for custom types, which doesn't work for some of our newtypes, so I wrote a quick quasiquoter that does simple interpolation using `ToHttpApiData`

https://hackage.haskell.org/package/http-api-data-qq-0.1.0.0",True,False,False,haskell,t5_2qh36,68029,public,self,[ANN] http-api-data-qq 0.1.0.0: quasiquoter for interpolating URLs,0,[],1.0,https://www.reddit.com/r/haskell/comments/rjg8db/ann_httpapidataqq_0100_quasiquoter_for/,all_ads,6,,,,,,,,,,,,,,,,,,,,
715.0,[],False,The_Ek_,,[],,text,t2_8mdf1pes,False,False,False,[],False,False,1639858303,self.haskell,https://www.reddit.com/r/haskell/comments/rjfigu/noob_question_about_graphicsgloss/,{},rjfigu,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/rjfigu/noob_question_about_graphicsgloss/,False,,,6,1639858314,1,"So i tried to write a program with a gui and decided to use gloss to render it. But when i try to import the module, Graphics.Gloss it says it's not found. So then i tried to cabal install gloss but it outputs the following error message:

    cabal: Missing dependency on a foreign library:
    * Missing (or bad) C library: GL
    This problem can usually be solved by installing the system package that
    provides this library (you may need the ""-dev"" version). If the library is
    already installed but in a non-standard location then you can use the flags
    --extra-include-dirs= and --extra-lib-dirs= to specify where it is.If the
    library file does exist, it may contain errors that are caught by the C
    compiler at the preprocessing stage. In this case you can re-run configure
    with the verbosity flag -v3 to see the error messages.
    
    cabal: Failed to build OpenGLRaw-3.3.4.1 (which is required by
    gloss-1.13.2.1). See the build log above for details.

So naturally i tried to install the library with cabal, OpenGlRaw but that gave the same error message except the gloss part. I tried to find information about this library but couldn't find anything useful for me, I am using nixos but the error appears on a secondary computer with fedora as well. I have opengl installed through my NixOS configuration and i have tried several c compilers or other openGL packages. This may not have to do with haskell but i assume i will get just as much help here as on r/NixOS 

I am glad for anyone taking their time to help me.",True,False,False,haskell,t5_2qh36,68030,public,self,Noob question about Graphics.Gloss,0,[],1.0,https://www.reddit.com/r/haskell/comments/rjfigu/noob_question_about_graphicsgloss/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
716.0,[],False,yoboiturq,,[],,text,t2_45vy3pvi,False,False,False,[],False,False,1639843501,self.haskell,https://www.reddit.com/r/haskell/comments/rjagxa/need_help_with_an_assignment/,{},rjagxa,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rjagxa/need_help_with_an_assignment/,False,,,6,1639843511,1,"So we have this assignment where we to write a game ""What is left"" which makes an array from 1 to n and removes elements by index, first evens, then odds, then modulo 3s, example JavaScript code:

 

`process.stdin.on('data', function (data) {`  
 `let n = parseInt(data, 10)`  
 `let arr = Array.from({ length: n }, (_, i) =&gt; i + 1)`  
 `let order = 1`  
 `while (arr.length !== 1) {`  
 `if (order === 1)`  
 `arr = arr.filter((e, i) =&gt; i % 2 === 0)`  
 `else if (order === 2) {`  
 `arr = arr.filter((e, i) =&gt; i % 2 !== 0)`  
 `} else if (order === 3) {`  
 `arr = arr.filter((e, i) =&gt; (i + 1) % 3 !== 0)`  
 `}`  
 `order = (order + 1) % 3`  
 `}`  
 `console.log(arr[0])`  
`});`

&amp;#x200B;

I was wondering if someone could show me an example of same code idea in Haskell?",True,False,False,haskell,t5_2qh36,68027,public,self,Need help with an assignment,0,[],1.0,https://www.reddit.com/r/haskell/comments/rjagxa/need_help_with_an_assignment/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
717.0,[],False,andriusst,,[],,text,t2_s4vdb,False,False,False,[],False,False,1639828823,andriusstank.github.io,https://www.reddit.com/r/haskell/comments/rj6349/downhill_different_approach_to_automatic/,{},rj6349,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rj6349/downhill_different_approach_to_automatic/,False,,,6,1639828833,1,,True,False,False,haskell,t5_2qh36,68017,public,default,Downhill: different approach to automatic differentiation,0,[],1.0,https://andriusstank.github.io/downhill/,all_ads,6,,,https://andriusstank.github.io/downhill/,,,,,,,,,,,,,,,,,
718.0,[],False,Bill_Ong,,[],,text,t2_unn0bx9,False,False,False,[],False,False,1639812609,self.haskell,https://www.reddit.com/r/haskell/comments/rj2966/does_stack_work_on_m1_macs/,{},rj2966,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rj2966/does_stack_work_on_m1_macs/,False,self,"{'enabled': False, 'images': [{'id': 'H3EWG5Jw8FpYaMzECIhbJiMxRxg-X5PPTEokLjzFKRQ', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/k2QpnLU-F7OHI-mn0JJsIL0Zyr3ehh-dCtVIxX0pviI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=adffbe532689d24d9090c177c8295ad589fdf440', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/k2QpnLU-F7OHI-mn0JJsIL0Zyr3ehh-dCtVIxX0pviI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=12277452284db047d0f114fa71e69b2754861673', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/k2QpnLU-F7OHI-mn0JJsIL0Zyr3ehh-dCtVIxX0pviI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=24a00c78a04969e56aa1a7c48c6cc8f53e330360', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/k2QpnLU-F7OHI-mn0JJsIL0Zyr3ehh-dCtVIxX0pviI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4d57cea42262a797793efb2a83f6f9c9c5b07f06', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/k2QpnLU-F7OHI-mn0JJsIL0Zyr3ehh-dCtVIxX0pviI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=472b9c3f326342cf6eb82f81d0f4717f56c72ec5', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/k2QpnLU-F7OHI-mn0JJsIL0Zyr3ehh-dCtVIxX0pviI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9e9c8385c5921acaeeeab23e0b8e21944ec18cf6', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/k2QpnLU-F7OHI-mn0JJsIL0Zyr3ehh-dCtVIxX0pviI.jpg?auto=webp&amp;s=c0a646230b884a576f8719221ac03e0f4eabb95e', 'width': 1200}, 'variants': {}}]}",6,1639812619,1,"I tried installing stack by running `brew install haskell-stack`. The installation went smooth, but when I run `stack ghci`, I got: `zsh: segmentation fault  stack ghci`.

So, I browsed online for solutions and I found [this](https://github.com/commercialhaskell/stack/issues/5617). Following [this reply](https://github.com/commercialhaskell/stack/issues/5617#issuecomment-975308723), I ran `brew install --HEAD stack`. This time the installation took significantly longer (\~19 minutes). Again I ran `stack ghci` and got the exact same error.

However, this time, running `ghci` is fine.

Is this normal? What is the best way to setup Haskell on a M1 Mac (macOS Monterey 12.1)? Is it not supported yet?

I just recently switched over to Mac from a Windows PC and would like to explore more about Haskell.

Any help is welcomed!",True,False,False,haskell,t5_2qh36,68017,public,self,Does stack work on M1 Macs?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rj2966/does_stack_work_on_m1_macs/,all_ads,6,,,,,,,,,,,,,,,,,,,,
719.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1639803672,self.haskell,https://www.reddit.com/r/haskell/comments/rizwa7/advent_of_code_2021_day_18/,{},rizwa7,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rizwa7/advent_of_code_2021_day_18/,False,,,6,1639803683,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,68013,public,spoiler,Advent of Code 2021 day 18,0,[],1.0,https://www.reddit.com/r/haskell/comments/rizwa7/advent_of_code_2021_day_18/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1639803672.934, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q', 't3_rf7pmo', 't3_rfzr5t', 't3_rgr0w5', 't3_rhj30g', 't3_ri9l7i', 't3_rizwa7'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
720.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1639784248,github.com,https://www.reddit.com/r/haskell/comments/ritwua/proposal_change_ord_method_defaults/,{},ritwua,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ritwua/proposal_change_ord_method_defaults/,False,link,"{'enabled': False, 'images': [{'id': 'u3Uzepi-1u26L0vrOfNZdq4_rpZoov14CTKaHc6E--0', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/uCNEkwOz5lOA_5W0EhxM8ziFi-3YwPFEn8DUV0E7Wkk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2ba55fbaf30390a869f67631719a387834e8e9ab', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/uCNEkwOz5lOA_5W0EhxM8ziFi-3YwPFEn8DUV0E7Wkk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=1480235328aba16255a0f551f9436c5ebc703aa2', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/uCNEkwOz5lOA_5W0EhxM8ziFi-3YwPFEn8DUV0E7Wkk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9d920cbd7cd65b86eb971a73a3fef1c145d067ce', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/uCNEkwOz5lOA_5W0EhxM8ziFi-3YwPFEn8DUV0E7Wkk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4fb0fa4ac74cafd310f0b59511e48b28dd9728da', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/uCNEkwOz5lOA_5W0EhxM8ziFi-3YwPFEn8DUV0E7Wkk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=9d6a1e6ae544a27f3388daa8b9a7e5eb449c0f3f', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/uCNEkwOz5lOA_5W0EhxM8ziFi-3YwPFEn8DUV0E7Wkk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c6d85212531c9ea04afca69345b693722b6452c4', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/uCNEkwOz5lOA_5W0EhxM8ziFi-3YwPFEn8DUV0E7Wkk.jpg?auto=webp&amp;s=35c101c6d60a945b8b37fe84ccda850c0a95764c', 'width': 1200}, 'variants': {}}]}",6,1639784259,1,,True,False,False,haskell,t5_2qh36,68007,public,default,Proposal: Change Ord method defaults,0,[],1.0,https://github.com/haskell/core-libraries-committee/issues/24,all_ads,6,a01b58a0-6553-11eb-b2eb-0eb19e8d97a5,RFC,https://github.com/haskell/core-libraries-committee/issues/24,70.0,140.0,,,,,,,,,,,,,,,
721.0,[],False,hipsydoodle,,[],,text,t2_3zxqfh3t,False,False,False,[],False,False,1639782169,self.haskell,https://www.reddit.com/r/haskell/comments/rit8ce/t_elem/,{},rit8ce,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rit8ce/t_elem/,False,,,6,1639782179,1,"When checking the type for `elem`, my expectation was:

(Eq a) =&gt; a -&gt; [a] -&gt; Bool

But terminal gave me this:

elem :: (Foldable t, Eq a) =&gt; a -&gt; t a -&gt; Bool

I have just started learning Haskell. My best guess is that foldable is a protocol/typeclass to represent a generic container as opposed to a list []. But is there a better explanation?",True,False,False,haskell,t5_2qh36,68009,public,self,:t elem,0,[],1.0,https://www.reddit.com/r/haskell/comments/rit8ce/t_elem/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
722.0,[],False,dukerutledge,,[],,text,t2_4b7m9,False,False,False,[],False,False,1639774332,tech.freckle.com,https://www.reddit.com/r/haskell/comments/riqlxm/announcing_lsd/,{},riqlxm,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/riqlxm/announcing_lsd/,False,,,6,1639774342,1,,True,False,False,haskell,t5_2qh36,68004,public,default,Announcing LSD,0,[],1.0,https://tech.freckle.com/2021/12/17/announcing-lsd/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://tech.freckle.com/2021/12/17/announcing-lsd/,,,,,,,,,,,,,,,,,
723.0,[],False,jumper149,,[],,text,t2_rglr6,False,False,False,[],False,False,1639772086,felixspringer.xyz,https://www.reddit.com/r/haskell/comments/riptyt/composing_transformers/,{},riptyt,False,True,False,True,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/riptyt/composing_transformers/,False,,,6,1639772097,1,,True,False,False,haskell,t5_2qh36,68002,public,default,composing Transformers,0,[],1.0,https://felixspringer.xyz/homepage/blog/composingTransformers,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://felixspringer.xyz/homepage/blog/composingTransformers,,,,,,,,,,,,,,,,,
724.0,[],False,kosmikus,,[],,text,t2_30503,False,False,False,[],False,False,1639747324,self.haskell,https://www.reddit.com/r/haskell/comments/rihbvu/the_haskell_interlude_episode_7_josé_calderón/,{},rihbvu,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rihbvu/the_haskell_interlude_episode_7_josé_calderón/,False,self,"{'enabled': False, 'images': [{'id': 'Ju-WAwjJzNrUdqX5xMvrFs8x7I2g4cfdnnPZfrcxqi4', 'resolutions': [{'height': 110, 'url': 'https://external-preview.redd.it/EQgAwvI9nFqkKQ05mI4HkB6QXWRI29GKiqoxMNfBSZ4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=eeae39f12f676ad024f2646ab876f96c67084311', 'width': 108}], 'source': {'height': 214, 'url': 'https://external-preview.redd.it/EQgAwvI9nFqkKQ05mI4HkB6QXWRI29GKiqoxMNfBSZ4.jpg?auto=webp&amp;s=30c8ecd0d3e2cfa4531dc2f8cb01742c8bdfde4f', 'width': 209}, 'variants': {}}]}",6,1639747334,1,"José Calderón is interviewed by Niki Vazou and Wouter Swierstra . José has been working on functional programming at Galois and University of  Maryland. He tells us about his research background in many different  continents, his experience with teaching compilers, the relation between music and functional programming and the “Recursive Programming Techniques” book that in the 1970s captured the essence of functional  programming.

[https://haskell.foundation/podcast/7/](https://haskell.foundation/podcast/7/)",True,False,False,haskell,t5_2qh36,67999,public,self,The Haskell Interlude: Episode 7 – José Calderón,0,[],1.0,https://www.reddit.com/r/haskell/comments/rihbvu/the_haskell_interlude_episode_7_josé_calderón/,all_ads,6,,,,,,,,,,,,,,,,,,,,
725.0,[],False,kate_galkina,,[],,text,t2_h5bgyrcr,False,False,False,[],False,False,1639743807,typeable.io,https://www.reddit.com/r/haskell/comments/rigbel/is_haskell_a_good_choice_for_software_security/,{},rigbel,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rigbel/is_haskell_a_good_choice_for_software_security/,False,link,"{'enabled': False, 'images': [{'id': 'H9JLrEjGv7y2kNH7OPZ0SfGUXftRGkV-gUaXllhWbuA', 'resolutions': [{'height': 66, 'url': 'https://external-preview.redd.it/CvA1orTxSI0HITe3eEEGE0pWNC2tV6WsoVFDsi83Y_c.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ef46737bf2ac3ba9c3c2e51746e63dfa21f25777', 'width': 108}, {'height': 132, 'url': 'https://external-preview.redd.it/CvA1orTxSI0HITe3eEEGE0pWNC2tV6WsoVFDsi83Y_c.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0be32fff17f95ffadbb051b191851261a9fd0999', 'width': 216}, {'height': 196, 'url': 'https://external-preview.redd.it/CvA1orTxSI0HITe3eEEGE0pWNC2tV6WsoVFDsi83Y_c.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=698216f7d38731c43347a50ed157688878e60cc3', 'width': 320}, {'height': 392, 'url': 'https://external-preview.redd.it/CvA1orTxSI0HITe3eEEGE0pWNC2tV6WsoVFDsi83Y_c.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b7bbeda3a4b8bb9a5886b26bda2ed8b52ddbd8cb', 'width': 640}], 'source': {'height': 491, 'url': 'https://external-preview.redd.it/CvA1orTxSI0HITe3eEEGE0pWNC2tV6WsoVFDsi83Y_c.jpg?auto=webp&amp;s=7fc08c83db59de0321bd4946791a38ea57cf4746', 'width': 800}, 'variants': {}}]}",6,1639743817,1,,True,False,False,haskell,t5_2qh36,68000,public,default,Is Haskell a Good Choice for Software Security?,0,[],1.0,https://typeable.io/blog/2021-05-31-haskell-security.html,all_ads,6,,,https://typeable.io/blog/2021-05-31-haskell-security.html,85.0,140.0,,,,,,,,,,,,,,,
726.0,[],False,[deleted],,,,,,False,,,[],False,False,1639738651,well-typed.com,https://www.reddit.com/r/haskell/comments/rieys2/new_blo_gpost_typelevel_sharing_in_haskell_now/,{},rieys2,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rieys2/new_blo_gpost_typelevel_sharing_in_haskell_now/,False,,,6,1639738661,1,[deleted],True,False,False,haskell,t5_2qh36,67999,public,default,"New blo gpost: Type-level sharing in Haskell, now",0,[],1.0,https://well-typed.com/blog/2021/12/type-level-sharing-now/,all_ads,6,,,https://well-typed.com/blog/2021/12/type-level-sharing-now/,,,,deleted,,,,,,,,,,dark,,,
727.0,[],False,brandonchinn178,,[],,text,t2_ognt1qc,False,False,False,[],False,False,1639721844,self.haskell,https://www.reddit.com/r/haskell/comments/riaw00/stack_overflow_oom_with_undecidablesuperclasses/,{},riaw00,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/riaw00/stack_overflow_oom_with_undecidablesuperclasses/,False,,,6,1639721855,1,"Running the following with `stack script --resolver=ghc-9.0.1` works, but running with `stack script --resolver=ghc-9.2.1` results in a stack overflow. Oddly, it works on `ghc-9.2.1` compiling with `-O2` but hangs when compiling with `-O0`.

This behavior is surprising to me because, to my understanding, `UndecidableSuperClasses` carries the risk of infinite loops when type-checking, but at compile-time, it should concretize `m` and `FooM m` and the constraints should be erased. Is this not what happens? And did anything change in GHC 9.2 regarding `UndecidableSuperClasses`?

I've also dumped out `-ddump-tc` for both `-O2` and `-O0`, but I don't see any meaningful differences.

Repro:

    {-# LANGUAGE FlexibleContexts #-}
    {-# LANGUAGE GeneralizedNewtypeDeriving #-}
    {-# LANGUAGE TypeFamilies #-}
    {-# LANGUAGE UndecidableSuperClasses #-}
    
    import Data.Kind (Type)
    
    class (Monad m, MonadFoo (FooM m)) =&gt; MonadFoo m where
      type FooM m :: Type -&gt; Type
      runFoo :: FooM m a -&gt; m a
    
    newtype MyMonad m a = MyMonad { runMyMonad :: m a }
      deriving (Functor, Applicative, Monad)
    
    instance Monad m =&gt; MonadFoo (MyMonad m) where
      type FooM (MyMonad m) = MyMonad m
      runFoo = id
    
    main :: IO ()
    main = runMyMonad foo
    
    foo :: MonadFoo m =&gt; m ()
    foo = runFoo $ return ()",True,False,False,haskell,t5_2qh36,67995,public,self,Stack overflow / OOM with UndecidableSuperClasses on GHC 9.2.1,0,[],1.0,https://www.reddit.com/r/haskell/comments/riaw00/stack_overflow_oom_with_undecidablesuperclasses/,all_ads,6,,,,,,,,,,,,,,,,,,,True,
728.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1639717273,self.haskell,https://www.reddit.com/r/haskell/comments/ri9l7i/advent_of_code_2021_day_17/,{},ri9l7i,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ri9l7i/advent_of_code_2021_day_17/,False,,,6,1639717283,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,67993,public,spoiler,Advent of Code 2021 day 17,0,[],1.0,https://www.reddit.com/r/haskell/comments/ri9l7i/advent_of_code_2021_day_17/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1639717273.26, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q', 't3_rf7pmo', 't3_rfzr5t', 't3_rgr0w5', 't3_rhj30g', 't3_ri9l7i'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
729.0,[],False,david_rohan,,[],,text,t2_4ong1roq,False,False,False,[],False,False,1639703226,i.redd.it,https://www.reddit.com/r/haskell/comments/ri5656/how_can_i_make_this_search_algorithm_more/,{},ri5656,False,False,False,False,True,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ri5656/how_can_i_make_this_search_algorithm_more/,False,image,"{'enabled': True, 'images': [{'id': 'SELdmdg8V_z4IOsxZQFQp47P9q2GokHZ3OGYynV9dNY', 'resolutions': [{'height': 81, 'url': 'https://preview.redd.it/95wqx4j060681.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2f4d4e0f5e492b30ea03e2832587e15d040a6bc9', 'width': 108}, {'height': 162, 'url': 'https://preview.redd.it/95wqx4j060681.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6ff1809bb600e17ea34d365687ae73f8c78ceca5', 'width': 216}, {'height': 240, 'url': 'https://preview.redd.it/95wqx4j060681.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=56ac7557dd038c5c753aa15058b3784bf5d7209c', 'width': 320}, {'height': 480, 'url': 'https://preview.redd.it/95wqx4j060681.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=494fd79265a5795decc03680901a4e6c108f473d', 'width': 640}, {'height': 720, 'url': 'https://preview.redd.it/95wqx4j060681.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=6894ddabc3f55d1f5b6f6d11500822f6108c157f', 'width': 960}, {'height': 810, 'url': 'https://preview.redd.it/95wqx4j060681.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=6228eb135153966e40df347aefef9d63358902f0', 'width': 1080}], 'source': {'height': 3024, 'url': 'https://preview.redd.it/95wqx4j060681.jpg?auto=webp&amp;s=ae71bfd189296fd46d2c59619b62e26745cc7969', 'width': 4032}, 'variants': {}}]}",6,1639703237,1,,True,False,False,haskell,t5_2qh36,67989,public,image,How can I make this search algorithm more efficient? It is really slow on large trees to the point that it is basically a timeout.,0,[],1.0,https://i.redd.it/95wqx4j060681.jpg,all_ads,6,,,https://i.redd.it/95wqx4j060681.jpg,105.0,140.0,,moderator,,,,,,,,,,,,,
730.0,[],False,david_rohan,,[],,text,t2_4ong1roq,False,False,False,[],False,False,1639692831,self.haskell,https://www.reddit.com/r/haskell/comments/ri1o7y/a_search_in_haskell/,{},ri1o7y,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/ri1o7y/a_search_in_haskell/,False,,,6,1639692842,1,How would you go about doing an A* search in Haskell for solving a maze? You would need to calculate the Manhattan distance but how would you calculate the distance between the current node and initial node?,True,False,False,haskell,t5_2qh36,67987,public,self,A* search in Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/ri1o7y/a_search_in_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
731.0,[],False,hornetcluster,,[],,text,t2_fz29z,False,False,False,[],False,False,1639681942,self.haskell,https://www.reddit.com/r/haskell/comments/rhxrl6/dynamic_programming_minimum_number_of_coins_to/,{},rhxrl6,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rhxrl6/dynamic_programming_minimum_number_of_coins_to/,False,,,6,1639681953,1,"Given a set of coins and an amount, find the minimum number of coins needed to make up the amount.

Note: a coin with a unit value is always assumed to exist in the given set of coins.

### Examples:

Coins          | Amount | min. no. of coins
---------------|--------|------------------
{1,5,10,25}    | 1      | 1
{1,5,10,25}    | 4      | 4
{1,5,10,25}    | 5      | 1
{1,5,10,25}    | 6      | 2
{1,5,10,21,25} | 63     | 3
-------------------------------------------


Say we are given a set of coins Cs = {1,5,10,21,25} and we want to find the minimum number of coins needed to make up 63, then the algorithm below essentially translates to the following:

```
answer = min_coins(Cs, 63) = minimum (
                                       min_coins(Cs, 62) + 1,
                                       min_coins(Cs, 58) + 1,
                                       min_coins(Cs, 53) + 1,
                                       min_coins(Cs, 42) + 1,
                                       min_coins(Cs, 38) + 1
                                     )
```

A direct haskell implementation of the above strategy is:

``` haskell
minCoinsV1 :: [Int] -&gt; Int -&gt; Int
minCoinsV1 _ 0 = 0
minCoinsV1 cs a =
  minimum . map ((+1) . (minCoinsV1 cs) . (a - )) . filter (&lt;=a) $ cs
```

To make the runtime better, we can use the dynamic programming technique (DP). If we need to find the answer for an amount 'amt', we compute the results for all amounts from 1 through 'amt'. This allows us to reuse the results for sub-problems.

Naive DP would be to maintain an array of all the results from 1 through 'amt'. 

A direct Haskell implementation (I think) of the naive DP would be:

``` haskell
minCoinsV2 :: [Int] -&gt; Int -&gt; Int
minCoinsV2 cs a = counts !! a where
  counts = map go [0..]
  go 0 = 0
  go x = minimum . map ((+1) . (counts !!) . (x - )) . filter (&lt;=x) $ cs
```

However, we only need to maintain an array having a size that is equal (numerically) to the amount of the coin having the largest value in the given set of 'coins'.

However, we only need to maintain an array having a size that is equal (numerically) to the amount of the coin having the largest value in the given set of 'coins'.

An implementation of the better DP in C++ would be the following function. 

``` cpp
#include &lt;limits&gt;
#include &lt;set&gt;
#include &lt;vector&gt;
#include &lt;iostream&gt;

size_t min_coins(std::set&lt;size_t,std::less&lt;size_t&gt;&gt; coins, size_t amt) {
  //
  // making sure coin with a value 1 exists
  coins.emplace(1);
  //

  auto buffSize = *coins.rbegin()+1;
  auto buffer = std::vector&lt;size_t&gt;(buffSize);
  buffer[0] = 0;

  for (auto a = 1; a &lt;= amt; ++a) {
    auto curr_amt_pos = a % buffSize;
    buffer[curr_amt_pos] = std::numeric_limits&lt;size_t&gt;::max();
    for (auto iter = coins.begin(); a &gt;= *iter; ++iter) {
      auto prev_amt_pos = (a - *iter) % buffSize;

      buffer[curr_amt_pos] = std::min(buffer[curr_amt_pos], buffer[prev_amt_pos]+1) ;
    } 
  }

  return buffer[amt % buffSize];
}

int main (int argc, char *argv[]) {
  int amt = argc &gt; 1 ? std::stoi(argv[1]) : 63;
  std::cout &lt;&lt; min_coins({1,5,10,21,25}, (size_t)amt) &lt;&lt; std::endl;
  return 0;
}
```

#### Question: How to implement the better DP version written in C++ using Haskell?",True,False,False,haskell,t5_2qh36,67985,public,self,Dynamic programming: minimum number of coins to make up an amount.,0,[],1.0,https://www.reddit.com/r/haskell/comments/rhxrl6/dynamic_programming_minimum_number_of_coins_to/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
732.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1639667195,haskellweekly.news,https://www.reddit.com/r/haskell/comments/rhsm25/issue_294_haskell_weekly_newsletter/,{},rhsm25,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rhsm25/issue_294_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1639667205,1,,True,False,False,haskell,t5_2qh36,67976,public,default,Issue 294 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/294.html,all_ads,6,,,https://haskellweekly.news/issue/294.html,140.0,140.0,,,,,,,,,,,,,,,
733.0,[],False,peesooshhvusog,,[],,text,t2_c86iiu03,False,False,False,[],False,False,1639656927,self.haskell,https://www.reddit.com/r/haskell/comments/rhpjnl/hiring_1_job_in_haskell_hiring_now/,{},rhpjnl,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rhpjnl/hiring_1_job_in_haskell_hiring_now/,False,,,6,1639656938,1,"Company Name | Title | City
--|--|--|--|--|--
[Dollar General](https://redejobs.com/job.php?j=6661480636&amp;p=14&amp;s1=reddit&amp;s2=haskell) | [CDL-A Company Truck Driver - Home Weekly (Haskell)](https://redejobs.com/job.php?j=6661480636&amp;p=14&amp;s1=reddit&amp;s2=haskell) | [Haskell](https://redejobs.com/job.php?j=6661480636&amp;p=14&amp;s1=reddit&amp;s2=haskell)


Hey guys, here are some recent job openings , feel free to comment here if you have any questions, I'm at the community's disposal! If you encounter any problems with any of these job openings please let me know that I will modify the table accordingly. Thanks!",True,False,False,haskell,t5_2qh36,67974,public,self,[HIRING] 1 Job in haskell Hiring Now!,0,[],1.0,https://www.reddit.com/r/haskell/comments/rhpjnl/hiring_1_job_in_haskell_hiring_now/,all_ads,6,,,,,,,,,,,,,,,,,,,,
734.0,[],False,qwbarch,,[],,text,t2_7z4mslcf,False,False,False,[],False,False,1639639820,self.haskell,https://www.reddit.com/r/haskell/comments/rhljx7/monadunliftio_instance_for_servant_handler/,{},rhljx7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rhljx7/monadunliftio_instance_for_servant_handler/,False,,,6,1639639830,1,"I'd like to use ``MonadUnliftIO`` in my monad transformer stack while serving a Servant API. For example:

```haskell
newtype AppM a = AppM
  { runAppM :: Handler 
  }
  deriving
    ( Functor,
      Applicative,
      Monad,
      MonadIO,
      MonadUnliftIO -- This fails to compile
    )
```

The problem is that ``Handler`` cannot derive ``MonadUnliftIO`` as it's a newtype over ``ExceptT ServerError IO a``, which does not have an instance for it.

In order to get derive an instance, here's a possible solution:
```haskell
{-# LANGUAGE DataKinds #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE TypeOperators #-}

module Lib where

import Control.Exception (try)
import Control.Monad.Except (ExceptT (ExceptT))
import Control.Monad.IO.Class (MonadIO (liftIO))
import Network.Wai.Handler.Warp (run)
import Servant (EmptyAPI (EmptyAPI), Handler (Handler), HasServer (ServerT), JSON, NoContent (NoContent), PostAccepted, Proxy (Proxy), ReqBody, emptyServer, hoistServer, serve, type (:&gt;))
import UnliftIO (MonadUnliftIO)
import UnliftIO.Concurrent (forkIO)

newtype AppM a = AppM
  { runAppM :: IO a
  }
  deriving
    ( Functor,
      Applicative,
      Monad,
      MonadIO,
      MonadUnliftIO
    )

type API = ReqBody '[JSON] Int :&gt; PostAccepted '[JSON] NoContent

postAccepted :: MonadUnliftIO m =&gt; Int -&gt; m NoContent
postAccepted _ = NoContent &lt;$ forkIO (pure ())

api :: Proxy API
api = Proxy

server :: MonadUnliftIO m =&gt; ServerT API m
server = postAccepted

main :: IO ()
main =
  let nt program = Handler . ExceptT . try $ runAppM program
   in run 8080 $ serve api $ hoistServer api nt server

```
``AppM`` is usually a ``ReaderT`` for me, but I kept it as ``IO`` to keep the example simple.
This gets rid of the ``Handler`` from ``AppM``, allowing ``MonadUnliftIO`` to be derived as there's no more ``ExceptT`` in the transformer stack.

All is well, until I tried to use ``servant-quickcheck`` for property testing.
Looking at [withServantServer](https://hackage.haskell.org/package/servant-quickcheck-0.0.10.0/docs/Servant-QuickCheck.html#v:withServantServer), this function requires a ``Server a``, which is also an alias for ``ServerT a Handler``.
This requires me to bring ``Handler`` back into ``AppM``, but then I'm back to square one.
How do I get the ``MonadUnliftIO`` instance for ``AppM``, if it depends on ``Handler``?",True,False,False,haskell,t5_2qh36,67971,public,self,MonadUnliftIO instance for Servant Handler,0,[],1.0,https://www.reddit.com/r/haskell/comments/rhljx7/monadunliftio_instance_for_servant_handler/,all_ads,6,,,,,,,,,,,,,,,,,,,,
735.0,[],False,average_emacs_user,,[],,text,t2_gh8b53ad,False,False,False,[],False,False,1639635680,self.haskell,https://www.reddit.com/r/haskell/comments/rhkhmg/is_write_yourself_a_scheme_still_up_to_date/,{},rhkhmg,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rhkhmg/is_write_yourself_a_scheme_still_up_to_date/,False,,,6,1639635690,1,"I followed through the book (available for free on wikibooks) a while back. Aside from the lack of usage of modules, and Control.Monad.Error being deprecated, is there any other notable difference between the code in the book and modern idiomatic Haskell?",True,False,False,haskell,t5_2qh36,67970,public,self,Is “write yourself a scheme” still up to date?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rhkhmg/is_write_yourself_a_scheme_still_up_to_date/,all_ads,6,,,,,,,,,,,,,,,,,,,,
736.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1639630881,self.haskell,https://www.reddit.com/r/haskell/comments/rhj30g/advent_of_code_2021_day_16/,{},rhj30g,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rhj30g/advent_of_code_2021_day_16/,False,,,6,1639630891,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,67971,public,spoiler,Advent of Code 2021 day 16,0,[],1.0,https://www.reddit.com/r/haskell/comments/rhj30g/advent_of_code_2021_day_16/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1639544479.133, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q', 't3_rf7pmo', 't3_rfzr5t', 't3_rgr0w5'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
737.0,[],False,Mag_hockey,,[],,text,t2_50i0nzb7,False,False,False,[],False,False,1639630496,self.haskell,https://www.reddit.com/r/haskell/comments/rhiyjr/how_is_a_fn_pure_if_it_returns_a_list_of_random/,{},rhiyjr,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rhiyjr/how_is_a_fn_pure_if_it_returns_a_list_of_random/,False,,,6,1639630506,1,"I've been going through the University of Finland MOOC course on haskell, and this example popped up:

&amp;#x200B;

    someLetters :: Gen String someLetters = do   
                        c &lt;- elements ""xyzw""   
                        n &lt;- choose (1,10)  
                        return (replicate n c)
    *Examples.QuickCheck&gt; sample someLetters 
    ""yyyyyyyy"" ""zzzzzzzzz"" ""xxxxxxxxx"" ""yyyyyyy"" ""yyy"" ""ww"" ""xxxxxx"" ""yyy"" ""yyyyyyy"" ""xxxxxxxxxx"" ""y""

My question is how is this 'someletters' fn a pure fn? Or is it not pure, and is it then fairly easy to write non-pure functions in Haskell?

&amp;#x200B;

TIA",True,False,False,haskell,t5_2qh36,67971,public,self,How is a fn pure if it returns a list of random length strings?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rhiyjr/how_is_a_fn_pure_if_it_returns_a_list_of_random/,all_ads,6,,,,,,,,,,,,,,,,,,,,
738.0,[],False,yourdigitalvoice,,[],,text,t2_4fjkjj7g,False,False,False,[],False,False,1639619514,youtu.be,https://www.reddit.com/r/haskell/comments/rhffpe/edward_kmett_discussing_his_pathway_to_functional/,{},rhffpe,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rhffpe/edward_kmett_discussing_his_pathway_to_functional/,False,rich:video,"{'enabled': False, 'images': [{'id': 'qVyfOZ0wnuptPHMRtUj3N0CJwYTJ9N3JrL0zGW5spok', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/KYo-dV-j9r0X5hX5qI1jpQ9vVM_uMvnx1IbffPd1FtI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=67ea540d8b22d7b9106d2a43911af92bfb46cacd', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/KYo-dV-j9r0X5hX5qI1jpQ9vVM_uMvnx1IbffPd1FtI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=67cc6caae0096256b9ae9722a56cee4cc4dd5263', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/KYo-dV-j9r0X5hX5qI1jpQ9vVM_uMvnx1IbffPd1FtI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3878fe8096d3b5d7b4d93bd185da6e91fea4ee70', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/KYo-dV-j9r0X5hX5qI1jpQ9vVM_uMvnx1IbffPd1FtI.jpg?auto=webp&amp;s=f701d93cf3365508c9ca837d529a96572b5e0469', 'width': 480}, 'variants': {}}]}",6,1639619524,1,,True,False,False,haskell,t5_2qh36,67964,public,image,Edward Kmett discussing his pathway to functional programming and discovering Haskell,0,[],1.0,https://youtu.be/IMFRQmysY7U,all_ads,6,be2af704-5664-11eb-8e65-0ecd290c3053,video,https://youtu.be/IMFRQmysY7U,105.0,140.0,,,,,,,"{'oembed': {'author_name': 'ConfEngine', 'author_url': 'https://www.youtube.com/c/ConfEngine', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/IMFRQmysY7U?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/IMFRQmysY7U/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Edward Kmett - How I discovered functional programming', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/IMFRQmysY7U?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'ConfEngine', 'author_url': 'https://www.youtube.com/c/ConfEngine', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/IMFRQmysY7U?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/IMFRQmysY7U/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Edward Kmett - How I discovered functional programming', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/IMFRQmysY7U?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/rhffpe', 'scrolling': False, 'width': 356}",,,,,
739.0,[],False,AgtLeoFitz,,[],,text,t2_4xe0imwz,False,False,False,[],False,False,1639619310,self.haskell,https://www.reddit.com/r/haskell/comments/rhfdgf/hlint_error_parse_error_on_input/,{},rhfdgf,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rhfdgf/hlint_error_parse_error_on_input/,False,,,6,1639619320,1,"I have the following piece of code that executes just fine. Hower Hlint reports an error on the last line around **x /= y**

**Hlint Error: Parse error: on input \`\]'**

    grid :: Int -&gt; Int -&gt; [(Int, Int)]
grid n m = [(x, y) | x &lt;- [0..n], y &lt;- [0..m]]
    
    square :: Int -&gt; [(Int, Int)]
square n = [(x, y) | (x, y) &lt;- grid n n, x /= y]

What's the issue here or is it just a bug in Hlint?",True,False,False,haskell,t5_2qh36,67964,public,self,Hlint Error: Parse error: on input `]',0,[],1.0,https://www.reddit.com/r/haskell/comments/rhfdgf/hlint_error_parse_error_on_input/,all_ads,6,,,,,,,,,,,,,,,,,,,,
740.0,[],False,n00bomb,,[],,text,t2_fhy7z,False,False,False,[],False,False,1639617980,github.com,https://www.reddit.com/r/haskell/comments/rheykz/github_andraskovacssmalltt_demo_for/,{},rheykz,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rheykz/github_andraskovacssmalltt_demo_for/,False,link,"{'enabled': False, 'images': [{'id': 'cxuEsTOe8caPSQdwvBddU8mThXkelzP518Wcvl9Xm94', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/2xWjBnaeo-3D_pzteNsKqDp1IN6GQRDar-cLWLRsFfE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d215ac6fd50da3422f9f52d87f4a23d8097d04b8', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/2xWjBnaeo-3D_pzteNsKqDp1IN6GQRDar-cLWLRsFfE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=09a5fef425fc9196ef45f2e2cfbec252fb9d4d3b', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/2xWjBnaeo-3D_pzteNsKqDp1IN6GQRDar-cLWLRsFfE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f64c0501d46e0058291d70d44f2d4aa1f7a8866e', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/2xWjBnaeo-3D_pzteNsKqDp1IN6GQRDar-cLWLRsFfE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4545f32047450a8a63cab84ec3463ddd07166464', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/2xWjBnaeo-3D_pzteNsKqDp1IN6GQRDar-cLWLRsFfE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a78340668dcedfb1ac463951ae4ce9a3b672b533', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/2xWjBnaeo-3D_pzteNsKqDp1IN6GQRDar-cLWLRsFfE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=e7a1b2c82c122b3fb41d3e5ceb946980776cda6c', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/2xWjBnaeo-3D_pzteNsKqDp1IN6GQRDar-cLWLRsFfE.jpg?auto=webp&amp;s=d7757675c1ddde5d8ba053ac03ef51b850d9fa36', 'width': 1200}, 'variants': {}}]}",6,1639617990,1,,True,False,False,haskell,t5_2qh36,67964,public,default,GitHub - AndrasKovacs/smalltt: Demo for high-performance type theory elaboration,0,[],1.0,https://github.com/AndrasKovacs/smalltt#ghc-specific-optimizations,all_ads,6,,,https://github.com/AndrasKovacs/smalltt#ghc-specific-optimizations,70.0,140.0,,,,,,,,,,,,,,,
741.0,[],False,sridfr,,[],,text,t2_f1wkk8ou,False,False,False,[],False,False,1639604922,blog.oxij.org,https://www.reddit.com/r/haskell/comments/rhabqe/the_decent_way_to_learn_functional_programming/,{},rhabqe,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rhabqe/the_decent_way_to_learn_functional_programming/,False,,,6,1639604933,1,,True,False,False,haskell,t5_2qh36,67960,public,default,The Decent Way to Learn Functional Programming,0,[],1.0,https://blog.oxij.org/2012/01/16/the-decent-way-to-learn-functional-programming/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://blog.oxij.org/2012/01/16/the-decent-way-to-learn-functional-programming/,,,,,,,,,,,,,,,,,
742.0,[],False,Iceland_jack,,[],,text,t2_3qjdu,False,False,False,[],False,False,1639601020,self.haskell,https://www.reddit.com/r/haskell/comments/rh8uw5/three_proposals_for_transformers/,{},rh8uw5,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rh8uw5/three_proposals_for_transformers/,False,,,6,1639601031,1,"* ([*issue*](https://hub.darcs.net/ross/transformers/issue/83)) A kind synonym: `MonadTrans = (Type -&gt; Type) -&gt; (Type -&gt; Type)`
* ([*issue*](https://hub.darcs.net/ross/transformers/issue/84)) Composition of monad transformers: `newtype ComposeT trans1 trans2 m a = ComposeT (trans1 (trans2 m) a)`
* ([*issue*](https://hub.darcs.net/ross/transformers/issue/82)) `Elevator` modifier that lifts operations, otherwise overlaps: `(MonadTrans trans, MonadReader r m) =&gt; MonadReader r (trans m)`",True,False,False,haskell,t5_2qh36,67960,public,self,Three proposals for transformers,0,[],1.0,https://www.reddit.com/r/haskell/comments/rh8uw5/three_proposals_for_transformers/,all_ads,6,,,,,,,,,,,,,,,,,,,,
743.0,[],False,AggressiveHorror5541,,[],,text,t2_88bsk7m1,False,False,False,[],False,False,1639597691,/r/haskell/comments/rh7m3i/just_installed_ghci_to_learn_haskell_and_trying/,https://www.reddit.com/r/haskell/comments/rh7m3i/just_installed_ghci_to_learn_haskell_and_trying/,{},rh7m3i,False,True,False,False,False,True,False,True,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rh7m3i/just_installed_ghci_to_learn_haskell_and_trying/,False,hosted:video,"{'enabled': False, 'images': [{'id': 'zdNbILPenTRdDqjpZY-sg0VQjSD_xb-lEEWtOjCt4sc', 'resolutions': [{'height': 88, 'url': 'https://external-preview.redd.it/QT4yNJpAqwoABVDvhVOESS1jYGcLWGCojyACpIPDhJc.png?width=108&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=e9024edd8c3237662c4b690dd7d7b6851dba948a', 'width': 108}, {'height': 177, 'url': 'https://external-preview.redd.it/QT4yNJpAqwoABVDvhVOESS1jYGcLWGCojyACpIPDhJc.png?width=216&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=8f6ef40ee5b3f61d464b36dcf942b9dcb724c4fb', 'width': 216}, {'height': 263, 'url': 'https://external-preview.redd.it/QT4yNJpAqwoABVDvhVOESS1jYGcLWGCojyACpIPDhJc.png?width=320&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=0b1e7c2469d8d06dab5185c352d6ccadfb767f85', 'width': 320}, {'height': 526, 'url': 'https://external-preview.redd.it/QT4yNJpAqwoABVDvhVOESS1jYGcLWGCojyACpIPDhJc.png?width=640&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=100e59a5a43108bf826920d756838cff0d51f5a7', 'width': 640}], 'source': {'height': 548, 'url': 'https://external-preview.redd.it/QT4yNJpAqwoABVDvhVOESS1jYGcLWGCojyACpIPDhJc.png?format=pjpg&amp;auto=webp&amp;s=cd05b731352b05c8b755e821840528ebfa1a3649', 'width': 666}, 'variants': {}}]}",6,1639597702,1,,True,False,False,haskell,t5_2qh36,67962,public,default,"Just installed GHCi to learn Haskell and trying to enter a basic expression. Any idea why it would keep inserting random characters when I press arrows, delete or backspace?",0,[],1.0,https://v.redd.it/ye7lpqy6gr581,all_ads,6,,,https://v.redd.it/ye7lpqy6gr581,115.0,140.0,,,,,,,,,,,,,,,
744.0,[],False,Lucky-Lambda,,[],,text,t2_e9w5gmfl,False,False,False,[],False,False,1639597581,self.haskell,https://www.reddit.com/r/haskell/comments/rh7km8/testing_an_executable_module_in_stack_project/,{},rh7km8,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rh7km8/testing_an_executable_module_in_stack_project/,False,,,6,1639597591,1,[removed],True,False,False,haskell,t5_2qh36,67962,public,self,Testing an executable module in Stack project,0,[],1.0,https://www.reddit.com/r/haskell/comments/rh7km8/testing_an_executable_module_in_stack_project/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
745.0,[],False,NeilNjae,,[],,text,t2_6836y,False,False,False,[],False,False,1639589155,self.haskell,https://www.reddit.com/r/haskell/comments/rh4ase/getting_cabal_to_profile/,{},rh4ase,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rh4ase/getting_cabal_to_profile/,False,self,"{'enabled': False, 'images': [{'id': 'euUE_k9o_euzwgNONmIZMM026oeSTBH_ZdvLjtUNylg', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/z55b_0-_DYGZxjSO4sTVwBNIkMqkFCKvhcexHvELgV4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a3dfba29f9d19dc5dd95d58e68cd2ca48d0f6551', 'width': 108}], 'source': {'height': 128, 'url': 'https://external-preview.redd.it/z55b_0-_DYGZxjSO4sTVwBNIkMqkFCKvhcexHvELgV4.jpg?auto=webp&amp;s=6b590839e21b0f0e5d45a926d1c383c41316f7fd', 'width': 128}, 'variants': {}}]}",6,1639589166,1,"I've got a slow program in Advent of Code. I'd like to profile it to see what's slow.

I've got each day's program as a different executable in a single Cabal project. [You can see the code on Gitlab](https://gitlab.com/NeilNjae/advent-of-code-21).

Cabal 3.6.2, GHC 9.2.1.

My Cabal file looks like this:
    cabal-version:       3.6
    name:                advent-of-code21
    version:             0.1.0.0
    synopsis: Advent of Code 21 solutions
    
    common build-directives
      build-depends:       base &gt;=4.15
      default-language:    Haskell2010
      ghc-options:         -O2 
                           -Wall 
                           -threaded 
                           -rtsopts ""-with-rtsopts=-N""
    executable advent02
      import: common-extensions, build-directives
      main-is: advent14/Main.hs
      build-depends: text, attoparsec
    
    executable advent15
      import: common-extensions, build-directives
      main-is: advent15/Main.hs
      build-depends: text, containers, linear, array, pqueue, mtl, lens

The program runs fine with `cabal run advent15`. 

**But how to profile it?**

I've tried adding this to `advent-of-code21.cabal`:

    executable advent15prof
      import: common-extensions, build-directives
      main-is: advent15/Main.hs
      build-depends: text, containers, linear, array, pqueue, mtl, lens
      profiling: True
      library-profiling: True
      ghc-options:         -O2 
                           -Wall 
                           -threaded 
                           -rtsopts ""-with-rtsopts=-N -p -s -hT -i0.1""

When I try to run `cabal run advent15prof`, Cabal goes off to rebuild all my libraries (as I'd expect) but then fails with lots of errors like

    fast/Data/Reflection.hs:154:1: error:
        Could not find module ‘Unsafe.Coerce’
        Perhaps you haven't installed the profiling libraries for package ‘base-4.16.0.0’?
        Use -v (or `:set -v` in ghci) to see a list of the files searched for.
        |
    154 | import Unsafe.Coerce
        | ^^^^^^^^^^^^^^^^^^^^

If I try `cabal run advent15prof -- +RTS -N -p -s -hT` I get the an error  

    advent15prof: the flag -p requires the program to be built with -prof

I've also tried using `cabal configure --enable-profiling --profiling-detail toplevel-functions` to create a `cabal.project.local` file with profiling information, and I get the same library compilation error when trying to run the program.

Can someone pleas tell me the magic incantations I need to profile the code?",True,False,False,haskell,t5_2qh36,67959,public,self,Getting Cabal to profile?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rh4ase/getting_cabal_to_profile/,all_ads,6,,,,,,,,,,,,,,,,,,,,
746.0,[],False,AgtLeoFitz,,[],,text,t2_4xe0imwz,False,False,False,[],False,False,1639588219,self.haskell,https://www.reddit.com/r/haskell/comments/rh3xj6/module_import_issue/,{},rh3xj6,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rh3xj6/module_import_issue/,False,,,6,1639588229,1,"I feel like it is something stupid that I'm doing, but I just cannot figure it out on my own. I created a simple project with cabal and it created basic project structure. I added another module that I called Work.hs into the same app folder that the Main.hs is at. VS Code doesn't show any errors but when I run it with ghcid I get this error:

\`app/Main.hs:5:1: error:

Could not find module ‘Work’

Use -v (or \`:set -v\` in ghci) to see a list of the files searched for.

  |

5 | import Work\`

Thank you!",True,False,False,haskell,t5_2qh36,67958,public,self,Module import issue.,0,[],1.0,https://www.reddit.com/r/haskell/comments/rh3xj6/module_import_issue/,all_ads,6,,,,,,,,,,,,,,,,,,,,
747.0,[],False,ComfortableTie4581,,[],,text,t2_hlbpdwjy,False,False,False,[],False,False,1639576055,self.haskell,https://www.reddit.com/r/haskell/comments/rgzhl2/haskell/,{},rgzhl2,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rgzhl2/haskell/,False,,,6,1639576065,1,[removed],True,False,False,haskell,t5_2qh36,67952,public,self,Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/rgzhl2/haskell/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,automod_filtered,,,,,,,,,,,,,
748.0,[],False,rhl120,,[],,text,t2_6cjrymqf,False,False,False,[],False,False,1639571879,self.haskell,https://www.reddit.com/r/haskell/comments/rgy6g0/numpy_style_linear_algebra/,{},rgy6g0,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rgy6g0/numpy_style_linear_algebra/,False,,,6,1639571889,1,"Hi, I am very new to haskell and recently I decided to read a book called Linear algebra 

\[Theory , Intuition, Code\]. This book uses python+MATLAB as it's language but I don't like python that much and I don't know matlab so I have been wondering are there any libraries that cover the linearalgebra funcitonality of numpy?",True,False,False,haskell,t5_2qh36,67951,public,self,Numpy style linear algebra,0,[],1.0,https://www.reddit.com/r/haskell/comments/rgy6g0/numpy_style_linear_algebra/,all_ads,6,,,,,,,,,,,,,,,,,,,,
749.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1639544478,self.haskell,https://www.reddit.com/r/haskell/comments/rgr0w5/advent_of_code_2021_day_15/,{},rgr0w5,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rgr0w5/advent_of_code_2021_day_15/,False,,,6,1639544489,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,67947,public,spoiler,Advent of Code 2021 day 15,0,[],1.0,https://www.reddit.com/r/haskell/comments/rgr0w5/advent_of_code_2021_day_15/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1639458072.311, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q', 't3_rf7pmo', 't3_rfzr5t'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
750.0,[],False,eat_those_lemons,,[],,text,t2_c2otl,False,False,False,[],False,False,1639535147,self.haskell,https://www.reddit.com/r/haskell/comments/rgo1x0/are_there_haskell_beginner_jobswork/,{},rgo1x0,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rgo1x0/are_there_haskell_beginner_jobswork/,False,,,6,1639535157,1,"I am doing a job search for a new position and thought now would be the perfect time to switch languages (currently done just OOP stuff)

However I don't have much Haskell knowledge (done learn you a Haskell and working on Haskell from first principals) Every job seems to require several years of experience with Haskell

Are there jobs that are more like work studies or internships for learning Haskell? Where I can restart as a complete beginner to get experience?",True,False,False,haskell,t5_2qh36,67944,public,self,Are There Haskell Beginner Jobs/Work Studies/Internships for non College People,0,[],1.0,https://www.reddit.com/r/haskell/comments/rgo1x0/are_there_haskell_beginner_jobswork/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
751.0,[],False,yourdigitalvoice,,[],,text,t2_4fjkjj7g,False,False,False,[],False,False,1639528631,youtu.be,https://www.reddit.com/r/haskell/comments/rglumt/edward_kmett_reflects_on_the_benefits_of_haskell/,{},rglumt,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rglumt/edward_kmett_reflects_on_the_benefits_of_haskell/,False,rich:video,"{'enabled': False, 'images': [{'id': 'sKo7t0Ct-wlrJY2EzELnj3WZnjXPgDRY3pgDriVV6IU', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/9MidhWr5TAqQrvp6lLp9oTL2O7N9ldyVXiUI6e9Z14c.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=abd27b98d2fd46fba7511ded199640b39bfd908d', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/9MidhWr5TAqQrvp6lLp9oTL2O7N9ldyVXiUI6e9Z14c.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=377ceb9f3b2a3d90337fb5005eb8d7592baa08a2', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/9MidhWr5TAqQrvp6lLp9oTL2O7N9ldyVXiUI6e9Z14c.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=b0f32fdbafd1f8b52f5155d3243912c6b81d923a', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/9MidhWr5TAqQrvp6lLp9oTL2O7N9ldyVXiUI6e9Z14c.jpg?auto=webp&amp;s=79ed495a66e28280948245f9c8b2dd2fcd3a4ec9', 'width': 480}, 'variants': {}}]}",6,1639528641,1,,True,False,False,haskell,t5_2qh36,67942,public,image,Edward Kmett reflects on the benefits of Haskell as a functional programming language - especially at scale.,0,[],1.0,https://youtu.be/kNIcbsyu4zI,all_ads,6,be2af704-5664-11eb-8e65-0ecd290c3053,video,https://youtu.be/kNIcbsyu4zI,105.0,140.0,,,,,,,"{'oembed': {'author_name': 'ConfEngine', 'author_url': 'https://www.youtube.com/c/ConfEngine', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/kNIcbsyu4zI?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/kNIcbsyu4zI/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Edward Kmett - Why Haskell?', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/kNIcbsyu4zI?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'ConfEngine', 'author_url': 'https://www.youtube.com/c/ConfEngine', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/kNIcbsyu4zI?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/kNIcbsyu4zI/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Edward Kmett - Why Haskell?', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/kNIcbsyu4zI?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/rglumt', 'scrolling': False, 'width': 356}",,,,,
752.0,[],False,Paoli99,,[],,text,t2_5kzc67ck,False,False,False,[],False,False,1639527284,self.haskell,https://www.reddit.com/r/haskell/comments/rgldq8/puzzle_15_algorithm_help/,{},rgldq8,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rgldq8/puzzle_15_algorithm_help/,False,,,6,1639527295,1,"Hi, I've been looking at ways to solve puzzle 15 and found the following code online. 

&amp;#x200B;

 

    import Data.Array
import System.Random
 
type Puzzle = Array (Int, Int) Int
 
main :: IO ()
main = do
    putStrLn ""Ingrese un nivel de dificultad: 0, 1 or 2""
    userInput &lt;- getLine
 let diffLevel = read userInput
 if userInput == """" || any (\c -&gt; c &lt; '0' || c &gt; '9') userInput || diffLevel &gt; 2 || diffLevel &lt; 0
 then putStrLn ""Ese no es un nivel valido"" &gt;&gt; main
 else shufflePuzzle ([10, 50, 100] !! diffLevel) solvedPuzzle &gt;&gt;= gameLoop
 
gameLoop :: Puzzle -&gt; IO ()
gameLoop puzzle
    | puzzle == solvedPuzzle = putStrLn ""El puzzle ha sido resueldo!"" &gt;&gt; printPuzzle puzzle
    | otherwise = do
    printPuzzle puzzle

 {- putStrLn ""Please enter number to move""
    userInput &lt;- getLine
    if any (\c -&gt; c &lt; '0' || c &gt; '9') userInput
        then putStrLn ""That is not a valid number."" &gt;&gt; gameLoop puzzle
        else let move = read userInput in
            if move `notElem` validMoves puzzle
                then putStrLn ""This move is not available."" &gt;&gt; gameLoop puzzle
                else gameLoop (applyMove move puzzle) -}
 
validMoves :: Puzzle -&gt; [Int]
validMoves puzzle = [puzzle ! (row', column') |
                     row' &lt;- [rowEmpty-1..rowEmpty+1], column' &lt;- [columnEmpty-1..columnEmpty+1],
                     row' &lt; 4, row' &gt;= 0, column' &lt; 4, column' &gt;= 0,
                     (row' == rowEmpty) /= (column' == columnEmpty)]
 where (rowEmpty, columnEmpty) = findIndexOfNumber 16 puzzle
 
applyMove :: Int -&gt; Puzzle -&gt; Puzzle
applyMove numberToMove puzzle = puzzle // [(indexToMove, 16), (emptyIndex, numberToMove)]
 where indexToMove = findIndexOfNumber numberToMove puzzle
          emptyIndex = findIndexOfNumber 16 puzzle
 
findIndexOfNumber :: Int -&gt; Puzzle -&gt; (Int, Int)
findIndexOfNumber number puzzle = case filter (\idx -&gt; number == puzzle ! idx)
                                              (indices puzzle) of
                                      [idx] -&gt; idx
                                      _ -&gt; error ""BUG: number not in puzzle""
 
printPuzzle :: Puzzle -&gt; IO ()
printPuzzle puzzle = do
    putStrLn ""+--+--+--+--+""
    putStrLn $ ""|"" ++ formatCell (0, 0) ++ ""|"" ++ formatCell (0, 1) ++ ""|"" ++ formatCell (0, 2) ++ ""|"" ++ formatCell (0, 3) ++ ""|""
    putStrLn ""+--+--+--+--+""
    putStrLn $ ""|"" ++ formatCell (1, 0) ++ ""|"" ++ formatCell (1, 1) ++ ""|"" ++ formatCell (1, 2) ++ ""|"" ++ formatCell (1, 3) ++ ""|""
    putStrLn ""+--+--+--+--+""
    putStrLn $ ""|"" ++ formatCell (2, 0) ++ ""|"" ++ formatCell (2, 1) ++ ""|"" ++ formatCell (2, 2) ++ ""|"" ++ formatCell (2, 3) ++ ""|""
    putStrLn ""+--+--+--+--+""
    putStrLn $ ""|"" ++ formatCell (3, 0) ++ ""|"" ++ formatCell (3, 1) ++ ""|"" ++ formatCell (3, 2) ++ ""|"" ++ formatCell (3, 3) ++ ""|""
    putStrLn ""+--+--+--+--+""
 where formatCell idx
              | i == 16 = ""  ""
              | i &gt; 9 = show i
              | otherwise = "" "" ++ show i
 where i = puzzle ! idx
 
solvedPuzzle :: Puzzle
solvedPuzzle = listArray ((0, 0), (3, 3)) [1..16]
 
shufflePuzzle :: Int -&gt; Puzzle -&gt; IO Puzzle
shufflePuzzle 0 puzzle = return puzzle
shufflePuzzle numOfShuffels puzzle = do
 let moves = validMoves puzzle
    randomIndex &lt;- randomRIO (0, length moves - 1)
 let move = moves !! randomIndex
    shufflePuzzle (numOfShuffels - 1) (applyMove move puzzle)



I've commented the part where the user moves the puzzle and was wondering how can I implement or add an algorithm in order for my computer to solve it and show the steps. Any suggestions or documentation that could help me?",True,False,False,haskell,t5_2qh36,67942,public,self,Puzzle 15 algorithm help,0,[],1.0,https://www.reddit.com/r/haskell/comments/rgldq8/puzzle_15_algorithm_help/,all_ads,6,,,,,,,,,,,,,,,,,,,,
753.0,[],False,yourdigitalvoice,,[],,text,t2_4fjkjj7g,False,False,False,[],False,False,1639515685,self.haskell,https://www.reddit.com/r/haskell/comments/rgh7oh/share_your_haskell_expertise_at_functional_conf/,{},rgh7oh,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rgh7oh/share_your_haskell_expertise_at_functional_conf/,False,,,6,1639515696,1,"Have you devised an innovative or novel application of Haskell? Have you solved a tricky problem using FP?  This is a great opportunity to share what you've been working on. If it's related to functional programming, Functional Conf would love to hear from you! 

We are looking for deep technical topics related to Functional Programming.   
You can learn more about the conference and submit your proposal here: [https://confng.in/oVspOYAc](https://llink.to/?u=https:%2F%2Fsignal2domain.online%2Fclick%3Fredirect%3Dhttps%253A%252F%252Fconfng.in%252FoVspOYAc%26dID%3D1639457634867%26linkName%3Dhttps:%2F%2Fconfng.in%2FoVspOYAc&amp;e=7a380914aad66f79b671f4f4b9a345c9)  
Submissions close: 15 Jan 2022   
Here's a short video of past speakers sharing a little of their experience at Functional Conf: [https://confng.in/EFX1sthg](https://llink.to/?u=https:%2F%2Fsignal2domain.online%2Fclick%3Fredirect%3Dhttps%253A%252F%252Fconfng.in%252FEFX1sthg%26dID%3D1639457634867%26linkName%3Dhttps:%2F%2Fconfng.in%2FEFX1sthg&amp;e=7a380914aad66f79b671f4f4b9a345c9)

Submit your proposal here: [https://confng.in/JzhW9cSX](https://llink.to/?u=https:%2F%2Fsignal2domain.online%2Fclick%3Fredirect%3Dhttps%253A%252F%252Fconfng.in%252FJzhW9cSX%26dID%3D1639457634867%26linkName%3Dhttps:%2F%2Fconfng.in%2FJzhW9cSX&amp;e=7a380914aad66f79b671f4f4b9a345c9)",True,False,False,haskell,t5_2qh36,67941,public,self,Share your Haskell expertise at Functional Conf 2022 - Call for Proposals (closes January 15),0,[],1.0,https://www.reddit.com/r/haskell/comments/rgh7oh/share_your_haskell_expertise_at_functional_conf/,all_ads,6,,,,,,,,,,,,,,,,,,,,
754.0,[],False,TeeGiggity,,[],,text,t2_65ffmg6r,False,False,False,[],False,False,1639502680,self.haskell,https://www.reddit.com/r/haskell/comments/rgcf95/looking_for_a_business_partner_who_can_teach/,{},rgcf95,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rgcf95/looking_for_a_business_partner_who_can_teach/,False,,,6,1639502691,1,"I am seeking someone to partner with who can teach Haskell to absolute beginners. And when I say beginners - I mean zero programming experience. 

This would be an online class - taught for 2 hours per day. Time of day and length of course to be determined. 

This person will need to develop the class material without references to other programming languages or concepts. 

Message me to discuss.",True,False,False,haskell,t5_2qh36,67941,public,self,Looking for a business partner who can teach Haskell.,0,[],1.0,https://www.reddit.com/r/haskell/comments/rgcf95/looking_for_a_business_partner_who_can_teach/,all_ads,6,b0bce6c2-2a63-11eb-b9a5-0eb5aa8d3dc9,blockchain,,,,,,,,,,,,,,,,,,
755.0,[],False,jesuscamp_survivor,,[],,text,t2_bnfxd,False,False,True,[],False,False,1639498350,self.haskell,https://www.reddit.com/r/haskell/comments/rgaue6/extending_hlint_with_base_config/,{},rgaue6,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rgaue6/extending_hlint_with_base_config/,False,,,6,1639498360,1,"Wanted to know if there's been work around this yet: with eslint, you can extend a base config pulled in via npm and add on your application's specific customizations. This centralizes the config in 1 place for all apps. Wanting to do the same with our Haskell linter, so hoping that hlint could do that. I don't see that nor can I find examples of it. Does anyone know if that exists?",True,False,False,haskell,t5_2qh36,67942,public,self,Extending Hlint with base config,0,[],1.0,https://www.reddit.com/r/haskell/comments/rgaue6/extending_hlint_with_base_config/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
756.0,[],False,JeffreyBenjaminBrown,,[],,text,t2_kws52,False,False,False,[],False,False,1639493289,self.haskell,https://www.reddit.com/r/haskell/comments/rg9150/contentaddressed_ghc/,{},rg9150,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rg9150/contentaddressed_ghc/,False,self,"{'enabled': False, 'images': [{'id': 'NXysnQpWT3n_zuRBXpESnyDkQf39Z8sXS3QuKcS3om8', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/b6n1R6XoRcVezOV5G61wfzIdw5KTSXnPf40LVO6uDj8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=93ce5504d4f461c57d0a493ce3db591115bd2de9', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/b6n1R6XoRcVezOV5G61wfzIdw5KTSXnPf40LVO6uDj8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=99f4bee6c54cb500c9122b2f739b792f0c1eb650', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/b6n1R6XoRcVezOV5G61wfzIdw5KTSXnPf40LVO6uDj8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4811aff9afcdd723d2bbc7b17728135c2a590001', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/b6n1R6XoRcVezOV5G61wfzIdw5KTSXnPf40LVO6uDj8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7cd8502a31efedf861cc51887745830d6494b733', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/b6n1R6XoRcVezOV5G61wfzIdw5KTSXnPf40LVO6uDj8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b1a09410316c6d8a476b7c05215f23c97fee7c14', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/b6n1R6XoRcVezOV5G61wfzIdw5KTSXnPf40LVO6uDj8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=b80da6562c06402e5d7993ec18f15a349eff9c69', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/b6n1R6XoRcVezOV5G61wfzIdw5KTSXnPf40LVO6uDj8.jpg?auto=webp&amp;s=78d083b583ef50ef87aa5977ac98182b1dd376cc', 'width': 1200}, 'variants': {}}]}",6,1639493299,1,"I have [a project](https://github.com/JeffreyBenjaminBrown/montevideo) that (on @paf31's advice, if I recall correctly) I had divided into a number of subprojects. I always run it in GHCI, and when I was using Stack I'm pretty sure I could rebuild incrementally. But then it stopped building in Stack, so I switched to Cabal, which only lets me rebuild incrementally for one subproject at a time -- if I make changes to another subproject, I have to quit and rerun `cabal ghci`. So suddenly compilation was taking a long time.

I ducked the problem by just making it a monorepo again. But it made me wonder -- how hard would it be to make compiled code content-addressed, like [Unison](https://www.unisonweb.org/) does?",True,False,False,haskell,t5_2qh36,67944,public,self,Content-addressed GHC?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rg9150/contentaddressed_ghc/,all_ads,6,,,,,,,,,,,,,,,,,,,,
757.0,[],False,chansey97,,[],,text,t2_wlhqb,False,False,False,[],False,False,1639488764,self.haskell,https://www.reddit.com/r/haskell/comments/rg7kmp/how_to_build_a_list_comprehension_with_unknown/,{},rg7kmp,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rg7kmp/how_to_build_a_list_comprehension_with_unknown/,False,,,6,1639488775,1,"List comprehension is a very appealing feature in Haskell. It could support a form of non-deterministic computation. 

For example,

```
[[x,y] | x &lt;- [0..2],
         y &lt;- [10..12]]
-- [[0,10],[0,11],[0,12],
--  [1,10],[1,11],[1,12],
--  [2,10],[2,11],[2,12]]
```

However, this construct is too static. I mean that these two generators (`x &lt;- [0..2]` and `y &lt;- [0..2]`) are solidified in the code. If the number of generators is unknown (e.g. List of generators as input), there is no way to use the List comprehension gracefully.  

One way to solve the problem is using `Traversable`:

```
sequenceA [[0..2],
           [10..12]]
-- [[0,10],[0,11],[0,12],
--  [1,10],[1,11],[1,12],
--  [2,10],[2,11],[2,12]]
```

Now we have a List of generators. So far so good.

The drawback of this approach is that it cannot handle the variables' references in a generator's body.

For example, 

```
[[x,y] | x &lt;- [0..2],
         y &lt;- [10*x..10*x+2]]
```

We cannot represent `[10*x..10*x+2]` in  `sequenceA`.

Question:

Is there any general way to do this job in Haskell? Maybe something like `sequenceA`, but can handle variables' references. Or do we have to write a small interpreter?

Thanks",True,False,False,haskell,t5_2qh36,67942,public,self,How to build a List comprehension with unknown number of generators?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rg7kmp/how_to_build_a_list_comprehension_with_unknown/,all_ads,6,,,,,,,,,,,,,,,,,,,,
758.0,[],False,davidfeuer,,[],,text,t2_tw66w,False,False,False,[],False,False,1639488625,cambridge.org,https://www.reddit.com/r/haskell/comments/rg7j0j/jfp_going_open_accessexpensive/,{},rg7j0j,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rg7j0j/jfp_going_open_accessexpensive/,False,,,6,1639488636,1,,False,False,False,haskell,t5_2qh36,67942,public,default,JFP going open access/expensive,0,[],1.0,https://www.cambridge.org/core/blog/2021/11/11/journal-of-functional-programming-moving-to-open-access/,all_ads,6,,,https://www.cambridge.org/core/blog/2021/11/11/journal-of-functional-programming-moving-to-open-access/,,,,,,,t3_qttgej,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'mttd', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_6gkbb', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1636907499.0, 'created_utc': 1636907499.0, 'discussion_type': None, 'distinguished': None, 'domain': 'cambridge.org', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': False, 'id': 'qttgej', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': False, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_qttgej', 'no_follow': False, 'num_comments': 4, 'num_crossposts': 2, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/ProgrammingLanguages/comments/qttgej/journal_of_functional_programming_moving_to_open/', 'pinned': False, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 112, 'secure_media': None, 'secure_media_embed': {}, 'selftext': '', 'selftext_html': None, 'send_replies': False, 'spoiler': False, 'stickied': False, 'subreddit': 'ProgrammingLanguages', 'subreddit_id': 't5_2qi8m', 'subreddit_name_prefixed': 'r/ProgrammingLanguages', 'subreddit_subscribers': 69951, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'default', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'Journal of Functional Programming moving to Open Access', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 112, 'upvote_ratio': 0.98, 'url': 'https://www.cambridge.org/core/blog/2021/11/11/journal-of-functional-programming-moving-to-open-access/', 'url_overridden_by_dest': 'https://www.cambridge.org/core/blog/2021/11/11/journal-of-functional-programming-moving-to-open-access/', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
759.0,[],False,dreixel,,[],,text,t2_378rf,False,False,False,[],False,False,1639485777,self.haskell,https://www.reddit.com/r/haskell/comments/rg6oqq/haskell_roles_in_warsaw_or_london_with_core/,{},rg6oqq,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rg6oqq/haskell_roles_in_warsaw_or_london_with_core/,False,self,"{'enabled': False, 'images': [{'id': 'Pej45jCCCvGafpeHNtjrCY3fqwyvNSVzDNVZ6SJlAa8', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/-S5wPTllu4OvBf4XPNKnn7gLq9Z0CuZWA4zBk0CaxyA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=50ada753ee9f2ab7056e297c2f95f8f94660fa7a', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/-S5wPTllu4OvBf4XPNKnn7gLq9Z0CuZWA4zBk0CaxyA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=61a5e506c506b0a6e8a589ea55d12e5dc3e0ff58', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/-S5wPTllu4OvBf4XPNKnn7gLq9Z0CuZWA4zBk0CaxyA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=30592b078b42739039a7c339ce85972526a0f2fb', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/-S5wPTllu4OvBf4XPNKnn7gLq9Z0CuZWA4zBk0CaxyA.jpg?auto=webp&amp;s=a7c7beb32a76b8110e865b81d8220054dec1d2f6', 'width': 480}, 'variants': {}}]}",6,1639485787,1,"I'm hiring Haskell developers again, for the Core Strats team of Modeling and Analytics. The head of our group has given a talk at the Haskell Implementer's Workshop last month where he described the team and what we do: [https://www.youtube.com/watch?v=A70SN7vFsKU](https://www.youtube.com/watch?v=A70SN7vFsKU)

&amp;#x200B;

Applications must go via these links:

Warsaw: [https://scb.taleo.net/careersection/ex/jobdetail.ftl?job=128083](https://scb.taleo.net/careersection/ex/jobdetail.ftl?job=128083)

London: [https://scb.taleo.net/careersection/ex/jobdetail.ftl?job=2100029752](https://scb.taleo.net/careersection/ex/jobdetail.ftl?job=2100029752)

&amp;#x200B;

The Warsaw position is open to both contractors and direct employment, whereas the London one is only open for direct employment. Standard Chartered supports (practically fully) remote working, but only from the country of payroll (PL or UK in this case), and after an initial 3-month in-office period (where circumstances allow). We will cover visa and relocation costs for successful employment applicants.

Note that the first step of the application is a Valued Behaviours Assessment and it is quite important: our team won't be able to see your application until you pass this assessment.",True,False,False,haskell,t5_2qh36,67942,public,self,Haskell roles in Warsaw or London with Core Strats at Standard Chartered,0,[],1.0,https://www.reddit.com/r/haskell/comments/rg6oqq/haskell_roles_in_warsaw_or_london_with_core/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,,,,,,,,,,,,,,
760.0,[],False,FogouangLoique,,[],,text,t2_hh7x1mxj,False,False,False,[],False,False,1639485326,self.haskell,https://www.reddit.com/r/haskell/comments/rg6k73/haskell_error/,{},rg6k73,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rg6k73/haskell_error/,False,,,6,1639485337,1,"&amp;#x200B;

[Please can someone help me to solve this?](https://preview.redd.it/l54fr0jt5i581.png?width=550&amp;format=png&amp;auto=webp&amp;s=a8e794af2ed5e65b6b4080f3543640dd8cc4ade9)",True,False,False,haskell,t5_2qh36,67942,public,self,Haskell error,0,[],1.0,https://www.reddit.com/r/haskell/comments/rg6k73/haskell_error/,all_ads,6,,,,130.0,140.0,"{'l54fr0jt5i581': {'e': 'Image', 'id': 'l54fr0jt5i581', 'm': 'image/png', 'p': [{'u': 'https://preview.redd.it/l54fr0jt5i581.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=ed546fc4318d2a0994042a263e271a56ca5f4a27', 'x': 108, 'y': 100}, {'u': 'https://preview.redd.it/l54fr0jt5i581.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=79c8aa11524df2089ed92caa40620ec02341fca5', 'x': 216, 'y': 201}, {'u': 'https://preview.redd.it/l54fr0jt5i581.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=203768ff76b12904223cbcb8bdf83ca5f2ddb6f7', 'x': 320, 'y': 298}], 's': {'u': 'https://preview.redd.it/l54fr0jt5i581.png?width=550&amp;format=png&amp;auto=webp&amp;s=a8e794af2ed5e65b6b4080f3543640dd8cc4ade9', 'x': 550, 'y': 513}, 'status': 'valid'}}",,,,,,,,,,,,,,
761.0,[],False,_query,,[],,text,t2_fjd8s,False,False,False,[],False,False,1639481001,github.com,https://www.reddit.com/r/haskell/comments/rg5g8v/ihp_v0170_has_been_released/,{},rg5g8v,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rg5g8v/ihp_v0170_has_been_released/,False,link,"{'enabled': False, 'images': [{'id': 'J7VL3DkdBjV42OiOtb_76SApbG3Fdoj3uJFQk3D8r80', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/Cpk071qmu6nkbQkKcP5M7qxAeaK14EEDWkW2J-gbUQg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ecb6de3981b368cdbf5eca40b032f43e10ec6965', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/Cpk071qmu6nkbQkKcP5M7qxAeaK14EEDWkW2J-gbUQg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9dcc6d36634cae5b44a770fa52a5e961fe3ed98e', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/Cpk071qmu6nkbQkKcP5M7qxAeaK14EEDWkW2J-gbUQg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=05d58182c074caa813de6f9f6028fb131dcda693', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/Cpk071qmu6nkbQkKcP5M7qxAeaK14EEDWkW2J-gbUQg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=30cb1c29734c03f4a0340d35baf4d039da17f52c', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/Cpk071qmu6nkbQkKcP5M7qxAeaK14EEDWkW2J-gbUQg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=4b54518103af31fb0ad6c2f0f89d3d4c714ed63c', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/Cpk071qmu6nkbQkKcP5M7qxAeaK14EEDWkW2J-gbUQg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=2a8d8c7445b2ce45cca16500d314dc9cf5f6fa10', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/Cpk071qmu6nkbQkKcP5M7qxAeaK14EEDWkW2J-gbUQg.jpg?auto=webp&amp;s=3a8bbd4d3e3a288c5b7c1a8766f0ae8c1db080f4', 'width': 1200}, 'variants': {}}]}",6,1639481012,1,,True,False,False,haskell,t5_2qh36,67940,public,default,IHP v0.17.0 has been released 🎉,0,[],1.0,https://github.com/digitallyinduced/ihp/releases/tag/v0.17.0,all_ads,6,,,https://github.com/digitallyinduced/ihp/releases/tag/v0.17.0,70.0,140.0,,,,,,,,,,,,,,,
762.0,[],False,AsykoSkwrl,,[],,text,t2_qzmzx,False,False,False,[],False,False,1639471670,self.haskell,https://www.reddit.com/r/haskell/comments/rg39fs/profiling_with_cabal/,{},rg39fs,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rg39fs/profiling_with_cabal/,False,self,"{'enabled': False, 'images': [{'id': '9ZyoJsrt8dK8wc_RW3xCX3I-wT9O0fVd8rzLLECEHGM', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/piyBZy6CE00mbP88Hs03r1m-gEPgDfeNMfS-MQ0WrHg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8f71fa824ece359cf95d8234200db530ad64fa60', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/piyBZy6CE00mbP88Hs03r1m-gEPgDfeNMfS-MQ0WrHg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=644dd3a44fef0728092a61ac0fdb5b67e011a405', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/piyBZy6CE00mbP88Hs03r1m-gEPgDfeNMfS-MQ0WrHg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c2e8ea8f2257ece98767b83bc97db74646b759bf', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/piyBZy6CE00mbP88Hs03r1m-gEPgDfeNMfS-MQ0WrHg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=516d70cd74757e752bbf3386eccc0d0fcd347989', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/piyBZy6CE00mbP88Hs03r1m-gEPgDfeNMfS-MQ0WrHg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=6429b53de84246a53494c397fbeea04dbc889ed5', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/piyBZy6CE00mbP88Hs03r1m-gEPgDfeNMfS-MQ0WrHg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=e3f9084252829ced5ce416a5e473de60cbecf9ad', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/piyBZy6CE00mbP88Hs03r1m-gEPgDfeNMfS-MQ0WrHg.jpg?auto=webp&amp;s=7b9767b993da5f95ebb39dec3a0b3adb0d3b96a7', 'width': 1200}, 'variants': {}}]}",6,1639471681,1,"Hello Haskellers!

Cutting to the chase: I have a cabal project for Advent of Code, and would like to profile it. I am familiar with profiling single *.hs files, but I would like to be able to profile the entire project.

What is the recommended best practice for doing this with cabal? I tried google, but it appears as though my googlefu need some work. My cabal file, as well as the rest of the project can be found [here](https://github.com/Zij-IT/advent_of_code/).

If any more information is needed, please do let me know!",True,False,False,haskell,t5_2qh36,67933,public,self,Profiling with Cabal,0,[],1.0,https://www.reddit.com/r/haskell/comments/rg39fs/profiling_with_cabal/,all_ads,6,,,,,,,,,,,,,,,,,,,,
763.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1639458072,self.haskell,https://www.reddit.com/r/haskell/comments/rfzr5t/advent_of_code_2021_day_14/,{},rfzr5t,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rfzr5t/advent_of_code_2021_day_14/,False,,,6,1639458083,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,67928,public,spoiler,Advent of Code 2021 day 14,0,[],1.0,https://www.reddit.com/r/haskell/comments/rfzr5t/advent_of_code_2021_day_14/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1639371671.255, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q', 't3_rf7pmo'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
764.0,[],False,webNoob13,,[],,text,t2_7bmygxmk,False,False,False,[],False,False,1639444374,self.haskell,https://www.reddit.com/r/haskell/comments/rfvd57/learn_you_a_haskell_kind_and_some_typefoo_title/,{},rfvd57,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rfvd57/learn_you_a_haskell_kind_and_some_typefoo_title/,False,,,6,1639444385,1,"What exactly is happening here?

    --book example
    data Frank a b = Frank {frankField :: b a} deriving (Show) 
    
    frank1 = Frank {frankField = Just ""HAHA""}
    frank2 = Frank {frankField = Types.Node 'a' Types.EmptyTree Types.EmptyTree}
    frank3 = Frank {frankField = ""YES""}
    frank4 = Frank {frankField = ['Y', 'E', 'S']}

I could do 

    data Frank a b = Frank {frankField :: a b} deriving (Show) 

and frank's 1 to 4 give the same result.

But unless it's the first way, ie. frankField :: b a, the following does not compile

    class Tofu t where 
      tofu :: j a -&gt; t a j 
    
    instance Tofu Frank where 
      tofu x = Frank x 
    
    --ghci below
    ch8_functors.hs:43:15: error:
        • Expected kind ‘* -&gt; (* -&gt; *) -&gt; *’,
            but ‘Frank’ has kind ‘(* -&gt; *) -&gt; * -&gt; *’
        • In the first argument of ‘Tofu’, namely ‘Frank’
          In the instance declaration for ‘Tofu Frank’
       |
    43 | instance Tofu Frank where 
                        ^^^^

I totally don't understand how a b's doesn't seem to matter for frank's 1 to 4 but not for tofu so I made my own example

    data Car a b = Car {make :: b, model :: a} deriving (Show, Eq)
    
    car1 = Car {make = ""Toyota"", model = ""Mirai""}
    car2 = Car ""Mazda"" ""EV""

ghci output:

    *LearnFunctors Data.Char&gt; car1
    Car {make = ""Toyota"", model = ""Mirai""}
    *LearnFunctors Data.Char&gt; car2
    Car {make = ""Mazda"", model = ""EV""}
    *LearnFunctors Data.Char&gt; 

??? but I gave car2 ""Mazda"" in a's place and ""EV"" in b's place so why isn't it:

Car {make = ""EV"", model = ""Mazda""} ?

This book was good until this part but I""m guessing I need to supplement with First Principles or another like Will Kurt's Get Programming in Haskell which covers Functors after Semigroup and Monoid.

This could be another question of its own but what order should I be learning these new concepts?

\-Monoid, Semigroup

\-Functor

\-Applicative

\-Monad

is the order Will Kurt teaches in as shown below in the table of contents for his book available on O'Reilly Safari.

&amp;#x200B;

https://preview.redd.it/9ja6cw2bse581.png?width=314&amp;format=png&amp;auto=webp&amp;s=447ecdbe0bbc660877c76c88dc7e907258d1f68e",True,False,False,haskell,t5_2qh36,67923,public,self,Learn You a Haskell: Kind and some Type-foo (title of section),0,[],1.0,https://www.reddit.com/r/haskell/comments/rfvd57/learn_you_a_haskell_kind_and_some_typefoo_title/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,140.0,140.0,"{'9ja6cw2bse581': {'e': 'Image', 'id': '9ja6cw2bse581', 'm': 'image/png', 'p': [{'u': 'https://preview.redd.it/9ja6cw2bse581.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=f0401e6a1e5c5f56d5dce249f303686e5eb15c87', 'x': 108, 'y': 216}, {'u': 'https://preview.redd.it/9ja6cw2bse581.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=08473d674ed8667fac72a8d1f49ffebcc1ade5a3', 'x': 216, 'y': 432}], 's': {'u': 'https://preview.redd.it/9ja6cw2bse581.png?width=314&amp;format=png&amp;auto=webp&amp;s=447ecdbe0bbc660877c76c88dc7e907258d1f68e', 'x': 314, 'y': 733}, 'status': 'valid'}}",,,,,,,,,,,,,,
765.0,[],False,bgamari,,[],,text,t2_7d9ta,False,False,False,[],False,False,1639423044,well-typed.com,https://www.reddit.com/r/haskell/comments/rfnl2n/welltyped_blog_ghc_activities_report/,{},rfnl2n,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rfnl2n/welltyped_blog_ghc_activities_report/,False,,,6,1639423055,1,,True,False,False,haskell,t5_2qh36,67914,public,default,[Well-Typed blog] GHC activities report (October–November 2021),0,[],1.0,https://well-typed.com/blog/2021/12/ghc-2021-10-2021-11/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://well-typed.com/blog/2021/12/ghc-2021-10-2021-11/,,,,,,,,,,,,,,,,,
766.0,[],False,AgtLeoFitz,,[],,text,t2_4xe0imwz,False,False,False,[],False,False,1639414275,self.haskell,https://www.reddit.com/r/haskell/comments/rfk4tw/how_to_install_a_specific_version_of_ghc_on/,{},rfk4tw,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rfk4tw/how_to_install_a_specific_version_of_ghc_on/,False,,,6,1639414286,1,"Hi, 

I've been using ghcup to manage and install ghc, stack, and cabal on my mac.  Now I tried installing ghc on windows with Chocolatey and Haskell Platform. It installs version 9.2.1 by default with \`choco install haskell-dev\`. I need version 8.10.7 installed since some packages that I'm using are not yet supported under 9.2.1. What's the recommended way to install 8.10.7. Is ghcup a viable alternative? I tried it and it seems not to have ""tui"" available on Windows for some reason.

Thank you!",True,False,False,haskell,t5_2qh36,67913,public,self,How to install a specific version of ghc on Windows?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rfk4tw/how_to_install_a_specific_version_of_ghc_on/,all_ads,6,,,,,,,,,,,,,,,,,,,,
767.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1639371670,self.haskell,https://www.reddit.com/r/haskell/comments/rf7pmo/advent_of_code_2021_day_13/,{},rf7pmo,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rf7pmo/advent_of_code_2021_day_13/,False,,,6,1639371681,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,67904,public,spoiler,Advent of Code 2021 day 13,0,[],1.0,https://www.reddit.com/r/haskell/comments/rf7pmo/advent_of_code_2021_day_13/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1639285277.53, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s', 't3_rehk1q'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
768.0,[],False,makeitabyss,,[],,text,t2_x6p2k,False,False,False,[],False,False,1639358130,self.haskell,https://www.reddit.com/r/haskell/comments/rf3ddr/m1_mac_how_do_i_upgrade_from_ghc_8_to_ghc_9_to/,{},rf3ddr,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rf3ddr/m1_mac_how_do_i_upgrade_from_ghc_8_to_ghc_9_to/,False,,,6,1639358140,1,"I am trying to upgrade GHC from 8.10.7 to 9.X.X. I am very new to Cabal/Stack/GHC, but wanting to get into Haskell development after really enjoying LINQ and F# as a full time C# engineer.

&amp;#x200B;

I have brew (3.3.7), stack (2.7.3), and Cabal (3.6.2) installed, and I thought something as simple as ""cabal update"" or ""brew update"" or ""stack update"" would somehow magically work.

&amp;#x200B;

For context, I am used to archlinux where *arch documentation*, a simple *pacman -Syu* or grabbing from the *AUR* solves 99.98% of my problems. But I am relatively new to apple hardware for development.

Thanks a ton, and I apologize for the ignorance.",True,False,False,haskell,t5_2qh36,67903,public,self,[M1 Mac] How do I upgrade from GHC 8 to GHC 9 to fully utilize Apple Silicon?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rf3ddr/m1_mac_how_do_i_upgrade_from_ghc_8_to_ghc_9_to/,all_ads,6,,,,,,,,,,,,,,,,,,,,
769.0,[],False,ellipticcode0,,[],,text,t2_2wtr8i2y,False,False,False,[],False,False,1639340644,self.haskell,https://www.reddit.com/r/haskell/comments/rexfg9/how_to_import_hidden_module_in_your_code/,{},rexfg9,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rexfg9/how_to_import_hidden_module_in_your_code/,False,,,6,1639340654,1,"### Is there any *easy* way to import the *Hidden module* to your code

Currently, I have to download the package source code and untar it into *stackproject/src* and I can use those *hidden module* in my code.

* Obviously, the obvious question is is there any *simple* way to import *hidden* module?",True,False,False,haskell,t5_2qh36,67898,public,self,How to import hidden module in your code,0,[],1.0,https://www.reddit.com/r/haskell/comments/rexfg9/how_to_import_hidden_module_in_your_code/,all_ads,6,,,,,,,,,,,,,,,,,,,,
770.0,[],False,snhmib,,[],,text,t2_feszn,False,False,False,[],False,False,1639335145,self.haskell,https://www.reddit.com/r/haskell/comments/revhdh/cabal_haddock_questions_how_to_generate_index_for/,{},revhdh,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/revhdh/cabal_haddock_questions_how_to_generate_index_for/,False,,,6,1639335155,1,"Hello!

 I don't understand how to get an index of locally available documentation and installed packages.

I added the flag: ""Documentation: True"", and indeed if I navigate to: '\~/.cabal/store/ghc-8.10.7/attoparsec-0.14.3-a88f9f2009aaf50ec4de28c96eaab575e97e192943bebbfec18a608dffd670fd/share/doc/html', all the docs are there, and they even link back to the ghc documentation (in 'file:///home/jurjen/.ghcup/ghc/8.10.7/share/doc/ghc-8.10.7/html/libraries'), which is great!

But navigating or exploring to such funky directories is unwieldy and I cannot find a generated index and they are not linked into the standard index living in 'ghcup/.../share/doc/ghc-8.10/html' which is annoying since that is my main source of information for installed packages.

I tried to set the options 

      docdir: /home/jurjen/.ghcup/share/doc/$abi/html/libraries/$libname
      htmldir: /home/jurjen/.ghcup/share/doc/$abi/html
      haddockdir: $htmldir

But that didn't seem to do nothing. Anyone know how to make a global index of all (user) installed packages with cabal?",True,False,False,haskell,t5_2qh36,67895,public,self,cabal / haddock questions / how to generate index for all installed local packages?,0,[],1.0,https://www.reddit.com/r/haskell/comments/revhdh/cabal_haddock_questions_how_to_generate_index_for/,all_ads,6,,,,,,,,,,,,,,,,,,,,
771.0,[],False,fluz1994,,[],,text,t2_4kuh2ocs,False,False,False,[],False,False,1639322375,self.haskell,https://www.reddit.com/r/haskell/comments/rer2v1/designing_libraries_in_haskell/,{},rer2v1,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rer2v1/designing_libraries_in_haskell/,False,,,6,1639322386,1,"After learning Haskell for some time, I would say that grasping most libraries and using them to build applications is a doable task, but what really puzzles me is how to cultivate the mindset to enable one to build a complex library. Some examples would be `servant`  (type-level concept), `scotty` (monad transformer concept),  `opaleye` (profunctor concept), and a lot more. Many Haskell libraries use sophisticated techniques to achieve DSL, but we seem to lack learning materials (the design parts, not the practical usage parts) that are accessible to everyday programmers.",True,False,False,haskell,t5_2qh36,67888,public,self,Designing libraries in Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/rer2v1/designing_libraries_in_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
772.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1639285277,self.haskell,https://www.reddit.com/r/haskell/comments/rehk1q/advent_of_code_2021_day_12/,{},rehk1q,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rehk1q/advent_of_code_2021_day_12/,False,,,6,1639285287,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,67888,public,spoiler,Advent of Code 2021 day 12,0,[],1.0,https://www.reddit.com/r/haskell/comments/rehk1q/advent_of_code_2021_day_12/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1639198874.83, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
773.0,[],False,lfborjas,,[],,text,t2_4vo4h,False,False,False,[],False,False,1639270155,self.haskell,https://www.reddit.com/r/haskell/comments/red3at/which_functors_are_strong_with_respect_to_either/,{},red3at,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/red3at/which_functors_are_strong_with_respect_to_either/,False,,,6,1639270165,1,"I'm reading the [Profunctor Optics paper](https://www.cs.ox.ac.uk/people/jeremy.gibbons/publications/poptics.pdf) and in it they implement an instance of `Strong` (they call it `Cartesian`) for the `Star` (aka `UpStar`) of a functor, like so:

```
instance Functor f =&gt; Cartesian (UpStar f) where
  first (UpStar u)  = UpStar (rstrength . cross u id)
  second (UpStar u) = UpStar (lstrength . cross id u)

-- some givens:
newtype UpStar f a b = UpStar {unUpStar :: a   -&gt; f b}
newtype Costar f a b = Costar {unCostar :: f a -&gt; b}

instance Functor f =&gt; Profunctor (UpStar f) where
  dimap f g (UpStar h) = UpStar (fmap g . h . f)

rstrength :: Functor f =&gt; (f a, b) -&gt; f (a, b)
rstrength (fx, y) = fmap (,y) fx

lstrength :: Functor f =&gt; (a, f b) -&gt; f (a, b)
lstrength (x, fy) = fmap (x,) fy

cross :: (t1 -&gt; a) -&gt; (t2 -&gt; b) -&gt; (t1, t2) -&gt; (a, b)
cross f g (a,b) = (f a, g b)
```


The paper doesn't go into the dual of `Star` much (`profunctors` calls `Costar`,) however, the docs for profunctors [say in passing](https://hackage.haskell.org/package/profunctors-5.6.2/docs/Data-Profunctor-Choice.html) that `Choice`, aka `Cocartesian`, is ""The generalization of Costar of Functor that is strong with respect to Either.""

Which means one could do something like this:

```
instance Applicative f =&gt; Choice (Costar f) where
  left (Costar c) = Costar magicL
  right (Costar c) = Costar magicR

magicR :: f (Either c a) -&gt; Either c b
magicR = error ""questionable""

magicL :: f (Either a c) -&gt; Either b c
magicL = error ""also questionable""
```

But surely those `magic` functions are too coarse/not applicable to all functors, since I can't figure out how to implement them for a general `f`!

My question is... I can't quite think of examples of functors for which one can write `instance Choice (Costar f)`, or even come up with a composition of parts like they approached it for Strong + Star. There [used to be a ""highly questionable"" instance for `Traversable` in `profunctors`](https://github.com/ekmett/profunctors/commit/ad66d3aab92b41b3ce6ca7bafce5ae705a718596#diff-e8f9b1183d660e3ed09fae2875089be34e93f8ec816ffd7b677e52df99a2a242) -- I don't quite get why it was highly questionable, maybe it didn't uphold the profunctor/choice laws?

Interestingly, both the paper and `profunctors` define the instance `Applicative f =&gt; instance Choice (Star f)`, because it's possible to ""put"" something into `f` via `pure`; so maybe the `Costar` route works for stuff where one can ""take"" something out of a functor? (That is probably wrong: there's surely a reason why the `Choice` instance for `Comonad` doesn't go this route!)

Anyhoo, I'm sure there's some really evident things I'm not seeing here, curious to see what the intuition is for which functors qualify for ""strong with respect Either""  to someone out there better at the more categorical theoretic side of Haskell!",True,False,False,haskell,t5_2qh36,67883,public,self,"Which functors are ""strong with respect to Either""?",0,[],1.0,https://www.reddit.com/r/haskell/comments/red3at/which_functors_are_strong_with_respect_to_either/,all_ads,6,,,,,,,,,,,,,,,,,,,,
774.0,[],False,mathiscool42,,[],,text,t2_75tdw1yx,False,False,False,[],False,False,1639244883,self.haskell,https://www.reddit.com/r/haskell/comments/re4u7q/why_does_haskell_want_string_and_not_string/,{},re4u7q,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,6,0,False,all_ads,/r/haskell/comments/re4u7q/why_does_haskell_want_string_and_not_string/,False,,,6,1639244893,1,"I tagged it as AoC since my question came up doing one of those problems but its more of a general question I'd say....  


So I learned about Advent of Code and wanted to use it to learn some more Haskell.  
I did the first day, which went well. However I struggle with the second one...

In theory it shouldn't be too complicated.. My approach was as follows:

1. Read the lines
2. Split the lines in 3 different lists (depending in the first character)
3. Sum up all values
4. \---

1.-2. were no problem.   
With 3 I thought I can just use foldl like that 

foldl (\\ p c -&gt; p + read (last c)) 0 testInputf

where testInputf is a list of Strings (\[String\]).  
For me it would make sense that c is the whole String and last c is the last element of the String... However this doesn't seem to be the case here... if I write it like that Haskell throws an error saying, that 

     Couldn't match type ‘Char’ with ‘[Char]’
      Expected type: [[String]]
        Actual type: [String]

And I can't figure out why... Is there anything Im missing? Is there a general way of getting all last elements out of the Strings in a String List?

For testing purposes Ive also tried using map 

    map (read . last) testInputf

which throws the same error and I can't figure out why...

Thank you very much!",True,False,False,haskell,t5_2qh36,67873,public,self,Why does Haskell want [[String]] and not [String],0,[],1.0,https://www.reddit.com/r/haskell/comments/re4u7q/why_does_haskell_want_string_and_not_string/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,,,
775.0,[],False,[deleted],,,,,,False,,,[],False,False,1639244281,self.haskell,https://www.reddit.com/r/haskell/comments/re4n0t/why_does_haskell_want_string_instead_of_string/,{},re4n0t,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/re4n0t/why_does_haskell_want_string_instead_of_string/,False,,,6,1639244291,1,[deleted],True,False,False,haskell,t5_2qh36,67872,public,default,Why does Haskell want [[String]] instead of [String]?,0,[],1.0,https://www.reddit.com/r/haskell/comments/re4n0t/why_does_haskell_want_string_instead_of_string/,all_ads,6,,,,,,,deleted,,,,,,,,,,dark,,,
776.0,[],False,Purpwood,,[],,text,t2_7un7r,False,False,True,[],False,False,1639231137,roganmurley.com,https://www.reddit.com/r/haskell/comments/re0br9/game_rules_with_a_free_monad_dsl/,{},re0br9,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/re0br9/game_rules_with_a_free_monad_dsl/,False,link,"{'enabled': False, 'images': [{'id': 'UziN5kXJkgkXTpI7EAkmyAUYTBKm2r0LWmOXtoxJfVg', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/t_F_sHGSfiIUGyCm4UNnuttfbPNBp06I1tnsuXlNJmA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4b00d24b30d41250558b4f70ad0f9e135228c017', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/t_F_sHGSfiIUGyCm4UNnuttfbPNBp06I1tnsuXlNJmA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2c20164b9471456dd081c35ccad441b8d04f31b9', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/t_F_sHGSfiIUGyCm4UNnuttfbPNBp06I1tnsuXlNJmA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=12343cfcbd88a345a8f11354ea853991fb852e96', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/t_F_sHGSfiIUGyCm4UNnuttfbPNBp06I1tnsuXlNJmA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0f7a61b120b3e441e56e97dd3acfaf0c06b3edb1', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/t_F_sHGSfiIUGyCm4UNnuttfbPNBp06I1tnsuXlNJmA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5b919f422114abfa52b1a2cb642ac28aca108aaf', 'width': 960}], 'source': {'height': 1024, 'url': 'https://external-preview.redd.it/t_F_sHGSfiIUGyCm4UNnuttfbPNBp06I1tnsuXlNJmA.jpg?auto=webp&amp;s=63dff6da06c9c6c532d6afb2b98e56eb9595bacd', 'width': 1024}, 'variants': {}}]}",6,1639231147,1,,True,False,False,haskell,t5_2qh36,67868,public,default,Game rules with a Free Monad DSL,0,[],1.0,https://roganmurley.com/2021/12/11/free-monads.html,all_ads,6,,,https://roganmurley.com/2021/12/11/free-monads.html,140.0,140.0,,,,,t3_re0bal,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'Purpwood', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_7un7r', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': True, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1639231091.0, 'created_utc': 1639231091.0, 'discussion_type': None, 'distinguished': None, 'domain': 'roganmurley.com', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': True, 'id': 're0bal', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': False, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_re0bal', 'no_follow': True, 'num_comments': 0, 'num_crossposts': 1, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/programming/comments/re0bal/how_and_why_my_game_uses_haskell_free_monads/', 'pinned': False, 'post_hint': 'link', 'preview': {'enabled': False, 'images': [{'id': 'UziN5kXJkgkXTpI7EAkmyAUYTBKm2r0LWmOXtoxJfVg', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/t_F_sHGSfiIUGyCm4UNnuttfbPNBp06I1tnsuXlNJmA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4b00d24b30d41250558b4f70ad0f9e135228c017', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/t_F_sHGSfiIUGyCm4UNnuttfbPNBp06I1tnsuXlNJmA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2c20164b9471456dd081c35ccad441b8d04f31b9', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/t_F_sHGSfiIUGyCm4UNnuttfbPNBp06I1tnsuXlNJmA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=12343cfcbd88a345a8f11354ea853991fb852e96', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/t_F_sHGSfiIUGyCm4UNnuttfbPNBp06I1tnsuXlNJmA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=0f7a61b120b3e441e56e97dd3acfaf0c06b3edb1', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/t_F_sHGSfiIUGyCm4UNnuttfbPNBp06I1tnsuXlNJmA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5b919f422114abfa52b1a2cb642ac28aca108aaf', 'width': 960}], 'source': {'height': 1024, 'url': 'https://external-preview.redd.it/t_F_sHGSfiIUGyCm4UNnuttfbPNBp06I1tnsuXlNJmA.jpg?auto=webp&amp;s=63dff6da06c9c6c532d6afb2b98e56eb9595bacd', 'width': 1024}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 1, 'secure_media': None, 'secure_media_embed': {}, 'selftext': '', 'selftext_html': None, 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'programming', 'subreddit_id': 't5_2fwo', 'subreddit_name_prefixed': 'r/programming', 'subreddit_subscribers': 3744173, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'default', 'thumbnail_height': 140, 'thumbnail_width': 140, 'title': 'How and why my game uses Haskell Free Monads', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 1, 'upvote_ratio': 1.0, 'url': 'https://roganmurley.com/2021/12/11/free-monads.html', 'url_overridden_by_dest': 'https://roganmurley.com/2021/12/11/free-monads.html', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
777.0,[],False,tonynotworking,,[],,text,t2_5h8dngnj,False,False,False,[],False,False,1639224781,self.haskell,https://www.reddit.com/r/haskell/comments/rdyk5c/online_study_for_chameleon_a_haskell_visual_type/,{},rdyk5c,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/rdyk5c/online_study_for_chameleon_a_haskell_visual_type/,False,,,6,1639224791,1,"Hi, r/haskell, 

I am working on Chameleon, an experimental visual type debugging tool for Haskell. A couple of months ago I posted an [advertisement](https://www.reddit.com/r/haskell/comments/qakmcc/online_study_for_haskell_visual_type_debugging/) for a user study for Chameleon. After that post, I was overwhelmed by a very generous amount of participation and constructive feedback from the wholesome r/haskell community.  This time I want to conduct the study with more complicated code challenges.  Some of the code I took from real-life Haskell projects, such as Cabal, hledger, xmonad,etc.

If you are interested in helping us with our human-centered programming research, or you want to check out our Haskell type debugging tool, please click this link to proceed [https://sup.ercu.be](https://blend.ercu.be/). The study is anonymous, and it will take you about 20 - 30 minutes to complete. But in turn, it will help us immensely.

I am happy to answer any questions regarding Chameleon in this thread.

Thank you,

Shuai, Interactive Haskell Type Inference Exploration Team",True,False,False,haskell,t5_2qh36,67860,public,self,"Online Study for Chameleon, a Haskell Visual Type Debugging Tool Design (Cont.)",0,[],1.0,https://www.reddit.com/r/haskell/comments/rdyk5c/online_study_for_chameleon_a_haskell_visual_type/,all_ads,6,,,,,,,,,,,,,,,,,,,,
778.0,[],False,webNoob13,,[],,text,t2_7bmygxmk,False,False,False,[],False,False,1639202102,self.haskell,https://www.reddit.com/r/haskell/comments/rdt0s7/why_would_i_want_to_partially_apply_a_type/,{},rdt0s7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,16,0,False,all_ads,/r/haskell/comments/rdt0s7/why_would_i_want_to_partially_apply_a_type/,False,,,6,1639202112,1,"In Learn You a Haskell 8.5, they have this example

    --partially apply type constructor
    type IntMap v = Map.Map Int v 
    
    type IntMap' = Map.Map Int 

How would I use this?  I only know how to make a so-called IntMap like this

    import qualified Data.Map as Map
    
    someAssocList = [(1, ""John""), (2, ""Lisa""), (3, ""Mary""), (4, ""Sandra"")]
    myIntMap = Map.fromList someAssocList",True,False,False,haskell,t5_2qh36,67852,public,self,Why would I want to partially apply a type constructor for an IntMap?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rdt0s7/why_would_i_want_to_partially_apply_a_type/,all_ads,6,,,,,,,,,,,,,,,,,,,,
779.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1639198874,self.haskell,https://www.reddit.com/r/haskell/comments/rds41s/advent_of_code_2021_day_11/,{},rds41s,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,15,0,False,all_ads,/r/haskell/comments/rds41s/advent_of_code_2021_day_11/,False,,,6,1639198885,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,67851,public,spoiler,Advent of Code 2021 day 11,0,[],1.0,https://www.reddit.com/r/haskell/comments/rds41s/advent_of_code_2021_day_11/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1639198874.83, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1', 't3_rds41s'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
780.0,[],False,Mindless-Ties,,[],,text,t2_hfzipacq,False,False,False,[],False,False,1639198132,self.haskell,https://www.reddit.com/r/haskell/comments/rdrw4q/how_can_i_remove_tuples_from_nested_lists/,{},rdrw4q,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rdrw4q/how_can_i_remove_tuples_from_nested_lists/,False,,,6,1639198143,1,[removed],True,False,False,haskell,t5_2qh36,67851,public,self,How can I remove Tuples from nested Lists depending on consistency,0,[],1.0,https://www.reddit.com/r/haskell/comments/rdrw4q/how_can_i_remove_tuples_from_nested_lists/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,automod_filtered,,,,,,,,,,,,,
781.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1639171434,self.haskell,https://www.reddit.com/r/haskell/comments/rdj1fv/text20rc2_with_utf8_underlying_representation_is/,{},rdj1fv,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/rdj1fv/text20rc2_with_utf8_underlying_representation_is/,False,,,6,1639171445,1,"I'm happy to announce that the **second** release candidate for upcoming `text-2.0` with UTF-8 underlying representation has been just uploaded on Hackage: [https://hackage.haskell.org/package/text-2.0/candidate](https://hackage.haskell.org/package/text-2.0/candidate)

Changelog: [https://hackage.haskell.org/package/text-2.0/candidate/changelog](https://hackage.haskell.org/package/text-2.0/candidate/changelog)

Please give it a try. Here is a `cabal.project` template: [https://gist.github.com/Bodigrim/9834568f075be36a1c65e7aaba6a15db](https://gist.github.com/Bodigrim/9834568f075be36a1c65e7aaba6a15db)

**What's changed between rc1 and rc2?**

[`head.hackage`](https://gitlab.haskell.org/ghc/head.hackage/-/tree/master/patches) has been updated to `text-2.0`, which helped to find and fix several bugs and regressions.

**What's next?**

If no critical issues are identified in the next week or two, the final release of `text-2.0` will follow shortly.

[Previous announcement](https://www.reddit.com/r/haskell/comments/qxnfkc/text20rc1_with_utf8_underlying_representation_is/)",True,False,False,haskell,t5_2qh36,67843,public,self,text-2.0-rc2 with UTF8 underlying representation is available for testing!,0,[],1.0,https://www.reddit.com/r/haskell/comments/rdj1fv/text20rc2_with_utf8_underlying_representation_is/,all_ads,6,,,,,,,,,,,,,,,,,,,,
782.0,[],False,Duarte_ML,,[],,text,t2_2dyg60tn,False,False,False,[],False,False,1639170936,self.haskell,https://www.reddit.com/r/haskell/comments/rdiurg/haskell_gloss/,{},rdiurg,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,13,0,False,all_ads,/r/haskell/comments/rdiurg/haskell_gloss/,False,,,6,1639170946,1,Recently I installed Fedora on my PC. When I tried to install gloss the installation failed. Does anyone using this distro know why this happens and how to solve the problem ?,True,False,False,haskell,t5_2qh36,67843,public,self,Haskell Gloss,0,[],1.0,https://www.reddit.com/r/haskell/comments/rdiurg/haskell_gloss/,all_ads,6,,,,,,,,,,,,,,,,,,,,
783.0,[],False,reirob,,[],,text,t2_61t7e,False,False,False,[],False,False,1639170410,las.rs,https://www.reddit.com/r/haskell/comments/rdinq2/using_haskell_as_my_shell/,{},rdinq2,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,13,0,False,all_ads,/r/haskell/comments/rdinq2/using_haskell_as_my_shell/,False,,,6,1639170420,1,,False,False,False,haskell,t5_2qh36,67843,public,default,Using Haskell as my shell,0,[],1.0,https://las.rs/blog/haskell-as-shell.html,all_ads,6,,,https://las.rs/blog/haskell-as-shell.html,,,,,,,,,,,,,,,,,
784.0,[],False,kindaro,,[],,text,t2_pcbvq,False,False,False,[],False,False,1639159316,scalac.io,https://www.reddit.com/r/haskell/comments/rdei9l/according_to_this_ranking_haskell_is_the_second/,{},rdei9l,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,44,0,False,all_ads,/r/haskell/comments/rdei9l/according_to_this_ranking_haskell_is_the_second/,False,link,"{'enabled': False, 'images': [{'id': 'tX9kd113Eza962JCjYMb0-6cGhK3G2iJvlkZ4eopWWE', 'resolutions': [{'height': 56, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=99381a04d0a94aa7dfdeadb12728f997a991a16b', 'width': 108}, {'height': 113, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c0fa4fc24c682543a2c9e272bcaf9f8e080199c8', 'width': 216}, {'height': 167, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=883a5fd2d075d1ff25ef374b655a4d5e66a05830', 'width': 320}, {'height': 334, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=9aa556599ee32c5aa1f75fb5b8d4ea45b4be5570', 'width': 640}, {'height': 502, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c341834a473c91bbe6fe5a6472e2d22479e01471', 'width': 960}, {'height': 565, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=063971db508242d85264a1f75c64651e4661c154', 'width': 1080}], 'source': {'height': 628, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?auto=webp&amp;s=8a09f1dd43067bcff3f24b42d64f61d5db172598', 'width': 1200}, 'variants': {}}]}",6,1639159327,1,,True,False,False,haskell,t5_2qh36,67844,public,default,"According to this ranking, Haskell is the second most disliked functional language.",0,[],1.0,https://scalac.io/ranking/functional-programming-languages-sentiment-ranking/,all_ads,6,,,https://scalac.io/ranking/functional-programming-languages-sentiment-ranking/,73.0,140.0,,,,,t3_rcjzpo,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'scalac_io', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_7712pza5', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1639063646.0, 'created_utc': 1639063646.0, 'discussion_type': None, 'distinguished': None, 'domain': 'scalac.io', 'downs': 0, 'edited': False, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': False, 'id': 'rcjzpo', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': False, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': '', 'link_flair_richtext': [], 'link_flair_template_id': 'c7fc102c-f1dd-11e7-9f15-0e2a167684fc', 'link_flair_text': 'News', 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_rcjzpo', 'no_follow': False, 'num_comments': 24, 'num_crossposts': 2, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/functionalprogramming/comments/rcjzpo/functional_programming_languages_sentiment_ranking/', 'pinned': False, 'post_hint': 'link', 'preview': {'enabled': False, 'images': [{'id': 'tX9kd113Eza962JCjYMb0-6cGhK3G2iJvlkZ4eopWWE', 'resolutions': [{'height': 56, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=99381a04d0a94aa7dfdeadb12728f997a991a16b', 'width': 108}, {'height': 113, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c0fa4fc24c682543a2c9e272bcaf9f8e080199c8', 'width': 216}, {'height': 167, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=883a5fd2d075d1ff25ef374b655a4d5e66a05830', 'width': 320}, {'height': 334, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=9aa556599ee32c5aa1f75fb5b8d4ea45b4be5570', 'width': 640}, {'height': 502, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c341834a473c91bbe6fe5a6472e2d22479e01471', 'width': 960}, {'height': 565, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=063971db508242d85264a1f75c64651e4661c154', 'width': 1080}], 'source': {'height': 628, 'url': 'https://external-preview.redd.it/RXCX8x252r2Nr53zo9BFRclgD24st73qWObDAbaVqS0.jpg?auto=webp&amp;s=8a09f1dd43067bcff3f24b42d64f61d5db172598', 'width': 1200}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 26, 'secure_media': None, 'secure_media_embed': {}, 'selftext': '', 'selftext_html': None, 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'functionalprogramming', 'subreddit_id': 't5_2vcmg', 'subreddit_name_prefixed': 'r/functionalprogramming', 'subreddit_subscribers': 16878, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'https://b.thumbs.redditmedia.com/XfjPyb1uyOcW-7XellwyKiVFiiaPl4biYZdwIjMCFvw.jpg', 'thumbnail_height': 73, 'thumbnail_width': 140, 'title': 'Functional Programming Languages Sentiment Ranking', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 26, 'upvote_ratio': 0.96, 'url': 'https://scalac.io/ranking/functional-programming-languages-sentiment-ranking/', 'url_overridden_by_dest': 'https://scalac.io/ranking/functional-programming-languages-sentiment-ranking/', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
785.0,[],False,davidfeuer,,[],,text,t2_tw66w,False,False,False,[],False,False,1639149924,self.haskell,https://www.reddit.com/r/haskell/comments/rdb199/priority_queue_benchmarks/,{},rdb199,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,11,0,False,all_ads,/r/haskell/comments/rdb199/priority_queue_benchmarks/,False,,,6,1639149935,1,"I've started working on performance of the venerable but somewhat neglected pqueue package. The changes I've made so far are pretty obviously good, and make a big difference in even the most informal testing. But to make decisions about smaller points, I really need benchmarks, and the package has none. Does anyone know of a benchmark suite for priority queues? One that includes algorithms that involve persistent queue use would be particularly desirable, but I'll take anything.

Cross-posted from the haskell-cafe mailing list.",True,False,False,haskell,t5_2qh36,67840,public,self,Priority queue benchmarks,0,[],1.0,https://www.reddit.com/r/haskell/comments/rdb199/priority_queue_benchmarks/,all_ads,6,,,,,,,,,,,,,,,,,,,,
786.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1639145297,haskellweekly.news,https://www.reddit.com/r/haskell/comments/rd9fty/issue_293_haskell_weekly_newsletter/,{},rd9fty,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rd9fty/issue_293_haskell_weekly_newsletter/,False,,,6,1639145308,1,,True,False,False,haskell,t5_2qh36,67840,public,default,Issue 293 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/293.html,all_ads,6,,,https://haskellweekly.news/issue/293.html,,,,,,,,,,,,,,,,,
787.0,[],False,szpaceSZ,,[],,text,t2_11ogx3,False,False,False,[],False,False,1639140503,self.haskell,https://www.reddit.com/r/haskell/comments/rd7wip/deriving_musings/,{},rd7wip,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,6,0,False,all_ads,/r/haskell/comments/rd7wip/deriving_musings/,False,,,6,1639140514,1,"I was musing about the following:

&gt; Would a language version\*, where 'in the case of a `newtype` everything (that's derivable, including with language extensions, like `GeneralizedNewTypeDeriving`) is automatically derived, unless a manual derivation or a manual instance is defined (or manually suppressed, with a new syntax)' be more ergonomic?

I was thinking about this, because I noticed that with quick problems I was often reaching for `type` instead of `newtype`. The latter would afford more type safety, but even manually adding the relevant `deriving ...` clauses felt like a chore for the Advent of Code problems.

__________
\*) I don't pretend that would still necessarily fall under Haskell2010 + a new extension; maybe this would need to be a hypothetical Haskell derivative, because of semantic changes down the line.
__________


Would this even be viable? Would there be undesirable consequences? Would it indeed improve ergonomics, or was that stray thought just a wrong impression?",True,False,False,haskell,t5_2qh36,67838,public,self,Deriving musings,0,[],1.0,https://www.reddit.com/r/haskell/comments/rd7wip/deriving_musings/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
788.0,[],False,oskargreda,,[],,text,t2_fi2s2co8,False,False,False,[],False,False,1639139498,self.haskell,https://www.reddit.com/r/haskell/comments/rd7mhg/mlabs_is_hiring_haskellerspurescript_developers/,{},rd7mhg,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/rd7mhg/mlabs_is_hiring_haskellerspurescript_developers/,False,self,"{'enabled': False, 'images': [{'id': 'GnuOK9IWNyfPHXokumwalY9XRYCi5oSA4uOxJlBNBp4', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f6c520b66a9e4cf15ae1b4b79af413002418a97e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=78ce6df2b94f79b0ccb5ac2b1439fdbd87be5a53', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d0ed86839ce6deb3d5d37506ef62434b8a77baf3', 'width': 320}], 'source': {'height': 500, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?auto=webp&amp;s=562a0dfc197f2356edb2e6c70d03e94ba27414cf', 'width': 500}, 'variants': {}}]}",6,1639139508,1," 

MLabs is hiring Haskellers/Purescript Developers! (Full remote, worldwide)

MLabs is a rapidly growing, globally distributed software consultancy, working with Haskell, Rust, and Python.

Currently we are looking to fill a position with a great opportunity to use both Haskell and Purescript.

You will be a part of an established team and work collaboratively to come up with solutions, on an ongoing contract basis.

Experience and/or interest with any of the below technologies/business fields are an asset:-

\- Blockchain, Especially Cardano or Ergo

\- Functional programming

\- Finance

\- Consultancies/Agencies

\- NFTs

\- Web Stack

\- Formal Methods, Dependant types, theorem provers

\- Sales engineering

\- Cybersecurity

We offer competitive salaries and varied shift patterns to suit everyone. 

For more information about these roles and applications, check &lt;[https://apply.workable.com/mlabs/j/63DAAA4AEF/](https://apply.workable.com/mlabs/j/63DAAA4AEF/)\&gt;

In case of any questions please send an email to: [oskar@mlabs.city](mailto:oskar@mlabs.city)

If you are interested in an internship send your CV to [oskar@mlabs.city](mailto:oskar@mlabs.city)

We will get back to you as soon as possible!",True,False,False,haskell,t5_2qh36,67838,public,self,"MLabs is hiring Haskellers/Purescript Developers! (Full remote, worldwide) Internship positions also available - Cohort starting Jan/Feb 2022!",0,[],1.0,https://www.reddit.com/r/haskell/comments/rd7mhg/mlabs_is_hiring_haskellerspurescript_developers/,all_ads,6,,,,,,,,,,,,,,,,,,,,
789.0,[],False,Expensive-Frame-7309,,[],,text,t2_8om2rjcj,False,False,False,[],False,False,1639128606,self.haskell,https://www.reddit.com/r/haskell/comments/rd4z9a/can_cases_not_directly_output_results_but_use_the/,{},rd4z9a,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/rd4z9a/can_cases_not_directly_output_results_but_use_the/,False,,,6,1639128617,1," this is what i mean:

    case e of   
    p1 -&gt; e1 --i dont want to output this result for example but store it to process the case selection further down the fucntion i tried using ""let"" and ""in"" but its not working.  
    p2 -&gt; e2",True,False,False,haskell,t5_2qh36,67837,public,self,Can cases not directly output results but use the case results to pass the information further down the function?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rd4z9a/can_cases_not_directly_output_results_but_use_the/,all_ads,6,,,,,,,,,,,,,,,,,,,,
790.0,[],False,ss4ggtbbk,,[],,text,t2_6739d,False,False,False,[],False,False,1639124728,i.redd.it,https://www.reddit.com/r/haskell/comments/rd42qk/spjs_dedication_to_haskell_reminds_me_of_something/,{},rd42qk,False,False,False,False,True,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rd42qk/spjs_dedication_to_haskell_reminds_me_of_something/,False,image,"{'enabled': True, 'images': [{'id': 'M2ClsqI2z_uGpUO893keaS-9kKTsw2r7-5RzGax-cKg', 'resolutions': [{'height': 174, 'url': 'https://preview.redd.it/dw28u5todo481.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f27a2b9b1f7c80ac6b764a8970201d8795a8059f', 'width': 108}, {'height': 349, 'url': 'https://preview.redd.it/dw28u5todo481.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6bf517a8d898664c1cba34f5ce427e51bfec363d', 'width': 216}, {'height': 517, 'url': 'https://preview.redd.it/dw28u5todo481.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9bbe78e55ad03f2c26a649932219b44d469b6fcb', 'width': 320}], 'source': {'height': 944, 'url': 'https://preview.redd.it/dw28u5todo481.jpg?auto=webp&amp;s=e12b9043bb97021aa2bc992563535fdd29a3106a', 'width': 584}, 'variants': {}}]}",6,1639124739,1,,True,False,False,haskell,t5_2qh36,67837,public,image,SPJ's dedication to Haskell reminds me of something...,0,[],1.0,https://i.redd.it/dw28u5todo481.jpg,all_ads,6,,,https://i.redd.it/dw28u5todo481.jpg,140.0,140.0,,moderator,,,,,,,,,,,,,
791.0,[],False,Lokesh112k,,[],,text,t2_2w00kphv,False,False,False,[],False,False,1639121811,self.haskell,https://www.reddit.com/r/haskell/comments/rd3duu/what_is_haskell_language_server/,{},rd3duu,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,15,0,False,all_ads,/r/haskell/comments/rd3duu/what_is_haskell_language_server/,False,,,6,1639121821,1,"Hi haskellers. I was installing haskell on my distro, I saw a package called haskell-language-server. I searched a lot on internet, but I want an easy explaination of language-server and haskell-language-server in simple words. If you can also explain it layman's term, it would be very helpful, hopefully. I appreciate your help.",True,False,False,haskell,t5_2qh36,67838,public,self,What is haskell language server?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rd3duu/what_is_haskell_language_server/,all_ads,6,,,,,,,,,,,,,,,,,,,,
792.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1639112473,self.haskell,https://www.reddit.com/r/haskell/comments/rd0sw1/advent_of_code_2021_day_10/,{},rd0sw1,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,44,0,False,all_ads,/r/haskell/comments/rd0sw1/advent_of_code_2021_day_10/,False,,,6,1639112483,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,67836,public,spoiler,Advent of Code 2021 day 10,0,[],1.0,https://www.reddit.com/r/haskell/comments/rd0sw1/advent_of_code_2021_day_10/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1639112473.366, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg', 't3_rd0sw1'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
793.0,[],False,ilikebrckhmptn,,[],,text,t2_1anaklfg,False,False,False,[],False,False,1639087198,self.haskell,https://www.reddit.com/r/haskell/comments/rcsf4p/mod_confusion_in_caesar_cyper/,{},rcsf4p,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/rcsf4p/mod_confusion_in_caesar_cyper/,False,,,6,1639087208,1,"So I'm trying to implement a caesar cypher (see below). I have a function (caesar) that shifts right, e.g. caesar 1 ""abc"" would result in ""bcd"", that works as intended. Now I was thinking to shift that to the left, I'd just have to adjust the the shift functions a little, but my current implementation doesn't work around the edges, e.g. unCaesar 1 ""abc"" results in ""baz"" (?!) . I would love an explanation on why the shiftLeft functions behave like they do :)

    import Data.Char
    
    caesar :: Int -&gt; String -&gt; String
    caesar _ [] = []
    caesar n (x:xs) = shiftRight n x : caesar n xs
    
    unCaesar :: Int -&gt; String -&gt; String
    unCaesar _ [] = []
    unCaesar n (x:xs) = shiftLeft n x : unCaesar n xs
    
    shiftRight :: Int -&gt; Char -&gt; Char
    shiftRight a b
      | isUpper b = shiftRightUpper a b
      | isLower b = shiftRightLower a b
      | otherwise = b
    
    shiftLeft :: Int -&gt; Char -&gt; Char
    shiftLeft a b
      | isUpper b = shiftLeftUpper a b
      | isLower b = shiftLeftLower a b
      | otherwise = b
    
    shiftRightLower :: Int -&gt; Char -&gt; Char
    shiftRightLower a b = chr $ ((a + (ord b - ord 'a')) `mod` 26) + ord 'a'
    
    shiftRightUpper :: Int -&gt; Char -&gt; Char
    shiftRightUpper a b = chr $ ((a + (ord b - ord 'A')) `mod` 26) + ord 'A'
    
    shiftLeftLower :: Int -&gt; Char -&gt; Char -- doesn't work yet
    shiftLeftLower a b = chr $ ((a - (ord b - ord 'a')) `mod` 26) + ord 'a'
    
    shiftLeftUpper :: Int -&gt; Char -&gt; Char -- doesn't work either
    shiftLeftUpper a b = chr $ ((a - (ord b - ord 'A')) `mod` 26) + ord 'A'",True,False,False,haskell,t5_2qh36,67827,public,self,`mod` confusion in caesar cyper,0,[],1.0,https://www.reddit.com/r/haskell/comments/rcsf4p/mod_confusion_in_caesar_cyper/,all_ads,6,,,,,,,,,,,,,,,,,,,,
794.0,[],False,tuncfor,,[],,text,t2_h70yw275,False,False,False,[],False,False,1639086221,self.haskell,https://www.reddit.com/r/haskell/comments/rcs2hk/questionaoc_some_beginner_questions_about/,{},rcs2hk,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/rcs2hk/questionaoc_some_beginner_questions_about/,False,,,6,1639086232,1,"I tried to solve Day 9, part one with [algebraic graphs](https://hackage.haskell.org/package/algebraic-graphs-0.5), a library I wanted to try out for a long time. I eventually failed, because my approach (build graph -&gt; remove all vertices that have a lower neighbour -&gt; count the value of the remaining vertices) relies on `neighbours :: Ord a =&gt; a -&gt; Graph a -&gt; Set a`, which has an inefficient implementation (folds the whole graph, hence my algorithm is at least quadratic.) It still works for the example input tho! :)

I would be glad about answer or general feedback about the my solution:",True,False,False,haskell,t5_2qh36,67827,public,self,[question][aoc] Some beginner questions about algebraic-graphs,0,[],1.0,https://www.reddit.com/r/haskell/comments/rcs2hk/questionaoc_some_beginner_questions_about/,all_ads,6,,,,,,,,,,,,,,,,,,,,
795.0,[],False,symmetricon,,[],,text,t2_mhkb67r,False,False,False,[],False,False,1639078582,self.haskell,https://www.reddit.com/r/haskell/comments/rcpax6/relating_functions_with_custom_types/,{},rcpax6,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,9,0,False,all_ads,/r/haskell/comments/rcpax6/relating_functions_with_custom_types/,False,,,6,1639078592,1,"I have a record Board that's used for game board data and a series of functions to work with it. Is the way of relating these function with the type Board just to parametrize them with Board and maybe keep them all in a single module? e.g: 

    data Board = Board {...}
    
    printBoard :: Board -&gt; IO ()
    clearBoard :: Board -&gt; Board
    ...",True,False,False,haskell,t5_2qh36,67825,public,self,relating functions with custom types,0,[],1.0,https://www.reddit.com/r/haskell/comments/rcpax6/relating_functions_with_custom_types/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
796.0,[],False,bear_blu,,[],,text,t2_gy9cm2e2,False,False,False,[],False,False,1639077951,youtu.be,https://www.reddit.com/r/haskell/comments/rcp2nf/the_most_popular_programming_languages_19652020/,{},rcp2nf,False,True,False,True,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rcp2nf/the_most_popular_programming_languages_19652020/,False,rich:video,"{'enabled': False, 'images': [{'id': 'pSA36l4ylYpmvkjKk25Zp6-cfkGb2sx4g0STVCJbpYs', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/o094PyctluYmB2klhMKvnhJsc-VwP1H0XHcZfDfNkRQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a5e8d6d3c14cff27b39e2d0c57c24b6fb5b5f6ff', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/o094PyctluYmB2klhMKvnhJsc-VwP1H0XHcZfDfNkRQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=5cc2ea3d57e8fb08b8f76aef1e526d05f7dc1ed5', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/o094PyctluYmB2klhMKvnhJsc-VwP1H0XHcZfDfNkRQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=048279b2e75a9ceabe9db4e5c61ee2b80678232e', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/o094PyctluYmB2klhMKvnhJsc-VwP1H0XHcZfDfNkRQ.jpg?auto=webp&amp;s=340d33b9b937f4626bc808619ec49c5a96c1e4a4', 'width': 480}, 'variants': {}}]}",6,1639077962,1,,True,False,False,haskell,t5_2qh36,67825,public,image,The Most Popular Programming Languages - 1965/2020,0,[],1.0,https://youtu.be/UNSoPa-XQN0,all_ads,6,be2af704-5664-11eb-8e65-0ecd290c3053,video,https://youtu.be/UNSoPa-XQN0,105.0,140.0,,,,,,,"{'oembed': {'author_name': 'Statistics and data', 'author_url': 'https://www.youtube.com/c/Statisticsanddata', 'height': 200, 'html': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/UNSoPa-XQN0?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/UNSoPa-XQN0/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'The Most Popular Programming Languages - 1965/2020', 'type': 'video', 'version': '1.0', 'width': 267}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/UNSoPa-XQN0?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 267}","{'oembed': {'author_name': 'Statistics and data', 'author_url': 'https://www.youtube.com/c/Statisticsanddata', 'height': 200, 'html': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/UNSoPa-XQN0?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/UNSoPa-XQN0/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'The Most Popular Programming Languages - 1965/2020', 'type': 'video', 'version': '1.0', 'width': 267}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""267"" height=""200"" src=""https://www.youtube.com/embed/UNSoPa-XQN0?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/rcp2nf', 'scrolling': False, 'width': 267}",,,,,
797.0,[],False,jamesjean2001,,[],,text,t2_46us7vrv,False,False,False,[],False,False,1639075441,self.haskell,https://www.reddit.com/r/haskell/comments/rco5ed/get_maplookup/,{},rco5ed,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/rco5ed/get_maplookup/,False,,,6,1639075457,1,"Looking at the following syntax:

`getValues x1 = do`  
  `g &lt;- get`

  `let name = ""aName""`  
  `return [Map.lookup x1 (myMap g)]` 

&amp;#x200B;

1. Does &lt;- get set g to the output of the return line? If not, what does g &lt;- get do?
2. x1 appears to be the key to a map lookup, and myMap g is the map, but what is the relationship between the g in myMap g and the g in g &lt;- get. Recursive? There is no g as an argument to getValues.",True,False,False,haskell,t5_2qh36,67824,public,self,get Map.lookup,0,[],1.0,https://www.reddit.com/r/haskell/comments/rco5ed/get_maplookup/,all_ads,6,,,,,,,,,,,,,,,,,,,,
798.0,[],False,kablewie,,[],,text,t2_cfbyd,False,False,False,[],False,False,1639055175,github.com,https://www.reddit.com/r/haskell/comments/rcha90/infinite_recursion_in_monoidalcontainers/,{},rcha90,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/rcha90/infinite_recursion_in_monoidalcontainers/,False,link,"{'enabled': False, 'images': [{'id': '6gkqwARGyoJI2IG-3ZdZXgRilNCc2VCfsmpyRDl-KZc', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/GniRYJIkbFkm0LSO1-VmvDpDCyyvTTiG74AxfxSMOTw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=cb11d95bd9657c074b3cc6c9f97ab2906644b78a', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/GniRYJIkbFkm0LSO1-VmvDpDCyyvTTiG74AxfxSMOTw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9881a7f65fc01e3ba0cd09c21f4aa244c46b9261', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/GniRYJIkbFkm0LSO1-VmvDpDCyyvTTiG74AxfxSMOTw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1b0785f52ef04ca577addd996e3b1bc02db61590', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/GniRYJIkbFkm0LSO1-VmvDpDCyyvTTiG74AxfxSMOTw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ab8023064964cbe24c4c5d92175729a513ebf010', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/GniRYJIkbFkm0LSO1-VmvDpDCyyvTTiG74AxfxSMOTw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=598e47aa4be6b0e73ce5b70ea29e424df2339a7c', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/GniRYJIkbFkm0LSO1-VmvDpDCyyvTTiG74AxfxSMOTw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=80e7bae2c21796c5c2b45da3dd98381f88903dce', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/GniRYJIkbFkm0LSO1-VmvDpDCyyvTTiG74AxfxSMOTw.jpg?auto=webp&amp;s=9ebb59563a4a2b9872fed64c3b7bbd94ae97a8c2', 'width': 1200}, 'variants': {}}]}",6,1639055185,1,,True,False,False,haskell,t5_2qh36,67816,public,default,infinite recursion in monoidal-containers,0,[],1.0,https://github.com/bgamari/monoidal-containers/pull/88,all_ads,6,,,https://github.com/bgamari/monoidal-containers/pull/88,70.0,140.0,,,,,,,,,,,,,,,
799.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1639026077,self.haskell,https://www.reddit.com/r/haskell/comments/rca7kg/advent_of_code_2021_day_09/,{},rca7kg,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,21,0,False,all_ads,/r/haskell/comments/rca7kg/advent_of_code_2021_day_09/,False,,,6,1639032062,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,67814,public,spoiler,Advent of Code 2021 day 09,0,[],1.0,https://www.reddit.com/r/haskell/comments/rca7kg/advent_of_code_2021_day_09/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1639026077.737, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981', 't3_rca7kg'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
800.0,[],False,xeltius,,[],,text,t2_4mwj7,False,False,False,[],False,False,1639014937,self.haskell,https://www.reddit.com/r/haskell/comments/rc6suy/whos_looking_for_junior_devs_or_interns/,{},rc6suy,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,19,0,False,all_ads,/r/haskell/comments/rc6suy/whos_looking_for_junior_devs_or_interns/,False,,,6,1639029671,12,"The stereotype is that only Senior Haskellers get hired. Perhaps it’s best to just ask any lurkers if their company actually hires and mentors Junior devs and is actively seeking them today. 

So, who’s hiring Junior devs?",True,False,False,haskell,t5_2qh36,67813,public,self,Who’s looking for junior devs or interns?,0,[],0.93,https://www.reddit.com/r/haskell/comments/rc6suy/whos_looking_for_junior_devs_or_interns/,all_ads,6,,,,,,,,,,,,,,,,,,,,
801.0,[],False,EveChanceo66,,[],,text,t2_lcqpl,False,False,False,[],False,False,1639013162,freedomwithincenter.com,https://www.reddit.com/r/haskell/comments/rc68bl/therapist_san_diego_counselor_and_psychologist/,{},rc68bl,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rc68bl/therapist_san_diego_counselor_and_psychologist/,False,link,"{'enabled': False, 'images': [{'id': 'jgrImvrhqr-Z73XeB6V4ke0jGxMv3mT2UC0pUOCbUoU', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/KiJH6vKb62bLpheXYnLGzwf-PnhIBTF6AMIzRYZCpJY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4d72d25c43d3858e82d3aa2b4cce62602b141ac0', 'width': 108}], 'source': {'height': 205, 'url': 'https://external-preview.redd.it/KiJH6vKb62bLpheXYnLGzwf-PnhIBTF6AMIzRYZCpJY.jpg?auto=webp&amp;s=8bf88095a6f2a4ae89158c65be905f7fd6591d27', 'width': 205}, 'variants': {}}]}",6,1639029273,1,,False,False,False,haskell,t5_2qh36,67813,public,default,Therapist San Diego | Counselor and Psychologist San Diego,0,[],1.0,https://freedomwithincenter.com/,all_ads,6,,,https://freedomwithincenter.com/,140.0,140.0,,reddit,,,,,,,,,,,,,
802.0,[],False,[deleted],,,,,,False,,,[],False,False,1639009094,self.haskell,https://www.reddit.com/r/haskell/comments/rc4wc2/an_invitation_to_applied_category_theory_exercises/,{},rc4wc2,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rc4wc2/an_invitation_to_applied_category_theory_exercises/,False,,,6,1639028328,1,[deleted],True,False,False,haskell,t5_2qh36,67813,public,default,An Invitation to Applied Category Theory exercises,0,[],1.0,https://www.reddit.com/r/haskell/comments/rc4wc2/an_invitation_to_applied_category_theory_exercises/,all_ads,6,,,,,,,deleted,,,,,,,,,,dark,,,
803.0,[],False,myShoggoth,,[],,text,t2_fpj4y,False,False,False,[],False,False,1638999821,discourse.haskell.org,https://www.reddit.com/r/haskell/comments/rc1rs5/haskell_foundation_november_update/,{},rc1rs5,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rc1rs5/haskell_foundation_november_update/,False,link,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1639026089,9,,True,False,False,haskell,t5_2qh36,67813,public,default,Haskell Foundation November Update,0,[],0.91,https://discourse.haskell.org/t/haskell-foundation-november-update/3797,all_ads,6,,,https://discourse.haskell.org/t/haskell-foundation-november-update/3797,140.0,140.0,,,,,,,,,,,,,,,
804.0,[],False,Expensive-Frame-7309,,[],,text,t2_8om2rjcj,False,False,False,[],False,False,1638999080,self.haskell,https://www.reddit.com/r/haskell/comments/rc1iqg/not_sure_if_this_is_possible/,{},rc1iqg,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,12,0,False,all_ads,/r/haskell/comments/rc1iqg/not_sure_if_this_is_possible/,False,,,6,1639025910,2,"data xp =   N Int            | V String            | Plu xp xp -- where a and b are non-deterministic typesderiving (Eq, Read, Show)

f:: xp -&gt; bool

f a = if a == ""N 3"" then .... -- is this something that can be done somehow or in a different way as the user input can be complex and nested since the custom data type is recursively defined?

I'm trying to somehow match a to a custom data type.

thank you.",True,False,False,haskell,t5_2qh36,67813,public,self,not sure if this is possible:,0,[],1.0,https://www.reddit.com/r/haskell/comments/rc1iqg/not_sure_if_this_is_possible/,all_ads,6,,,,,,,,,,,,,,,,,,,,
805.0,[],False,epoberezkin,,[],,text,t2_13t18x,False,False,False,[],False,False,1638997405,self.opensource,https://www.reddit.com/r/haskell/comments/rc0xkn/simplex_chat_the_first_chat_platform_that_is_100/,{},rc0xkn,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,12,0,False,all_ads,/r/haskell/comments/rc0xkn/simplex_chat_the_first_chat_platform_that_is_100/,False,link,"{'enabled': False, 'images': [{'id': '-GUqnp1fTKy-n8oDq_WYJ5417ydlAMOyaE_TJPmXpSg', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a82df35224686a9ca57eda25f62e65694ffa7528', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7b278f4267b0e48b67271279b8188b997ab8fb79', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4824a22dd80bcafbccd03ccb7c03cda5877b791e', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=8ccb4b31b2788e840382b399df2fcff5d20de3e0', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=400f506a8c9f82024c88cc613c97bbf8bc2ac487', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=f53d380ace42e6fe5a2f0fd3140dd3be1dc08b6f', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?auto=webp&amp;s=ce1754e238dbdc0352052999c7b534b354ecdd17', 'width': 1200}, 'variants': {}}]}",6,1639025493,14,,True,False,False,haskell,t5_2qh36,67812,public,default,SimpleX Chat - the first chat platform that is 100% private by design - it has no access to your connections graph!,0,[],0.94,/r/opensource/comments/rc0x8m/simplex_chat_the_first_chat_platform_that_is_100/,all_ads,6,,,/r/opensource/comments/rc0x8m/simplex_chat_the_first_chat_platform_that_is_100/,,,,,,,t3_rc0x8m,"[{'all_awardings': [], 'allow_live_comments': False, 'approved_at_utc': None, 'approved_by': None, 'archived': False, 'author': 'epoberezkin', 'author_flair_background_color': None, 'author_flair_css_class': None, 'author_flair_richtext': [], 'author_flair_template_id': None, 'author_flair_text': None, 'author_flair_text_color': None, 'author_flair_type': 'text', 'author_fullname': 't2_13t18x', 'author_is_blocked': False, 'author_patreon_flair': False, 'author_premium': False, 'awarders': [], 'banned_at_utc': None, 'banned_by': None, 'can_gild': True, 'can_mod_post': False, 'category': None, 'clicked': False, 'content_categories': None, 'contest_mode': False, 'created': 1638997380.0, 'created_utc': 1638997380.0, 'discussion_type': None, 'distinguished': None, 'domain': 'self.opensource', 'downs': 0, 'edited': 1638998440.0, 'gilded': 0, 'gildings': {}, 'hidden': False, 'hide_score': False, 'id': 'rc0x8m', 'is_created_from_ads_ui': False, 'is_crosspostable': True, 'is_meta': False, 'is_original_content': False, 'is_reddit_media_domain': False, 'is_robot_indexable': True, 'is_self': True, 'is_video': False, 'likes': None, 'link_flair_background_color': '', 'link_flair_css_class': None, 'link_flair_richtext': [], 'link_flair_text': None, 'link_flair_text_color': 'dark', 'link_flair_type': 'text', 'locked': False, 'media': None, 'media_embed': {}, 'media_only': False, 'mod_note': None, 'mod_reason_by': None, 'mod_reason_title': None, 'mod_reports': [], 'name': 't3_rc0x8m', 'no_follow': False, 'num_comments': 0, 'num_crossposts': 3, 'num_reports': None, 'over_18': False, 'parent_whitelist_status': 'all_ads', 'permalink': '/r/opensource/comments/rc0x8m/simplex_chat_the_first_chat_platform_that_is_100/', 'pinned': False, 'post_hint': 'self', 'preview': {'enabled': False, 'images': [{'id': '-GUqnp1fTKy-n8oDq_WYJ5417ydlAMOyaE_TJPmXpSg', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a82df35224686a9ca57eda25f62e65694ffa7528', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7b278f4267b0e48b67271279b8188b997ab8fb79', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=4824a22dd80bcafbccd03ccb7c03cda5877b791e', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=8ccb4b31b2788e840382b399df2fcff5d20de3e0', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=400f506a8c9f82024c88cc613c97bbf8bc2ac487', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=f53d380ace42e6fe5a2f0fd3140dd3be1dc08b6f', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/Uh5vgSDPYBfhD0JcwfsWQrKNoEUt4wxq8M2Ku4ZYysw.jpg?auto=webp&amp;s=ce1754e238dbdc0352052999c7b534b354ecdd17', 'width': 1200}, 'variants': {}}]}, 'pwls': 6, 'quarantine': False, 'removal_reason': None, 'removed_by': None, 'removed_by_category': None, 'report_reasons': None, 'saved': False, 'score': 37, 'secure_media': None, 'secure_media_embed': {}, 'selftext': ""We have just released v0.5 of [**SimpleX chat**](https://github.com/simplex-chat/simplex-chat)**!**\n\nUsers can now create long-term chat addresses that they can share with many people (e.g. in email signature, or online), so that any chat user can send them connection request.\n\nThis is an ALPHA feature, and we did not yet add any protection against spam contact requests. But, if the address you created starts receiving spam connection requests, you can simply delete it without losing any of your accepted connections and create another address - as many times as you like!\n\nE.g., you can use the link below to connect directly to me via SimpleX Chat – I would answer any question you have in the next 12-24 hours:\n\n[https://simplex.chat/contact#/?smp=smp%3A%2F%2Fnxc7HnrnM8dOKgkMp008ub\\_9o9LXJlxlMrMpR-mfMQw%3D%40smp3.simplex.im%2F-nXTuuQe8jEennlR%23&amp;e2e=rsa%3AMIIBoTANBgkqhkiG9w0BAQEFAAOCAY4AMIIBiQKCAQEA0lzByTOgtSCdC2if8hebe32xg3yoW4tc77bRL\\_S6BawiCjnMHOlri529cbbeRRTPBDdD61N3lPISEXsaMGIBw5rr9tgfbTpB3BnDtfIS\\_PcaHzdXlhn2WxBozZ8AQcbKx1K\\_f0cnVd6bZ6BsEPUHmuPinj7B0txKmWvgqWijMsU2wEO8RH0E3F\\_n84J7\\_at\\_MTKOViMuIEm2Xu5WuvIHLMZVjqhRpYhLKeWaUbg3jXLw98FOJ6GO4GDsSzaQi6wQuvtJ1I7ztneS7bTcdv-8-zmSYoECUC-cO0V-egiqTUbxI-bYQ15Gsr2j4S5WzYTxtA9x52ehPKjJqGg1miZ2DwKBgQCGmKriEIablxLvtOWksAk0cHEzQ-aXX0DRTFXsXnvge8d-cAwucTmGczfWIGKtfEJgQ5d4qiF9F60R5cnR63nSyyP\\_kvXNfcAnhidaGnqNsBM5GqmEh5lNR8rly1N5zHd7-hpbixWVUlAAsZdIC1MQ9Du62Qn-WqQyZXSdza4J2w%3D%3D](https://simplex.chat/contact#/?smp=smp%3A%2F%2Fnxc7HnrnM8dOKgkMp008ub_9o9LXJlxlMrMpR-mfMQw%3D%40smp3.simplex.im%2F-nXTuuQe8jEennlR%23&amp;e2e=rsa%3AMIIBoTANBgkqhkiG9w0BAQEFAAOCAY4AMIIBiQKCAQEA0lzByTOgtSCdC2if8hebe32xg3yoW4tc77bRL_S6BawiCjnMHOlri529cbbeRRTPBDdD61N3lPISEXsaMGIBw5rr9tgfbTpB3BnDtfIS_PcaHzdXlhn2WxBozZ8AQcbKx1K_f0cnVd6bZ6BsEPUHmuPinj7B0txKmWvgqWijMsU2wEO8RH0E3F_n84J7_at_MTKOViMuIEm2Xu5WuvIHLMZVjqhRpYhLKeWaUbg3jXLw98FOJ6GO4GDsSzaQi6wQuvtJ1I7ztneS7bTcdv-8-zmSYoECUC-cO0V-egiqTUbxI-bYQ15Gsr2j4S5WzYTxtA9x52ehPKjJqGg1miZ2DwKBgQCGmKriEIablxLvtOWksAk0cHEzQ-aXX0DRTFXsXnvge8d-cAwucTmGczfWIGKtfEJgQ5d4qiF9F60R5cnR63nSyyP_kvXNfcAnhidaGnqNsBM5GqmEh5lNR8rly1N5zHd7-hpbixWVUlAAsZdIC1MQ9Du62Qn-WqQyZXSdza4J2w%3D%3D)\n\nWe'd really appreciate your comments, criticism and support - a star on the [GitHub repo](https://github.com/simplex-chat/simplex-chat), downloading and testing the chat (send me the message via the link above!) or any contribution to the project will help a lot – thank you for all your support!\n\nPlease note: this is an early stage development, and we are still iterating protocols, improving privacy and security, so if you have communication scenarios requiring high security, you should consider some other options for now – but not for long any more!\n\nOur goal is to create a new kind of chat platform that lets **you control your chat!**"", 'selftext_html': '&lt;!-- SC_OFF --&gt;&lt;div class=""md""&gt;&lt;p&gt;We have just released v0.5 of &lt;a href=""https://github.com/simplex-chat/simplex-chat""&gt;&lt;strong&gt;SimpleX chat&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;!&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Users can now create long-term chat addresses that they can share with many people (e.g. in email signature, or online), so that any chat user can send them connection request.&lt;/p&gt;\n\n&lt;p&gt;This is an ALPHA feature, and we did not yet add any protection against spam contact requests. But, if the address you created starts receiving spam connection requests, you can simply delete it without losing any of your accepted connections and create another address - as many times as you like!&lt;/p&gt;\n\n&lt;p&gt;E.g., you can use the link below to connect directly to me via SimpleX Chat – I would answer any question you have in the next 12-24 hours:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=""https://simplex.chat/contact#/?smp=smp%3A%2F%2Fnxc7HnrnM8dOKgkMp008ub_9o9LXJlxlMrMpR-mfMQw%3D%40smp3.simplex.im%2F-nXTuuQe8jEennlR%23&amp;amp;e2e=rsa%3AMIIBoTANBgkqhkiG9w0BAQEFAAOCAY4AMIIBiQKCAQEA0lzByTOgtSCdC2if8hebe32xg3yoW4tc77bRL_S6BawiCjnMHOlri529cbbeRRTPBDdD61N3lPISEXsaMGIBw5rr9tgfbTpB3BnDtfIS_PcaHzdXlhn2WxBozZ8AQcbKx1K_f0cnVd6bZ6BsEPUHmuPinj7B0txKmWvgqWijMsU2wEO8RH0E3F_n84J7_at_MTKOViMuIEm2Xu5WuvIHLMZVjqhRpYhLKeWaUbg3jXLw98FOJ6GO4GDsSzaQi6wQuvtJ1I7ztneS7bTcdv-8-zmSYoECUC-cO0V-egiqTUbxI-bYQ15Gsr2j4S5WzYTxtA9x52ehPKjJqGg1miZ2DwKBgQCGmKriEIablxLvtOWksAk0cHEzQ-aXX0DRTFXsXnvge8d-cAwucTmGczfWIGKtfEJgQ5d4qiF9F60R5cnR63nSyyP_kvXNfcAnhidaGnqNsBM5GqmEh5lNR8rly1N5zHd7-hpbixWVUlAAsZdIC1MQ9Du62Qn-WqQyZXSdza4J2w%3D%3D""&gt;https://simplex.chat/contact#/?smp=smp%3A%2F%2Fnxc7HnrnM8dOKgkMp008ub_9o9LXJlxlMrMpR-mfMQw%3D%40smp3.simplex.im%2F-nXTuuQe8jEennlR%23&amp;amp;e2e=rsa%3AMIIBoTANBgkqhkiG9w0BAQEFAAOCAY4AMIIBiQKCAQEA0lzByTOgtSCdC2if8hebe32xg3yoW4tc77bRL_S6BawiCjnMHOlri529cbbeRRTPBDdD61N3lPISEXsaMGIBw5rr9tgfbTpB3BnDtfIS_PcaHzdXlhn2WxBozZ8AQcbKx1K_f0cnVd6bZ6BsEPUHmuPinj7B0txKmWvgqWijMsU2wEO8RH0E3F_n84J7_at_MTKOViMuIEm2Xu5WuvIHLMZVjqhRpYhLKeWaUbg3jXLw98FOJ6GO4GDsSzaQi6wQuvtJ1I7ztneS7bTcdv-8-zmSYoECUC-cO0V-egiqTUbxI-bYQ15Gsr2j4S5WzYTxtA9x52ehPKjJqGg1miZ2DwKBgQCGmKriEIablxLvtOWksAk0cHEzQ-aXX0DRTFXsXnvge8d-cAwucTmGczfWIGKtfEJgQ5d4qiF9F60R5cnR63nSyyP_kvXNfcAnhidaGnqNsBM5GqmEh5lNR8rly1N5zHd7-hpbixWVUlAAsZdIC1MQ9Du62Qn-WqQyZXSdza4J2w%3D%3D&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;We&amp;#39;d really appreciate your comments, criticism and support - a star on the &lt;a href=""https://github.com/simplex-chat/simplex-chat""&gt;GitHub repo&lt;/a&gt;, downloading and testing the chat (send me the message via the link above!) or any contribution to the project will help a lot – thank you for all your support!&lt;/p&gt;\n\n&lt;p&gt;Please note: this is an early stage development, and we are still iterating protocols, improving privacy and security, so if you have communication scenarios requiring high security, you should consider some other options for now – but not for long any more!&lt;/p&gt;\n\n&lt;p&gt;Our goal is to create a new kind of chat platform that lets &lt;strong&gt;you control your chat!&lt;/strong&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;', 'send_replies': True, 'spoiler': False, 'stickied': False, 'subreddit': 'opensource', 'subreddit_id': 't5_2qh4n', 'subreddit_name_prefixed': 'r/opensource', 'subreddit_subscribers': 152855, 'subreddit_type': 'public', 'suggested_sort': None, 'thumbnail': 'self', 'thumbnail_height': None, 'thumbnail_width': None, 'title': 'SimpleX Chat - the first chat platform that is 100% private by design - it has no access to your connections graph!', 'top_awarded_type': None, 'total_awards_received': 0, 'treatment_tags': [], 'ups': 37, 'upvote_ratio': 0.86, 'url': 'https://www.reddit.com/r/opensource/comments/rc0x8m/simplex_chat_the_first_chat_platform_that_is_100/', 'user_reports': [], 'view_count': None, 'visited': False, 'whitelist_status': 'all_ads', 'wls': 6}]",,,,,,,,,
806.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1638997207,self.haskell,https://www.reddit.com/r/haskell/comments/rc0us9/bytestring01120/,{},rc0us9,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,15,0,False,all_ads,/r/haskell/comments/rc0us9/bytestring01120/,False,,,6,1639025438,47,"On behalf of maintainers I'm happy to announce that [`bytestring-0.11.2.0`](http://hackage.haskell.org/package/bytestring-0.11.2.0) is finally released.

Highlights from [the changelog](https://github.com/haskell/bytestring/blob/0.11.2.0/Changelog.md):

* New functions:
   * ultra-fast SIMD-based `isValidUtf8` validator,
   * `foldr'`, `foldr1'`, `scanl1`, `scanr`, `scanr1`, `takeEnd`, `dropEnd`, `takeWhileEnd`, `dropWhileEnd`, `spanEnd`, `breakEnd` for lazy `ByteString`,
   * `writeFile` to dump `Builder` directly,
   * `fromFilePath` and `toFilePath` for locale-aware conversions.
* Performance improvements:
   * speed up `floatDec` and `doubleDec` up to 10x using Ryu algorithm,
   * new SIMD-based `count` is up to 5x faster,
   * improve inlining of `foldl`, `foldl'`, `foldr`, `foldr'`, `mapAccumL`, `mapAccumR`, `scanl`, `scanr` and `filter`,
   * faster internal loop in `unfoldrN`,
   * use a static lookup table for Base16 `Builder`s.
* Add `Lift` instances for `ByteString` and `ShortByteString`.
* Put `HasCallStack` constraints onto partial functions.

Many people contributed their time and effort to make this release happen. Just to name a few in no particular order, mostly according to `git log`:

* Koz Ross
* Lawrence Wu
* Sylvain Henry
* Andreas Abel
* Ignat Insarov
* Luke Clifton
* Kyriakos Papachrysanthou
* Oleg Grenrus
* Simon Jakobi
* Cameron SkamDart
* Callan McGill
* Georg Rudoy
* Nanami Yokodake
* Hécate Kleidukos
* Viktor Dukhovni
* me",True,False,False,haskell,t5_2qh36,67812,public,self,bytestring-0.11.2.0,0,[],1.0,https://www.reddit.com/r/haskell/comments/rc0us9/bytestring01120/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
807.0,[],False,Xxavier359,,[],,text,t2_1eckdprm,False,False,False,[],False,False,1638993726,self.haskell,https://www.reddit.com/r/haskell/comments/rbzmyl/haskell_io_actions/,{},rbzmyl,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,8,0,False,all_ads,/r/haskell/comments/rbzmyl/haskell_io_actions/,False,,,6,1639024557,6,"I am trying to write an IO action that bugs the user to enter a number within a certain range.

Since the user is entering the number from the keyboard, I have to allow the possibility that

the user types in something that cannot be converted into an Int value.

&amp;#x200B;

This is what I have so far

&amp;#x200B;

action2 :: Int -&gt; IO Int

action2 n = do

   putStrLn ""\\nEnter action2 ...""

&amp;#x200B;

   

   let m = 2 \* n   

&amp;#x200B;

   putStrLn $ ""n = "" ++ (show n)

   putStrLn ""... leave action2\\n""",True,False,False,haskell,t5_2qh36,67812,public,self,Haskell IO actions,0,[],0.88,https://www.reddit.com/r/haskell/comments/rbzmyl/haskell_io_actions/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
808.0,[],False,teilchen010,,[],,text,t2_a8zynd1e,False,False,False,[],False,False,1638981231,self.haskell,https://www.reddit.com/r/haskell/comments/rbv50d/is_the_haskell_list_comprehension_just_a/,{},rbv50d,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,42,0,False,all_ads,/r/haskell/comments/rbv50d/is_the_haskell_list_comprehension_just_a/,False,,,6,1639021301,1,"If I were a teacher of high-schoolers wanting to connect some underlying theory to Haskell, could I explain Haskell list comprehensions as basically just a Cartesian/cross product machine? Would this be accurate? And then the combinatorics product rule also seems at play here. I would appreciate any theoretical explanation of what a list comprehension is about.

Edit: Looking at the [Report](https://www.haskell.org/onlinereport/exps.html#list-comprehensions) I can see and understand the details, but somehow that list of facts in the ""Translations"" box implies, results in the Cartesian product. I'd like to know how and why.

Edit 2.0: I guess I'm just trying to fathom what exactly a list comprehension is. The obvious answer is it's supposed to be some sort of set comprehension. But if a standard use of it is like this

    [(x,y) | x&lt;-xs, y&lt;-ys]

producing the Cartesian product, then it's obvious the Cartesian product is built into this thing, i.e., that Haskell Report description is creating a Cartesian product machine with the ability to ad lib seeming non-binary relation Cartesian things when we want. So even if I do this

    [x+x | x&lt;-[2]]
    [4]

I'm still using (or bypassing most of) that same inherent Cartesian product mechanism. This gets silly

    [x+y | x&lt;-[1..10], y&lt;-[1..10], x == y, x == 2]
    [4]

but yes, this is a Cartesian ""all possible combinations"" product, which is then filtered. If I'm right, this is marvelous, i.e., a ""generalized"" Cartesian product algorithm-thingy.

&amp;#x200B;",True,False,False,haskell,t5_2qh36,67809,public,self,Is the Haskell list comprehension just a Cartesian product machine?,0,[],0.6,https://www.reddit.com/r/haskell/comments/rbv50d/is_the_haskell_list_comprehension_just_a/,all_ads,6,,,,,,,,,,,,,,,,,,,,1639006483.0
809.0,[],False,Serokell,,[],,text,t2_fvl0rbg,False,False,False,[],False,False,1638978714,youtube.com,https://www.reddit.com/r/haskell/comments/rbu8yl/algebraic_data_types_in_10_minutes/,{},rbu8yl,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rbu8yl/algebraic_data_types_in_10_minutes/,False,rich:video,"{'enabled': False, 'images': [{'id': '5nVhkoTkbJvE5iO7i--FTV3rOEB-k2q97UJPOOGbdb0', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/urNuaCp3WRXxe4oh18gyMR9VB2koiQI53RgUl7ND-S8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5ed9e325d166e242f4ff71c64be0a1b9e46b6899', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/urNuaCp3WRXxe4oh18gyMR9VB2koiQI53RgUl7ND-S8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=4e57fb446568ea34e9e8f66a05da161aacc1a6cc', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/urNuaCp3WRXxe4oh18gyMR9VB2koiQI53RgUl7ND-S8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1d37bfa2fc868df07bbea455f7bd479b7c752e8d', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/urNuaCp3WRXxe4oh18gyMR9VB2koiQI53RgUl7ND-S8.jpg?auto=webp&amp;s=b4b26903a33d97dc6e1d8dcae9c34c882997ed26', 'width': 480}, 'variants': {}}]}",6,1639020674,20,,True,False,False,haskell,t5_2qh36,67809,public,image,Algebraic Data Types in 10 Minutes,0,[],0.89,https://www.youtube.com/watch?v=UqwLn2OyQ_E,all_ads,6,be2af704-5664-11eb-8e65-0ecd290c3053,video,https://www.youtube.com/watch?v=UqwLn2OyQ_E,105.0,140.0,,,,,,,"{'oembed': {'author_name': 'Serokell', 'author_url': 'https://www.youtube.com/c/Serokell', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/UqwLn2OyQ_E?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/UqwLn2OyQ_E/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Algebraic Data Types in 10 Minutes – Daniel Rogozin', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/UqwLn2OyQ_E?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'Serokell', 'author_url': 'https://www.youtube.com/c/Serokell', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/UqwLn2OyQ_E?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/UqwLn2OyQ_E/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Algebraic Data Types in 10 Minutes – Daniel Rogozin', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/UqwLn2OyQ_E?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/rbu8yl', 'scrolling': False, 'width': 356}",,,,,
810.0,[],False,joningun37,,[],,text,t2_7eqsrfcb,False,False,False,[],False,False,1638966182,self.haskell,https://www.reddit.com/r/haskell/comments/rbq6re/how_do_it_traversesequence_future_and_result_in/,{},rbq6re,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rbq6re/how_do_it_traversesequence_future_and_result_in/,False,,,6,1639017763,1,[removed],True,False,False,haskell,t5_2qh36,67809,public,default,How do it traverse/sequence Future and Result in Rust?,0,[],1.0,https://www.reddit.com/r/haskell/comments/rbq6re/how_do_it_traversesequence_future_and_result_in/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
811.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1638939681,self.haskell,https://www.reddit.com/r/haskell/comments/rbj981/advent_of_code_2021_day_08/,{},rbj981,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,59,0,False,all_ads,/r/haskell/comments/rbj981/advent_of_code_2021_day_08/,False,,,6,1639012925,3,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,67809,public,spoiler,Advent of Code 2021 day 08,0,[],0.72,https://www.reddit.com/r/haskell/comments/rbj981/advent_of_code_2021_day_08/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1638939681.565, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb', 't3_rar8eg', 't3_rbj981'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
812.0,[],False,HistoricalPost7776,,[],,text,t2_e6phw4zk,False,False,False,[],False,False,1638932978,self.haskell,https://www.reddit.com/r/haskell/comments/rbh3b2/precisando_de_um_carreto_ligue_e_faça_um/,{},rbh3b2,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rbh3b2/precisando_de_um_carreto_ligue_e_faça_um/,False,,,6,1639011392,1,[removed],True,False,False,haskell,t5_2qh36,67809,public,default,Precisando de um carreto ? Ligue e faça um orçamento ! Temos montador de móveis aceitamos cartão de crédito e débito watts zap (13) 991527950 ou (13) 991418053 .,0,[],1.0,https://www.reddit.com/r/haskell/comments/rbh3b2/precisando_de_um_carreto_ligue_e_faça_um/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
813.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1638926012,haskellweekly.news,https://www.reddit.com/r/haskell/comments/rbepq5/2021_survey_results_haskell_weekly_podcast/,{},rbepq5,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,False,8,0,False,all_ads,/r/haskell/comments/rbepq5/2021_survey_results_haskell_weekly_podcast/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1639009760,28,,True,False,False,haskell,t5_2qh36,67810,public,default,2021 Survey Results :: Haskell Weekly podcast,0,[],0.97,https://haskellweekly.news/episode/57.html,all_ads,6,25c3bc14-5d7e-11eb-8d29-0e2c6cfa9d83,audio,https://haskellweekly.news/episode/57.html,140.0,140.0,,,,,,,,,,,,,,,
814.0,[],False,[deleted],,,,,,False,,,[],False,False,1638925927,haskellweekly.news,https://www.reddit.com/r/haskell/comments/rbeood/2021_survey_results_haskell_weekly_podcast/,{},rbeood,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/rbeood/2021_survey_results_haskell_weekly_podcast/,False,,,6,1639009741,1,[deleted],True,False,False,haskell,t5_2qh36,67810,public,default,2021 Survey Results :: Haskell Weekly podcast,0,[],1.0,https://haskellweekly.news/episode/57.html,all_ads,6,25c3bc14-5d7e-11eb-8d29-0e2c6cfa9d83,audio,https://haskellweekly.news/episode/57.html,140.0,140.0,,deleted,,,,,,,,,,dark,,,
815.0,[],True,teilchen010,,[],,text,t2_a8zynd1e,False,False,False,[],False,False,1638918840,self.haskell,https://www.reddit.com/r/haskell/comments/rbcama/cryptic_error_response_from_natural_violation/,{},rbcama,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,8,0,False,all_ads,/r/haskell/comments/rbcama/cryptic_error_response_from_natural_violation/,False,,,6,1639008084,1,"I've entered this into my REPL

    import Numeric.Natural

myNat = -1 :: Natural

then I try this and get

    myNat
    Exception: arithmetic underflow
    

no different from just

    -1 :: Natural

Exception: arithmetic underflow

With the first equating Haskell seems to wait until I call `myNat` to say something, and then it gives what seems a cryptic error message. What's going on under the hood here?",True,False,False,haskell,t5_2qh36,67810,public,self,Cryptic error response from Natural violation?,0,[],0.57,https://www.reddit.com/r/haskell/comments/rbcama/cryptic_error_response_from_natural_violation/,all_ads,6,,,,,,,,,,,,,,,,,,,,1638928068.0
816.0,[],True,dexterdykrataigos,,[],,text,t2_2v4pz67s,False,False,False,[],False,False,1638918165,self.haskell,https://www.reddit.com/r/haskell/comments/rbc1y3/what_are_some_stereotypes_about_haskell/,{},rbc1y3,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,126,0,False,all_ads,/r/haskell/comments/rbc1y3/what_are_some_stereotypes_about_haskell/,False,,,6,1639007916,34,"Just for fun, what kind of stereotypes have you heard off. What kind of things have you been associated with.",True,False,False,haskell,t5_2qh36,67810,public,self,What are some stereotypes about haskell programmers,0,[],0.81,https://www.reddit.com/r/haskell/comments/rbc1y3/what_are_some_stereotypes_about_haskell/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
817.0,[],False,derivative_art,,[],,text,t2_bbak0uu,False,False,False,[],False,False,1638913955,self.haskell,https://www.reddit.com/r/haskell/comments/rbaiu3/haskell_jobs_in_europe_v_usa/,{},rbaiu3,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,13,0,False,all_ads,/r/haskell/comments/rbaiu3/haskell_jobs_in_europe_v_usa/,False,,,6,1639006844,9,"It seems to me that there are more Haskell job opportunities in Europe than the US. Is there any hard data to confirm this? If there is a difference, what is going on?",True,False,False,haskell,t5_2qh36,67810,public,self,Haskell jobs in Europe v USA,0,[],1.0,https://www.reddit.com/r/haskell/comments/rbaiu3/haskell_jobs_in_europe_v_usa/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
818.0,[],False,paul_schnapp,,[],,text,t2_c3bmkb8n,False,False,False,[],False,False,1638907869,osabe-app.bitbucket.io,https://www.reddit.com/r/haskell/comments/rb8a3y/frp_in_the_osabe_wav_editor/,{},rb8a3y,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,False,5,0,False,all_ads,/r/haskell/comments/rb8a3y/frp_in_the_osabe_wav_editor/,False,,,6,1639002537,12,,True,False,False,haskell,t5_2qh36,67807,public,default,FRP in the osabe WAV editor,0,[],1.0,https://osabe-app.bitbucket.io/2021-12-07_frp.html,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://osabe-app.bitbucket.io/2021-12-07_frp.html,,,,,,,,,,,,,,,,,
819.0,[],False,[deleted],,,,,,False,,,[],False,False,1638885177,youtube.com,https://www.reddit.com/r/haskell/comments/razo5d/rae_deriveanyclass_considered_dangerous/,{},razo5d,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/razo5d/rae_deriveanyclass_considered_dangerous/,False,,,6,1638981997,1,[deleted],True,False,False,haskell,t5_2qh36,67800,public,default,@rae: DeriveAnyClass considered dangerous;,0,[],1.0,https://www.youtube.com/watch?v=Zdne-Ch2000,all_ads,6,,,https://www.youtube.com/watch?v=Zdne-Ch2000,105.0,140.0,,deleted,,,,,"{'oembed': {'author_name': 'Tweag', 'author_url': 'https://www.youtube.com/c/tweag', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/Zdne-Ch2000?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/Zdne-Ch2000/hqdefault.jpg', 'thumbnail_width': 480, 'title': '@rae: DeriveAnyClass considered dangerous', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/Zdne-Ch2000?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'Tweag', 'author_url': 'https://www.youtube.com/c/tweag', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/Zdne-Ch2000?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/Zdne-Ch2000/hqdefault.jpg', 'thumbnail_width': 480, 'title': '@rae: DeriveAnyClass considered dangerous', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/Zdne-Ch2000?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/razo5d', 'scrolling': False, 'width': 356}",,dark,,,
820.0,[],False,_ok_confusion_777_,,[],,text,t2_gjtqpy26,False,False,False,[],False,False,1638874335,suzdalnitski.medium.com,https://www.reddit.com/r/haskell/comments/rawip0/these_modern_programming_languages_will_make_you/,{},rawip0,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/rawip0/these_modern_programming_languages_will_make_you/,False,link,"{'enabled': False, 'images': [{'id': 'tl34Tay7b7K0EP8kP_5j1LlrCij-SZt4MFyagi6jFuw', 'resolutions': [{'height': 76, 'url': 'https://external-preview.redd.it/MUVdnLe3cBkk19tKBnkUo8Tl9c_NMQUm25_U8w4I0gk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f4392c5eb696dc58ec3199a9f78b116f045130dc', 'width': 108}, {'height': 152, 'url': 'https://external-preview.redd.it/MUVdnLe3cBkk19tKBnkUo8Tl9c_NMQUm25_U8w4I0gk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=53acd478cf5b6b7eb32132720e7fe1d4ccdecde6', 'width': 216}, {'height': 225, 'url': 'https://external-preview.redd.it/MUVdnLe3cBkk19tKBnkUo8Tl9c_NMQUm25_U8w4I0gk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f6d6f4d040febd7404f4506e2b50561898cd9f22', 'width': 320}, {'height': 450, 'url': 'https://external-preview.redd.it/MUVdnLe3cBkk19tKBnkUo8Tl9c_NMQUm25_U8w4I0gk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=3c4f7d143c77c8abe4b8e2fb32de453fa5ed0253', 'width': 640}, {'height': 676, 'url': 'https://external-preview.redd.it/MUVdnLe3cBkk19tKBnkUo8Tl9c_NMQUm25_U8w4I0gk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=1dfa200e6ea5605655632ee1ced3500a36249303', 'width': 960}, {'height': 760, 'url': 'https://external-preview.redd.it/MUVdnLe3cBkk19tKBnkUo8Tl9c_NMQUm25_U8w4I0gk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=b24cdff4ba6f2e530bf420dbf642170a104d2910', 'width': 1080}], 'source': {'height': 845, 'url': 'https://external-preview.redd.it/MUVdnLe3cBkk19tKBnkUo8Tl9c_NMQUm25_U8w4I0gk.jpg?auto=webp&amp;s=20bde225adf62d0fbba2a3decfcd95f12129d874', 'width': 1200}, 'variants': {}}]}",6,1638874346,1,,True,False,False,haskell,t5_2qh36,67765,public,default,These Modern Programming Languages Will Make You Suffer !,0,[],1.0,https://suzdalnitski.medium.com/modern-languages-suck-ad21cbc8a57c,all_ads,6,,,https://suzdalnitski.medium.com/modern-languages-suck-ad21cbc8a57c,98.0,140.0,,,,,,,,,,,,,,,
821.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1638853271,self.haskell,https://www.reddit.com/r/haskell/comments/rar8eg/advent_of_code_2021_day_07/,{},rar8eg,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,43,0,False,all_ads,/r/haskell/comments/rar8eg/advent_of_code_2021_day_07/,False,,,6,1638853284,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,67755,public,spoiler,Advent of Code 2021 day 07,0,[],1.0,https://www.reddit.com/r/haskell/comments/rar8eg/advent_of_code_2021_day_07/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1638766874.42, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip', 't3_r9z4qb'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
822.0,[],False,Iampacificjanjan,,[],,text,t2_fhf2d37l,False,False,False,[],False,False,1638835926,self.haskell,https://www.reddit.com/r/haskell/comments/ralrbx/i_made_a_playlist_of_7_hours_of_chill_synth_music/,{},ralrbx,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/ralrbx/i_made_a_playlist_of_7_hours_of_chill_synth_music/,False,self,"{'enabled': False, 'images': [{'id': 'jCkrYsEw69po0yTQntZzKRKeosNog0ICK29M9-m8p-U', 'resolutions': [{'height': 56, 'url': 'https://external-preview.redd.it/MfW7DDXZcmxTQiWyXuG0BmX1iBOS9pAvs77nx822Yg0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=31c259138b0d341978bae2791e36e85ca8cd2fd3', 'width': 108}, {'height': 113, 'url': 'https://external-preview.redd.it/MfW7DDXZcmxTQiWyXuG0BmX1iBOS9pAvs77nx822Yg0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6e24636a20d8354d17a8227e75a09f0c8f0cfa77', 'width': 216}, {'height': 168, 'url': 'https://external-preview.redd.it/MfW7DDXZcmxTQiWyXuG0BmX1iBOS9pAvs77nx822Yg0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d0e908c3496895bfd15cf89ec5f4a7fe7cf58a9c', 'width': 320}, {'height': 336, 'url': 'https://external-preview.redd.it/MfW7DDXZcmxTQiWyXuG0BmX1iBOS9pAvs77nx822Yg0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=069c43aa73abffdc91ee59e9e24388da26a97bb2', 'width': 640}, {'height': 504, 'url': 'https://external-preview.redd.it/MfW7DDXZcmxTQiWyXuG0BmX1iBOS9pAvs77nx822Yg0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a22ed5ef501faa843fc9f7286539157b0d81cfc5', 'width': 960}, {'height': 567, 'url': 'https://external-preview.redd.it/MfW7DDXZcmxTQiWyXuG0BmX1iBOS9pAvs77nx822Yg0.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3e453b49097e59bf0c323efe2f689338b4f9513b', 'width': 1080}], 'source': {'height': 630, 'url': 'https://external-preview.redd.it/MfW7DDXZcmxTQiWyXuG0BmX1iBOS9pAvs77nx822Yg0.jpg?auto=webp&amp;s=813b7148dd6eefc834f13a2da1c3a7a4b593656d', 'width': 1200}, 'variants': {}}]}",6,1638835937,1,"[Here](https://music.apple.com/br/playlist/coding-synthwave/pl.u-ZmblKopSR7y707)

[Bonus](https://music.apple.com/br/playlist/spacewave/pl.u-LdbqovdCjYLYxY)",True,False,False,haskell,t5_2qh36,67749,public,self,"I made a playlist of 7 hours of chill synth music to lift you up and motivate you while coding/developing. If you are also into this, share yours!",0,[],1.0,https://www.reddit.com/r/haskell/comments/ralrbx/i_made_a_playlist_of_7_hours_of_chill_synth_music/,all_ads,6,,,,,,,,,,,,,,,,,,,,
823.0,[],False,iloveyoufah,,[],,text,t2_nuto9,False,False,False,[],False,False,1638811508,self.haskell,https://www.reddit.com/r/haskell/comments/racju5/creating_instance_for_bounded_list_sequence/,{},racju5,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,9,0,False,all_ads,/r/haskell/comments/racju5/creating_instance_for_bounded_list_sequence/,False,,,6,1638811518,1,"    data Letters = A | B | C deriving (Eq, Ord, Bounded, Enum, Show)
    
    instance (Eq a, Ord a, Bounded a, Enum a) =&gt; Enum [a] where
        succ = reverse . succ' . reverse
            where
                succ' :: [a] -&gt; [a]
                succ' (x:xs) | x &lt; (maxBound :: a) = (succ x) : xs
                             | x == (maxBound) &amp;&amp; xs /= [] = (minBound :: a) : (succ' xs)
    
    class (Eq a, Ord a, Enum a, Bounded a) =&gt; Buildable a where
        build :: a -&gt; a -&gt; [a]
        build start end = reverse $ build' start end []
            where
                build' :: a -&gt; a -&gt; [a] -&gt; [a]
                build' x y l | x &gt;= (minBound :: a) &amp;&amp; x &lt;= y &amp;&amp; x &lt; (maxBound :: a) = build' (succ x) y l++[x]
                             | x &gt;= (minBound :: a) &amp;&amp; x &lt;= y &amp;&amp; x == (maxBound :: a) = l++[x]
                             | otherwise = l
    
    instance Buildable Letters

I have defined `succ` so that it can be applied to all permutation of `[Letters]` with a ordered sequence like this:

    succ [A,A,A] = [A,A,B]
    succ [A,A,B] = [A,A,C]
    succ [A,A,C] = [A,B,A]
    ...
    succ [C,C,B] = [C,C,C]
    -- succ [C,C,C] is not defined

`build` in `Buildable` is given the start and end value, it builds a ordered list of every element in the set including start and end:

    build A B = [A,B]
    build B C = [B,C]
    build A C = [A,B,C]

&amp;#x200B;

How do I apply `Buildable` on `[Letters]` such that I can call build like this:

    build [A] [B] = [[A],[B]]
    build [A,A] [B,B] = [[A,A],[A,B],[B,A],[B,B]]
    build [A,A,A] [A,A,C] = [[A,A,A],[A,A,B],[A,A,C]]
    build [B,B,C] [B,C,C] = [[B,B,C],[B,C,A],[B,C,B],[B,C,C]]

It seems like I have to define what `maxBound` and `minBound` is for `[Letters]` if I do `instance Buildable [a]`. How do I do that?",True,False,False,haskell,t5_2qh36,67740,public,self,Creating instance for bounded list sequence,0,[],1.0,https://www.reddit.com/r/haskell/comments/racju5/creating_instance_for_bounded_list_sequence/,all_ads,6,,,,,,,,,,,,,,,,,,,,
824.0,[],False,man-vs-spider,,[],,text,t2_5by84,False,False,False,[],False,False,1638802810,self.haskell,https://www.reddit.com/r/haskell/comments/ra9687/coming_back_to_haskell_after_a_couple_of_years/,{},ra9687,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,56,0,False,all_ads,/r/haskell/comments/ra9687/coming_back_to_haskell_after_a_couple_of_years/,False,,,6,1638802823,1,"I want to get back into Haskell. I used it a lot a few years ago. I just installed haskell-platform on Ubuntu which seems to be the recommended download. 

Should I be using stack to make Haskell projects? stack wasn't included in the haskell-platform download so is there a different workflow I should be using? I have some projects on github that I made with stack.

Any help or other new advice would be nice",True,False,False,haskell,t5_2qh36,67735,public,self,"Coming back to Haskell after a couple of years, what changes should I be aware of?",0,[],1.0,https://www.reddit.com/r/haskell/comments/ra9687/coming_back_to_haskell_after_a_couple_of_years/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
825.0,[],False,gilmi,,[],,text,t2_igdxr,False,False,False,[],False,False,1638771859,lhbg-book.link,https://www.reddit.com/r/haskell/comments/ra0k2t/new_haskell_ebook_learn_haskell_by_building_a/,{},ra0k2t,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,9,0,False,all_ads,/r/haskell/comments/ra0k2t/new_haskell_ebook_learn_haskell_by_building_a/,False,,,6,1638771870,1,,False,False,False,haskell,t5_2qh36,67730,public,default,New Haskell ebook: Learn Haskell by building a blog generator,0,[],1.0,https://lhbg-book.link,all_ads,6,,,https://lhbg-book.link,,,,,,,,,,,,,,,,,
826.0,[],False,Any_Fact_5085,,[],,text,t2_ah10ak7c,False,False,False,[],False,False,1638768276,self.haskell,https://www.reddit.com/r/haskell/comments/r9zjuc/help/,{},r9zjuc,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,5,0,False,all_ads,/r/haskell/comments/r9zjuc/help/,False,,,6,1638768287,1,"hey guys, i'm trying to learn haskell right now to complete an  assignment where I have to translate a code from oz to haskell. My main  doubt at the moment is wheater haskell has partial values. By partial  values I mean ""can I pass a reference to an unbound variable to haskell  function and bound this varible inside the function""?",True,False,False,haskell,t5_2qh36,67730,public,self,help,0,[],1.0,https://www.reddit.com/r/haskell/comments/r9zjuc/help/,all_ads,6,,,,,,,,,,,,,,,,,,,,
827.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1638766874,self.haskell,https://www.reddit.com/r/haskell/comments/r9z4qb/advent_of_code_2021_day_06/,{},r9z4qb,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,53,0,False,all_ads,/r/haskell/comments/r9z4qb/advent_of_code_2021_day_06/,False,,,6,1638766886,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,67728,public,spoiler,Advent of Code 2021 day 06,0,[],1.0,https://www.reddit.com/r/haskell/comments/r9z4qb/advent_of_code_2021_day_06/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1638680473.308, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
828.0,[],False,brdrcn,,[],,text,t2_2rui4r,False,False,False,[],False,False,1638762850,github.com,https://www.reddit.com/r/haskell/comments/r9xvwv/brassica_architecture_plus_some_general_advice_on/,{},r9xvwv,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r9xvwv/brassica_architecture_plus_some_general_advice_on/,False,link,"{'enabled': False, 'images': [{'id': 'KeEu1e8ZQpvJBFp2JloQ5QSBXx3C5Z1ZPieJ8jF9SCY', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/q9TbdbLMfi8UhXzV274FdEVy--zusWlxICHn79yBG_Q.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=209afc58debb98c8efb1ab29453c2611732a6968', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/q9TbdbLMfi8UhXzV274FdEVy--zusWlxICHn79yBG_Q.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=c20655bc65ff4069e9b10cbe00a5734d625c5701', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/q9TbdbLMfi8UhXzV274FdEVy--zusWlxICHn79yBG_Q.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=17a2bc8000ef7adfc9b22d6269f3503825342fdb', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/q9TbdbLMfi8UhXzV274FdEVy--zusWlxICHn79yBG_Q.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=6abf4347c61715715eaebd8138d7bb422d92b771', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/q9TbdbLMfi8UhXzV274FdEVy--zusWlxICHn79yBG_Q.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ca9ebee3b0609963a0beb97527671166fda8eac2', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/q9TbdbLMfi8UhXzV274FdEVy--zusWlxICHn79yBG_Q.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=7386076698992ff21afd920593b1fd9b4b100b33', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/q9TbdbLMfi8UhXzV274FdEVy--zusWlxICHn79yBG_Q.jpg?auto=webp&amp;s=30befe2b83bd9e948d8c66e0c5ed56c70bafda91', 'width': 1200}, 'variants': {}}]}",6,1638762862,1,,True,False,False,haskell,t5_2qh36,67725,public,default,Brassica architecture (plus some general advice on calling statically linked Haskell from C),0,[],1.0,https://github.com/bradrn/brassica/blob/e9338d9681acb912895599325e2d4e96978d3343/ARCHITECTURE.md,all_ads,6,,,https://github.com/bradrn/brassica/blob/e9338d9681acb912895599325e2d4e96978d3343/ARCHITECTURE.md,70.0,140.0,,,,,,,,,,,,,,,
829.0,[],False,mitchellvitez,,[],,text,t2_b2mmr,False,False,False,[],False,False,1638757297,vitez.me,https://www.reddit.com/r/haskell/comments/r9w293/haskells_type_system_standing_alone_an_unusual/,{},r9w293,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,10,0,False,all_ads,/r/haskell/comments/r9w293/haskells_type_system_standing_alone_an_unusual/,False,,,6,1638757308,1,,False,False,False,haskell,t5_2qh36,67723,public,default,Haskell's Type System Standing Alone: an unusual programming language,0,[],1.0,https://vitez.me/hts-language,all_ads,6,,,https://vitez.me/hts-language,,,,,,,,,,,,,,,,,
830.0,[],False,burneraccount3_,,[],,text,t2_7jdyjq52,False,False,False,[],False,False,1638744010,self.haskell,https://www.reddit.com/r/haskell/comments/r9rir7/how_to_re_orientate_myself_from_imperative/,{},r9rir7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,28,0,False,all_ads,/r/haskell/comments/r9rir7/how_to_re_orientate_myself_from_imperative/,False,,,6,1638744021,1,Comming to Haskell has made me feel like I'm learning to program all over again. How would you suggest is the best way to unlearn all of the habits and design patterns from imperative programming? For example whenever I work with lists I want to instinctively loop through them which of course you cannot do with Haskell.,True,False,False,haskell,t5_2qh36,67716,public,self,"How to ""Re orientate"" myself from imperative programming?",0,[],1.0,https://www.reddit.com/r/haskell/comments/r9rir7/how_to_re_orientate_myself_from_imperative/,all_ads,6,,,,,,,,,,,,,,,,,,,,
831.0,[],False,fellow_nerd,,[],,text,t2_qvl61as,False,False,False,[],False,False,1638733798,self.haskell,https://www.reddit.com/r/haskell/comments/r9npt0/trouble_setting_up_nix_for_retrocomputing_with/,{},r9npt0,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,2,0,False,all_ads,/r/haskell/comments/r9npt0/trouble_setting_up_nix_for_retrocomputing_with/,False,self,"{'enabled': False, 'images': [{'id': 'UM6d4_NgfPJLrTThFj0jcBeC4p6TINdRlgxSaxBUU8Y', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/Tgp0ONiZmqJqFziCVNO72PhfmrA_kLoRG0kexvZNwUg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=1219471da42320e75da1c05d9da0543489803f7d', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/Tgp0ONiZmqJqFziCVNO72PhfmrA_kLoRG0kexvZNwUg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3e2afed091624bdc78468cd4a680e06510e33e10', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/Tgp0ONiZmqJqFziCVNO72PhfmrA_kLoRG0kexvZNwUg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=22d35f9542e61f25677406898973311bfff792d3', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/Tgp0ONiZmqJqFziCVNO72PhfmrA_kLoRG0kexvZNwUg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=427e5346a8af1f5430cd05bdc4d0144a7a5f75d3', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/Tgp0ONiZmqJqFziCVNO72PhfmrA_kLoRG0kexvZNwUg.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=f1a07bae1ad341193df7cc98658eb1b6df48a094', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/Tgp0ONiZmqJqFziCVNO72PhfmrA_kLoRG0kexvZNwUg.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=f114b92399544d03c649cf5bfd52f359f9bf2ef4', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/Tgp0ONiZmqJqFziCVNO72PhfmrA_kLoRG0kexvZNwUg.jpg?auto=webp&amp;s=4fe42c1bc66863a5de4787853c7a79954159992d', 'width': 1200}, 'variants': {}}]}",6,1638733810,1,"I'm reading through *Retrocomputing with Clash*. The example projects use stack to build. I'm trying to use iohk's haskell.nix with it. For the one example project [clash-calculator](https://github.com/gergoerdi/clash-calculator), when I run `nix develop` and it builds clash-ghc I get the following warning

```
Warning:
    This package indirectly depends on multiple versions of the same package. This is very likely to cause a compile failure.
      package ghc (ghc-8.10.7) requires ghci-8.10.7
      package clash-ghc (clash-ghc-1.4.6) requires ghci-8.10.7-G6m9jPL8HBD2MenaVWt4To
```
Then later there are a few errors that indicate some version mismatch with a core dependency for GHCi.

How can I fix this? I could give up on the nixification of the project and just use stack, but I'd prefer not to.  

- [clash-ghc compilation logs](https://pastebin.com/cR8ED5KY)
- [flake.nix](https://pastebin.com/UWaYN7zd).",True,False,False,haskell,t5_2qh36,67715,public,self,Trouble setting up Nix for Retrocomputing with Clash example code,0,[],1.0,https://www.reddit.com/r/haskell/comments/r9npt0/trouble_setting_up_nix_for_retrocomputing_with/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
832.0,[],False,bobbycreator,,[],,text,t2_gvzcy6r0,False,False,False,[],False,False,1638731207,self.haskell,https://www.reddit.com/r/haskell/comments/r9mrgl/mapping_changing_if_statements/,{},r9mrgl,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/r9mrgl/mapping_changing_if_statements/,False,,,6,1638731218,1,[removed],True,False,False,haskell,t5_2qh36,67710,public,self,Mapping changing if statements,0,[],1.0,https://www.reddit.com/r/haskell/comments/r9mrgl/mapping_changing_if_statements/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
833.0,[],False,marinho32,,[],,text,t2_9k0f8224,False,False,False,[],False,False,1638717469,self.haskell,https://www.reddit.com/r/haskell/comments/r9htgi/foldl_vs_foldr/,{},r9htgi,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,23,0,False,all_ads,/r/haskell/comments/r9htgi/foldl_vs_foldr/,False,,,6,1638717480,1,"Im new to programming and Haskell is my first language. I just learned these new functions, map, filter, foldr and foldl, but i cant seem to understand when to use fold and what both of them do, in which way i want to apply them, specially with more complex functions associated, i can understand the fold (+) for example. 

Can anyone elucidate me about these functions, im kind of stuck here.",True,False,False,haskell,t5_2qh36,67705,public,self,foldl vs foldr,0,[],1.0,https://www.reddit.com/r/haskell/comments/r9htgi/foldl_vs_foldr/,all_ads,6,,,,,,,,,,,,,,,,,,,,
834.0,[],False,tuncfor,,[],,text,t2_h70yw275,False,False,False,[],False,False,1638715779,self.haskell,https://www.reddit.com/r/haskell/comments/r9h8pc/beginnerish_question_help_please_looking_for_a/,{},r9h8pc,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r9h8pc/beginnerish_question_help_please_looking_for_a/,False,,,6,1638715790,1,[removed],True,False,False,haskell,t5_2qh36,67703,public,self,"[Beginnerish Question] Help please: Looking for a bug, seems like the first line of input is not parsed (AOC day 4 solution)",0,[],1.0,https://www.reddit.com/r/haskell/comments/r9h8pc/beginnerish_question_help_please_looking_for_a/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,automod_filtered,,,,,,,,,,,,,
835.0,[],False,fumieval,,[],,text,t2_fwirv,False,False,False,[],False,False,1638714043,github.com,https://www.reddit.com/r/haskell/comments/r9gowf/oath_composable_concurrent_computation_done_right/,{},r9gowf,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,34,0,False,all_ads,/r/haskell/comments/r9gowf/oath_composable_concurrent_computation_done_right/,False,link,"{'enabled': False, 'images': [{'id': 'bt4iHJxXoQfMDPkDcU6sDvIxkV8YuVu_MS-xwoZBS0I', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/nyH_S4mfBMP3q6X8NtVauJ7arMj7SYNot74HIzTyDm4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=fe4698944a76a33ddb91374a09946478abe3e2ec', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/nyH_S4mfBMP3q6X8NtVauJ7arMj7SYNot74HIzTyDm4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b9f89b1e822b9c287f72b675ef163d5df1db5e32', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/nyH_S4mfBMP3q6X8NtVauJ7arMj7SYNot74HIzTyDm4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7e2571e9c7e7a02adde92cbe1c13f0f191520575', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/nyH_S4mfBMP3q6X8NtVauJ7arMj7SYNot74HIzTyDm4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=a875406566409d777fce661cf347aaab83e00631', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/nyH_S4mfBMP3q6X8NtVauJ7arMj7SYNot74HIzTyDm4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=72ae1f4c4414a96193b637ed492147fd330f14a9', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/nyH_S4mfBMP3q6X8NtVauJ7arMj7SYNot74HIzTyDm4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=2af0b391708c9e30859ba92c1955779c6ebdd5f2', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/nyH_S4mfBMP3q6X8NtVauJ7arMj7SYNot74HIzTyDm4.jpg?auto=webp&amp;s=4fa86f5303abd72f6c29173378041ecce77563c4', 'width': 1200}, 'variants': {}}]}",6,1638714053,1,,True,False,False,haskell,t5_2qh36,67704,public,default,oath: Composable Concurrent Computation Done Right,0,[],1.0,https://github.com/fumieval/oath,all_ads,6,,,https://github.com/fumieval/oath,70.0,140.0,,,,,,,,,,,,,,,
836.0,[],False,KeyAd8466,,[],,text,t2_aq9npgw5,False,False,False,[],False,False,1638706120,self.haskell,https://www.reddit.com/r/haskell/comments/r9eez7/beginner_question_on_filtering_lists/,{},r9eez7,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,8,0,False,all_ads,/r/haskell/comments/r9eez7/beginner_question_on_filtering_lists/,False,,,6,1638706131,1,"I have a list of 3-way tuples which each contain `(Player, FavouriteGame, FavouriteMeal)` \- for example an element in that list could be `(""Elon"", ""Forza"", ""Pizza"")`.

I want to create a function that would take a list of those tuples, and return a list of games (`[FavouriteGame]`) that have been named as the favourite game of every player (a player can have more than one favourite game)

For example, the following list given as an input to the function would make the function return a list with the single item `[""Forza""]` as all players have indicated it's their favourite game.

    [(""Elon"", ""Forza"", ""Pizza""), (""Edward"", ""Forza"", ""Tacos""), (""Rob"", ""GTA"", ""Pizza""), (""Rob"", ""Forza"", ""Burgers"")]

What is the easiest and quickest way to achieve this? I am a beginner so please go easy on me :)",True,False,False,haskell,t5_2qh36,67703,public,self,Beginner question on filtering lists,0,[],1.0,https://www.reddit.com/r/haskell/comments/r9eez7/beginner_question_on_filtering_lists/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
837.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1638680473,self.haskell,https://www.reddit.com/r/haskell/comments/r982ip/advent_of_code_2021_day_05/,{},r982ip,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,38,0,False,all_ads,/r/haskell/comments/r982ip/advent_of_code_2021_day_05/,False,,,6,1638680485,1,&lt;https://adventofcode.com&gt;,False,True,True,haskell,t5_2qh36,67693,public,spoiler,Advent of Code 2021 day 05,0,[],1.0,https://www.reddit.com/r/haskell/comments/r982ip/advent_of_code_2021_day_05/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1638680473.308, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5', 't3_r982ip'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
838.0,[],False,TheHimalayanWanderer,,[],,text,t2_88g025hv,False,False,False,[],False,False,1638673769,self.haskell,https://www.reddit.com/r/haskell/comments/r963fh/quick_questions_about_maps_and_lists/,{},r963fh,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,10,0,False,all_ads,/r/haskell/comments/r963fh/quick_questions_about_maps_and_lists/,False,,,6,1638673780,1,"Hi, I am trying to convert a list to a map and back to a list, but I'm getting an error could anyone help?

Also if I wanted to get an average test score from a list of tuples which had a name and their score but a person could appear more than once, how would I do that?

Lastly, if I had a list of players and the teams they have played for, and I wanted to get a list of players that have played for every team how would I do that?",True,False,False,haskell,t5_2qh36,67690,public,self,Quick questions about maps and lists,0,[],1.0,https://www.reddit.com/r/haskell/comments/r963fh/quick_questions_about_maps_and_lists/,all_ads,6,,,,,,,,,,,,,,,,,,,,
839.0,[],False,kvanberendonck,,[],,text,t2_du6nz,False,False,False,[],False,False,1638669499,self.haskell,https://www.reddit.com/r/haskell/comments/r94sve/stack_add_a_dependency_when_ghc_79/,{},r94sve,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/r94sve/stack_add_a_dependency_when_ghc_79/,False,,,6,1638669509,1,"Hi,

I need to shim \`UTCTime\` using the \`time-compat\` package for older versions of GHC.

But I don't really want to add a new dependency for everyone else.

Is there a way, in \`stack.yaml\` or \`package.yaml\`, that I gate a dependency for a specific GHC version?",True,False,False,haskell,t5_2qh36,67688,public,self,stack: add a dependency when ghc &lt; 7.9,0,[],1.0,https://www.reddit.com/r/haskell/comments/r94sve/stack_add_a_dependency_when_ghc_79/,all_ads,6,,,,,,,,,,,,,,,,,,,,
840.0,[],False,joningun37,,[],,text,t2_7eqsrfcb,False,False,False,[],False,False,1638662113,self.haskell,https://www.reddit.com/r/haskell/comments/r92l16/how_to_push_my_stack_build_to_cachix/,{},r92l16,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r92l16/how_to_push_my_stack_build_to_cachix/,False,,,6,1638662125,1,[removed],True,False,False,haskell,t5_2qh36,67688,public,self,How to push my Stack build to Cachix,0,[],1.0,https://www.reddit.com/r/haskell/comments/r92l16/how_to_push_my_stack_build_to_cachix/,all_ads,6,a628ffea-6553-11eb-aac3-0ee12c4ab0e3,puzzle,,,,,reddit,,,,,,,,,,,,,
841.0,[],False,Gadiguibou,,[],,text,t2_16pr4o,False,False,False,[],False,False,1638644119,self.haskell,https://www.reddit.com/r/haskell/comments/r8wctq/looking_for_a_review_of_my_haskell_solution_to_my/,{},r8wctq,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,13,0,False,all_ads,/r/haskell/comments/r8wctq/looking_for_a_review_of_my_haskell_solution_to_my/,False,self,"{'enabled': False, 'images': [{'id': 'xpcmB7z7YvJrohWGOUJvi95ZStPjLHqpYrhu3feGdtg', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4688cd7d3398177ced4ffc65a7990de883305601', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=fb75a7a2a1a5b7fa76e23b9ba1bfbe2c807b5732', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e545f64e6a4988d1356921c2ecada34bf417f393', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ca67143aaa480539f111d9a66d18b09fda9b2b01', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=4d413572fd8b027cc8b55a62a4a46efe25263026', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c88a72462f246e454f4022a60b0a66c8c0089c0e', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?auto=webp&amp;s=c1d1735480a8bf06e571e783d19e7e9a7e494332', 'width': 1200}, 'variants': {'obfuscated': {'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?width=108&amp;crop=smart&amp;blur=10&amp;format=pjpg&amp;auto=webp&amp;s=4526d311a63246ad408a7a85479d6d3728ea0f9d', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?width=216&amp;crop=smart&amp;blur=21&amp;format=pjpg&amp;auto=webp&amp;s=717c4142de41a9a08a8939d7ce154371861dc097', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?width=320&amp;crop=smart&amp;blur=32&amp;format=pjpg&amp;auto=webp&amp;s=1c12a6644e3ae173b0f18cbb2a174b5dfec3e97f', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?width=640&amp;crop=smart&amp;blur=40&amp;format=pjpg&amp;auto=webp&amp;s=7d921537edf1d30d46f65a4eecfe6b0444adfa6b', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?width=960&amp;crop=smart&amp;blur=40&amp;format=pjpg&amp;auto=webp&amp;s=1df01e8fd8631813e341d869977c3674575c2937', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?width=1080&amp;crop=smart&amp;blur=40&amp;format=pjpg&amp;auto=webp&amp;s=897aa4f996f369481ba0718008f84a710766f826', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/vjDtCybiKF9Pf4DtTgL0gUQM6XZfHAxE_a85Cvib2AI.jpg?blur=40&amp;format=pjpg&amp;auto=webp&amp;s=f7aa9074e040a43ce528dd07250e00e783064b40', 'width': 1200}}}}]}",6,1638644131,1,"I'm using a different programming language every day for this year's Advent of Code.

Today I used Haskell. It was my first time writing something that's a bit more than trivial with it. Would any kind soul be willing to review my solution to see where I could improve (code style, project setup, better solution, inefficiencies, etc.)?

[link to the solution](https://github.com/Gadiguibou/advent-of-code-2021/tree/main/day_04)",True,True,False,haskell,t5_2qh36,67688,public,spoiler,Looking for a review of my Haskell solution to my Advent of Code day 4 solution,0,[],1.0,https://www.reddit.com/r/haskell/comments/r8wctq/looking_for_a_review_of_my_haskell_solution_to_my/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,,,
842.0,[],False,jhidding,,[],,text,t2_1j9fewm3,False,False,False,[],False,False,1638640665,self.haskell,https://www.reddit.com/r/haskell/comments/r8v3xx/advent_of_code_literally_in_haskell/,{},r8v3xx,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,11,0,False,all_ads,/r/haskell/comments/r8v3xx/advent_of_code_literally_in_haskell/,False,self,"{'enabled': False, 'images': [{'id': '_Qs9LFz00Ehl7JX-T9xr9qPfcpCsYht15ZgRumucgJA', 'resolutions': [{'height': 165, 'url': 'https://external-preview.redd.it/WQP_cWfolwV7x3qmODuGpwTvzBvm8RIgELgvD9-kyEg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=20bb557ffb35d2ff892921e62d37bde41470cf2c', 'width': 108}, {'height': 330, 'url': 'https://external-preview.redd.it/WQP_cWfolwV7x3qmODuGpwTvzBvm8RIgELgvD9-kyEg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=375258270f478fc974de7aca2c7d0a0a5c0bb21a', 'width': 216}, {'height': 489, 'url': 'https://external-preview.redd.it/WQP_cWfolwV7x3qmODuGpwTvzBvm8RIgELgvD9-kyEg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=926627253b55ec07e569d652412066069b9ad882', 'width': 320}], 'source': {'height': 841, 'url': 'https://external-preview.redd.it/WQP_cWfolwV7x3qmODuGpwTvzBvm8RIgELgvD9-kyEg.jpg?auto=webp&amp;s=b7856c77d1167232705c296c992fb0913d691565', 'width': 550}, 'variants': {}}]}",6,1638640677,1,This year I'm coding AoC in the Literate Programming framework [Entangled](https://entangled.github.io/). Solutions are of course in Haskell. Check it out at: [jhidding.github.io/aoc2021](https://jhidding.github.io/aoc2021),True,False,False,haskell,t5_2qh36,67687,public,self,"Advent of Code, literally in Haskell",0,[],1.0,https://www.reddit.com/r/haskell/comments/r8v3xx/advent_of_code_literally_in_haskell/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,,,
843.0,[],False,exhuma,,[],,text,t2_3m4h,False,False,False,[],False,False,1638636693,self.haskell,https://www.reddit.com/r/haskell/comments/r8tpmh/what_are_some_ways_i_could_tickle_my_beginner/,{},r8tpmh,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,37,0,False,all_ads,/r/haskell/comments/r8tpmh/what_are_some_ways_i_could_tickle_my_beginner/,False,,,6,1638636705,1,"I find Haskell an amazing language but I have difficulties integrating it into my daily workflow. I work as a professional programmer and do Python all day long.

I started the ""Learn you a Haskell"" book to tease my brain and learn to approach problems from a different angle. And I have learned a lot and I think my Python code has benefited from it.

But I got stuck at the Monad chapter and lost interest. But it's still in the back of my mind to get back to it.

However, the biggest roadblock I am facing is that I can't seem to find something *useful* to do with Haskell. Probably due to the lack of my knowledge/experience in that language.

But I can't bring myself to write Haskell at work as I would be the only one being able to maintain the code (no other Haskellers around).

So I am turning to you folks: Do you have any ideas of writing something that will end up being something useful? Maybe some starters for implementing a HTTP/REST layer between a JS-Frontend and a database? Or something else I would love to play around with (but I'm not sure whether it's even possible): Writing a Python extension in Haskell, or, if that's not doable, a `.so` shared library which could be called from other code so I could use Python's `ctypes` module (not sure if *that* is even possible either).

Any ideas? Tips?",True,False,False,haskell,t5_2qh36,67687,public,self,What are some ways I could tickle my (beginner) haskell-brain with something *useful*?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r8tpmh/what_are_some_ways_i_could_tickle_my_beginner/,all_ads,6,,,,,,,,,,,,,,,,,,,,
844.0,[],False,sintrastes,,[],,text,t2_i9tjx,False,False,False,[],False,False,1638632524,self.haskell,https://www.reddit.com/r/haskell/comments/r8s8mg/anything_like_sveltejetpack_compose_for_haskell/,{},r8s8mg,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,19,0,False,all_ads,/r/haskell/comments/r8s8mg/anything_like_sveltejetpack_compose_for_haskell/,False,,,6,1638632535,1,"Hey all. I'm a Haskell dev, but I use Kotlin in my day job. 

For those not familiar, Jetpack Compose is a compiler plugin for Kotlin which allows for a declarative React/VDOM style of UI programming by composing so-called ""composable functions"" (which is funny to me as a Haskell dev, because what is a function if not composable?) to build up the UI.

The kicker is, at compile-time, these composable functions are eliminated -- and (as I understand it) compiled to some imperative code that updates the UI appropriately in a reactive manner as it's inputs change.

Svelte works similarly, but for JavaScript.

So in other words, you get something that looks a lot like a VDOM/React style UI -- but without the overhead of an actual VDOM!

This is a fascinating idea to me, and I'd love to learn more about how such approaches work -- but at least in terms of compiler/DSL/PL-type features (basically anything that manipulates an AST), I find Haskell far easier to understand and read. So I was wondering if anyone has implemented anything similar in Haskell (or even a related language like Purescript).

I know there's gi-gtk-declarative and Halogen (on the Purescript side) -- and while these are both excellent libraries for declarative UI programming, as far as I know, both of them are implemented via a VDOM -- not with a compilation step.

Does anyone know of anyone who's attempted such a compile-time approach to declarative UIs in Haskell?",True,False,False,haskell,t5_2qh36,67686,public,self,Anything like Svelte/Jetpack Compose for Haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r8s8mg/anything_like_sveltejetpack_compose_for_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
845.0,[],False,fireman212,,[],,text,t2_oj5s2,False,False,False,[],False,False,1638632090,self.haskell,https://www.reddit.com/r/haskell/comments/r8s3gm/aoc_wreq_and_cookies/,{},r8s3gm,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,9,0,False,all_ads,/r/haskell/comments/r8s3gm/aoc_wreq_and_cookies/,False,,,6,1638632102,1,"Every year I use AoC in order to learn myself a new language, and this year I decided to land on Haskell.

In order to have a nice user interface for myself, I used `optparse-applicative` in order to parse the following argument format: `aoc --file &lt;local path&gt; | --download &lt;session cookie of user&gt;`.

So far so good, but then I faced the following problem. The following snippet, which *should* work, returns a 400 error code and indicates that my access failed:

    readFromUrl :: String -&gt; IO String
    readFromUrl session -&gt; do
                now &lt;- getCurrentTime
                let expires = addUTCTime (days 30) now
                    cookie = Cookie ""session"" session expires "".adventofcode.com"" ""/"" now now False False True True
                    jar = createCookieJar [cookie]
                    opts = defaults &amp; cookies ?~ jar
                response &lt;- getWith opts ""https://adventofcode.com/2021/day/1/input""
                return $ Char8.unpack $ response ^. responseBody

I am kind of in a loss about why this doesn't work, and the internet or documentation doesn't seem to give me a clue about why (or what part of) my way is wrong.
Could youp lease point me in the direction of a documentation that would help me?",True,False,False,haskell,t5_2qh36,67686,public,self,"AoC, wreq and cookies.",0,[],1.0,https://www.reddit.com/r/haskell/comments/r8s3gm/aoc_wreq_and_cookies/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
846.0,[],False,rysh502,,[],,text,t2_3rg95yze,False,False,False,[],False,False,1638615516,self.haskell,https://www.reddit.com/r/haskell/comments/r8nbh4/could_you_tell_me_if_any_essential_features_for/,{},r8nbh4,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,28,0,False,all_ads,/r/haskell/comments/r8nbh4/could_you_tell_me_if_any_essential_features_for/,False,,,6,1638615527,1,"Excuse me, I don't have any experience with Haskell, but I have experience with Scala and ZIO.

Recently, there was a discussion about functional programming, and I wanted to know how I do that differs from Haskell's.

Best Regards",True,False,False,haskell,t5_2qh36,67686,public,self,Could you tell me if any essential features for functional programming in Haskell are not in Scala's Cats Effect or ZIO?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r8nbh4/could_you_tell_me_if_any_essential_features_for/,all_ads,6,,,,,,,,,,,,,,,,,,,,
847.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1638594081,self.haskell,https://www.reddit.com/r/haskell/comments/r8i2l5/advent_of_code_2021_day_4/,{},r8i2l5,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,24,0,False,all_ads,/r/haskell/comments/r8i2l5/advent_of_code_2021_day_4/,False,,,6,1638594094,1,&lt;https://adventofcode.com/2021/day/4&gt;,True,False,True,haskell,t5_2qh36,67681,public,self,Advent of Code 2021 day 4,0,[],1.0,https://www.reddit.com/r/haskell/comments/r8i2l5/advent_of_code_2021_day_4/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1638594081.328, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8', 't3_r8i2l5'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
848.0,[],False,HugoPeters1024,,[],,text,t2_7mau2nue,False,False,False,[],False,False,1638569935,self.haskell,https://www.reddit.com/r/haskell/comments/r8agqj/i_wrote_this_for_the_many_bachelor_students_at_my/,{},r8agqj,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,6,0,False,all_ads,/r/haskell/comments/r8agqj/i_wrote_this_for_the_many_bachelor_students_at_my/,False,self,"{'enabled': False, 'images': [{'id': 'pONhtTX6Ptt3wAmi-gcAdJzQg9kuJMJrBVMzcZJCqLU', 'resolutions': [{'height': 74, 'url': 'https://external-preview.redd.it/b5WbPzAfqehv3RrD0sQgeiqqWZ64e54SAGE5RW2B4Z8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ede1ee0778a297785f49a199d84ead0cb66e4fc2', 'width': 108}, {'height': 149, 'url': 'https://external-preview.redd.it/b5WbPzAfqehv3RrD0sQgeiqqWZ64e54SAGE5RW2B4Z8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0d89e8729778f772acc4dcc556ddb4bdefeeb287', 'width': 216}, {'height': 221, 'url': 'https://external-preview.redd.it/b5WbPzAfqehv3RrD0sQgeiqqWZ64e54SAGE5RW2B4Z8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=2e4c0a5e433d1d76cc0082cb98b5a45de8d3bc88', 'width': 320}, {'height': 443, 'url': 'https://external-preview.redd.it/b5WbPzAfqehv3RrD0sQgeiqqWZ64e54SAGE5RW2B4Z8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c12ded38c90780e14543c7fc477a7fbd845f9ecd', 'width': 640}], 'source': {'height': 554, 'url': 'https://external-preview.redd.it/b5WbPzAfqehv3RrD0sQgeiqqWZ64e54SAGE5RW2B4Z8.jpg?auto=webp&amp;s=65aff17f1af766720f740fb1258bb065a81b53e2', 'width': 800}, 'variants': {}}]}",6,1638570290,1,[https://hugopeters.me/posts/13/](https://hugopeters.me/posts/13/),True,False,False,haskell,t5_2qh36,67675,public,self,I wrote this for the many bachelor students at my university struggling to grasp the state monad,0,[],1.0,https://www.reddit.com/r/haskell/comments/r8agqj/i_wrote_this_for_the_many_bachelor_students_at_my/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,,,,,,,,,,,,,,,,,,
849.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1638567290,haskellweekly.news,https://www.reddit.com/r/haskell/comments/r89raz/issue_292_haskell_weekly_newsletter/,{},r89raz,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r89raz/issue_292_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1638567300,1,,True,False,False,haskell,t5_2qh36,67675,public,default,Issue 292 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/292.html,all_ads,6,,,https://haskellweekly.news/issue/292.html,140.0,140.0,,,,,,,,,,,,,,,
850.0,[],False,Muscle_Man1993,,[],,text,t2_tq7ct,False,False,False,[],False,False,1638564099,self.haskell,https://www.reddit.com/r/haskell/comments/r88m3e/parse_only_part_of_a_string/,{},r88m3e,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,14,0,False,all_ads,/r/haskell/comments/r88m3e/parse_only_part_of_a_string/,False,,,6,1638564110,1,"My ultimate goal is to parse function and class/type signatures and add comment documentation stubs, think doxygen. I am starting with Python and hopefully implement it for other languages when I successfully implement this. The parser part is easy, but the problem is that most of the file is not relevant and I want to ignore it. Is there way to jump to the part of the file/text that is potentially parseable or is relevant to the task.

```
There is some text that I don't care about...
...
&lt;actual text that I want to parse and insert some texts before or after&gt;
...
Maybe more irrelevant text.
```

I tried using `getPosition` and `setPosition` but it didn't behave like I expected, maybe I am using them wrong?

Any advice would be appreciated.",True,False,False,haskell,t5_2qh36,67675,public,self,Parse only part of a string,0,[],1.0,https://www.reddit.com/r/haskell/comments/r88m3e/parse_only_part_of_a_string/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
851.0,[],False,epoberezkin,,[],,text,t2_13t18x,False,False,False,[],False,False,1638547786,self.haskell,https://www.reddit.com/r/haskell/comments/r82ji7/christmas_of_code_haskell_for_mobile_a_3000_grant/,{},r82ji7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,36,0,False,all_ads,/r/haskell/comments/r82ji7/christmas_of_code_haskell_for_mobile_a_3000_grant/,False,self,"{'enabled': False, 'images': [{'id': '0Evd6UWXs4A11yT0I3bSUdOWKNqr9Az0qWvc-WhxMes', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a559bb4d890ff015d6259a06083f8cea81389ab2', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b67964ddc7f6a4e974672b382f7c786c8d3526fe', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=61e37c5f638b0d156c5fdcbc1a5335a3bdbb8729', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=298dca15f47ae031413bbd031ffd301b05793915', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=81eb47deb6039cc11cc169b056aee661e37b1789', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3b60b078d6771ef7f153290885f77a8f50774cdb', 'width': 1080}], 'source': {'height': 4096, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?auto=webp&amp;s=6803e63008eaa75aac55167a9225dd6c2f0316a7', 'width': 4096}, 'variants': {}}]}",6,1638547797,1,"[Tweag](https://www.tweag.io/) and [SimpleX Chat](https://simplex.chat/) offer a 4-weeks grant to create an open-source project template for a cross-platform mobile app (iOS and Android), using native UI (SwiftUI and Jetpack Compose) with a shared Haskell core, connected to SQLite database, network (TCP/TLS and HTTPS/WebSocket) and push notifications. 

The created project will be publicly and freely available for anybody to use under MIT license. 

The contributor will earn the compensation of **$3,000 for 4 weeks of** **open-source** contributions, jointly sponsored by Tweag and SimpleX Chat.

Please apply via this [Google form](https://forms.gle/dQU6pVHqCLvpdbrq9) – it will take 5 minutes – and [read this announcement](https://simplexchat-my.sharepoint.com/:w:/g/personal/ep_simplex_chat/EWyqmamTU2FItj92KZ09nxcB0P3LgRmjhn2Gjw1YFMvOQQ?e=aNfiM3) for more information.",True,False,False,haskell,t5_2qh36,67665,public,self,"Christmas of Code – Haskell for Mobile – a $3,000 grant for an open-source project",0,[],1.0,https://www.reddit.com/r/haskell/comments/r82ji7/christmas_of_code_haskell_for_mobile_a_3000_grant/,all_ads,6,,,,,,,,,,,,,,,,,,,,
852.0,[],False,ilikebrckhmptn,,[],,text,t2_1anaklfg,False,False,False,[],False,False,1638545083,self.haskell,https://www.reddit.com/r/haskell/comments/r81iwf/why_doesnt_justnegate_number_work/,{},r81iwf,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,10,0,False,all_ads,/r/haskell/comments/r81iwf/why_doesnt_justnegate_number_work/,False,,,6,1638545094,1,"I know this code is garbage, but basically I'm trying to implement a safe (maybe) Int division function. I have to use both recursion &amp; guards, so this is what I came up with. The problem now is that somehow the just (negate count) in the test' function doesn't work (it always returns the result as positive, eg dividedBy'' (-100) 10 is always Just 10) - and I can't for the life of me figure out why. I checked that the test' function does indeed get called, I triple checked my guards etc. Any help would be much appreciated :)

    dividedBy'' :: Int -&gt; Int -&gt; Maybe Int
    dividedBy'' num denom
       | denom == 0 = Nothing
       | num &lt; 0 &amp;&amp; denom &gt; 0 = test' (negate num) denom 0
       | num &gt; 0 &amp;&amp; denom &lt; 0 = test' num (negate denom) 0
       | num &lt; 0 &amp;&amp; denom &lt; 0 = go (negate num) (negate denom) 0
       | num &gt; 0 &amp;&amp; denom &gt; 0 = go num denom 0
          where go n d count
                  | n &lt; d = Just count
                  | otherwise = go (n - d) d (count + 1)
                test' n d count
                  | n &lt; d = Just (negate count) -- why does this not work?? ffs
                  | otherwise = go (n - d) d (count + 1)",True,False,False,haskell,t5_2qh36,67666,public,self,why doesn't Just(negate number) work?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r81iwf/why_doesnt_justnegate_number_work/,all_ads,6,,,,,,,,,,,,,,,,,,,,
853.0,[],False,NeilNjae,,[],,text,t2_6836y,False,False,False,[],False,False,1638543810,self.haskell,https://www.reddit.com/r/haskell/comments/r811on/ghcup_and_default_ghc_version/,{},r811on,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/r811on/ghcup_and_default_ghc_version/,False,,,6,1638543821,1,"A question about ghcup. I've used that to install a recent version of GHC (9.0.1), alongside the one from the Ubuntu repos (8.8.something). Ghcup also installed Cabal 3.6 for me.

How do I persude my OS and/or Cabal to use the version of GHC installed by ghcup, and not one from Ubuntu? 

I resorted to added some manual links into `~/.ghcup/bin`, pointing to the GHC binaries I want, but that can't be the way to do it properly.",True,False,False,haskell,t5_2qh36,67665,public,self,ghcup and default GHC version,0,[],1.0,https://www.reddit.com/r/haskell/comments/r811on/ghcup_and_default_ghc_version/,all_ads,6,,,,,,,,,,,,,,,,,,,,
854.0,[],False,ivanpd,,[],,text,t2_5q91vx,False,False,False,[],False,False,1638541918,self.haskell,https://www.reddit.com/r/haskell/comments/r80djm/ann_nasas_ogma/,{},r80djm,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,10,0,False,all_ads,/r/haskell/comments/r80djm/ann_nasas_ogma/,False,self,"{'enabled': False, 'images': [{'id': 'zJlQGjWux9lDDVtPCxK5qTD4vsw47iVEl-vnoXotCRo', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/fa8UMMxYB9p8T0lRkv8NnAdjsqzVXpLY07HYZjSVkr4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=50f15de966a4dc1ba5e2e3375ae9f59973aaa6f2', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/fa8UMMxYB9p8T0lRkv8NnAdjsqzVXpLY07HYZjSVkr4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=beed0d605cf9dadab0707f332a4e33638fbbc479', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/fa8UMMxYB9p8T0lRkv8NnAdjsqzVXpLY07HYZjSVkr4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=caed5cce7b9b5eb461b81a6ea68d3608b5353f22', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/fa8UMMxYB9p8T0lRkv8NnAdjsqzVXpLY07HYZjSVkr4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=6eae70bceed970ef94c36c549a2453f65f135509', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/fa8UMMxYB9p8T0lRkv8NnAdjsqzVXpLY07HYZjSVkr4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b98555a1935a93dc17cbb0ad450e42ab853d969a', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/fa8UMMxYB9p8T0lRkv8NnAdjsqzVXpLY07HYZjSVkr4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9c5317572ad3bbbc21593fd8a5f0e8efa9dd1c23', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/fa8UMMxYB9p8T0lRkv8NnAdjsqzVXpLY07HYZjSVkr4.jpg?auto=webp&amp;s=e55dc888e44d1164906867d73e36a1a8e0f073f2', 'width': 1200}, 'variants': {}}]}",6,1638541930,1,"Dear all

We are thrilled to announce the release of Ogma, a new open-source NASA tool, written in Haskell, to generate hard-realtime C runtime monitoring applications from high-level specifications.

Ogma takes the output of existing tools, like NASA's requirements elicitation tool FRET \[2\], and produces monitors in Copilot \[3\], a runtime verification language that can be compiled to hard-realtime C99.

Ogma is also able to produce monitoring applications for NASA's Core Flight System (cFS), which can be compiled alongside existing applications to flag requirement violations.  


[FRET requirement being monitored inside the XPlane flight simulator by taking the code generated by Ogma and making it accessible to the simualtor via a custom on-screen plugin](https://i.redd.it/ba1pvmd68c381.gif)

[Ogma takes high-level specifications produced from requirements by NASA's FRET tool and converts them into Copilot runtime monitors that can be converted into hard-realtime C99 code.](https://i.redd.it/dfor6zaa8c381.gif)

This is research software (Class E) and it has not been certified for use in aircraft or UAVs. We are currently using it for upcoming experiments at NASA Langley.

We'd like to also take this opportunity to publicly thank the team that creates BNFC, for their tool, their response to technical questions during the development of Ogma, and for accommodations made to help us speed up our release process.

If you have any issues, feel free to open a ticket in the github repo directly.

Happy haskelling,

\[1\] https://github.com/NASA/ogma  
\[2\] https://github.com/NASA-SW-VnV/fret  
\[3\] https://github.com/Copilot-Language/copilot",True,False,False,haskell,t5_2qh36,67663,public,self,ANN: NASA's Ogma,0,[],1.0,https://www.reddit.com/r/haskell/comments/r80djm/ann_nasas_ogma/,all_ads,6,,,,78.0,140.0,"{'ba1pvmd68c381': {'e': 'AnimatedImage', 'id': 'ba1pvmd68c381', 'm': 'image/gif', 'p': [{'u': 'https://preview.redd.it/ba1pvmd68c381.gif?width=108&amp;crop=smart&amp;format=png8&amp;s=450555c3c3445adbb066c1ca31be55b971af4221', 'x': 108, 'y': 60}, {'u': 'https://preview.redd.it/ba1pvmd68c381.gif?width=216&amp;crop=smart&amp;format=png8&amp;s=5482d0e100708f0bf7a06d8c5b1408bf10519f25', 'x': 216, 'y': 121}, {'u': 'https://preview.redd.it/ba1pvmd68c381.gif?width=320&amp;crop=smart&amp;format=png8&amp;s=f1f4d10a6e4b4e2068ee2c4c5468f7784b1f6553', 'x': 320, 'y': 180}], 's': {'gif': 'https://i.redd.it/ba1pvmd68c381.gif', 'mp4': 'https://preview.redd.it/ba1pvmd68c381.gif?format=mp4&amp;s=07a56eca69b4881b23f7c6789d1f6c465ad66e63', 'x': 512, 'y': 288}, 'status': 'valid'}, 'dfor6zaa8c381': {'e': 'AnimatedImage', 'id': 'dfor6zaa8c381', 'm': 'image/gif', 'p': [{'u': 'https://preview.redd.it/dfor6zaa8c381.gif?width=108&amp;crop=smart&amp;format=png8&amp;s=5727562eb7b450c128ab3dfac0ae065e8fb31959', 'x': 108, 'y': 60}, {'u': 'https://preview.redd.it/dfor6zaa8c381.gif?width=216&amp;crop=smart&amp;format=png8&amp;s=1aa6e52706e45d8cdf859dd1c2db4595cb8beb1a', 'x': 216, 'y': 121}, {'u': 'https://preview.redd.it/dfor6zaa8c381.gif?width=320&amp;crop=smart&amp;format=png8&amp;s=b992c740cc7d04f7bf26c81ea485d3d0f4230c5b', 'x': 320, 'y': 180}, {'u': 'https://preview.redd.it/dfor6zaa8c381.gif?width=640&amp;crop=smart&amp;format=png8&amp;s=effa3fa34fca16b86fe0048025a290e5785a87d5', 'x': 640, 'y': 360}], 's': {'gif': 'https://i.redd.it/dfor6zaa8c381.gif', 'mp4': 'https://preview.redd.it/dfor6zaa8c381.gif?format=mp4&amp;s=bdc326439e26875163c3a4f5205615ed7002c2d2', 'x': 720, 'y': 405}, 'status': 'valid'}}",,,,,,,,,,,,,,
855.0,[],False,Existing-Cup7963,,[],,text,t2_g5wc5do1,False,False,False,[],False,False,1638541041,self.haskell,https://www.reddit.com/r/haskell/comments/r802wb/movie_review/,{},r802wb,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r802wb/movie_review/,False,,,6,1638541053,1,[removed],True,False,False,haskell,t5_2qh36,67662,public,self,Movie review,0,[],1.0,https://www.reddit.com/r/haskell/comments/r802wb/movie_review/,all_ads,6,,,,,,,moderator,,,,,,,,,,,,,
856.0,[],False,Salah-x,,[],,text,t2_f06xo2lt,False,False,False,[],False,False,1638513489,self.haskell,https://www.reddit.com/r/haskell/comments/r7sq0r/high_order_functions/,{},r7sq0r,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,5,0,False,all_ads,/r/haskell/comments/r7sq0r/high_order_functions/,False,,,6,1638513500,1,"I am stuck on a problem. The tasks is to  take a function that takes two elements and apply that function using two different lists instead of two elements

This is what I have 
Apply _ _ = [ ]

Apply f(x y:xs)= f x y :Apply f xs",True,False,False,haskell,t5_2qh36,67646,public,self,High order functions,0,[],1.0,https://www.reddit.com/r/haskell/comments/r7sq0r/high_order_functions/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
857.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1638507671,self.haskell,https://www.reddit.com/r/haskell/comments/r7r1g8/advent_of_code_2021_day_3/,{},r7r1g8,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,22,0,False,all_ads,/r/haskell/comments/r7r1g8/advent_of_code_2021_day_3/,False,,,6,1638507684,1,&lt;https://adventofcode.com/2021/day/3&gt;,False,False,True,haskell,t5_2qh36,67645,public,self,Advent of Code 2021 day 3,0,[],1.0,https://www.reddit.com/r/haskell/comments/r7r1g8/advent_of_code_2021_day_3/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1638507671.411, 'link_ids': ['t3_r6dox9', 't3_r6zdwl', 't3_r7r1g8'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
858.0,[],False,webNoob13,,[],,text,t2_7bmygxmk,False,False,False,[],False,False,1638494222,self.haskell,https://www.reddit.com/r/haskell/comments/r7mkut/is_knowledge_gained_in_other_languages_mostly/,{},r7mkut,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,34,0,False,all_ads,/r/haskell/comments/r7mkut/is_knowledge_gained_in_other_languages_mostly/,False,,,6,1638494233,1,"I re-registered for a masters of CS program because my BCS was completed at a relatively unknown Canadian school so I am always wondering if ""I know less"" than others in important areas like distributed computing on which I have almost no knowledge.  I know the masters program uses languages like C, C++, Java, Python, etc so I'm wondering how much of a gap I'll be left with to transfer the knowledge I gain to implementing in Haskell.  Is there a better roadmap to learning more advanced topics and applying them in Haskell or other pure functional languages than enrolling in a masters program?  It's fully online so courses only, no thesis.  Should I get a job doing something within reach and self-study these concepts and trying to implement in Haskell?  I'm still a novice in Hasekll but feel as though I'm falling behind already as the trend towards pure functional languages seems to be accelerating.  Should I try to enroll in a graduate program that is focused on functional languages like the one at Tsukuba University?",True,False,False,haskell,t5_2qh36,67643,public,self,Is knowledge gained in other languages mostly applicable in Haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r7mkut/is_knowledge_gained_in_other_languages_mostly/,all_ads,6,,,,,,,,,,,,,,,,,,,,
859.0,[],False,Akoeni,,[],,text,t2_35izdyku,False,False,False,[],False,False,1638474987,self.haskell,https://www.reddit.com/r/haskell/comments/r7fsbo/what_do_you_guys_think_about_the_cardano/,{},r7fsbo,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,10,0,False,all_ads,/r/haskell/comments/r7fsbo/what_do_you_guys_think_about_the_cardano/,False,,,6,1638474998,1,"So i have been researching Cardano for a few months and was curious about the haskell programming  that it uses for Dapps.

What do you think about Cardano using haskell programming?

What do you think about Cardano the project itself?

Any intresting projects you working on?

Thanks for the read!",True,False,False,haskell,t5_2qh36,67632,public,self,What do you guys think about the Cardano blockchain?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r7fsbo/what_do_you_guys_think_about_the_cardano/,all_ads,6,,,,,,,,,,,,,,,,,,,,
860.0,[],False,dnmfarrell,,[],,text,t2_l0t0f,False,False,False,[],False,False,1638470893,self.haskell,https://www.reddit.com/r/haskell/comments/r7e9a9/check_understanding_of_io_string/,{},r7e9a9,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/r7e9a9/check_understanding_of_io_string/,False,,,6,1638470904,1,"Given this program, `main.hs`
```
import System.IO
main :: IO ()
main = do 
    let xs = [getLine]
    head xs &gt;&gt;= putStrLn
    head xs &gt;&gt;= putStrLn
```
I was surprised to find this output:

```
echo -e ""1\n2"" | runghc main.hs 2&gt;/dev/null
1
2
```
(instead of `1\n1\n`).

Does this happen because IO String is a monad around a reader handle (stdin in this case), and so multiple binds on the same value cause successive reads on the handle?",True,False,False,haskell,t5_2qh36,67632,public,self,Check understanding of IO String,0,[],1.0,https://www.reddit.com/r/haskell/comments/r7e9a9/check_understanding_of_io_string/,all_ads,6,,,,,,,,,,,,,,,,,,,,
861.0,[],False,agnishom,,[],,text,t2_4myyc,False,False,False,[],False,False,1638470123,javaplt.github.io,https://www.reddit.com/r/haskell/comments/r7dz58/a_7_lecture_haskell_crash_course/,{},r7dz58,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/r7dz58/a_7_lecture_haskell_crash_course/,False,,,6,1638470134,1,,True,False,False,haskell,t5_2qh36,67631,public,default,A 7 lecture Haskell Crash Course,0,[],1.0,https://javaplt.github.io/haskell-course/,all_ads,6,,,https://javaplt.github.io/haskell-course/,,,,,,,,,,,,,,,,,
862.0,[],False,Iceland_jack,,[],,text,t2_3qjdu,False,False,False,[],False,False,1638469786,gitlab.haskell.org,https://www.reddit.com/r/haskell/comments/r7dul9/export_stock_stock1_modifiers_with_virtual_stock/,{},r7dul9,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r7dul9/export_stock_stock1_modifiers_with_virtual_stock/,False,link,"{'enabled': False, 'images': [{'id': 'sadGiZnMza04xEiWhXPO3i3TXwX3TFWIYyP5IIsznEc', 'resolutions': [{'height': 80, 'url': 'https://external-preview.redd.it/4MJJZoVTqSH6Q00o7vG4ApujBxpeiap6JKO1q14porc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a6f7fb4f328502b78f0954aab756375a9f046d85', 'width': 108}], 'source': {'height': 89, 'url': 'https://external-preview.redd.it/4MJJZoVTqSH6Q00o7vG4ApujBxpeiap6JKO1q14porc.jpg?auto=webp&amp;s=1ad0b10fdc9bf95e0ba2e939d95ebfe612ac3694', 'width': 119}, 'variants': {}}]}",6,1638469796,1,,True,False,False,haskell,t5_2qh36,67630,public,default,"Export Stock, Stock1 modifiers with virtual stock instances",0,[],1.0,https://gitlab.haskell.org/ghc/ghc/-/issues/20770,all_ads,6,,,https://gitlab.haskell.org/ghc/ghc/-/issues/20770,52.0,70.0,,,,,,,,,,,,,,,
863.0,[],False,Iceland_jack,,[],,text,t2_3qjdu,False,False,False,[],False,False,1638464255,self.haskell,https://www.reddit.com/r/haskell/comments/r7bte7/metapatterns_abstracting_over_the_class_instance/,{},r7bte7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,5,0,False,all_ads,/r/haskell/comments/r7bte7/metapatterns_abstracting_over_the_class_instance/,False,,,6,1638464266,1,"What to call these? Patterns like [`Ap`](https://hackage.haskell.org/package/base-4.16.0.0/docs/Data-Monoid.html#t:Ap) themselves follow a meta-pattern, is specifies lifting by an applicative and all of its operations have the form `opn = liftAn opn` give or take lifting constants. Assume simplified classes and `liftA0 = pure`

    instance (Applicative f, Semigroup a) =&gt; Semigroup (Ap f a) where
      (&lt;&gt;) = liftA2 (&lt;&gt;)

    instance (Applicative f, Monoid a) =&gt; Monoid (Ap f a) where
      mempty = liftA0 mempty

    instance (Applicative f, Bounded a) =&gt; Bounded (Ap f a) where
      minBound = liftA0 minBound
      maxBound = liftA0 maxBound

    instance (Applicative f, Num a) =&gt; Num (Ap f a) where
      (+) = liftA2 (+)
      (-) = liftA2 (-)
      (*) = liftA2 (*)
      abs = liftA abs
      ..
      fromInteger = liftA0 . fromInteger

The pattern is somewhat simple but with no way of capturing it. The instance head cannot be a type variable

    instance (Applicative f, cls a) =&gt; cls (Ap f a) where
      ??

What would such a solution look like? I don't want to get distracted by generating instances that violate laws, just capturing this general structure. 

* A generic representation type classes to parallel `Generic` for datatypes. 
* It can maybe be implemented with GHC source plugins.
* Or created on the fly [by GHC](https://gitlab.haskell.org/ghc/ghc/-/issues/20770#note_395476), which is privy to the internal structure of type classes

        instance (Applicative f, cls a) =&gt; cls (Stocking1 Ap f a)",True,False,False,haskell,t5_2qh36,67628,public,self,Meta-patterns: abstracting over the class 'instance cls F',0,[],1.0,https://www.reddit.com/r/haskell/comments/r7bte7/metapatterns_abstracting_over_the_class_instance/,all_ads,6,,,,,,,,,,,,,,,,,,,,
864.0,[],False,brunom11,,[],,text,t2_1fn813ay,False,False,False,[],False,False,1638457430,i.redd.it,https://www.reddit.com/r/haskell/comments/r79dyi/what_do_you_think_of_my_day_1_solution/,{},r79dyi,False,False,False,False,True,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r79dyi/what_do_you_think_of_my_day_1_solution/,False,image,"{'enabled': True, 'images': [{'id': 'vD4TVy6kY5JLziAI2mbLK7KuL-4fr_Db8dFd0cLZGdU', 'resolutions': [{'height': 46, 'url': 'https://preview.redd.it/nkexy4om95381.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=d07f4abe3b588a7a7ca84e3536e245596fd57b34', 'width': 108}, {'height': 92, 'url': 'https://preview.redd.it/nkexy4om95381.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=29cad31c11d0dbf193eb9a435832e045eb7b4b70', 'width': 216}, {'height': 137, 'url': 'https://preview.redd.it/nkexy4om95381.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=960089fd6ff87021dbe88c646bf06bd9ddcbae75', 'width': 320}, {'height': 274, 'url': 'https://preview.redd.it/nkexy4om95381.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=ac817023b684b1b011866c858b14814b294cda8f', 'width': 640}, {'height': 411, 'url': 'https://preview.redd.it/nkexy4om95381.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=d8f710c294fcc097c935c2be0f6cf3780678c125', 'width': 960}, {'height': 463, 'url': 'https://preview.redd.it/nkexy4om95381.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=5f28c21d0e634ac2eb67e7900d1ce6b7f496451d', 'width': 1080}], 'source': {'height': 854, 'url': 'https://preview.redd.it/nkexy4om95381.png?auto=webp&amp;s=63f763d88e508d85a6b45bfe40491bdcd9c42fc4', 'width': 1990}, 'variants': {}}]}",6,1638457441,1,,True,False,False,haskell,t5_2qh36,67628,public,image,What do you think of my day 1 solution?,0,[],1.0,https://i.redd.it/nkexy4om95381.png,all_ads,6,,,https://i.redd.it/nkexy4om95381.png,60.0,140.0,,moderator,,,,,,,,,,,,,
865.0,[],False,csabahruska,,[],,text,t2_enu97,False,False,False,[],False,False,1638456947,skillsmatter.com,https://www.reddit.com/r/haskell/comments/r797ox/why_and_how_the_external_stg_interpreter_is/,{},r797ox,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,13,0,False,all_ads,/r/haskell/comments/r797ox/why_and_how_the_external_stg_interpreter_is/,False,,,6,1638456958,1,,True,False,False,haskell,t5_2qh36,67626,public,default,"Why and How the External STG Interpreter is Useful (Online presentation, Dec 2, Thursday, 17:00 UTC)",0,[],1.0,https://skillsmatter.com/meetups/13654-haskell-stg-interp,all_ads,6,,,https://skillsmatter.com/meetups/13654-haskell-stg-interp,,,,,,,,,,,,,,,,,
866.0,[],False,csabahruska,,[],,text,t2_enu97,False,False,False,[],False,False,1638456327,skillsmatter.com,https://www.reddit.com/r/haskell/comments/r78zth/why_and_how_the_external_stg_interpreter_is/,{},r78zth,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/r78zth/why_and_how_the_external_stg_interpreter_is/,False,,,6,1638456338,1,,True,False,False,haskell,t5_2qh36,67626,public,default,"Why and How the External STG interpreter is Useful (Online presentation, Dec 2, Friday, 17:00 UTC)",0,[],1.0,https://skillsmatter.com/meetups/13654-haskell-stg-interp,all_ads,6,,,https://skillsmatter.com/meetups/13654-haskell-stg-interp,,,,,,,,,,,,,,,,,
867.0,[],False,KripperinoArcherino,,[],,text,t2_5gdduqoy,False,False,False,[],False,False,1638456302,self.haskell,https://www.reddit.com/r/haskell/comments/r78zih/haskell_language_server_not_in_visual_studio/,{},r78zih,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/r78zih/haskell_language_server_not_in_visual_studio/,False,self,"{'enabled': False, 'images': [{'id': 'rP5CudQnjvKtMGyaJvDuEt_mYsgWTkNsLsOXGfYZTAQ', 'resolutions': [{'height': 216, 'url': 'https://external-preview.redd.it/_zQujcdaqWyn9eS3xCRoYul83FBQqX9p-NR5kbdAm2k.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=0cc2c272234792649862116f3b9a49b10b4c9077', 'width': 108}, {'height': 432, 'url': 'https://external-preview.redd.it/_zQujcdaqWyn9eS3xCRoYul83FBQqX9p-NR5kbdAm2k.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=ce4732147659e5ac242e4722d004be3fb3832baa', 'width': 216}], 'source': {'height': 973, 'url': 'https://external-preview.redd.it/_zQujcdaqWyn9eS3xCRoYul83FBQqX9p-NR5kbdAm2k.png?auto=webp&amp;s=4b45e1e37fd70651e9416e6b7d1a57d2c646360a', 'width': 311}, 'variants': {}}]}",6,1638456313,1,"I want to set up Haskell on Windows 10 with Intellisense but there are absolutely no tutorial I could find on the internet. The only one I found was [this one](https://medium.com/@dogwith1eye/setting-up-haskell-in-vs-code-with-stack-and-the-ide-engine-81d49eda3ecf) but this is all in Linux so it was really difficult to follow properly. 

I maneged to download all the other extension he was asking for but can't download the language server. In the VS's marketplace it is literally just [not there](https://snipboard.io/bE3szv.jpg). What can I do?",True,False,False,haskell,t5_2qh36,67626,public,self,Haskell Language Server not in Visual Studio Extension's Marketplace?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r78zih/haskell_language_server_not_in_visual_studio/,all_ads,6,,,,,,,,,,,,,,,,,,,,
868.0,[],False,grahamhutton,,[],,text,t2_39zck,False,False,False,[],False,False,1638435182,cs.nott.ac.uk,https://www.reddit.com/r/haskell/comments/r735nf/10_phd_studentships_in_nottingham/,{},r735nf,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,12,0,False,all_ads,/r/haskell/comments/r735nf/10_phd_studentships_in_nottingham/,False,,,6,1638435193,1,,False,False,False,haskell,t5_2qh36,67616,public,default,10 PhD studentships in Nottingham,0,[],1.0,http://www.cs.nott.ac.uk/~pszgmh/phd-advert.txt,all_ads,6,,,http://www.cs.nott.ac.uk/~pszgmh/phd-advert.txt,,,,,,,,,,,,,,,,,
869.0,[],False,webNoob13,,[],,text,t2_7bmygxmk,False,False,False,[],False,False,1638431257,self.haskell,https://www.reddit.com/r/haskell/comments/r727iv/compare_on_length_of_sublists_to_sort_listwhat_am/,{},r727iv,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,10,0,False,all_ads,/r/haskell/comments/r727iv/compare_on_length_of_sublists_to_sort_listwhat_am/,False,self,"{'enabled': False, 'images': [{'id': '1e_QzK61v4drh1wn_SmlhbDx6m9HEtUydt4lI42RKiE', 'resolutions': [{'height': 70, 'url': 'https://external-preview.redd.it/bVJMvHDJHtPaMC3lQixkjfcpEoBVTiKwdyVYAqAz_yo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=aa1c10f822911e48742b0c63e59876a44939a414', 'width': 108}, {'height': 140, 'url': 'https://external-preview.redd.it/bVJMvHDJHtPaMC3lQixkjfcpEoBVTiKwdyVYAqAz_yo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a51c54ddbd7b0f222993f48a91dfe82fce8ca60d', 'width': 216}, {'height': 207, 'url': 'https://external-preview.redd.it/bVJMvHDJHtPaMC3lQixkjfcpEoBVTiKwdyVYAqAz_yo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f289b2c575190937d732fc892562d1eec747beb3', 'width': 320}], 'source': {'height': 224, 'url': 'https://external-preview.redd.it/bVJMvHDJHtPaMC3lQixkjfcpEoBVTiKwdyVYAqAz_yo.jpg?auto=webp&amp;s=b623b58ca58395b45b2f34e0a1fa141e6348ec9f', 'width': 345}, 'variants': {}}]}",6,1638431267,1,"From: [http://learnyouahaskell.com/modules#loading-modules](http://learnyouahaskell.com/modules#loading-modules)

    --sort list by length of sublists
    sortedSublists = 
        let xs = [[5 ,4 ,5 ,4 ,4] ,[1 ,2 ,3] ,[3 ,5 ,4 ,3] ,[] ,[2] ,[2 ,2]]
        in sortBy (compare `on` length) xs

The error is 

    ch7_modules.hs:165:24: error:
        • Variable not in scope:
            on
              :: (a1 -&gt; a1 -&gt; Ordering)
                 -&gt; (t0 a0 -&gt; Int) -&gt; [a] -&gt; [a] -&gt; Ordering
        • Perhaps you meant ‘or’ (imported from Data.List)
        |
    165 |     in sortBy (compare `on` length) xs
        |                        ^^^^

so I tried putting \`or\` there instead but I just get another error.

Am I missing an import?

At the top of my file I have

    import Data.List
    import qualified Data.Map as M
    import Data.Maybe 

and I swear I have been following the book line by line so did not miss any other imports.",True,False,False,haskell,t5_2qh36,67616,public,self,compare `on` length of sublists to sort list..what am I missing?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r727iv/compare_on_length_of_sublists_to_sort_listwhat_am/,all_ads,6,,,,,,,,,,,,,,,,,,,,
870.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1638421274,self.haskell,https://www.reddit.com/r/haskell/comments/r6zdwl/advent_of_code_2021_day_2/,{},r6zdwl,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,48,0,False,all_ads,/r/haskell/comments/r6zdwl/advent_of_code_2021_day_2/,False,,,6,1638421286,1,&lt;https://adventofcode.com/2021/day/1&gt;,True,False,True,haskell,t5_2qh36,67612,public,self,Advent of Code 2021 day 2,0,[],1.0,https://www.reddit.com/r/haskell/comments/r6zdwl/advent_of_code_2021_day_2/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1638421274.701, 'link_ids': ['t3_r6dox9', 't3_r6zdwl'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
871.0,[],False,SpaceWitness,,[],,text,t2_nwlwnt3,False,False,False,[],False,False,1638393918,self.haskell,https://www.reddit.com/r/haskell/comments/r6pn36/jobproject_in_haskell/,{},r6pn36,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/r6pn36/jobproject_in_haskell/,False,,,6,1638393929,1,I'm looking for someone to do a project in Haskell. If you're interested please DM me for more information!,True,False,False,haskell,t5_2qh36,67605,public,self,Job/Project in Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/r6pn36/jobproject_in_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
872.0,[],False,syedajafri1992,,[],,text,t2_ldr0k,False,False,False,[],False,False,1638381540,youtube.com,https://www.reddit.com/r/haskell/comments/r6ksgu/haskell_in_100_seconds/,{},r6ksgu,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,15,0,False,all_ads,/r/haskell/comments/r6ksgu/haskell_in_100_seconds/,False,rich:video,"{'enabled': False, 'images': [{'id': 'o9XgFmh6bnJ4YN-zAEnF1LfAcJf_BcCjL-iyaTrP9ow', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/N3T0_-H4GoC0NDgh8_YVF-FCeKJj-fg9_M7s31klyw4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7020ba98a6c973db2254d1a0d4986b1b23bb6252', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/N3T0_-H4GoC0NDgh8_YVF-FCeKJj-fg9_M7s31klyw4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9bcd100630ffd3086c592852769703c05ed49731', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/N3T0_-H4GoC0NDgh8_YVF-FCeKJj-fg9_M7s31klyw4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7000e1a2392377b57bd2e0e70749db443ceded27', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/N3T0_-H4GoC0NDgh8_YVF-FCeKJj-fg9_M7s31klyw4.jpg?auto=webp&amp;s=fe1adac4a89ee162816d617e35e86cb9884ca68c', 'width': 480}, 'variants': {}}]}",6,1638381551,1,,True,False,False,haskell,t5_2qh36,67602,public,image,Haskell in 100 Seconds,0,[],1.0,https://www.youtube.com/watch?v=Qa8IfEeBJqk,all_ads,6,be2af704-5664-11eb-8e65-0ecd290c3053,video,https://www.youtube.com/watch?v=Qa8IfEeBJqk,105.0,140.0,,,,,,,"{'oembed': {'author_name': 'Fireship', 'author_url': 'https://www.youtube.com/c/Fireship', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/Qa8IfEeBJqk?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/Qa8IfEeBJqk/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Haskell in 100 Seconds', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/Qa8IfEeBJqk?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'Fireship', 'author_url': 'https://www.youtube.com/c/Fireship', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/Qa8IfEeBJqk?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/Qa8IfEeBJqk/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Haskell in 100 Seconds', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/Qa8IfEeBJqk?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/r6ksgu', 'scrolling': False, 'width': 356}",,,,,
873.0,[],False,keiser_sozze,,[],,text,t2_12ux4n,False,False,False,[],False,False,1638379687,self.haskell,https://www.reddit.com/r/haskell/comments/r6k29n/how_does_rust_code_written_by_a_haskell_dev_look/,{},r6k29n,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,33,0,False,all_ads,/r/haskell/comments/r6k29n/how_does_rust_code_written_by_a_haskell_dev_look/,False,,,6,1638379697,1,"I hear only good things about Rust from Haskell related social media places I follow, including this subreddit.

I've been curious how Haskell devs write Rust code. Do they try to make Rust look &amp; feel more like Haskell by using certain libraries? How do they cope with lack of monads, type classes, HKTs and such?",True,False,False,haskell,t5_2qh36,67602,public,self,How does Rust code written by a Haskell dev look like?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r6k29n/how_does_rust_code_written_by_a_haskell_dev_look/,all_ads,6,,,,,,,,,,,,,,,,,,,,
874.0,[],False,CapitalDesk,,[],,text,t2_682eaqy6,False,False,False,[],False,False,1638376027,self.haskell,https://www.reddit.com/r/haskell/comments/r6iofz/should_i_learn_haskell_or_f/,{},r6iofz,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,36,0,False,all_ads,/r/haskell/comments/r6iofz/should_i_learn_haskell_or_f/,False,,,6,1638376038,1,"Only FP experience is in OCaml. I heard that F# is close to OCaml so I'm not sure learning F# is really worth it, imagine there would be a lot of overlap. Also Haskell is used more. What are your thoughts?",True,False,False,haskell,t5_2qh36,67603,public,self,Should I learn Haskell or F#?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r6iofz/should_i_learn_haskell_or_f/,all_ads,6,,,,,,,,,,,,,,,,,,,,
875.0,[],False,ephrion,,[],,text,t2_4y723,False,False,False,[],False,False,1638370072,parsonsmatt.org,https://www.reddit.com/r/haskell/comments/r6ged1/rankntypes_via_the_lambda_calculus/,{},r6ged1,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,1,0,False,all_ads,/r/haskell/comments/r6ged1/rankntypes_via_the_lambda_calculus/,False,,,6,1638370108,1,,True,False,False,haskell,t5_2qh36,67604,public,default,RankNTypes via the Lambda Calculus,0,[],1.0,https://www.parsonsmatt.org/2021/11/30/rank_n_types_via_lambda_calculus.html,all_ads,6,,,https://www.parsonsmatt.org/2021/11/30/rank_n_types_via_lambda_calculus.html,,,,,,,,,,,,,,,,,
876.0,[],False,typedbyte,,[],,text,t2_5xrse9aq,False,False,False,[],False,False,1638368110,self.haskell,https://www.reddit.com/r/haskell/comments/r6foxv/opinions_on_reader_continuationbased_io/,{},r6foxv,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,21,0,False,all_ads,/r/haskell/comments/r6foxv/opinions_on_reader_continuationbased_io/,False,,,6,1638368121,1,"I followed the discussion in a [recent thread](https://www.reddit.com/r/haskell/comments/r4wxi6/a_survey_for_haskell_users_in_the_industry_how_do/) about people handling effects in Haskell. Many people seem to rely on a combination of some environment and `IO`, in one way or another (`RIO`, `ReaderT env IO`, `IO` \+ explicitly passing some environment, [Handle Pattern](https://jaspervdj.be/posts/2018-03-08-handle-pattern.html), record-of-functions in the environment, ...).

I am currently experimenting with a slightly different approach and I am quite happy with the results so far. More concretely, instead of combining an environment with `IO`, we can combine it with a continuation-based version of `IO` (aka [ContT](https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-Cont.html#t:ContT)/[Codensity](https://hackage.haskell.org/package/kan-extensions-5.2.3/docs/Control-Monad-Codensity.html#t:Codensity)/[Managed](https://hackage.haskell.org/package/managed-1.0.9/docs/Control-Monad-Managed.html#v:managed)) like ...

    newtype Program e a = Program (e -&gt; forall b. (a -&gt; IO b) -&gt; IO b)

... with instances for `Applicative`, `Functor`, `Monad`, `MonadIO`, etc. One can read the type as ""a program running with an environment of type `e` and producing a value of type `a`"". By combining this type with a simple typeclass ...

    class e `Has` t where
      from :: e -&gt; t

... we can realize MTL-style typeclasses like `Reader` or `State`, or realize the Handle Pattern by putting stuff into `e` accordingly. An exemplary sketch for `State` would be ...

    data State s = State
      { _get :: IO s
      , _put :: s -&gt; IO ()
      }
    
    get :: e `Has` State s =&gt; Program e s
    put :: e `Has` State s =&gt; s -&gt; Program e ()

  ... where we can implement it backed by some `IORef`, for example (and thus, resurrect our state even in case of errors):

    mkState :: s -&gt; IO (State s)
    mkState s = do
      ref &lt;- newIORef s
      return $
        State
          { _get = readIORef ref
          , _put = writeIORef ref
          }

Yes, it runs in `IO`, but we never ""leak"" the `IORef` itself to the outside, preventing arbitrary access to it. Using clever module exports, the only way to manipulate its content is via `get` and `put`, forcing us to be explicit about it in our type signatures.

The nice thing about making the whole thing continuation-based is that we can also integrate bracket-like operations into our program ...

    bracket :: IO a -&gt; (a -&gt; IO b) -&gt; Program e a
    bracket create destroy =
      Program $ \_ cont -&gt;
        Control.Exception.bracket create destroy cont

... which lets us manage resources that are automatically destroyed at the end of the program (`openFile :: FilePath -&gt; Program e Handle` not shown here for brevity):

    myProgram :: Program e ()
    myProgram = do
      handle1 &lt;- openFile ""/tmp/file1.txt""
      handle2 &lt;- openFile ""/tmp/file2.txt""
      ...
      -- no need for cleaning up handles here

For more fine-grained control of resources, we can define functions like `local :: Program e a -&gt; Program e a`.

I quite like the approach for various reasons:

* It is easy to understand (e.g., no unlifting, no type-level wizardry, hardly any language extensions).
* No need for extra dependencies. All we need is `base`.
* Mocking should be easy to do.
* No fight with the type inference (i.e., down-to-earth types like `IO`, hardly any typeclasses).
* You can easily simulate beloved effects like `Reader` and `State`.
* You can easily integrate other effects by putting other records-of-functions into `e`.
* Being in `IO` instead of some abstract `m` makes error messages clearer, makes lifting unnecessary most of the time, and I guess the compiler can do more optimizations with it (no polymorphic bind, etc.).

As far as I know, the downsides of the approach are:

* You cannot dispatch effects separately, you have to handle them all at once (i.e., there cannot be a function like `runState :: s -&gt; Program e a -&gt; ???`, only `runProgram :: e -&gt; Program e a -&gt; IO a`). I have yet to encounter a scenario where this is really a problem.
* A little bit boilerplate is necessary at the `runProgram`\-site, because you have to define a concrete type for `e` and its corresponding `Has` instances. I think this can be solved by some additional machinery.

Are there any other downsides to this? I put all of this (and a little bit more) into a little package that I am using for various projects. I could upload it to Hackage, but I want to hear your opinions first in order to polish it a little bit.",True,False,False,haskell,t5_2qh36,67605,public,self,Opinions on Reader + Continuation-based IO?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r6foxv/opinions_on_reader_continuationbased_io/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
877.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1638361826,self.haskell,https://www.reddit.com/r/haskell/comments/r6dox9/advent_of_code_2021_day_1/,{},r6dox9,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,54,0,False,all_ads,/r/haskell/comments/r6dox9/advent_of_code_2021_day_1/,False,,,6,1638361837,1,&lt;https://adventofcode.com/2021/day/1&gt;,True,False,False,haskell,t5_2qh36,67604,public,self,Advent of Code 2021 day 1,0,[],1.0,https://www.reddit.com/r/haskell/comments/r6dox9/advent_of_code_2021_day_1/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': '528e235b-6c4b-42d5-9186-111a137c82ac', 'created_at_utc': 1638361764.291, 'description': '', 'display_layout': None, 'last_update_utc': 1638361826.817, 'link_ids': ['t3_r6dox9'], 'permalink': 'https://www.reddit.com/r/haskell/collection/528e235b-6c4b-42d5-9186-111a137c82ac', 'subreddit_id': 't5_2qh36', 'title': 'Advent of Code'}]",,
878.0,[],False,taylorfausak,,[],,text,t2_4hurx,False,False,False,[],False,False,1638361701,self.haskell,https://www.reddit.com/r/haskell/comments/r6dnmn/monthly_hask_anything_december_2021/,{},r6dnmn,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,69,0,False,all_ads,/r/haskell/comments/r6dnmn/monthly_hask_anything_december_2021/,False,,,6,1638361712,1,"This is your opportunity to ask any questions you feel don't deserve their own threads, no matter how small or simple they might be!",True,False,False,haskell,t5_2qh36,67604,public,self,Monthly Hask Anything (December 2021),0,[],1.0,https://www.reddit.com/r/haskell/comments/r6dnmn/monthly_hask_anything_december_2021/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,"[{'author_id': 't2_4hurx', 'author_name': 'taylorfausak', 'collection_id': 'f998970b-a622-480a-aed4-f8d9ad64ee7b', 'created_at_utc': 1612270088.064, 'description': '', 'display_layout': None, 'last_update_utc': 1635814478.145, 'link_ids': ['t3_laur0s', 't3_m0f2y9', 't3_mj7kv5', 't3_n2s8yk', 't3_nqjp2c', 't3_ocz5s5', 't3_p2r52v', 't3_pfxgd4', 't3_pzy3py', 't3_qksh4o'], 'permalink': 'https://www.reddit.com/r/haskell/collection/f998970b-a622-480a-aed4-f8d9ad64ee7b', 'subreddit_id': 't5_2qh36', 'title': 'Hask Anything'}]",,
879.0,[],False,giacomo_cavalieri,,[],,text,t2_h4298qfz,False,False,False,[],False,False,1638358452,self.haskell,https://www.reddit.com/r/haskell/comments/r6crn2/advent_of_code_2021_day_1/,{},r6crn2,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r6crn2/advent_of_code_2021_day_1/,False,,,6,1638358463,1,[removed],True,False,False,haskell,t5_2qh36,67603,public,self,Advent of Code 2021 - day 1,0,[],1.0,https://www.reddit.com/r/haskell/comments/r6crn2/advent_of_code_2021_day_1/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,automod_filtered,,,,,,,,,,,,,
880.0,[],False,oskargreda,,[],,text,t2_fi2s2co8,False,False,False,[],False,False,1638350399,self.haskell,https://www.reddit.com/r/haskell/comments/r6asuw/mlabs_is_hiring_haskellerspurescript_developers/,{},r6asuw,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,7,0,False,all_ads,/r/haskell/comments/r6asuw/mlabs_is_hiring_haskellerspurescript_developers/,False,self,"{'enabled': False, 'images': [{'id': 'GnuOK9IWNyfPHXokumwalY9XRYCi5oSA4uOxJlBNBp4', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f6c520b66a9e4cf15ae1b4b79af413002418a97e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=78ce6df2b94f79b0ccb5ac2b1439fdbd87be5a53', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d0ed86839ce6deb3d5d37506ef62434b8a77baf3', 'width': 320}], 'source': {'height': 500, 'url': 'https://external-preview.redd.it/0FmthJp0Kj0sA6dGsjJOj0aVfFNMv0cOm1bwCVrQT28.jpg?auto=webp&amp;s=562a0dfc197f2356edb2e6c70d03e94ba27414cf', 'width': 500}, 'variants': {}}]}",6,1638350411,1,"**MLabs is hiring Haskellers/Purescript Developers! (Full remote, worldwide)**

We are a rapidly growing, globally distributed software consultancy, working with Haskell, Rust, and Python.

Currently we are looking to fill a position with a great opportunity to use both Haskell and Purescript.

You will be a part of an established team and work collaboratively to come up with solutions, on an ongoing contract basis.

Experience and/or interest with any of the below technologies/business fields are an asset:-

\- Blockchain, Especially Cardano or Ergo  
\- Functional programming  
\- Finance  
\- Consultancies/Agencies  
\- NFTs  
\- Web Stack  
\- Formal Methods, Dependant types, theorem provers  
\- Sales engineering  
\- Cybersecurity

We offer competitive salaries and varied shift patterns to suit everyone. Whether you want to work one day or a week or five we want to hear from you!

For more information about these roles and applications, check &lt;[https://apply.workable.com/mlabs/j/63DAAA4AEF/](https://apply.workable.com/mlabs/j/63DAAA4AEF/)\&gt;

In case of any questions please send an email to: [oskar@mlabs.city](mailto:oskar@mlabs.city)

We will get back to you as soon as possible!",True,False,False,haskell,t5_2qh36,67600,public,self,"MLabs is hiring Haskellers/Purescript Developers! (Full remote, worldwide)",0,[],1.0,https://www.reddit.com/r/haskell/comments/r6asuw/mlabs_is_hiring_haskellerspurescript_developers/,all_ads,6,,,,,,,,,,,,,,,,,,,,
881.0,[],False,parsercombinator,,[],,text,t2_g29nna8o,False,False,False,[],False,False,1638346514,self.haskell,https://www.reddit.com/r/haskell/comments/r69w61/aoc_haskell_day_01_solutions/,{},r69w61,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r69w61/aoc_haskell_day_01_solutions/,False,,,6,1638346525,1,[removed],True,False,False,haskell,t5_2qh36,67599,public,self,AoC Haskell - Day 01 Solutions,0,[],1.0,https://www.reddit.com/r/haskell/comments/r69w61/aoc_haskell_day_01_solutions/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,reddit,,,,,,,,,,,,,
882.0,[],False,parsercombinator,,[],,text,t2_g29nna8o,False,False,False,[],False,False,1638346447,self.haskell,https://www.reddit.com/r/haskell/comments/r69vjp/aoc_haskell_day_01_solutions/,{},r69vjp,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r69vjp/aoc_haskell_day_01_solutions/,False,,,6,1638346458,1,[removed],True,True,False,haskell,t5_2qh36,67599,public,spoiler,AoC Haskell - Day 01 Solutions,0,[],1.0,https://www.reddit.com/r/haskell/comments/r69vjp/aoc_haskell_day_01_solutions/,all_ads,6,dba7b3d0-3a85-11eb-a99d-0e2a71b94259,AoC,,,,,reddit,,,,,,,,,,,,,
883.0,[],False,Opposite-Platypus-99,,[],,text,t2_clsnehel,False,False,False,[],False,False,1638335978,self.haskell,https://www.reddit.com/r/haskell/comments/r677va/relabeling_subtrees_name_of_combinator/,{},r677va,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,15,0,False,all_ads,/r/haskell/comments/r677va/relabeling_subtrees_name_of_combinator/,False,,,6,1638335989,1,"Say we have a recursive data structure where the sub-trees are labeled by some functor f :

&amp;#x200B;

data Tree f a = Leaf a | Branch (f (Tree f a)) (f (Tree f a))

&amp;#x200B;

What's the name of the transformation that lets us relabel the branches using information from the respective whole subtree?",True,False,False,haskell,t5_2qh36,67597,public,self,Relabeling subtrees : name of combinator,0,[],1.0,https://www.reddit.com/r/haskell/comments/r677va/relabeling_subtrees_name_of_combinator/,all_ads,6,,,,,,,,,,,,,,,,,,,,
884.0,[],False,Nyeogmi,,[],,text,t2_4xis4mow,False,False,True,[],False,False,1638330811,nyeogmi.com,https://www.reddit.com/r/haskell/comments/r65pc4/assessing_haskell_blogpost_slightly_negative/,{},r65pc4,False,True,False,True,False,True,False,False,#646d73,[],light,text,False,False,True,50,0,False,all_ads,/r/haskell/comments/r65pc4/assessing_haskell_blogpost_slightly_negative/,False,link,"{'enabled': False, 'images': [{'id': 'ELfnQ2L5f-UmRs1vUqIrzLIAKSv9EOGBqYAxxdsVYfY', 'resolutions': [{'height': 141, 'url': 'https://external-preview.redd.it/jm32ZbnwW8hHDv0G9t2WSwCW64QNiK7LEH_RNeq1gSU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=403039e6399f4427f83b4ca8d8ff634667bea5fc', 'width': 108}, {'height': 282, 'url': 'https://external-preview.redd.it/jm32ZbnwW8hHDv0G9t2WSwCW64QNiK7LEH_RNeq1gSU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=0e16a9f01b5f4dd21ab4b0387fb1a95da796cd3d', 'width': 216}, {'height': 419, 'url': 'https://external-preview.redd.it/jm32ZbnwW8hHDv0G9t2WSwCW64QNiK7LEH_RNeq1gSU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0eedd7943ff5cdaa0d6c11f23cbd60a5c2f8a60', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/jm32ZbnwW8hHDv0G9t2WSwCW64QNiK7LEH_RNeq1gSU.jpg?auto=webp&amp;s=07fbea9e7c7c1e239b1a9a8d6261d7b67c21b581', 'width': 391}, 'variants': {}}]}",6,1638330822,1,,True,False,False,haskell,t5_2qh36,67596,public,default,"Assessing Haskell (blogpost, slightly negative!)",0,[],1.0,https://nyeogmi.com/2021/11/30/assessing-haskell/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://nyeogmi.com/2021/11/30/assessing-haskell/,140.0,140.0,,,,,,,,,,,,,,,
885.0,[],False,andrevdm_reddit,,[],,text,t2_16rwhl,False,False,False,[],False,False,1638330379,self.haskell,https://www.reddit.com/r/haskell/comments/r65kld/polymorphic_has_typeclass_confusion/,{},r65kld,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/r65kld/polymorphic_has_typeclass_confusion/,False,,,6,1638330391,1,"I can't quite work out how to get polymorphic Has* typeclasses working. I think I'm missing something obvious.

Starting with a non-polymorphic version

```haskell
data Child = Child
  { _cVal1 :: !Bool
  , _cVal2 :: !Text
  }

data Parent = Parent
  { _pChild :: !Child
  , _pX :: !Int
  }

data Env = Env
  { _eParent :: !Parent
  , _eName :: !Text
  }

class HasParent a where
  getParent :: a -&gt; Parent
instance HasParent Env where
  getParent = _eParent

runTest :: forall env m. (MonadIO m, MonadReader env m, HasParent env) =&gt; m ()
runTest = do
  p &lt;- asks getParent
  print $ _pX p
```

`runReaderT runTest env` works as expected


But if want to make `Child` polymorphic (`Child m`) then I can't seem to get the types correct. I get close with type families, but not quite there. 

Here is the full polymorphic test

```haskell
{-# LANGUAGE NoImplicitPrelude #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE ScopedTypeVariables #-}

module Eg2 where

import           Protolude

data Child m = Child
  { _cVal1 :: !(m Bool)
  , _cVal2 :: !Text
  }

data Parent m  = Parent
  { _pChild :: !(Child m)
  , _pX :: !Int
  }

data Env = Env
  { _eParent :: !(Parent IO)
  , _eName :: !Text
  }

class (HasParent m) a where
  getParent :: a -&gt; Parent m
instance (HasParent m) (Parent m) where
  getParent = identity --  id
instance (HasParent IO) Env where
  getParent = _eParent


run :: IO ()
run = do
  let env = Env
       { _eName = ""test""
       , _eParent = Parent
         { _pX = 1
         , _pChild = Child
           { _cVal1 = pure False
           , _cVal2 = ""2""
           }
        }
       }
  runReaderT runTest env


runTest :: forall env m. (MonadIO m, MonadReader env m, (HasParent m) env) =&gt; m ()
runTest = do
  e &lt;- ask
  let p  = getParent e
  pure ()
```

The errors are 
```error:
    • Could not deduce (HasParent m0 env)
        arising from a use of ‘getParent’
      from the context: (MonadIO m, MonadReader env m, HasParent m env)
        bound by the type signature for:
                   runTest :: forall env (m :: * -&gt; *).
                              (MonadIO m, MonadReader env m, HasParent m env) =&gt;
                              m ()
      The type variable ‘m0’ is ambiguous
      Relevant bindings include
        p :: Parent m0
          (bound at /home/andre/_data/prog/haskell/_test/readert01/src/Eg2.hs:53:7)
        e :: env
          (bound at /home/andre/_data/prog/haskell/_test/readert01/src/Eg2.hs:52:3)
      These potential instances exist:
        instance forall (m :: * -&gt; *). HasParent m (Parent m)
          -- Defined at /home/andre/_data/prog/haskell/_test/readert01/src/Eg2.hs:29:10
        instance HasParent IO Env
          -- Defined at /home/andre/_data/prog/haskell/_test/readert01/src/Eg2.hs:31:10
    • In the expression: getParent e
      In an equation for ‘p’: p = getParent e
      In the expression:
        do e &lt;- ask
           let p = getParent e
           pure ()
   |
53 |   let p  = getParent e
   |            ^^^^^^^^^^^

error:
    • No instance for (HasParent (ReaderT Env IO) Env)
        arising from a use of ‘runTest’
    • In the first argument of ‘runReaderT’, namely ‘runTest’
      In a stmt of a 'do' block: runReaderT runTest env
      In the expression:
        do let env = ...  runReaderT runTest env
   |
47 |   runReaderT runTest env
   |              ^^^^^^^
```

Thanks for any pointers",True,False,False,haskell,t5_2qh36,67596,public,self,Polymorphic Has* typeclass confusion,0,[],1.0,https://www.reddit.com/r/haskell/comments/r65kld/polymorphic_has_typeclass_confusion/,all_ads,6,,,,,,,,,,,,,,,,,,,,
886.0,[],False,average_emacs_user,,[],,text,t2_gh8b53ad,False,False,False,[],False,False,1638326630,self.haskell,https://www.reddit.com/r/haskell/comments/r64dzq/why_are_missing_methods_allowed_in_instances/,{},r64dzq,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,22,0,False,all_ads,/r/haskell/comments/r64dzq/why_are_missing_methods_allowed_in_instances/,False,,,6,1638326641,1,"To me, this seems like an oversight, as it means that many potential compile-time errors become runtime errors instead. What is the justification for it? Are there plans to make missing methods an error by default?",True,False,False,haskell,t5_2qh36,67593,public,self,Why are missing methods allowed in instances?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r64dzq/why_are_missing_methods_allowed_in_instances/,all_ads,6,,,,,,,,,,,,,,,,,,,,
887.0,[],False,ysangkok,,[],,text,t2_4qktt,False,False,False,[],False,False,1638315980,github.com,https://www.reddit.com/r/haskell/comments/r60vz3/it_takes_us_about_1_personyear_to_upgrade_ghc_at/,{},r60vz3,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,36,0,False,all_ads,/r/haskell/comments/r60vz3/it_takes_us_about_1_personyear_to_upgrade_ghc_at/,False,,,6,1638315990,1,,True,False,False,haskell,t5_2qh36,67591,public,default,It takes us about 1 person-year to upgrade GHC at Meta,0,[],1.0,https://github.com/haskell/core-libraries-committee/issues/12#issuecomment-971794515,all_ads,6,,,https://github.com/haskell/core-libraries-committee/issues/12#issuecomment-971794515,,,,,,,,,,,,,,,,,
888.0,[],False,javiermilpinos,,[],,text,t2_32m1ip1q,False,False,False,[],False,False,1638314010,self.haskell,https://www.reddit.com/r/haskell/comments/r607qr/help_with_haskell_mapset_challenge/,{},r607qr,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r607qr/help_with_haskell_mapset_challenge/,False,,,6,1638314022,1,[removed],True,False,False,haskell,t5_2qh36,67592,public,self,Help with haskell map/set challenge?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r607qr/help_with_haskell_mapset_challenge/,all_ads,6,a628ffea-6553-11eb-aac3-0ee12c4ab0e3,puzzle,,,,,reddit,,,,,,,,,,,,,
889.0,[],False,sridfr,,[],,text,t2_f1wkk8ou,False,False,False,[],False,False,1638310287,queue.acm.org,https://www.reddit.com/r/haskell/comments/r5yvhe/domainspecific_languages_and_code_synthesis_using/,{},r5yvhe,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r5yvhe/domainspecific_languages_and_code_synthesis_using/,False,,,6,1638310297,1,,False,False,False,haskell,t5_2qh36,67587,public,default,Domain-specific Languages and Code Synthesis Using Haskell,0,[],1.0,https://queue.acm.org/detail.cfm?id=2617811,all_ads,6,,,https://queue.acm.org/detail.cfm?id=2617811,,,,,,,,,,,,,,,,,
890.0,[],False,Flashy_Raccoon9683,,[],,text,t2_d740cv1d,False,False,False,[],False,False,1638290335,self.haskell,https://www.reddit.com/r/haskell/comments/r5rafs/any_resources_for_software_architecture_in_haskell/,{},r5rafs,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,9,0,False,all_ads,/r/haskell/comments/r5rafs/any_resources_for_software_architecture_in_haskell/,False,,,6,1638290346,1,"Hello!
So I've been interested in Haskell for quite a while now: I know how to use monads, transformers, some type level programming too...
However I have no idea *when* to use these.
For example, I once wrote a twitch chat bot in Haskell. How do I decide whether to do 
sendMsg :: TwitchBot -&gt; Text -&gt; IO ()
Or
sendMsg :: Text -&gt; TwitchBotM ()
?
The latter seemed tempting, but in practice I rarely chained anything, and I mostly worked in MonadIO, so it just bloated the code as I had to do runTwitchBotM twitchBot (...) everywhere.

How can I learn to make these kinds of decisions beforehand?

Thanks :)",True,False,False,haskell,t5_2qh36,67577,public,self,Any resources for software architecture in Haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r5rafs/any_resources_for_software_architecture_in_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
891.0,[],False,Auslegung,,[],,text,t2_w1gcn,False,False,False,[],False,False,1638285956,self.haskell,https://www.reddit.com/r/haskell/comments/r5pnqp/how_to_use_same_hlintyaml_across_multiple_git/,{},r5pnqp,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,9,0,False,all_ads,/r/haskell/comments/r5pnqp/how_to_use_same_hlintyaml_across_multiple_git/,False,,,6,1638285967,1,"We have a microservices architecture where each service is in its own git repo. We'd like each git repo to use the same hlint.yaml. We could use submodules, subrepos, etc. But it would be simpler for us if we could point hlint to a link like so

    # .hlint.yaml
    
    https://github.com/OurCompany/hlint/hlint.yaml

But assuming that's not possible, how have you solved this problem? Should we just use subrepo or submodules?",True,False,False,haskell,t5_2qh36,67576,public,self,How to use same .hlint.yaml across multiple git repos?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r5pnqp/how_to_use_same_hlintyaml_across_multiple_git/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
892.0,[],False,Serokell,,[],,text,t2_fvl0rbg,False,False,False,[],False,False,1638284482,serokell.io,https://www.reddit.com/r/haskell/comments/r5p4ex/whats_that_typeclass_foldable/,{},r5p4ex,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,False,3,0,False,all_ads,/r/haskell/comments/r5p4ex/whats_that_typeclass_foldable/,False,link,"{'enabled': False, 'images': [{'id': 'J2MjMQOuwVOMnfmNP9tpd5So9JDQ7LxzluvCGn2VX1w', 'resolutions': [{'height': 64, 'url': 'https://external-preview.redd.it/fDzzRlri-cLi9Hr7yZRZzHrO9CNpGpKt01SyuP0D4xQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=377e0c14bd9bc878a59694a01f105dcd404250c2', 'width': 108}, {'height': 128, 'url': 'https://external-preview.redd.it/fDzzRlri-cLi9Hr7yZRZzHrO9CNpGpKt01SyuP0D4xQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a8a78fc8c5ed6e74ff2b40377582b7ac34424e80', 'width': 216}, {'height': 190, 'url': 'https://external-preview.redd.it/fDzzRlri-cLi9Hr7yZRZzHrO9CNpGpKt01SyuP0D4xQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1d8563204e25934e7993bb3c2ec0023baf4ad0ce', 'width': 320}, {'height': 381, 'url': 'https://external-preview.redd.it/fDzzRlri-cLi9Hr7yZRZzHrO9CNpGpKt01SyuP0D4xQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4eadf1b6f372c5d4fe2ba34276225a4826ac6d34', 'width': 640}, {'height': 572, 'url': 'https://external-preview.redd.it/fDzzRlri-cLi9Hr7yZRZzHrO9CNpGpKt01SyuP0D4xQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=302a9eb491da7ec168f1ee69709fad573efaae6f', 'width': 960}, {'height': 644, 'url': 'https://external-preview.redd.it/fDzzRlri-cLi9Hr7yZRZzHrO9CNpGpKt01SyuP0D4xQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=94a7f66b65233ef04086ea33a5c3054114c31f88', 'width': 1080}], 'source': {'height': 716, 'url': 'https://external-preview.redd.it/fDzzRlri-cLi9Hr7yZRZzHrO9CNpGpKt01SyuP0D4xQ.jpg?auto=webp&amp;s=df730d47383e4924364ba082150f046448b59e2c', 'width': 1200}, 'variants': {}}]}",6,1638284493,1,,True,False,False,haskell,t5_2qh36,67576,public,default,What's That Typeclass: Foldable,0,[],1.0,https://serokell.io/blog/whats-that-typeclass-foldable,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://serokell.io/blog/whats-that-typeclass-foldable,83.0,140.0,,,,,,,,,,,,,,,
893.0,[],False,Amarandus,,[],,text,t2_dfhx0,False,False,False,[],False,False,1638276759,self.haskell,https://www.reddit.com/r/haskell/comments/r5mmsz/haskell_template_for_aoc/,{},r5mmsz,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,17,0,False,all_ads,/r/haskell/comments/r5mmsz/haskell_template_for_aoc/,False,self,"{'enabled': False, 'images': [{'id': 'f0sVLqhuITYj4vr-IctwFZ2PKWy_KZrKlrITJb_i9Bs', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/Ad9_C0mfMYQcOUeLGfvyXMD3Luyv3RQB_IB_DPmdWSc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=564245aef6bfb68bdccabf5ab09b59844642298b', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/Ad9_C0mfMYQcOUeLGfvyXMD3Luyv3RQB_IB_DPmdWSc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a63afaba0ca8d916be2c3eacef353e99f06ed8c2', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/Ad9_C0mfMYQcOUeLGfvyXMD3Luyv3RQB_IB_DPmdWSc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d77d6e803dd1703ae6b13300e840380dbcda3836', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/Ad9_C0mfMYQcOUeLGfvyXMD3Luyv3RQB_IB_DPmdWSc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=773ff81b75df2409db3ddea10c9406a37e976bf4', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/Ad9_C0mfMYQcOUeLGfvyXMD3Luyv3RQB_IB_DPmdWSc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a4d229217da7c8e0f88b1c9b06376fa2a2f2d89f', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/Ad9_C0mfMYQcOUeLGfvyXMD3Luyv3RQB_IB_DPmdWSc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=83976b60f3d959ae0eaa909617aa35afbc501d34', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/Ad9_C0mfMYQcOUeLGfvyXMD3Luyv3RQB_IB_DPmdWSc.jpg?auto=webp&amp;s=8a77c08190083e49efcb60663a0d7568d395bdcd', 'width': 1200}, 'variants': {}}]}",6,1638276770,1,"Hey, long time lurker here. I already tried to solve last years advent of code in Haskell, but struggled a bit with the tooling (Mostly a me-problem, but I didn't have the time to both solve the AoC problems **and** learn enough about `stack` to solve my problems).

Now, for rust, there is [cargo-aoc](https://github.com/gobanos/cargo-aoc) which minimizes friction to a great extend.

Is there something similar for Haskell available, too? Or at least a decent project template where I can focus on solving the tasks without fighting the tooling?",True,False,False,haskell,t5_2qh36,67571,public,self,Haskell Template for AoC?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r5mmsz/haskell_template_for_aoc/,all_ads,6,,,,,,,,,,,,,,,,,,,,
894.0,[],False,IdaBzo,,[],,text,t2_101tlt,False,False,False,[],False,False,1638272182,self.haskell,https://www.reddit.com/r/haskell/comments/r5lej8/call_for_haskellorg_committee_nominations/,{},r5lej8,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/r5lej8/call_for_haskellorg_committee_nominations/,False,self,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1638272193,1,Join Haskell.org Committee! The Comitte is waiting for your or/and your friend nomination: [https://discourse.haskell.org/t/call-for-haskell-org-committee-nominations/3758](https://discourse.haskell.org/t/call-for-haskell-org-committee-nominations/3758),True,False,False,haskell,t5_2qh36,67570,public,self,Call for Haskell.org Committee Nominations,0,[],1.0,https://www.reddit.com/r/haskell/comments/r5lej8/call_for_haskellorg_committee_nominations/,all_ads,6,,,,,,,,,,,,,,,,,,,,
895.0,[],False,NorfairKing2,,[],,text,t2_154rv6yi,False,False,False,[],False,False,1638270980,github.com,https://www.reddit.com/r/haskell/comments/r5l3mt/haskell_openapi_code_generator/,{},r5l3mt,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,2,0,False,all_ads,/r/haskell/comments/r5l3mt/haskell_openapi_code_generator/,False,link,"{'enabled': False, 'images': [{'id': '2dBRH81dHKRdepV9KaTujhxf47zZgqrNt56OWb_yD4w', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/76tAfM-6kd0S012VTek7_8RmsUyhQfNejz6QgskTtxU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=9e2cdae868da37d4eb509a0d76d9cf3267c3e403', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/76tAfM-6kd0S012VTek7_8RmsUyhQfNejz6QgskTtxU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=04473e2cb4f6b1b6138664c3c9cdb101a10c5f84', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/76tAfM-6kd0S012VTek7_8RmsUyhQfNejz6QgskTtxU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=cb516028c334f9648586674f2d241f991758dc1e', 'width': 320}], 'source': {'height': 420, 'url': 'https://external-preview.redd.it/76tAfM-6kd0S012VTek7_8RmsUyhQfNejz6QgskTtxU.jpg?auto=webp&amp;s=4f3da51ab282b69e55ff3db66d9121fdd4a23355', 'width': 420}, 'variants': {}}]}",6,1638270992,1,,True,False,False,haskell,t5_2qh36,67568,public,default,Haskell OpenAPI Code Generator,0,[],1.0,https://github.com/Haskell-OpenAPI-Code-Generator/,all_ads,6,,,https://github.com/Haskell-OpenAPI-Code-Generator/,140.0,140.0,,,,,,,,,,,,,,,
896.0,[],False,slowmindedthingy,,[],,text,t2_7u6biyde,False,False,False,[],False,False,1638211629,self.haskell,https://www.reddit.com/r/haskell/comments/r52l2p/unihack_2021_international_hackathon/,{},r52l2p,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r52l2p/unihack_2021_international_hackathon/,False,,,6,1638211640,1," Hi guys! There is this contest you might want to check!

UniHack is an international hackathon for university and high school students with a focus on solving civic issues. 📷

If you are eager to learn from our mentors, challenge your hacking abilities, and bond with new students from around the world, then this is the event for you. 📷

You will have 48h to develop software or hardware with your team members and get a chance to qualify for track prizes or even for the grand prize. Solving a civic issue gets your team bonus points. 📷

This year’s edition will be online. 📷

Register now for UniHack 2021 at [https://unihack.eu](https://unihack.eu/?fbclid=IwAR024jfwlveVoCA5CHgFHWzS10HmQBpX1GuyshEZZXT6quuAgpoDQPmhMgQ)",True,False,False,haskell,t5_2qh36,67557,public,self,UniHack 2021 - International Hackathon,0,[],1.0,https://www.reddit.com/r/haskell/comments/r52l2p/unihack_2021_international_hackathon/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
897.0,[],False,jneira,,[],,text,t2_3pbai,False,False,False,[],False,False,1638209040,self.haskell,https://www.reddit.com/r/haskell/comments/r51mps/ann_haskelllanguageserver151_has_been_released/,{},r51mps,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,5,0,False,all_ads,/r/haskell/comments/r51mps/ann_haskelllanguageserver151_has_been_released/,False,,,6,1638209051,1,"This is a bug fix release for two regressions found after releasing 1.5.0:

&amp;#x200B;

\- \[#2365\]([https://github.com/haskell/haskell-language-server/issue/2365](https://github.com/haskell/haskell-language-server/issue/2365)): hs-boot files not handled correctly, discovered in the ghc codebase and fixed with \[#2377\]([https://github.com/haskell/haskell-language-server/pull/2377](https://github.com/haskell/haskell-language-server/pull/2377))

\- \[#2379\]([https://github.com/haskell/haskell-language-server/issue/2379](https://github.com/haskell/haskell-language-server/issue/2379)): \`tried to look at linkable for GetModIfaceWithoutLinkable for NormalizedFilePath...\` error handling template haskell, fixed with \[#2380\]([https://github.com/haskell/haskell-language-server/pull/2380](https://github.com/haskell/haskell-language-server/pull/2380))

&amp;#x200B;

Both quick fixes thanks to u/pepeiborra

&amp;#x200B;

Also it fixes some long standing bugs in the hlint plugin due to comments being ignored (see \[#2366\]([https://github.com/haskell/haskell-language-server/pull/2366](https://github.com/haskell/haskell-language-server/pull/2366)))",True,False,False,haskell,t5_2qh36,67557,public,self,[ANN] haskell-language-server-1.5.1 has been released,0,[],1.0,https://www.reddit.com/r/haskell/comments/r51mps/ann_haskelllanguageserver151_has_been_released/,all_ads,6,,,,,,,,,,,,,,,,,,,,
898.0,[],False,LuisRui,,[],,text,t2_4k0m4njg,False,False,False,[],False,False,1638206164,self.haskell,https://www.reddit.com/r/haskell/comments/r50kuk/problem_with_quickcheck/,{},r50kuk,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/r50kuk/problem_with_quickcheck/,False,,,6,1638206176,1,"I have this problem trying to install QuickCheck for Haskell on Mac OS X. 

https://preview.redd.it/8va5cthgik281.png?width=1842&amp;format=png&amp;auto=webp&amp;s=3ff6699c9ab1a57974cade9bd6ae2c49861ec738",True,False,False,haskell,t5_2qh36,67557,public,self,Problem with QuickCheck,0,[],1.0,https://www.reddit.com/r/haskell/comments/r50kuk/problem_with_quickcheck/,all_ads,6,,,,86.0,140.0,"{'8va5cthgik281': {'e': 'Image', 'id': '8va5cthgik281', 'm': 'image/png', 'p': [{'u': 'https://preview.redd.it/8va5cthgik281.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=be9609046682d5563397bb45e4696e8a45baa349', 'x': 108, 'y': 67}, {'u': 'https://preview.redd.it/8va5cthgik281.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=591b3b9fa9e99f1d268edc7a48c4f6b897ba4563', 'x': 216, 'y': 134}, {'u': 'https://preview.redd.it/8va5cthgik281.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=8e1595b43080f7a21e8181b3767fffcd7860d412', 'x': 320, 'y': 198}, {'u': 'https://preview.redd.it/8va5cthgik281.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=696ae396421820b573a72c57786e8243f4c417a4', 'x': 640, 'y': 397}, {'u': 'https://preview.redd.it/8va5cthgik281.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=20360a70e0e6c626a5ed5c900d014b518c2f453b', 'x': 960, 'y': 596}, {'u': 'https://preview.redd.it/8va5cthgik281.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d038560bad99b6576dd001718a61491db8196a37', 'x': 1080, 'y': 670}], 's': {'u': 'https://preview.redd.it/8va5cthgik281.png?width=1842&amp;format=png&amp;auto=webp&amp;s=3ff6699c9ab1a57974cade9bd6ae2c49861ec738', 'x': 1842, 'y': 1144}, 'status': 'valid'}}",,,,,,,,,,,,,,
899.0,[],False,peargreen,,[],,text,t2_istrr,False,False,False,[],False,False,1638195870,self.haskell,https://www.reddit.com/r/haskell/comments/r4wxi6/a_survey_for_haskell_users_in_the_industry_how_do/,{},r4wxi6,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,46,0,False,all_ads,/r/haskell/comments/r4wxi6/a_survey_for_haskell_users_in_the_industry_how_do/,False,self,"{'enabled': False, 'images': [{'id': '0_zCnMcEfCiYNfeINxpCszM33-Emd3B_ueJ4SVCTa3Q', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/xjRn-ulaYIEjua6a1hrrExZ0hRQqqdLTP74qXwH0y0o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3cefca0a5d150909c8a3a5d19efc024cfde6039c', 'width': 108}], 'source': {'height': 140, 'url': 'https://external-preview.redd.it/xjRn-ulaYIEjua6a1hrrExZ0hRQqqdLTP74qXwH0y0o.jpg?auto=webp&amp;s=186e3d42564b7a5eaa509fb9e01979243f932e81', 'width': 140}, 'variants': {}}]}",6,1638195880,1,"I started a thread on Twitter asking people how do they handle effects (IO, RIO, mtl, free, polysemy, etc..?) in their industrial codebases: &lt;https://twitter.com/availablegreen/status/1465295477071622148&gt;.

Would be happy if r/haskell could contribute as well — preferably in the Twitter thread, but comments here would also work.

Thanks!",True,False,False,haskell,t5_2qh36,67557,public,self,A survey for Haskell users in the industry: how do you handle effects?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r4wxi6/a_survey_for_haskell_users_in_the_industry_how_do/,all_ads,6,,,,,,,,,,,,,,,,,,,,
900.0,[],False,demieert,,[],,text,t2_166sk2,False,False,False,[],False,False,1638187785,self.haskell,https://www.reddit.com/r/haskell/comments/r4uhjw/define_data_type_as_filtering_of_another_data_type/,{},r4uhjw,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/r4uhjw/define_data_type_as_filtering_of_another_data_type/,False,,,6,1638187796,1,"I am currently trying to implement surreal numbers (using Conways definition) in Haskell.  
For this, I would like to filter a data type to create a new type.  
e.G. I have defined some data that can be filtered  
`data Raw = ...`  
`isValid :: Raw -&gt; Bool`

and I would like to produce a new type  consisting of `x :: Raw` such that `isValid x == True` .  


My current method has the unfiltered type where I need to function `isValid` to recurse through the object instead of having it neatly inside the data definiton.  


`module Surreal where`  
`-- unlike Conways definition, the arguments may be invalid Numbers`  
`-- use isValid to recurse through arguments`  
`data Number = Pair [Number] [Number]`  
  `deriving (Show,Eq)`

`-- Examples of Numbers`  
`zero  = Pair []     []one   = Pair [zero] []` 

`mone  = Pair []     [zero]`

`star  = Pair [zero] [zero]`

&amp;#x200B;

&amp;#x200B;

`-- x = (l1,r1) &gt;= y = (l2,r2) if`

`-- ! exists r in r1 : r &lt;= y and`

`-- ! exists l in l2 : y &lt;= l`

`geq :: Number -&gt; Number -&gt; Bool`

`geq (Pair l1 r1) (Pair l2 r2) = (first ++ second == [])`

  `where`

`first   = [ r | r &lt;- r1, leq r (Pair l2 r2) ]`

`second  = [ l | l &lt;- l2, leq (Pair l1 r1) l ]`

&amp;#x200B;

`leq :: Number -&gt; Number -&gt; Bool`

`leq x y = geq y x`

&amp;#x200B;

`-- x = (l,r) is valid if`

`-- ! exists s in l, t in r : s &gt;= t`

`isValid' (Pair l r) = (invalids == [])`

  `where`

`invalids = [(s,t) | s &lt;- l, t &lt;- r, geq s t]`

&amp;#x200B;

`-- to ensure that the subobjects are valid themselves`

`isValid (Pair l r) = isValid' (Pair l r) &amp;&amp; foldr1 (&amp;&amp;) childrenValid`

  `where`

`childrenValid = map isValid (l ++ r)`",True,False,False,haskell,t5_2qh36,67557,public,self,Define data type as filtering of another data type.,0,[],1.0,https://www.reddit.com/r/haskell/comments/r4uhjw/define_data_type_as_filtering_of_another_data_type/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
901.0,[],False,kindaro,,[],,text,t2_pcbvq,False,False,False,[],False,False,1638172358,self.haskell,https://www.reddit.com/r/haskell/comments/r4qr7m/if_haskell_had_subtyping_what_would_it_be_like/,{},r4qr7m,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,89,0,False,all_ads,/r/haskell/comments/r4qr7m/if_haskell_had_subtyping_what_would_it_be_like/,False,,,6,1638172369,1,"For example, suppose we had a relation on records where _A ≤ B_ exactly when _B_ has all the fields that _A_ has and possibly some extra fields. That is to say, let the relation be induced by the subset relation on the sets of field labels.

Example:

    data A = A {x, y: Int}
    data B = B {x, y, z: Int}

Here, _B_ has an extra field _z_.

Now:

* A function that takes _A_ can also take _B_ _(and ignore all the extra fields)_.

  In other words, if _f ∷ A → Y_ and _b ∷ B_, then _f b ∷ Y_ is well-typed.

* A function that gives _B_ can also give _A_ _(and forget all the extra fields)_.

  In other words, if _f ∷ X → B_ and _x ∷ X_, then _f x ∷ B_ is well-typed.

This can currently be done by writing boring code, so having it as a feature would reduce the amount of boring code, which is good. In real life, records tend to be big, so the reduction is substantial.

A dual construction can be offered for sum types: for example, a function that can take _A + B_ can handle an _A_ or a _B_ as well.

Is this less than ideal? What are the problems? In a dream world of infinite possibilities, where you can add subtyping to Haskell, how would you go about it?",True,False,False,haskell,t5_2qh36,67547,public,self,"If Haskell had subtyping, what would it be like?",0,[],1.0,https://www.reddit.com/r/haskell/comments/r4qr7m/if_haskell_had_subtyping_what_would_it_be_like/,all_ads,6,,,,,,,,,,,,,,,,,,,,
902.0,[],False,webNoob13,,[],,text,t2_7bmygxmk,False,False,False,[],False,False,1638168812,self.haskell,https://www.reddit.com/r/haskell/comments/r4purs/should_i_remove_haskell_cabal_and_start_over/,{},r4purs,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,7,0,False,all_ads,/r/haskell/comments/r4purs/should_i_remove_haskell_cabal_and_start_over/,False,self,"{'enabled': False, 'images': [{'id': 'WPYmgbVoI85jWUg79kHH5HH2YLAI7xz4iXnv5nozil0', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/x7S8su56qlHEe8um62GJcIy83yOKF30IxT_3WuVp8RA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4c4990e1d23e4fd30681c6d26d255ac8c64cdcee', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/x7S8su56qlHEe8um62GJcIy83yOKF30IxT_3WuVp8RA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=253691c392ded33700adb4c455bfb7223c418a63', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/x7S8su56qlHEe8um62GJcIy83yOKF30IxT_3WuVp8RA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5941f823d1668522c0bc7485e4ecc84157aa0abc', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/x7S8su56qlHEe8um62GJcIy83yOKF30IxT_3WuVp8RA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c7fbf2757ae0bdb37d04e1945ac7fe6a0aac577c', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/x7S8su56qlHEe8um62GJcIy83yOKF30IxT_3WuVp8RA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=83afbadf5f69ede196801718b16fd91625edfeff', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/x7S8su56qlHEe8um62GJcIy83yOKF30IxT_3WuVp8RA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=865720507185beb58f09bd016843b8042d4d230c', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/x7S8su56qlHEe8um62GJcIy83yOKF30IxT_3WuVp8RA.jpg?auto=webp&amp;s=b83d78e4944dccd7834eb5939d4faa60864f7b3d', 'width': 1200}, 'variants': {}}]}",6,1638168822,1,"I'm trying to install Hasktorch and my Cabal was deemed outdated so I tried

    cabal install cabal-install
    Warning: The install command is a part of the legacy v1 style of cabal usage.
    
    Please switch to using either the new project style and the new-install
    command or the legacy v1-install alias as new-style projects will become the
    default in the next version of cabal-install. Please file a bug if you cannot
    replicate a working v1- use case with the new-style commands.
    
    For more information, see: https://wiki.haskell.org/Cabal/NewBuild
    
    Resolving dependencies...
    Downloading  Cabal-3.6.2.0
    Downloading  base16-bytestring-1.0.2.0
    Downloaded   base16-bytestring-1.0.2.0
    Downloading  base64-bytestring-1.2.1.0
    Starting     base16-bytestring-1.0.2.0
    Downloaded   base64-bytestring-1.2.1.0
    Downloading  cryptohash-sha256-0.11.102.1
    Starting     base64-bytestring-1.2.1.0
    Downloaded   Cabal-3.6.2.0
    Downloaded   cryptohash-sha256-0.11.102.1
    Starting     cryptohash-sha256-0.11.102.1
    Starting     Cabal-3.6.2.0
    Building     base16-bytestring-1.0.2.0
    Building     base64-bytestring-1.2.1.0
    Building     cryptohash-sha256-0.11.102.1
    Building     Cabal-3.6.2.0
    Completed    base16-bytestring-1.0.2.0
    Downloading  echo-0.1.4
    Downloaded   echo-0.1.4
    Starting     echo-0.1.4
    Completed    base64-bytestring-1.2.1.0
    Downloading  ed25519-0.0.5.0
    Downloaded   ed25519-0.0.5.0
    Starting     ed25519-0.0.5.0
    Completed    cryptohash-sha256-0.11.102.1
    Downloading  lukko-0.1.1.3
    Downloaded   lukko-0.1.1.3
    Starting     lukko-0.1.1.3
    Building     echo-0.1.4
    Building     ed25519-0.0.5.0
    Building     lukko-0.1.1.3
    Completed    echo-0.1.4
    Downloading  regex-base-0.94.0.2
    Downloaded   regex-base-0.94.0.2
    Starting     regex-base-0.94.0.2
    Building     regex-base-0.94.0.2
    Completed    lukko-0.1.1.3
    Downloading  splitmix-0.1.0.4
    Downloaded   splitmix-0.1.0.4
    Starting     splitmix-0.1.0.4
    Completed    regex-base-0.94.0.2
    Downloading  tar-0.5.1.1
    Building     splitmix-0.1.0.4
    Downloaded   tar-0.5.1.1
    Starting     tar-0.5.1.1
    Completed    ed25519-0.0.5.0
    Downloading  resolv-0.1.2.0
    Downloaded   resolv-0.1.2.0
    Building     tar-0.5.1.1
    Starting     resolv-0.1.2.0
    Completed    splitmix-0.1.0.4
    Downloading  regex-posix-0.96.0.1
    Downloaded   regex-posix-0.96.0.1
    Starting     regex-posix-0.96.0.1
    Building     regex-posix-0.96.0.1
    Building     resolv-0.1.2.0
    Completed    regex-posix-0.96.0.1
    Downloading  random-1.2.1
    Downloaded   random-1.2.1
    Starting     random-1.2.1
    Completed    tar-0.5.1.1
    Building     random-1.2.1
    Completed    random-1.2.1
    Downloading  edit-distance-0.2.2.1
    Downloaded   edit-distance-0.2.2.1
    Starting     edit-distance-0.2.2.1
    Completed    resolv-0.1.2.0
    Building     edit-distance-0.2.2.1
    Completed    edit-distance-0.2.2.1
    Completed    Cabal-3.6.2.0
    Downloading  hackage-security-0.6.0.1
    Downloaded   hackage-security-0.6.0.1
    Starting     hackage-security-0.6.0.1
    Building     hackage-security-0.6.0.1
    Completed    hackage-security-0.6.0.1
    Downloading  cabal-install-3.6.2.0
    Downloaded   cabal-install-3.6.2.0
    Starting     cabal-install-3.6.2.0
    Building     cabal-install-3.6.2.0
    Completed    cabal-install-3.6.2.0
    Warning: could not create a symlink in /home/nobu/.cabal/bin for cabal because
    the file exists there already but is not managed by cabal. You can create a
    symlink for this executable manually if you wish. The executable file has been
    installed at /home/nobu/.cabal/bin/cabal
    

Then I saw these: [https://github.com/haskell/cabal/issues/1802](https://github.com/haskell/cabal/issues/1802)

[https://stackoverflow.com/questions/14278051/cabal-doesnt-update-binary-symlinks](https://stackoverflow.com/questions/14278051/cabal-doesnt-update-binary-symlinks)

One of the answers says, ""Delete the symlinks before installing"" but where are they?

Also when I install Cabal how do I ensure I have the latest version?",True,False,False,haskell,t5_2qh36,67547,public,self,"Should I remove Haskell, Cabal and start over?",0,[],1.0,https://www.reddit.com/r/haskell/comments/r4purs/should_i_remove_haskell_cabal_and_start_over/,all_ads,6,,,,,,,,,,,,,,,,,,,,
903.0,[],False,iandrc,,[],,text,t2_g1k7oxec,False,False,False,[],False,False,1638146726,self.haskell,https://www.reddit.com/r/haskell/comments/r4j1y8/haskell_vs_code_setup_in_2021/,{},r4j1y8,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,9,0,False,all_ads,/r/haskell/comments/r4j1y8/haskell_vs_code_setup_in_2021/,False,self,"{'enabled': False, 'images': [{'id': '5KImJ3whLxadbvA3hvOfB7peQEXttoKNEkbtdJ12NRw', 'resolutions': [{'height': 56, 'url': 'https://external-preview.redd.it/HEk-aJEWbI-ISfgUf9ghmArQDVafQWGENRCyqZmuKZ8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=ccede23da73b0d1d46dc678f9cceb3230d99a303', 'width': 108}, {'height': 112, 'url': 'https://external-preview.redd.it/HEk-aJEWbI-ISfgUf9ghmArQDVafQWGENRCyqZmuKZ8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=61c81c164de1cdd20895b88594af4e00e3ab8eb4', 'width': 216}, {'height': 166, 'url': 'https://external-preview.redd.it/HEk-aJEWbI-ISfgUf9ghmArQDVafQWGENRCyqZmuKZ8.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=10ac28870883f7191b4c1844c106520748aa5713', 'width': 320}, {'height': 332, 'url': 'https://external-preview.redd.it/HEk-aJEWbI-ISfgUf9ghmArQDVafQWGENRCyqZmuKZ8.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=80f08a25d8a7b97821c8bec75356bb5bc99e0b22', 'width': 640}, {'height': 499, 'url': 'https://external-preview.redd.it/HEk-aJEWbI-ISfgUf9ghmArQDVafQWGENRCyqZmuKZ8.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ee9d2ad27c18857d2d7cc47712e7bf7df4403182', 'width': 960}, {'height': 561, 'url': 'https://external-preview.redd.it/HEk-aJEWbI-ISfgUf9ghmArQDVafQWGENRCyqZmuKZ8.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=7ea4ca68afcdb7f2a9e1d3c4a15460049a1f7be6', 'width': 1080}], 'source': {'height': 624, 'url': 'https://external-preview.redd.it/HEk-aJEWbI-ISfgUf9ghmArQDVafQWGENRCyqZmuKZ8.jpg?auto=webp&amp;s=2f0bb59a18339a9ee67e0feb78a5e2166f1310f3', 'width': 1200}, 'variants': {}}]}",6,1638146736,1,[removed],True,False,False,haskell,t5_2qh36,67537,public,self,Haskell VS Code Setup in 2021,0,[],1.0,https://www.reddit.com/r/haskell/comments/r4j1y8/haskell_vs_code_setup_in_2021/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
904.0,[],False,LunaComing,,[],,text,t2_89lyloaw,False,False,False,[],False,False,1638136669,self.haskell,https://www.reddit.com/r/haskell/comments/r4fj3f/deriving_inputt_for_creating_newtype_monad/,{},r4fj3f,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,4,0,False,all_ads,/r/haskell/comments/r4fj3f/deriving_inputt_for_creating_newtype_monad/,False,,,6,1638136680,1,"I'm wanting to create a monad transformer using the mtl way.  What do I need to derive in order to access getInputLine :: a Function of the inputT monad. It isn't MonadInput.

\&gt;

*type* *Mon* a = *StateT* *Int* (*InputT* *IO*) a

  
*newtype* *MyMon* a = Mym {unMon :: *Mon* a}  
   *deriving* (*Monad*, *Functor*, *Applicative*, *MonadState* *Int*)

&amp;#x200B;

m :: *MyMon* ()  
m = *do*  
st &lt;- get  
inp &lt;- getInputLine ""input&gt;&gt; ""       -- Error here  
return ()

\&gt;",True,False,False,haskell,t5_2qh36,67537,public,self,Deriving InputT for creating newtype monad transformer,0,[],1.0,https://www.reddit.com/r/haskell/comments/r4fj3f/deriving_inputt_for_creating_newtype_monad/,all_ads,6,,,,,,,,,,,,,,,,,,,,
905.0,[],False,ChrisPenner,,[],,text,t2_14oqdg,False,False,False,[],False,False,1638133448,self.haskell,https://www.reddit.com/r/haskell/comments/r4ec10/jet_cli_structural_editor_for_json/,{},r4ec10,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,10,0,False,all_ads,/r/haskell/comments/r4ec10/jet_cli_structural_editor_for_json/,False,,,6,1638133460,1,"&amp;#x200B;

*Processing video uo4i9j4zge281...*

Jet is a structural editor for JSON.

That is, it's an editor which is aware of the *structure* of JSON and allows you to manipulate it directly. As a result, the document is *always* in a valid state.  


    $ cabal update &amp;&amp; cabal install jet
    $ jet my.json

Hit '?' for the key bindings.  Maybe back up any important files first.  

Give it a go and let me know what you think  [https://github.com/ChrisPenner/jet](https://t.co/AABte4X9Hg?amp=1)

&amp;#x200B;

The implementation uses a zipper over a Cofree tree, which should be pretty adaptable to most recursive structures (e.g. ASTs). You can find the Cofree Zipper here: [https://github.com/ChrisPenner/recursive-zipper#readme](https://github.com/ChrisPenner/recursive-zipper#readme)

&amp;#x200B;

To head off the ""just use a text-editor"" comments; yes, you should probably just use a text editor. This was mainly written as a research exercise for more complex structural editors, and also because I couldn't find many good resources on writing structural editors and wanted to see what the abstractions might look like. Hopefully you enjoy the experiment as much as I enjoyed writing it 😄

&amp;#x200B;

Cheers!",True,False,False,haskell,t5_2qh36,67535,public,self,Jet: CLI Structural editor for JSON,0,[],1.0,https://www.reddit.com/r/haskell/comments/r4ec10/jet_cli_structural_editor_for_json/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
906.0,[],False,Iceland_jack,,[],,text,t2_3qjdu,False,False,False,[],False,False,1638127584,github.com,https://www.reddit.com/r/haskell/comments/r4c5gt/ghc_proposal_class_backends/,{},r4c5gt,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/r4c5gt/ghc_proposal_class_backends/,False,link,"{'enabled': False, 'images': [{'id': '79i60Y1OofRqsX2zUa-lUjIkwkEpWpNMFV0tg9UF4Oo', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/kAPtAbkRa8TyglfZT3S60_Vro86Yw4vworzP6aiJluI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a39be9fece97bec586e1443aa61b1d2eb7aaeede', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/kAPtAbkRa8TyglfZT3S60_Vro86Yw4vworzP6aiJluI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e84e602a3d9184a9ac19219bc077a44b619ac2bb', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/kAPtAbkRa8TyglfZT3S60_Vro86Yw4vworzP6aiJluI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=97cb806ca0bcb0b49ecb55bdb4675b0323c48a04', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/kAPtAbkRa8TyglfZT3S60_Vro86Yw4vworzP6aiJluI.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b430aa075dc1375332c50cfba52b8aa0df4ee727', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/kAPtAbkRa8TyglfZT3S60_Vro86Yw4vworzP6aiJluI.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=89838dde374dd5c882d8841f82004538ac5697c5', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/kAPtAbkRa8TyglfZT3S60_Vro86Yw4vworzP6aiJluI.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c07b53e7bf5bf6d7dd1248afb27ca2d35742e3c8', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/kAPtAbkRa8TyglfZT3S60_Vro86Yw4vworzP6aiJluI.jpg?auto=webp&amp;s=8c0799b259038a4d9cb2a74eaf9cd2007765305a', 'width': 1200}, 'variants': {}}]}",6,1638127595,1,,False,False,False,haskell,t5_2qh36,67534,public,default,GHC Proposal: Class Backends,0,[],1.0,https://github.com/ghc-proposals/ghc-proposals/pull/461,all_ads,6,a01b58a0-6553-11eb-b2eb-0eb19e8d97a5,RFC,https://github.com/ghc-proposals/ghc-proposals/pull/461,70.0,140.0,,,,,,,,,,,,,,,
907.0,[],False,Goheeca,,[],,text,t2_97s0g,False,False,False,[],False,False,1638107511,self.haskell,https://www.reddit.com/r/haskell/comments/r44qxr/what_are_the_limitations_of_template_haskell_and/,{},r44qxr,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/r44qxr/what_are_the_limitations_of_template_haskell_and/,False,,,6,1638107522,1,"I have two questions one involves type inference and the other involves reflection.

---
# 1. Template Haskell vs type inference

I'm using refinement types from the [`refined`](https://hackage.haskell.org/package/refined) library and template haskell refinement `refineTH`. For example I have these following definitions, the unrefined type: 

    data UnrefinedStandardCurveDef a =
      UnrefinedStandardCurveDef {
        prime_s :: a,
        aCoeff_s :: a,
        bCoeff_s :: a,
        generator_s :: (a, a),
        order_s :: NN.Integer,
        cofactor_s :: NN.Integer
      }
      deriving Lift
the refinement types:

    data StandardCurveDefValidator
    
    instance (Typeable a, Integral a) =&gt; Predicate StandardCurveDefValidator (UnrefinedStandardCurveDef a) where
      validate pred def = ...
    
    type RefinedStandardCurveDef' a = Refined StandardCurveDefValidator (UnrefinedStandardCurveDef a)
    
    newtype RefinedStandardCurveDef a = RefinedStandardCurveDef { unRefinedStandardCurveDef :: (RefinedStandardCurveDef' a)}

the construction of refined value:

    curveTest :: RefinedStandardCurveDef Integer
    curveTest = RefinedStandardCurveDef $$(refineTH $ UnrefinedStandardCurveDef @Integer 23 1 1 (13, 16) 7 4)

Now if I remove the type application, I'll get errors no instance for `Typeable a0` and ambiguous type variable `a0` for the literal 23 so `(Num a0)` can't be solved. Why can't be the `UnrefinedStandardCurveDef Integer` in the splice inferred from `RefinedStandardCurveDef Integer`, is it because of the `newtype`?

Interestingly, in GHCi it infers `Integer` without saying what type I want:

    λ&gt; :t RefinedStandardCurveDef $$(refineTH $ UnrefinedStandardCurveDef 23 1 1 (13, 16) 7 4)
    RefinedStandardCurveDef $$(refineTH $ UnrefinedStandardCurveDef 23 1 1 (13, 16) 7 4)
      :: RefinedStandardCurveDef Integer

I can type annotate the spliced expression:

    λ&gt; :t RefinedStandardCurveDef ($$(refineTH $ UnrefinedStandardCurveDef 23 1 1 (13, 16) 7 4) :: RefinedStandardCurveDef' Int)
    RefinedStandardCurveDef ($$(refineTH $ UnrefinedStandardCurveDef 23 1 1 (13, 16) 7 4) :: RefinedStandardCurveDef' Int)
      :: RefinedStandardCurveDef Int

but type annotating the refined newtype doesn't work

    λ&gt; :t RefinedStandardCurveDef $$(refineTH $ UnrefinedStandardCurveDef 23 1 1 (13, 16) 7 4) :: RefinedStandardCurveDef Int 

I get expected type `RefinedStandardCurveDef Int` and actual type `RefinedStandardCurveDef Integer`. What's happening in GHCi in contrast to compiling? The full code can be found in the tag [refined-0.1.4.3-reddit](https://bitbucket.org/Goheeca/reifiableelliptic/src/refined-0.1.4.3-reddit/src/).

---

# 2. Template Haskell vs reflection

In this project I'm using the [`reflection`](https://hackage.haskell.org/package/reflection) library to create dynamic dictionaries for algebraic structures like in this [article](https://www.schoolofhaskell.com/user/thoughtpolice/using-reflection). And I'd like to use this dynamic structure in the `validate` function of a predicate from the `refined` library. The code can be found in the tag [template-reflection-0.1.4.3-reddit](https://bitbucket.org/Goheeca/reifiableelliptic/src/template-reflection-0.1.4.3-reddit/src/).

The validate function looks like this:

    instance (Typeable a, Integral a) =&gt; Predicate StandardCurveDefValidator (UnrefinedStandardCurveDef a) where
      validate pred def
        | ...
        | not $ standardEquationTest (toIntgr prime_s def) (toIntgr aCoeff_s def) (toIntgr bCoeff_s def) x y = Just $ RefineOtherException (typeOf pred) (pack ""The generator doesn't lie on the curve"")
        | ...
        where x = fromIntegral $ fst . generator_s $ def
              y = fromIntegral $ snd . generator_s $ def

and the `standardEquationTest` is defined like this:

    standardEquationTest :: Integer -&gt; Integer -&gt; Integer -&gt; Integer -&gt; Integer -&gt; Bool
    standardEquationTest modulus a b x y = result `debug` (""m: "" ++ show modulus ++ ""\na: "" ++ show a ++ ""\nb: "" ++ showHex b """" ++ ""\nx: "" ++ showHex x """" ++ ""\ny: "" ++ showHex y """" ++ ""\nresult: "" ++ show result ++ ""\nleft: "" ++ show left)
      where inField = using $ reifiedGaloisPrimeField modulus
            left = inField (y ^ 2 - (x ^ 3 + a * x + b))
            result = (left == inField zero)

When I run `stack build` the `left` is non-zero and the compilation fails which indicates that the dictionary substitution caused by `inField` didn't work; however, when I run `stack ghci` all the `left` values are zero and build is successful. What's the difference between compilation and loading modules into GHCi?",True,False,False,haskell,t5_2qh36,67526,public,self,What are the limitations of Template Haskell and type inference and also reflection?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r44qxr/what_are_the_limitations_of_template_haskell_and/,all_ads,6,,,,,,,,,,,,,,,,,,,,
908.0,[],False,_jackdk_,,[],,text,t2_5is3sv9k,False,False,False,[],False,False,1638090428,github.com,https://www.reddit.com/r/haskell/comments/r40781/amazonka_200rc1_is_ready_for_testing/,{},r40781,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,13,0,False,all_ads,/r/haskell/comments/r40781/amazonka_200rc1_is_ready_for_testing/,False,link,"{'enabled': False, 'images': [{'id': '7XfYPqJxjXBifG3ou3vVm7ZnqBVkRR1VZZ9W7g2z_l0', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/xBU3w-6Rdzq4bxLOFWpRIKvxYys_ZBg_QyUy4lxFk80.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8e4c68ee550aa535e64c8d8e810bbebc84695fcd', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/xBU3w-6Rdzq4bxLOFWpRIKvxYys_ZBg_QyUy4lxFk80.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f22871c5ee07ca1d53b306ced0d8171bfa6df082', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/xBU3w-6Rdzq4bxLOFWpRIKvxYys_ZBg_QyUy4lxFk80.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e6319764aad7c57e2eb0456086c77c67dad85112', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/xBU3w-6Rdzq4bxLOFWpRIKvxYys_ZBg_QyUy4lxFk80.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=4690c7492437f860ea86161cdff58f7905f9d60e', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/xBU3w-6Rdzq4bxLOFWpRIKvxYys_ZBg_QyUy4lxFk80.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ec7265551c35e2ef24eea5b71c382e2783effb66', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/xBU3w-6Rdzq4bxLOFWpRIKvxYys_ZBg_QyUy4lxFk80.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d75622d190012acaa1f9084bc78e568eeef5db29', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/xBU3w-6Rdzq4bxLOFWpRIKvxYys_ZBg_QyUy4lxFk80.jpg?auto=webp&amp;s=d78bde0369477ef00502f4d4a2ab090e10359bbc', 'width': 1200}, 'variants': {}}]}",6,1638090439,1,,True,False,False,haskell,t5_2qh36,67516,public,default,Amazonka 2.0.0-rc1 is ready for testing,0,[],1.0,https://github.com/brendanhay/amazonka/discussions/716,all_ads,6,,,https://github.com/brendanhay/amazonka/discussions/716,70.0,140.0,,,,,,,,,,,,,,,
909.0,[],False,KerbalFrog,,[],,text,t2_3uuy0lzb,False,False,False,[],False,False,1638059376,self.haskell,https://www.reddit.com/r/haskell/comments/r3r6nq/i_cant_figure_out_how_to_do_a_function_new_to/,{},r3r6nq,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,17,0,False,all_ads,/r/haskell/comments/r3r6nq/i_cant_figure_out_how_to_do_a_function_new_to/,False,,,6,1638059387,1,"Hello, I come here to ask for help after about 8 frustrating hours trying to solve this exercise, so please help me figure this out.

I am trying to **recursively** look in a list of pairs where one element of the pair is a product and the second element is 2 numbers representing its position on the shelves  **\[ (meat,(4,5)) , (soap,(6,7)) , (wine,(4.3)) \]** and verify if in any situation I end up with 2 products  on the same spot on the shelf.

&amp;#x200B;

Basically I dont care what the product is, my only concern is that 2 things dont end up trying to be restocked on the same position on the shelves.

&amp;#x200B;

I have the shelves and the products set has data types so for example I know that Products can only be Milk, Wine, Soap, Eggs, Butter....like 10 more, and That ShelfPos is (Int,Int).

&amp;#x200B;

What I have been trying to do is has requested on the exercise.

&amp;#x200B;

**positionIsFree :: \[(Products, ShelfPos)\] -&gt; Bool**

&amp;#x200B;

positionIsFree \[ \] = True

positionIsFree (( products, shelfpos) : \[ \] ) = True

positionIsFree (( p, (x,y)) : ( p2, (x2,y2)) : t) | x == x2 &amp;&amp; y == y2 = False

| otherwise = positionIsFree ((p, (x,y)) : t )

&amp;#x200B;

This works for the first pair, it runs the list and sees if it causes any conflict. If it doesnt Id like to restart the process with the second pair. The problem I am runing in is whenever I finish doing this I cant restart again since I trew away all my list on the otherwise step.

I tried to do this backwards, like always comparing the last element, but I end up runing into a types problem where it says it expects a Bool and is getting a list.

&amp;#x200B;

Thank you for your time reading this.",True,False,False,haskell,t5_2qh36,67515,public,self,I cant figure out how to do a function (new to programing),0,[],1.0,https://www.reddit.com/r/haskell/comments/r3r6nq/i_cant_figure_out_how_to_do_a_function_new_to/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
910.0,[],False,average_emacs_user,,[],,text,t2_gh8b53ad,False,False,False,[],False,False,1638048478,self.haskell,https://www.reddit.com/r/haskell/comments/r3nf0o/how_performant_is_haskell_how_hard_do_you_have_to/,{},r3nf0o,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,35,0,False,all_ads,/r/haskell/comments/r3nf0o/how_performant_is_haskell_how_hard_do_you_have_to/,False,,,6,1638048489,1,"I’ve tried looking into this question, and so far I understand that using overloaded strings and strictness are good ways to improve performance. However, I don’t understand how fast Haskell is relative to other languages. Some claim that it is slower than Python; others claim that it can be as fast as or faster than C. The programming language benchmark game suggests that Haskell is roughly as fast as Java and C#, but this is complicated by the extensive use of foreign libraries in those languages. 

What does this subreddit think?",True,False,False,haskell,t5_2qh36,67514,public,self,How performant is Haskell? How hard do you have to try to make it performant?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r3nf0o/how_performant_is_haskell_how_hard_do_you_have_to/,all_ads,6,,,,,,,,,,,,,,,,,,,,
911.0,[],False,Practical-Skill8656,,[],,text,t2_98girlto,False,False,False,[],False,False,1638030859,self.haskell,https://www.reddit.com/r/haskell/comments/r3h4t7/need_some_help_with_this/,{},r3h4t7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/r3h4t7/need_some_help_with_this/,False,,,6,1638030870,1,"So don't know how to  make this function, i'v been trying a few days but nothing works, (the funtion is into run, the asign type). There are also other function which i don't know how to do them, but first i want to figure out how to do the run -&gt; Asig funtion, thanks anyone trying to help

 

{-# OPTIONS\_GHC -fno-warn-tabs #-}  
{-#LANGUAGE GADTs#-}  
{-# OPTIONS\_GHC -Wno-incomplete-patterns #-}  
module Prog where  


\-- Variables y expresiones  
type *Var* = *String*  
data *Exp* where { V :: *Var* \-&gt; *Exp*;  
 I :: *Int* \-&gt; *Exp*;  
                                (:+):: *Exp* \-&gt; *Exp* \-&gt; *Exp*;  
                                (:-):: *Exp* \-&gt; *Exp* \-&gt; *Exp*;  
                                (:\*):: *Exp* \-&gt; *Exp* \-&gt; *Exp* }  deriving(*Eq*,*Show*)  
data *BExp* where { T :: *BExp*;  
 F :: *BExp*;  
                                 (:&amp;&amp;):: *BExp* \-&gt; *BExp* \-&gt; *BExp*;  
                     (:||):: *BExp* \-&gt; *BExp* \-&gt; *BExp*;  
 Not :: *BExp* \-&gt; *BExp*;  
                     (:==):: *Exp* \-&gt; *Exp* \-&gt; *BExp* }   deriving(*Eq*,*Show*)  
\-- Se define que :\* tiene mayor precedencia que :+ y :-  
infixl 8 :\*  
infixl 7 :+  
infixl 7 :-  
\-- :== Se define que :== tenga una precendencia intermedia entre Exp y Bexp  
infixl 6 :==  
\-- Se define que :&amp;&amp; tiene mayor precedencia que :||  
infixl 5 :&amp;&amp;  
infixl 4 :||  


type *Mem* = \[(*Var*,*Int*)\]  
data *Prog* where {Asig :: *Var* \-&gt; *Exp* \-&gt; *Prog*;  
                                 (:&gt;) :: *Prog* \-&gt; *Prog* \-&gt; *Prog*;  
 IF :: *BExp* \-&gt; *Prog* \-&gt; *Prog* \-&gt; *Prog*;  
 While :: *BExp* \-&gt; *Prog* \-&gt; *Prog* }    deriving(*Eq*,*Show*)  
\-- Se define que :&gt; tiene la menor precedencia  
infixr 3 :&gt;  
\-- Memoria y evaluación de expresiones  
\-- 1   
(@@) :: *Var* \-&gt; *Mem* \-&gt; *Int*  
(@@) = \\ n xs-&gt; case xs of{  
 \[\]-&gt;     error ""La variable no se encuentra en la memoria"";  
                   (x,y):xys-&gt; case n==x of {  
 True-&gt;y;  
 False-&gt; (@@) n xys;  
                        }  
        }  
\-- 2  
upd :: (*Var*,*Int*) -&gt; *Mem* \-&gt; *Mem*  
upd = \\ v m -&gt; case v of {  
    ("" "",0) -&gt; m;  
    (x,y) -&gt; case m of {  
 \[\] -&gt; v:\[\];  
        (xx,yy):xys -&gt; case x==xx of {  
 True -&gt; (x,y):xys;  
 False -&gt; (xx,yy):upd v xys  
        }  
    }  
}  
\-- 3  
eval :: *Exp* \-&gt; *Mem* \-&gt; *Int*  
eval = \\ex m -&gt; case ex of {  
 V x-&gt; (@@) x m;  
 I n1-&gt; n1;  
 (:+)n2 n3  -&gt;eval (n2) m + eval(n3) m ;  
 (:-) n4 n5 -&gt; eval (n4) m - eval(n4) m;  
 (:\*) n6 n7-&gt; eval (n6) m \* eval (n7) m;  
}  
\-- 4  
beval :: *BExp* \-&gt; *Mem* \-&gt; *Bool*  
beval = \\bex m -&gt; case bex of {  
 T-&gt;True;  
 F-&gt;False;  
 (:&amp;&amp;)p1 p2 -&gt;beval(p1) m &amp;&amp; beval(p2) m;  
 (:||) p3 p4 -&gt; beval(p3) m &amp;&amp; beval(p4) m;  
 Not p5 -&gt; not (beval(p5) m);  
 (:==) p6 p7 -&gt; (eval (p6) m) == (eval (p7) m);  
}  


\-- Ejecución de programas  
\-- 5  
run :: *Prog* \-&gt; *Mem* \-&gt; *Mem*  
run = \\p m -&gt; case p of{  
 \--Asig s exp -&gt;  (@@)s m (eval exp m) ;  
 (:&gt;) pr pr' -&gt;(run pr' (run pr m));  
 IF be pr pr' -&gt; if beval be m  then  (run pr m) else (run pr' m);  
 While be pr -&gt; if beval be m  then run p m else m;  
}  
\-- Ejemplos de programas  
p0 :: *Prog*  
p0 = Asig ""x""(I 1) :&gt; Asig ""x""(V ""x"" :+ I 10)  
p1 :: *Prog*  
p1 = Asig ""x"" (I 1)  
 :&gt; Asig ""y"" (I 1)  
 :&gt; IF (V ""y"" :== V ""x"") (Asig ""z"" (I 10)) (Asig ""z"" (I 0))  
p2 :: *Prog*  
p2 = Asig ""x""  (I 27)  
 :&gt; Asig ""y"" (I 5)  
 :&gt; While (Not (V ""x"" :== I 0)) (Asig ""y"" (V ""y"" :+ I 2) :&gt; Asig ""x"" (V ""x"" :- V ""y""))  
\-- Programas a definir  
\-- Usamos pre para poder verificar que los argumentos sean válidos  
pre :: *Bool* \-&gt; *String* \-&gt; a -&gt; a  
pre = \\b s x -&gt; case b of {False -&gt; error s ; True -&gt; x}  
\-- 6  
swap:: *Prog*  
swap = undefined  
\-- 7  
fact :: *Int* \-&gt; *Prog*  
fact = undefined  
\-- usamos la función factorial para probar el programa fact  
factorial = \\n -&gt; pre (n &gt;= 0) ""fact: argumento negativo""  
                                          (""fact"" @@ run (fact n) \[\])  
\-- 8  
par :: *Int* \-&gt; *Prog*  
par = undefined  
\-- usamos la función esPar para probar el programa par  
esPar = \\n -&gt; pre (n &gt;= 0) ""par: argumento negativo""  
                                  (""par"" @@ (run (par n) \[\]) /= 0)  
\-- 9  
mini :: *Int* \-&gt; *Int* \-&gt; *Prog*  
mini = undefined  
\-- usamos la función minimo para probar el programa mini  
minimo = \\m n -&gt; pre (m &gt;= 0 &amp;&amp; n &gt;= 0) ""mini: argumento negativo""  
                                         (""min"" @@ (run (mini m n) \[\]))  
\-- 10  
fib :: *Int* \-&gt; *Prog*  
fib = undefined  
\-- usamos la función fibonacci para probar el programa fib  
fibonacci = \\n -&gt; pre (n &gt;= 0) ""fib: argumento negativo""  
                                          (""fib"" @@ run (fib n) \[\])",True,False,False,haskell,t5_2qh36,67511,public,self,Need some help with this!!!,0,[],1.0,https://www.reddit.com/r/haskell/comments/r3h4t7/need_some_help_with_this/,all_ads,6,,,,,,,,,,,,,,,,,,,,
912.0,[],False,Emergency-Spot3577,,[],,text,t2_e1h1c0is,False,False,False,[],False,False,1638022516,f3.cool,https://www.reddit.com/r/haskell/comments/r3eee9/hacer_nuevos_amigos/,{},r3eee9,False,False,False,False,False,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r3eee9/hacer_nuevos_amigos/,False,link,"{'enabled': False, 'images': [{'id': 'qQdMibN5B1oQObLOVzl-reCPGHtbWSHunlOZDj_XSqo', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/gavjU701baKGr6o6hXIq7O74k8sDF_awUJNUeDmOi-0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=675b78c7e9a37504c01c03a336a9bc32b9fb1cd6', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/gavjU701baKGr6o6hXIq7O74k8sDF_awUJNUeDmOi-0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=bc278a4f4a729ccb57a0acf19ed8fd6252879a26', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/gavjU701baKGr6o6hXIq7O74k8sDF_awUJNUeDmOi-0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=aa1f7618749eefde7cbf4d85d5dc2c5898540825', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/gavjU701baKGr6o6hXIq7O74k8sDF_awUJNUeDmOi-0.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=6477415c7c08e0fd36bd113875702aa3bdb5183c', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/gavjU701baKGr6o6hXIq7O74k8sDF_awUJNUeDmOi-0.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=07f9665f843d2c1a7bff17e8e84c010aaaec1b16', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/gavjU701baKGr6o6hXIq7O74k8sDF_awUJNUeDmOi-0.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d302ee17aa77727ea19580fc4ac846dd0dbd59f5', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/gavjU701baKGr6o6hXIq7O74k8sDF_awUJNUeDmOi-0.jpg?auto=webp&amp;s=7ba09da40fbe0290492130a4b521a93dca3e4871', 'width': 1200}, 'variants': {}}]}",6,1638022528,1,,True,False,False,haskell,t5_2qh36,67510,public,default,Hacer nuevos amigos,0,[],1.0,https://f3.cool/_/bff?referral=b4vca79q,all_ads,6,,,https://f3.cool/_/bff?referral=b4vca79q,70.0,140.0,,automod_filtered,,,,,,,,,,,,,
913.0,[],False,emilypii,,[],,text,t2_rs0av,False,False,False,[],False,False,1637997263,discourse.haskell.org,https://www.reddit.com/r/haskell/comments/r382bn/prehftp_ghc_devop_proposal/,{},r382bn,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,22,0,False,all_ads,/r/haskell/comments/r382bn/prehftp_ghc_devop_proposal/,False,link,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1637997273,1,,True,False,False,haskell,t5_2qh36,67504,public,default,Pre-HFTP: GHC DevOp Proposal,0,[],1.0,https://discourse.haskell.org/t/pre-hftp-devops-proposal/3747,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://discourse.haskell.org/t/pre-hftp-devops-proposal/3747,140.0,140.0,,,,,,,,,,,,,,,
914.0,[],False,repaj,,[],,text,t2_4jo3g32r,False,False,False,[],False,False,1637964059,self.haskell,https://www.reddit.com/r/haskell/comments/r2xwe9/llvm_jit_and_haskell_ffi/,{},r2xwe9,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,6,0,False,all_ads,/r/haskell/comments/r2xwe9/llvm_jit_and_haskell_ffi/,False,,,6,1637964070,1,"Dear Haskellers,

I'm writing right now NES JIT compiler for fast emulation. I want to interact with SDL interface and other devices such as graphics, sound or game input, so I guess I need to do some foreign calls to Haskell from LLVM. 

How to do that properly?",True,False,False,haskell,t5_2qh36,67488,public,self,LLVM JIT and Haskell FFI,0,[],1.0,https://www.reddit.com/r/haskell/comments/r2xwe9/llvm_jit_and_haskell_ffi/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
915.0,[],False,haskathon,,[],,text,t2_a8joqf7z,False,False,False,[],False,False,1637960279,self.haskell,https://www.reddit.com/r/haskell/comments/r2wmwc/hls_does_not_detect_errors_in_cabal_project_but/,{},r2wmwc,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/r2wmwc/hls_does_not_detect_errors_in_cabal_project_but/,False,self,"{'enabled': False, 'images': [{'id': 'euUE_k9o_euzwgNONmIZMM026oeSTBH_ZdvLjtUNylg', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/z55b_0-_DYGZxjSO4sTVwBNIkMqkFCKvhcexHvELgV4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a3dfba29f9d19dc5dd95d58e68cd2ca48d0f6551', 'width': 108}], 'source': {'height': 128, 'url': 'https://external-preview.redd.it/z55b_0-_DYGZxjSO4sTVwBNIkMqkFCKvhcexHvELgV4.jpg?auto=webp&amp;s=6b590839e21b0f0e5d45a926d1c383c41316f7fd', 'width': 128}, 'variants': {}}]}",6,1637960290,1,"I’m preparing for this year’s Advent of Code by working on last year’s problems. I am very new to Cabal, having learnt it this week, and am practising problem solving and project organisation on day 4’s problem. You’ll find my Cabal project for day 4 [here](https://gitlab.com/ikoh/advent-of-code-2020/-/tree/master/day04).

Here’s the issue. I discovered that HLS no longer flags erroneous code in VS Code. However, it still gives me suggestions on what to do.

In my [`Main.hs`](https://gitlab.com/ikoh/advent-of-code-2020/-/blob/master/day04/app/Main.hs) there is a function called `test`. I used it to see what was going on with HLS.

    test :: Int -&gt; Int
    test x = show x

In my Cabal project, HLS only suggested that I refactor the definition using eta reduction. It did *not* say anything about a mismatched return type. When I created a random Haskell file *outside* Cabal, HLS worked as expected and showed me both messages.

Here are further details in case they are useful:

* OS: macOS 12.0.1 Monterey
* Editor: VS Code 1.62 (with Haskell extension 1.7.1)
* GHC 8.10.7 (installed using `ghcup`)
* Cabal 3.6.2.0 (installed using `ghcup`)
* HLS 1.5.0 (installed using `ghcup`)

How might I resolve this?",True,False,False,haskell,t5_2qh36,67486,public,self,HLS does not detect errors in Cabal project (but still provides suggestions),0,[],1.0,https://www.reddit.com/r/haskell/comments/r2wmwc/hls_does_not_detect_errors_in_cabal_project_but/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
916.0,[],False,mihaela_workshub,,[],,text,t2_a1bhixq1,False,False,False,[],False,False,1637946193,functional.works-hub.com,https://www.reddit.com/r/haskell/comments/r2rtp4/hylomorphism_explained_functional_works/,{},r2rtp4,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r2rtp4/hylomorphism_explained_functional_works/,False,link,"{'enabled': False, 'images': [{'id': 't8vhOD5_8apr7Pjga9fieKLC6XzONihnEhQBdZ4PwcU', 'resolutions': [{'height': 56, 'url': 'https://external-preview.redd.it/5cEePwxEGQ3jcA5AsJMr4nNxxeWCKNBADf6iWfnDPOU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d16649a745fb339524649bee8686598120c34b19', 'width': 108}, {'height': 113, 'url': 'https://external-preview.redd.it/5cEePwxEGQ3jcA5AsJMr4nNxxeWCKNBADf6iWfnDPOU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=45c7df54a1f3e8ceb7b4d835f0ad487ad73d4050', 'width': 216}, {'height': 168, 'url': 'https://external-preview.redd.it/5cEePwxEGQ3jcA5AsJMr4nNxxeWCKNBADf6iWfnDPOU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5e45170288371acdc7bc6f85f785d069b6a46146', 'width': 320}], 'source': {'height': 269, 'url': 'https://external-preview.redd.it/5cEePwxEGQ3jcA5AsJMr4nNxxeWCKNBADf6iWfnDPOU.jpg?auto=webp&amp;s=04b2eb9f4d7bc464a0989c2b1e8c8254c4b48495', 'width': 512}, 'variants': {}}]}",6,1637946204,1,,True,False,False,haskell,t5_2qh36,67478,public,default,Hylomorphism Explained | Functional Works,0,[],1.0,https://functional.works-hub.com/learn/hylomorphism-explained-deea9?utm_source=reddit&amp;utm_medium=social&amp;utm_campaign=m.popa,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://functional.works-hub.com/learn/hylomorphism-explained-deea9?utm_source=reddit&amp;utm_medium=social&amp;utm_campaign=m.popa,73.0,140.0,,reddit,,,,,,,,,,,,,
917.0,[],False,tftio,,[],,text,t2_b2y3x,False,False,False,[],False,False,1637945315,self.haskell,https://www.reddit.com/r/haskell/comments/r2rir2/whats_current_best_practice_for_starting_a/,{},r2rir2,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,23,0,False,all_ads,/r/haskell/comments/r2rir2/whats_current_best_practice_for_starting_a/,False,,,6,1637945326,1,"Hello all! As part of my preparation for doing Advent of Code this Christmas, I've decided that I want to approach it more as a *project* than as a pile of disconnected one-off solutions. In this vein, I am curious as to what the current best practices are around Haskell software packages. Is it stack? Is it nix? Is it ... something else?

I'll be working on macOS, and I've been writing software a long time, but I consistently bounce off of Haskell and I'd love to be more conversant in it, as there is a *lot* about Haskell that I really enjoy.

Anyway, TIA!",True,False,False,haskell,t5_2qh36,67478,public,self,What's current best practice for starting a project with Haskell?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r2rir2/whats_current_best_practice_for_starting_a/,all_ads,6,,,,,,,,,,,,,,,,,,,,
918.0,[],False,kosmikus,,[],,text,t2_30503,False,False,False,[],False,False,1637939382,haskell.foundation,https://www.reddit.com/r/haskell/comments/r2pi5o/the_haskell_interlude_episode_6_graham_hutton/,{},r2pi5o,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,0,0,False,all_ads,/r/haskell/comments/r2pi5o/the_haskell_interlude_episode_6_graham_hutton/,False,,,6,1637939394,1,,True,False,False,haskell,t5_2qh36,67475,public,default,The Haskell Interlude: Episode 6 - Graham Hutton,0,[],1.0,https://haskell.foundation/podcast/6/,all_ads,6,,,https://haskell.foundation/podcast/6/,,,,,,,,,,,,,,,,,
919.0,[],False,NorfairKing2,,[],,text,t2_154rv6yi,False,False,False,[],False,False,1637937055,cs-syd.eu,https://www.reddit.com/r/haskell/comments/r2opqg/cs_syd_announcing_genvalidity1000/,{},r2opqg,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r2opqg/cs_syd_announcing_genvalidity1000/,False,,,6,1637937066,1,,True,False,False,haskell,t5_2qh36,67475,public,default,CS SYD - Announcing `genvalidity-1.0.0.0`,0,[],1.0,https://cs-syd.eu/posts/2021-11-26-genvalidity?source=reddit,all_ads,6,,,https://cs-syd.eu/posts/2021-11-26-genvalidity?source=reddit,,,,,,,,,,,,,,,,,
920.0,[],False,purcell,,[],,text,t2_lgcv,False,False,False,[],False,False,1637919389,tweag.io,https://www.reddit.com/r/haskell/comments/r2jkds/interesting_rundown_of_haskell_dev_setups_for/,{},r2jkds,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,26,0,False,all_ads,/r/haskell/comments/r2jkds/interesting_rundown_of_haskell_dev_setups_for/,False,link,"{'enabled': False, 'images': [{'id': '0Evd6UWXs4A11yT0I3bSUdOWKNqr9Az0qWvc-WhxMes', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a559bb4d890ff015d6259a06083f8cea81389ab2', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b67964ddc7f6a4e974672b382f7c786c8d3526fe', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=61e37c5f638b0d156c5fdcbc1a5335a3bdbb8729', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=298dca15f47ae031413bbd031ffd301b05793915', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=81eb47deb6039cc11cc169b056aee661e37b1789', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3b60b078d6771ef7f153290885f77a8f50774cdb', 'width': 1080}], 'source': {'height': 4096, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?auto=webp&amp;s=6803e63008eaa75aac55167a9225dd6c2f0316a7', 'width': 4096}, 'variants': {}}]}",6,1637919400,1,,False,False,False,haskell,t5_2qh36,67467,public,default,Interesting rundown of Haskell dev setups for engineers at Tweag,0,[],1.0,https://www.tweag.io/blog/2021-11-25-varieties-of-haskelling-experience/,all_ads,6,,,https://www.tweag.io/blog/2021-11-25-varieties-of-haskelling-experience/,140.0,140.0,,,,,,,,,,,,,,,
921.0,[],False,rubyglue,,[],,text,t2_4wab3n0r,False,False,False,[],False,False,1637897816,self.haskell,https://www.reddit.com/r/haskell/comments/r2dw0o/best_videoresource_to_learn_haskell_coming_from_a/,{},r2dw0o,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/r2dw0o/best_videoresource_to_learn_haskell_coming_from_a/,False,,,6,1637897827,1,"I'm a fairly experienced developer who uses TypeScript professionally and working in space/defense field but seeing Haskell as something that could help me level up.

What video resources would you recommend to someone who wants to learn Haskell?",True,False,False,haskell,t5_2qh36,67466,public,self,Best video-resource to learn Haskell coming from a TypeScript background?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r2dw0o/best_videoresource_to_learn_haskell_coming_from_a/,all_ads,6,ebb4b74c-16d0-11eb-9ff6-0e5aacb57bb7,homework,,,,,,,,,,,,,,,,,,
922.0,[],False,M-barber,,[],,text,t2_ef73h8bo,False,False,False,[],False,False,1637894832,self.haskell,https://www.reddit.com/r/haskell/comments/r2d05q/job_2x_haskell_developer_bellroy_remote/,{},r2d05q,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,10,0,False,all_ads,/r/haskell/comments/r2d05q/job_2x_haskell_developer_bellroy_remote/,False,self,"{'enabled': False, 'images': [{'id': 'v4tR3_XxODsat55UMq9U8Qtuwra_2ER3xHwhR67ylpg', 'resolutions': [{'height': 48, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=836d7cfa6660c48774759681b0e94215b3d31305', 'width': 108}, {'height': 96, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=571ef5dced4f28e50df884ed735393349dfe4538', 'width': 216}, {'height': 142, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=41663b11129ed5e756d15c30d317bb3501c7f0da', 'width': 320}, {'height': 284, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ac51d7201fa6e1cb837cbbd4a04428ae3226b901', 'width': 640}, {'height': 426, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ee36d6eab59cb261862c685885421ab1843ab82a', 'width': 960}, {'height': 480, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=80f66b6b9d5b44ae8a97ec5e19c4ace6b046edd8', 'width': 1080}], 'source': {'height': 800, 'url': 'https://external-preview.redd.it/tk9skxTWYEbBX8zoZ-rRmF7QCR2h5JLBYW6c9Evcego.jpg?auto=webp&amp;s=2ba2bc0943a5a2dfc739073107c052a687f1fdb9', 'width': 1800}, 'variants': {}}]}",6,1637894843,1,"[Bellroy](https://bellroy.com/) helps people carry better by making great bags, phone cases, and wallets. We’re [Australia’s Best Place to Work](https://greatplacetowork.com.au/best-places-to-work-australia-2021-small-companies/) (&lt; 100 employees category), we’ve grown rapidly, and we’re now looking to expand our Technology Team to keep pace with that ongoing growth. We’re not a software company, but software development is one of our core competencies. This means the Technology Team rarely works to hard delivery deadlines (we prioritise “correct” over “now”) and we regularly make open-source contributions.

We have about 40KLOC of backend Haskell code supporting our systems, and w. We're looking for two more Haskell developers who can balance shipping features with improving this codebase every time they change it. While we're not afraid of the occasional inelegant hack, we'd much prefer to look back and see that we used the right tools and abstractions, instead of brute force.

We don’t mind where you live - you can join us in the office in Melbourne, Australia, or work remotely from anywhere in the world. The Technology Team has members on five continents, and our remote developers are first-class team members. You’ll need to overlap Melbourne office hours (UTC+10/UTC+11 depending on DST) for at least a few hours each day, but how you arrange that is up to you.

**We’re looking for someone with the following qualities (but we also love fast learners if you can’t say yes to every single point):**

* Has at least 2-3 years (professional or otherwise) experience with Haskell and functional programming
* Gets excited about great ideas, wherever they come from – books, blogs and podcasts, technical and non-technical
* Has some AWS experience - most of our Haskell code runs as AWS Lambda functions talking to DynamoDB.
* Has used Apache Kafka to build streaming applications
* Has experience wrangling Nix

Most of our tech stack is built on Free and Open Source Software, and we give back wherever we can - either by upstreaming fixes or publishing libraries. In the Haskell world, we’ve open-sourced [wai-handler-hal](https://hackage.haskell.org/package/wai-handler-hal) and [aws-arn](https://hackage.haskell.org/package/aws-arn), and we have more on the way.If you’re interested, here’s our [applications page](https://grnh.se/ab46ccc01us). If you have questions, you can ask them here or email [careers@bellroy.com](mailto:careers@bellroy.com).",True,False,False,haskell,t5_2qh36,67466,public,self,[JOB] 2x Haskell Developer @ Bellroy (Remote),0,[],1.0,https://www.reddit.com/r/haskell/comments/r2d05q/job_2x_haskell_developer_bellroy_remote/,all_ads,6,e937232e-16d0-11eb-89ac-0ee006d12603,job,,,,,,,,,,,,,,,,,,
923.0,[],False,jlamothe,,[],,text,t2_5823e,False,False,False,[],False,False,1637882223,self.haskell,https://www.reddit.com/r/haskell/comments/r295jt/help_with_a_bug_in_a_gemini_framework/,{},r295jt,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,7,0,False,all_ads,/r/haskell/comments/r295jt/help_with_a_bug_in_a_gemini_framework/,False,self,"{'enabled': False, 'images': [{'id': 'quNmWn6do8ZjWnManQ4-UvwlvQq9GeghlXf0RYBH7Dw', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/ZyD5_Yic8tgt6GiVlsBRZy6Df7Bxjs-dC-YwFnlhwe8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=acd859ad7a4b2b55c4ea8c62c9e1f52f1e800c52', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/ZyD5_Yic8tgt6GiVlsBRZy6Df7Bxjs-dC-YwFnlhwe8.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=eef147881ac7f25c999b61355f04dd4c248da5b2', 'width': 216}], 'source': {'height': 290, 'url': 'https://external-preview.redd.it/ZyD5_Yic8tgt6GiVlsBRZy6Df7Bxjs-dC-YwFnlhwe8.jpg?auto=webp&amp;s=de21eb0d272ebf19883f106143e5f60db337526f', 'width': 290}, 'variants': {}}]}",6,1637882234,1,"I've been working on a Haskell Gemini server framework.  Everything seems to be working fine, except that I'm having trouble reading the client certificate when it's sent.  I had to do some admittedly janky things to get it in the first place.

If anyone is familiar with the `tls` or `tcp-streams` packages and can tell me what I'm doing wrong, that would be appreciated.

My code is located [on Codeberg](https://codeberg.org/jlamothe/gemcap), and the most likely relevant functions are `Network.Gemini.Capsule.listenLoop` and `Network.Gemini.Capsule.adjustServerParams`.",True,False,False,haskell,t5_2qh36,67462,public,self,Help with a Bug in a Gemini Framework,0,[],1.0,https://www.reddit.com/r/haskell/comments/r295jt/help_with_a_bug_in_a_gemini_framework/,all_ads,6,,,,,,,,,,,,,,,,,,,,
924.0,[],False,sh0gunai,,[],,text,t2_164dog,False,False,False,[],False,False,1637874976,self.haskell,https://www.reddit.com/r/haskell/comments/r26ooi/is_haskell_capable_of_this/,{},r26ooi,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,18,0,False,all_ads,/r/haskell/comments/r26ooi/is_haskell_capable_of_this/,False,,,6,1637874987,1,"I'm a fairly new Haskeller (\~1 year) and I've been getting into graphical programming with Haskell using various C bindings like X11, GTK, and OpenGL/GLFW. And while the bindings seem the be very mature and capable, they tend to have me writing in an imperative way (a lot of do blocks for callbacks and such), probably a reality of being bound to imperative languages.

This got me wondering if it's possible to do graphical programming in Haskell sans any bindings at all. If so are there any projects that attempt to do this? The closest thing I've found so far is GPipe, which promises an alternative to the imperative style of OpenGL, but seems to be built on the OpenGL bindings itself.",True,False,False,haskell,t5_2qh36,67461,public,self,Is Haskell capable of this?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r26ooi/is_haskell_capable_of_this/,all_ads,6,,,,,,,,,,,,,,,,,,,,
925.0,[],False,ctenbrinke,,[],,text,t2_da4t079,False,False,False,[],False,False,1637857575,self.haskell,https://www.reddit.com/r/haskell/comments/r20a4j/why_is_the_maybe_monad_transformer_defined_as/,{},r20a4j,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,12,0,False,all_ads,/r/haskell/comments/r20a4j/why_is_the_maybe_monad_transformer_defined_as/,False,,,6,1637857587,1,"Is there a profound reason the monad transformers work in this direction, or is it just arbitrary?",True,False,False,haskell,t5_2qh36,67456,public,self,Why is the maybe monad transformer defined as MaybeT { runMaybeT :: m (Maybe a) } instead of MaybeT { runMaybeT :: Maybe (m a) } ?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r20a4j/why_is_the_maybe_monad_transformer_defined_as/,all_ads,6,,,,,,,,,,,,,,,,,,,,
926.0,[],False,haskellweekly,,[],,text,t2_xp3il,False,False,False,[],False,False,1637848273,haskellweekly.news,https://www.reddit.com/r/haskell/comments/r1wz2a/issue_291_haskell_weekly_newsletter/,{},r1wz2a,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r1wz2a/issue_291_haskell_weekly_newsletter/,False,link,"{'enabled': False, 'images': [{'id': 'APNk1c8bOrWzk7IfWxCtNMhPOxPGKs1lIDpMTy76j8I', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e026f7d53791531ebadb832eaa32e80476b41c7e', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=516efa03d144edee48fcffd0999c894dcfb856b0', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7ea481595192fdfadcc975f7bb92078568617564', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b41ad1ce2fbd4a049226a635707cc5fe86b560b', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e9e0aee90884ad14eaac284fb5577f5b08f5fc76', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=354eab3a3e3cf544314a0500962a07cc9c8872ed', 'width': 1080}], 'source': {'height': 3000, 'url': 'https://external-preview.redd.it/QN4ktfFMABnBF6XEPkZWKdVBmOeoKfq094xszcT0RD4.jpg?auto=webp&amp;s=00dc4ace0e204a30ab1d7e7b788ffc3c8a4713ed', 'width': 3000}, 'variants': {}}]}",6,1637848284,1,,True,False,False,haskell,t5_2qh36,67454,public,default,Issue 291 :: Haskell Weekly newsletter,0,[],1.0,https://haskellweekly.news/issue/291.html,all_ads,6,,,https://haskellweekly.news/issue/291.html,140.0,140.0,,,,,,,,,,,,,,,
927.0,[],False,Repulsive_Emphasis79,,[],,text,t2_9jfx3vot,False,False,False,[],False,False,1637837541,self.haskell,https://www.reddit.com/r/haskell/comments/r1u0xr/matrix/,{},r1u0xr,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,9,0,False,all_ads,/r/haskell/comments/r1u0xr/matrix/,False,,,6,1637837552,1,"Hey everyone, can you help me to create a function that creates  a complete list of coordinates ((0,0) to (x,y)) from the largest coordinate? I would appreciate.",True,False,False,haskell,t5_2qh36,67451,public,self,Matrix,0,[],1.0,https://www.reddit.com/r/haskell/comments/r1u0xr/matrix/,all_ads,6,,,,,,,,,,,,,,,,,,,,
928.0,[],False,moodmarch,,[],,text,t2_gma6owus,False,False,False,[],False,False,1637835565,tweag.io,https://www.reddit.com/r/haskell/comments/r1tk01/a_tale_of_template_haskell_and_cross_compilation/,{},r1tk01,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,11,0,False,all_ads,/r/haskell/comments/r1tk01/a_tale_of_template_haskell_and_cross_compilation/,False,link,"{'enabled': False, 'images': [{'id': '0Evd6UWXs4A11yT0I3bSUdOWKNqr9Az0qWvc-WhxMes', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a559bb4d890ff015d6259a06083f8cea81389ab2', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b67964ddc7f6a4e974672b382f7c786c8d3526fe', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=61e37c5f638b0d156c5fdcbc1a5335a3bdbb8729', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=298dca15f47ae031413bbd031ffd301b05793915', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=81eb47deb6039cc11cc169b056aee661e37b1789', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3b60b078d6771ef7f153290885f77a8f50774cdb', 'width': 1080}], 'source': {'height': 4096, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?auto=webp&amp;s=6803e63008eaa75aac55167a9225dd6c2f0316a7', 'width': 4096}, 'variants': {}}]}",6,1637835576,1,,True,False,False,haskell,t5_2qh36,67450,public,default,A tale of Template Haskell and cross compilation!,0,[],1.0,https://www.tweag.io/blog/2020-11-25-asterius-th/,all_ads,6,,,https://www.tweag.io/blog/2020-11-25-asterius-th/,140.0,140.0,,,,,,,,,,,,,,,
929.0,[],False,inwegobingo,,[],,text,t2_aw84v35a,False,False,False,[],False,False,1637828262,self.haskell,https://www.reddit.com/r/haskell/comments/r1rs0q/is_a_a_monad_in_haskell_just_the_functional/,{},r1rs0q,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,30,0,False,all_ads,/r/haskell/comments/r1rs0q/is_a_a_monad_in_haskell_just_the_functional/,False,,,6,1637828273,1,"I've done a lot of OO programming and get the mental model of objects representing bits of state and methods representing ways to enact changes on that state.

However I'm having a hard time getting my head around Haskell (I've just started). I get the idea of no side effects and I get the idea of pure functions, but I still can't grok how to such a language can have state that exists for the duration of a program.

Let's say an object that is created at the start and over time the objects state changes. For instance a chess board. How can I stop recreating a new object (let's says it's large), in every function call?",True,False,False,haskell,t5_2qh36,67447,public,self,Is a a MONAD in Haskell just the functional equivalent of a generic type (such as in C#) and how do MONADs enable things like saving data?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r1rs0q/is_a_a_monad_in_haskell_just_the_functional/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
930.0,[],False,Existing_Floor7950,,[],,text,t2_exi6hhv1,False,False,False,[],False,False,1637800851,self.haskell,https://www.reddit.com/r/haskell/comments/r1jm5c/need_a_haskell_programmer/,{},r1jm5c,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,3,0,False,all_ads,/r/haskell/comments/r1jm5c/need_a_haskell_programmer/,False,,,6,1637800862,1,"Hello,

We need a Haskell programmer (A helping hand) 

Will be compensated for their work. 

Please pm. 

Thanks and much appreciated!",True,False,False,haskell,t5_2qh36,67443,public,self,Need a Haskell Programmer,0,[],1.0,https://www.reddit.com/r/haskell/comments/r1jm5c/need_a_haskell_programmer/,all_ads,6,,,,,,,,,,,,,,,,,,,,
931.0,[],False,matveevtam,,[],,text,t2_ewlkkkbp,False,False,False,[],False,False,1637797339,self.haskell,https://www.reddit.com/r/haskell/comments/r1ihcx/lazy_filterm/,{},r1ihcx,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,10,0,False,all_ads,/r/haskell/comments/r1ihcx/lazy_filterm/,False,,,6,1637797350,1,"Hi everyone! I'm a beginner at Haskell and this is my first question. I figured out how to make things work myself and asking this just to understand Haskell better and improve my code.

I want to write a file, but its path might exist already so I want to find a free path by adding numbers to the path. E.g. if I already have `""foo.txt""` then I want to write to `""foo 1.txt""`, then ""foo 2.txt"" and so on.

So I wrote this function:
```
findFreeName :: FilePath -&gt; IO FilePath
findFreeName path = head &lt;$&gt; filterM isPathFree (map makePathWithNumber [1, 2 ..])
    where
        isPathFree :: FilePath -&gt; IO Bool  -- skipping implementation here
        makePathNumber :: Int -&gt; FilePath  -- uses the path parameter and turns x to ""foo x.txt"" unless x is 0
```
And it started to check paths `""foo.txt""`, `""foo 1.txt""`, `""foo 2.txt""` and so on forever. I guess I understand that this happens because `filterM` has type `(a -&gt; m Bool) -&gt; [a] -&gt; m [a]` which means that once you use its result, it has to finish the action first and only then you can operate on its result. It's an equivalent of writing:
```
findFreeName path = do
    freePaths &lt;- filterM isPathFree (map makePathWithNumber [1, 2 ..])  -- first get a value from an IO action that we can't do partially
    return head freePaths  -- only then do other actions / computations
```
This is how I fixed the function so that it does a finite number of IO actions:
```
findFreeName path = takeFirstFreePath 0
    where
        takeFirstFreePath i = do
            let p = makePathWithNumber i
            isFree &lt;- isPathFree p
            if isFree then return p else takeFirstFreePath (i + 1)
```
It's a recursive function which is more difficult to read than a simple `filter`, so I tried to write a version of `filterM` that suites my needs:
```
filterMBetter :: Monad m =&gt; (a -&gt; m Bool) -&gt; [a] -&gt; [m a]
filterMBetter _ [] = []
filterMBetter pred (x:xs) = do
    isTrue &lt;- pred x
    if isTrue
        then (return x) : filterMBetter pred xs
        else filterMBetter pred xs
```
and it fails to compile with the error:
```
    • Couldn't match type ‘m’ with ‘[]’
      ‘m’ is a rigid type variable bound by
        the type signature for:
          filterMBetter :: forall (m :: * -&gt; *) a.
                           Monad m =&gt;
                           (a -&gt; m Bool) -&gt; [a] -&gt; [m a]
        at app/saveWords/SaveWords.hs:77:1-57
      Expected type: [Bool]
        Actual type: m Bool
    • In a stmt of a 'do' block: isTrue &lt;- pred x
      In the expression:
        do isTrue &lt;- pred x
           if isTrue then
               (return x) : filterMBetter pred xs
           else
               filterMBetter pred xs
      In an equation for ‘filterMBetter’:
          filterMBetter pred (x : xs)
            = do isTrue &lt;- pred x
                 if isTrue then
                     (return x) : filterMBetter pred xs
                 else
                     filterMBetter pred xs
    • Relevant bindings include
        pred :: a -&gt; m Bool (bound at app/saveWords/SaveWords.hs:79:15)
        filterMBetter :: (a -&gt; m Bool) -&gt; [a] -&gt; [m a]
          (bound at app/saveWords/SaveWords.hs:78:1)
   |
80 |     isTrue &lt;- pred x
   |               ^^^^^^
```
which I interpret as ""`[]` is a monad and my function returns `[m a]` so the `do` block is in the context of `[]` monad, not the `m` one, so I could do `x &lt;- [y]`, but not `x &lt;- pred y`""

Now I have a couple of questions:
1. Is there a way to make my `filterMBetter` function working? If not, how to formulate the reason for this in simple words?
2. I guess I went in a wrong direction when I decided to implement my own function `filterMBetter :: Monad m =&gt; (a -&gt; m Bool) -&gt; [a] -&gt; [m a]` instead of just writing a recursive IO action. What would be a better approach in this situation?
3. Is there a way to do what I want using only standard library function or at most some package from Stackage, without inventing my own wheel? If yes, please share an example.",True,False,False,haskell,t5_2qh36,67440,public,self,Lazy filterM,0,[],1.0,https://www.reddit.com/r/haskell/comments/r1ihcx/lazy_filterm/,all_ads,6,,,,,,,,,,,,,,,,,,,,
932.0,[],False,ymishima,,[],,text,t2_46jackwb,False,False,False,[],False,False,1637748770,self.haskell,https://www.reddit.com/r/haskell/comments/r11xz4/writing_the_logic_for_ios_app_in_haskell/,{},r11xz4,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,23,0,False,all_ads,/r/haskell/comments/r11xz4/writing_the_logic_for_ios_app_in_haskell/,False,,,6,1637748781,1,"I want to write the gui for my iOS app in swift, and the logic in Haskell. How would I go about doing this? It seems for the a macOS app I can create an excecutable in cabal then simply bring that into my Xcode project, but I don’t think I can do this for an iOS app.",True,False,False,haskell,t5_2qh36,67426,public,self,Writing the logic for IOS app in Haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/r11xz4/writing_the_logic_for_ios_app_in_haskell/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
933.0,[],False,EnTimen,,[],,text,t2_grq0noz8,False,False,False,[],False,False,1637748527,self.haskell,https://www.reddit.com/r/haskell/comments/r11vtm/using_haskell_to_write_the_logic_in_ios_app/,{},r11vtm,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r11vtm/using_haskell_to_write_the_logic_in_ios_app/,False,,,6,1637748538,1,[removed],True,False,False,haskell,t5_2qh36,67426,public,self,Using Haskell to write the logic in IOS app,0,[],1.0,https://www.reddit.com/r/haskell/comments/r11vtm/using_haskell_to_write_the_logic_in_ios_app/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,moderator,,,,,,,,,,,,,
934.0,[],False,EnTimen,,[],,text,t2_grq0noz8,False,False,False,[],False,False,1637748362,self.haskell,https://www.reddit.com/r/haskell/comments/r11uav/using_haskell_for_logic_in_ios_app/,{},r11uav,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r11uav/using_haskell_for_logic_in_ios_app/,False,,,6,1637748373,1,[removed],True,False,False,haskell,t5_2qh36,67426,public,self,Using Haskell for logic in IOS app,0,[],1.0,https://www.reddit.com/r/haskell/comments/r11uav/using_haskell_for_logic_in_ios_app/,all_ads,6,,,,,,,moderator,,,,,,,,,,,,,
935.0,[],False,teilchen010,,[],,text,t2_a8zynd1e,False,False,False,[],False,False,1637734402,self.haskell,https://www.reddit.com/r/haskell/comments/r0y800/beginners_foolishness_causes_infinite_recursion/,{},r0y800,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,34,0,False,all_ads,/r/haskell/comments/r0y800/beginners_foolishness_causes_infinite_recursion/,False,,,6,1637734413,1,"Working with the REPL, I just tried this

    mylist1 = [1,2,3]

then  I was foolish enough to do this

    mylist1 = -2 : -1 : 0 : mylist1

then

    mylist1

The result was runaway recursion that I could stop (I'm in Emacs) only by BREAK and STOP from the Signals menu. Once stopped just entering `mylist1` again started the infinite recursion again. It's like `mylist1` is a hidden bomb. Can it be defused? So what exactly is happening with my ""don't try this at home"" experiment?",True,False,False,haskell,t5_2qh36,67424,public,self,Beginner's foolishness causes infinite recursion at the REPL,0,[],1.0,https://www.reddit.com/r/haskell/comments/r0y800/beginners_foolishness_causes_infinite_recursion/,all_ads,6,,,,,,,,,,,,,,,,,,,,
936.0,[],False,AmonicB,,[],,text,t2_dhzzrbbk,False,False,False,[],False,False,1637719050,self.haskell,https://www.reddit.com/r/haskell/comments/r0te9n/what_does_exception_preludelast_empty_list_mean/,{},r0te9n,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,21,0,False,all_ads,/r/haskell/comments/r0te9n/what_does_exception_preludelast_empty_list_mean/,False,,,6,1637719061,1,"I keep getting this exception and I'm not sure what the issue is? In all my functions I have cases to deal with empty lists using pattern matching, so I don't see where last would be applied to an empty list in my code. Can someone help me out?",True,False,False,haskell,t5_2qh36,67424,public,self,What does Exception: Prelude.last: empty list mean?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r0te9n/what_does_exception_preludelast_empty_list_mean/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
937.0,[],False,Cryptomias31,,[],,text,t2_6g8lavod,False,False,False,[],False,False,1637704125,self.haskell,https://www.reddit.com/r/haskell/comments/r0o7tl/wanting_to_build_a_dapp_on_cardano/,{},r0o7tl,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,15,0,False,all_ads,/r/haskell/comments/r0o7tl/wanting_to_build_a_dapp_on_cardano/,False,,,6,1637704135,1,"Hey Haskell Devs,

I am a Blockchain Master student - not a Dev though - who went through an incubation program for a DApp idea that is especially targeting the Global South/Africa and hence aligns very well with the vision of Cardano. Now I am looking for Haskell capable Devs who wanna team up and then also try to get some funding from the catalyst program and ultimately create a DAO that serves the needs of people in the Global South with a viable use case.",True,False,False,haskell,t5_2qh36,67423,public,self,Wanting to build a DApp on Cardano?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r0o7tl/wanting_to_build_a_dapp_on_cardano/,all_ads,6,,,,,,,,,,,,,,,,,,,,
938.0,[],False,ominousomanytes,,[],,text,t2_13up5t,False,False,False,[],False,False,1637700699,self.haskell,https://www.reddit.com/r/haskell/comments/r0my2t/how_to_list_all_possible_ways_to_pair_up_a_list/,{},r0my2t,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,28,0,False,all_ads,/r/haskell/comments/r0my2t/how_to_list_all_possible_ways_to_pair_up_a_list/,False,,,6,1637700710,1,"I'm new to Haskell and need to list all possible ways to pair up (even) lists of Ints.

E.g.

    [1,2,3,4] -&gt; [[(1,2),(3,4)], [(2,3),(1,4)], [(1,3),(2,4)],  ...] 

Generating all possible pairs is easy enough (shown below) but I  can't work out how to return only ways to pair up the entire input list.

    pairs :: [a] -&gt; [[(a, a)]] pairs l = [(x,y) | (x:ys) &lt;- tails l, y &lt;- ys] 

Any help appreciated!",True,False,False,haskell,t5_2qh36,67418,public,self,How to list all possible ways to pair up a list?,0,[],1.0,https://www.reddit.com/r/haskell/comments/r0my2t/how_to_list_all_possible_ways_to_pair_up_a_list/,all_ads,6,ebb4b74c-16d0-11eb-9ff6-0e5aacb57bb7,homework,,,,,,,,,,,,,,,,,,
939.0,[],False,notooth1,,[],,text,t2_sm171,False,False,False,[],False,False,1637699062,self.haskell,https://www.reddit.com/r/haskell/comments/r0mc95/problem_with_bash_commands/,{},r0mc95,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,2,0,False,all_ads,/r/haskell/comments/r0mc95/problem_with_bash_commands/,False,,,6,1637699072,1,"This code does not create the Greeting.txt on my hard drive. Can anyone help?

    (a, b, c) &lt;- readProcessWithExitCode ""echo"" [""Hello world!"", ""&gt;&gt;"", ""Greeting.txt""] """"",True,False,False,haskell,t5_2qh36,67419,public,self,Problem with Bash commands,0,[],1.0,https://www.reddit.com/r/haskell/comments/r0mc95/problem_with_bash_commands/,all_ads,6,,,,,,,,,,,,,,,,,,,,
940.0,[],False,gang123mr,,[],,text,t2_8ieogyoj,False,False,False,[],False,False,1637679491,i.redd.it,https://www.reddit.com/r/haskell/comments/r0f1ie/ive_got_1_hour_save_me_reddit/,{},r0f1ie,False,False,False,False,True,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r0f1ie/ive_got_1_hour_save_me_reddit/,False,image,"{'enabled': True, 'images': [{'id': 'YCu7NbnWVmApmN8X4lSwPVG1CSMmZYIDdL9L3kl8YRw', 'resolutions': [{'height': 144, 'url': 'https://preview.redd.it/zaveeyye0d181.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=bfa37661180257296a1c2432d4a1215ee0d1b932', 'width': 108}, {'height': 288, 'url': 'https://preview.redd.it/zaveeyye0d181.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=83e219407126b0f85b2eb9cf3631626246861111', 'width': 216}, {'height': 426, 'url': 'https://preview.redd.it/zaveeyye0d181.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=68339bac9952e0e5f63af7043d8e128fc2fe1c3c', 'width': 320}, {'height': 853, 'url': 'https://preview.redd.it/zaveeyye0d181.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b85104dd99bc9df333e297ae9807de6bcf2a64f', 'width': 640}, {'height': 1280, 'url': 'https://preview.redd.it/zaveeyye0d181.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=4962c1e35a7ad63c241e4914ee5f835595d14003', 'width': 960}, {'height': 1440, 'url': 'https://preview.redd.it/zaveeyye0d181.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=7ee633ae4362c5cb3e403fd33ae32513abdad640', 'width': 1080}], 'source': {'height': 4032, 'url': 'https://preview.redd.it/zaveeyye0d181.jpg?auto=webp&amp;s=b11509151a5e71413dbd21be3afe70ab5f81d8a5', 'width': 3024}, 'variants': {}}]}",6,1637679503,1,,True,False,False,haskell,t5_2qh36,67419,public,image,IVE GOT 1 HOUR SAVE ME REDDIT.,0,[],1.0,https://i.redd.it/zaveeyye0d181.jpg,all_ads,6,ebb4b74c-16d0-11eb-9ff6-0e5aacb57bb7,homework,https://i.redd.it/zaveeyye0d181.jpg,140.0,140.0,,moderator,,,,,,,,,,,,,
941.0,[],False,Alex_Mitrix,,[],,text,t2_gu9trrtl,False,False,False,[],False,False,1637670120,self.haskell,https://www.reddit.com/r/haskell/comments/r0c0qu/looking_for_strong_haskell_developer/,{},r0c0qu,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/r0c0qu/looking_for_strong_haskell_developer/,False,self,"{'enabled': False, 'images': [{'id': 'gr2cyLX7upPXEe0VpDaFsY0efJ93JchZ_UhI7rZ2iEo', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/uzclsFKjHqLQJYng1OuACDaGKioJ6ZR0o9smCc9DPKg.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a66c311947fbd084c3cbcfc18bf310f89979c89d', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/uzclsFKjHqLQJYng1OuACDaGKioJ6ZR0o9smCc9DPKg.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3c1a516f3b6eea2caf4908db83d194f8ae4a1c32', 'width': 216}, {'height': 241, 'url': 'https://external-preview.redd.it/uzclsFKjHqLQJYng1OuACDaGKioJ6ZR0o9smCc9DPKg.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=79856398d6766d9e3e02179cc1a8f16b654bb259', 'width': 320}, {'height': 482, 'url': 'https://external-preview.redd.it/uzclsFKjHqLQJYng1OuACDaGKioJ6ZR0o9smCc9DPKg.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=71a719a41eec48b06c19032ed74b95b3c391cba4', 'width': 640}], 'source': {'height': 547, 'url': 'https://external-preview.redd.it/uzclsFKjHqLQJYng1OuACDaGKioJ6ZR0o9smCc9DPKg.jpg?auto=webp&amp;s=c7713c38199b0d442dd84262ff95abf78f72e3ee', 'width': 725}, 'variants': {}}]}",6,1637670131,1,[removed],True,False,False,haskell,t5_2qh36,67417,public,self,Looking for strong Haskell developer,0,[],1.0,https://www.reddit.com/r/haskell/comments/r0c0qu/looking_for_strong_haskell_developer/,all_ads,6,,,,,,,automod_filtered,,,,,,,,,,,,,
942.0,[],False,CucumberCareful1693,,[],,text,t2_8ucq4k69,False,False,False,[],False,False,1637645127,self.haskell,https://www.reddit.com/r/haskell/comments/r05ui6/confused_about_type_when_using_state_function_of/,{},r05ui6,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/r05ui6/confused_about_type_when_using_state_function_of/,False,,,6,1637645138,1,"Hi everyone, I have a question about `State Transformer`

I am confused about `rollDie` 's type and `state` 's type.  
Why is the type of

    state :: Monad m =&gt; (s -&gt; (a, s)) -&gt; StateT s m a
    rollDie :: State StdGen Die

in the code block below, can be lined up? 

    module RandomExample2 where
    
    import Control.Applicative (liftA3)
    import Control.Monad (replicateM)
    import Control.Monad.Trans.State
    import System.Random
    
    -- Six-sided die
    data Die =
          DieOne
        | DieTwo
        | DieThree
        | DieFour
        | DieFive
        | DieSix
        deriving (Eq, Show)
    
    intToDie :: Int -&gt; Die
    intToDie n =
        case n of
            1 -&gt; DieOne
            2 -&gt; DieTwo
            3 -&gt; DieThree
            4 -&gt; DieFour
            5 -&gt; DieFive
            6 -&gt; DieSix
            -- Use this tactic _extremely_ sparingly.
            x -&gt; error $ ""intToDie got non 1-6 integer: "" ++ show x
    
    rollDie :: State StdGen Die
    rollDie =
        let
            x = state $ do
                (n, s) &lt;- randomR (1, 6) :: ((-&gt;) s) (Int, s) :: s -&gt; (Int, s)
                return (intToDie n, s) :: :: ((-&gt;) s) (Die, s) :: s -&gt; (Die, s)
        in x

Thank you!",True,False,False,haskell,t5_2qh36,67408,public,self,Confused about type when using `state` function of `State` monad,0,[],1.0,https://www.reddit.com/r/haskell/comments/r05ui6/confused_about_type_when_using_state_function_of/,all_ads,6,,,,,,,,,,,,,,,,,,,,
943.0,[],False,brandonchinn178,,[],,text,t2_ognt1qc,False,False,False,[],False,False,1637627458,self.haskell,https://www.reddit.com/r/haskell/comments/r00ci1/threw_together_a_hackagegrep_script_for_grepping/,{},r00ci1,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,1,0,False,all_ads,/r/haskell/comments/r00ci1/threw_together_a_hackagegrep_script_for_grepping/,False,self,"{'enabled': False, 'images': [{'id': '-Rvels542lvsCy9kNeUgmi4etaJCNbvxD75IdPpnxKA', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/nLlZ95fOoyJQcHSXdpHhEQOElY_UIMKxDnDEkeBoiDE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7497c306b5db5f822470027f8469c77e46640011', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/nLlZ95fOoyJQcHSXdpHhEQOElY_UIMKxDnDEkeBoiDE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=bc579fe161d38b9140b9ed2baf986e19ec31e834', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/nLlZ95fOoyJQcHSXdpHhEQOElY_UIMKxDnDEkeBoiDE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=c1f05d7128442acf28cda200116723c3730e403a', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/nLlZ95fOoyJQcHSXdpHhEQOElY_UIMKxDnDEkeBoiDE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f69588c04ce742af1a7c7aae3d336907b9bd8721', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/nLlZ95fOoyJQcHSXdpHhEQOElY_UIMKxDnDEkeBoiDE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=6ec061738b9d6e343c5503cf1724bb202a4b5b00', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/nLlZ95fOoyJQcHSXdpHhEQOElY_UIMKxDnDEkeBoiDE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=83f8ad91a013c36a8c458d5d76643fbc3a715e1c', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/nLlZ95fOoyJQcHSXdpHhEQOElY_UIMKxDnDEkeBoiDE.jpg?auto=webp&amp;s=841e89df97c56365a88d5845be95cb84a777f89d', 'width': 1200}, 'variants': {}}]}",6,1637627468,1,"Follow up from [this thread](https://www.reddit.com/r/haskell/comments/qxrizc/how_to_scrape_hackage/), didn't really find anything for my needs.

GitHub: https://github.com/brandonchinn178/hackage-grep

Features:
* Orders packages by most downloads (currently only download count from last 30 days, see https://github.com/haskell/hackage-server/issues/458#issuecomment-975995226)
* Limit search to N packages
* Cleans up source code after grepping

TODO:
* Add caching
* Add progress bar",True,False,False,haskell,t5_2qh36,67409,public,self,Threw together a hackage-grep script for grepping source code on Hackage,0,[],1.0,https://www.reddit.com/r/haskell/comments/r00ci1/threw_together_a_hackagegrep_script_for_grepping/,all_ads,6,,,,,,,,,,,,,,,,,,,,
944.0,[],False,ZigguratOfUr,,[],,text,t2_b8wdy,False,False,False,[],False,False,1637597447,self.haskell,https://www.reddit.com/r/haskell/comments/qzox0y/help_finding_a_blog_post_of_an_interview_with/,{},qzox0y,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,17,0,False,all_ads,/r/haskell/comments/qzox0y/help_finding_a_blog_post_of_an_interview_with/,False,,,6,1637597458,1,"I remember a couple of blog posts that went viral on hackernews. As I roughly recall both were in the form of ""interviews"" with an interviewer asking basic questions and the interviewee taking them into a deviant descent into madness.

One warped Haskell, the theoretically sound and purely functional language, into essentially assembly code. The other (and I'm more fuzzy on this) programmed using only c headers, or something equally absurd that is not intended to write real programs.",True,False,False,haskell,t5_2qh36,67402,public,self,"Help finding a blog post of an ""interview"" with extremely deviant Haskell usage?",0,[],1.0,https://www.reddit.com/r/haskell/comments/qzox0y/help_finding_a_blog_post_of_an_interview_with/,all_ads,6,,,,,,,,,,,,,,,,,,,,
945.0,[],False,Anton-Latukha,,[],,text,t2_43k8nxto,False,False,False,[],False,False,1637586948,self.haskell,https://www.reddit.com/r/haskell/comments/qzl6mw/people_must_see_haskellperfsequences_adding_dlist/,{},qzl6mw,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,29,0,False,all_ads,/r/haskell/comments/qzl6mw/people_must_see_haskellperfsequences_adding_dlist/,False,self,"{'enabled': False, 'images': [{'id': 'uSeY06zGaJ7Qlp-zFFDVdpHpj8cwduJ1ORAna_-ab70', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/AcoytQxxUsSYwFokY7Zmo7uVIA2SMtckD3YPQQ5qc3E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=327d923ebee0cc82746e14d4ddc3c804e5648492', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/AcoytQxxUsSYwFokY7Zmo7uVIA2SMtckD3YPQQ5qc3E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=771be4cd0d7c8a64d9bd62e3c9e61d45dc45d485', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/AcoytQxxUsSYwFokY7Zmo7uVIA2SMtckD3YPQQ5qc3E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=764494fb1dc54f40a72bddedb296a910ef6c234f', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/AcoytQxxUsSYwFokY7Zmo7uVIA2SMtckD3YPQQ5qc3E.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=813b08daab12a77efca5e531c3b36cb6e888b2c4', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/AcoytQxxUsSYwFokY7Zmo7uVIA2SMtckD3YPQQ5qc3E.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=c48e5d22883cdcffba4c0ed36eb86a869b81c5d3', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/AcoytQxxUsSYwFokY7Zmo7uVIA2SMtckD3YPQQ5qc3E.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=1c375310c10b3c5233b7b59e8790e89d82c00daf', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/AcoytQxxUsSYwFokY7Zmo7uVIA2SMtckD3YPQQ5qc3E.jpg?auto=webp&amp;s=b34d38c2b0a2a2bb3c03a949952e413b065df468', 'width': 1200}, 'variants': {}}]}",6,1637586959,1,"See: https://github.com/haskell-perf/sequences.

With `chrisdone` we just added `DList` &amp; `Acc` &amp; snoc benchmark into comparison.

I think it is useful for everyone to see ""if old folk DList recommendation to solve `[]` problems actually holds water"".

Because there is a direct comparison with numbers now.

To be sure I additionally checked with `spl` (`DList` author) in: https://github.com/spl/dlist/issues/102 &amp; `chrisdone` of course holds the benchmarking repository.

---

Would note that do not try to even WHNF `DList` it is not designed for `StrictData` or `BangPatterns`.

`DList` data design relies on the leverage of Haskell laziness &amp; function composition, please use `DList` as it is by default.",True,False,False,haskell,t5_2qh36,67397,public,self,"People must see haskell-perf/sequences adding DList, Acc &amp; snoc into comparison",0,[],1.0,https://www.reddit.com/r/haskell/comments/qzl6mw/people_must_see_haskellperfsequences_adding_dlist/,all_ads,6,,,,,,,,,,,,,,,,,,,,
946.0,[],False,csrkgu,,[],,text,t2_3o0bc23u,False,False,False,[],False,False,1637585879,self.haskell,https://www.reddit.com/r/haskell/comments/qzkuka/linear_types_escape_hatch/,{},qzkuka,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,7,0,False,all_ads,/r/haskell/comments/qzkuka/linear_types_escape_hatch/,False,,,6,1637585889,1,"Hi!

I am trying to use `{-# LANGUAGE LinearTypes #-}` to make one of my user-facing APIs safer. However, I find myself in a situation where I am relying on a third-party function that has no linear type. Is there some escape hatch that lets me take my argument in a `a %1 -&gt; b` and give it to a function `a -&gt; b`?

Thanks",True,False,False,haskell,t5_2qh36,67397,public,self,Linear types escape hatch,0,[],1.0,https://www.reddit.com/r/haskell/comments/qzkuka/linear_types_escape_hatch/,all_ads,6,,,,,,,,,,,,,,,,,,,,
947.0,[],False,jhbertra,,[],,text,t2_18sp9nrl,False,False,False,[],False,False,1637580288,compositional.fm,https://www.reddit.com/r/haskell/comments/qzjbko/simon_peytonjones_a_microsoft_research/,{},qzjbko,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,12,0,False,all_ads,/r/haskell/comments/qzjbko/simon_peytonjones_a_microsoft_research/,False,link,"{'enabled': False, 'images': [{'id': 'lygHUzBTm5YVbYQ7R6MKoTThrPjVdIgnHDUXQvvirkw', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/MaeLO4bJD2mwFD00W-EvJJTklD1CDV1UBZws63wk4uQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d52d7bdf1056c26a08bd59c5927ad8cb429c73f7', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/MaeLO4bJD2mwFD00W-EvJJTklD1CDV1UBZws63wk4uQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=e51c32494eaca006e0eb319f7b3a0dbc13eecff5', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/MaeLO4bJD2mwFD00W-EvJJTklD1CDV1UBZws63wk4uQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=95e4c830581e473649ac23e2e3c8b3cc503df864', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/MaeLO4bJD2mwFD00W-EvJJTklD1CDV1UBZws63wk4uQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=83b556258194801ee870952e042c6fcbb9163fe6', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/MaeLO4bJD2mwFD00W-EvJJTklD1CDV1UBZws63wk4uQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=9de735981def216a9e440d7673ab5174076039e9', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/MaeLO4bJD2mwFD00W-EvJJTklD1CDV1UBZws63wk4uQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=0c6537bac608210cfac31074723991ba87f12e3d', 'width': 1080}], 'source': {'height': 1400, 'url': 'https://external-preview.redd.it/MaeLO4bJD2mwFD00W-EvJJTklD1CDV1UBZws63wk4uQ.jpg?auto=webp&amp;s=675219ae3fa73250717ee4196d2799041c83a4d0', 'width': 1400}, 'variants': {}}]}",6,1637580299,1,,True,False,False,haskell,t5_2qh36,67397,public,default,Simon Peyton-Jones - A Microsoft Research Retrospective,0,[],1.0,https://www.compositional.fm/simon-peyton-jones-microsoft-retrospective,all_ads,6,,,https://www.compositional.fm/simon-peyton-jones-microsoft-retrospective,140.0,140.0,,,,,,,,,,,,,,,
948.0,[],False,Faucelme,,[],,text,t2_6ofev,False,False,False,[],False,False,1637574458,github.com,https://www.reddit.com/r/haskell/comments/qzhx1g/applicationmanaged_call_stacks_without_polluting/,{},qzhx1g,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,4,0,False,all_ads,/r/haskell/comments/qzhx1g/applicationmanaged_call_stacks_without_polluting/,False,,,6,1637574469,1,,False,False,False,haskell,t5_2qh36,67397,public,default,"Application-managed call stacks, without polluting the business logic",0,[],1.0,https://github.com/danidiaz/dep-t-advice/blob/012b258936bceebb4c0818c32f5adc44b585a425/test/synthetic-callstack-tests.hs,all_ads,6,,,https://github.com/danidiaz/dep-t-advice/blob/012b258936bceebb4c0818c32f5adc44b585a425/test/synthetic-callstack-tests.hs,,,,,,,,,,,,,,,,,
949.0,[],False,gergoerdi,,[],,text,t2_42qp1,False,False,False,[],False,False,1637565773,retrocla.sh,https://www.reddit.com/r/haskell/comments/qzftw8/retrocomputing_with_clash_haskell_for_fpga/,{},qzftw8,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,10,0,False,all_ads,/r/haskell/comments/qzftw8/retrocomputing_with_clash_haskell_for_fpga/,False,link,"{'enabled': False, 'images': [{'id': 'XRCRaJFCul8N4dAG7oXCBUPXdMpPZ2-pdc-5oPVmFjk', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/RSTAYgciB99fZwOV_AoPQPMl7jsjq9YinFR76h5LSFc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=9cadcce279eb8146c16e104bd80c4da4a9f2a53b', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/RSTAYgciB99fZwOV_AoPQPMl7jsjq9YinFR76h5LSFc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2f710ac709b073782a6d22fe24907c3adb55a1a9', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/RSTAYgciB99fZwOV_AoPQPMl7jsjq9YinFR76h5LSFc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=918b80f520decb763230bf782164897e1753de29', 'width': 320}], 'source': {'height': 300, 'url': 'https://external-preview.redd.it/RSTAYgciB99fZwOV_AoPQPMl7jsjq9YinFR76h5LSFc.jpg?auto=webp&amp;s=ce895c48c5e30a0c0df352f707b0595dc49f3a9a', 'width': 600}, 'variants': {}}]}",6,1637565784,1,,True,False,False,haskell,t5_2qh36,67397,public,default,Retrocomputing with Clash: Haskell for FPGA Hardware Design (book),0,[],1.0,https://retrocla.sh/,all_ads,6,,,https://retrocla.sh/,70.0,140.0,,,,,,,,,,,,,,,
950.0,[],False,Notnamedjohn,,[],,text,t2_1hr3pr80,False,False,False,[],False,False,1637554365,self.haskell,https://www.reddit.com/r/haskell/comments/qzcp3l/questions_about_the_uses_of_haskell/,{},qzcp3l,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,False,4,0,False,all_ads,/r/haskell/comments/qzcp3l/questions_about_the_uses_of_haskell/,False,,,6,1637554377,1,"I wanted to start developing nft projects for cardano and found out this was the language that cardano was running on, would all development for nfts need to be in haskell to interact with the block chain?",True,False,False,haskell,t5_2qh36,67394,public,self,Questions about the uses of haskell,0,[],1.0,https://www.reddit.com/r/haskell/comments/qzcp3l/questions_about_the_uses_of_haskell/,all_ads,6,b0bce6c2-2a63-11eb-b9a5-0eb5aa8d3dc9,blockchain,,,,,,,,,,,,,,,,,,
951.0,[],False,Sad_Illustrator4381,,[],,text,t2_clyxynjf,False,False,False,[],False,False,1637539108,self.haskell,https://www.reddit.com/r/haskell/comments/qz7yci/odd_variable_binding_standard_with_where_blocks/,{},qz7yci,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/qz7yci/odd_variable_binding_standard_with_where_blocks/,False,,,6,1637539120,1,"Consider the following function which pulls out the elements of `m` with keys of the form `[i,j]` for some characters `i` and `j`. Can you spot the mistake?
    import Data.Map as M
    subTable :: Char -&gt; M.Map String Int -&gt; M.Map Char Int
    subTable i m = M.foldrWithKey maybeInsert M.empty m
                      where maybeInsert :: String -&gt; Int -&gt; Row -&gt; Row
                            maybeInsert [i,j] v r = insert j v r 
                            maybeInsert _ _ r               = r

Indeed, the mistake is that in `maybeInsert` I am trying to pattern match on a previously bound variable `i`. But the compiler no longer recognises `i` as bound, and it compiles fine... but the code doesn't behave as intended. Should the compiler allow this in a `where` block? I would suggest it should at least include a warning.  I imagine many of us have made this mistake at some point...

For reference, my intended behaviour is achieved by 
    maybeInsert [i1,j] v r | i1==i     = insert j v r
                           | otherwise = r",True,False,False,haskell,t5_2qh36,67394,public,self,Odd variable binding standard with `where` blocks.,0,[],1.0,https://www.reddit.com/r/haskell/comments/qz7yci/odd_variable_binding_standard_with_where_blocks/,all_ads,6,,,,,,,,,,,,,,,,,,,,
952.0,[],False,JeffreyBenjaminBrown,,[],,text,t2_kws52,False,False,False,[],False,False,1637535736,self.haskell,https://www.reddit.com/r/haskell/comments/qz6u3i/whats_the_status_of_dependent_types_in_ghc_as_of/,{},qz6u3i,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/qz6u3i/whats_the_status_of_dependent_types_in_ghc_as_of/,False,,,6,1637535747,1,[removed],True,False,False,haskell,t5_2qh36,67392,public,self,What's the status of Dependent Types in GHC as of late 2021?,0,[],1.0,https://www.reddit.com/r/haskell/comments/qz6u3i/whats_the_status_of_dependent_types_in_ghc_as_of/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
953.0,[],False,mrnothing-,,[],,text,t2_7swnspu0,False,False,False,[],False,False,1637534592,self.haskell,https://www.reddit.com/r/haskell/comments/qz6fzt/is_haskell_considered_a_von_neumann_programming/,{},qz6fzt,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/qz6fzt/is_haskell_considered_a_von_neumann_programming/,False,,,6,1637534603,1,"im not asking strictly about this ""Many widely used programming languages such as C, C++ and Java have ceased to be strictly von Neumann by adding support for parallel processing, in the form of threads""

is more about the type of abstraction like all is data",True,False,False,haskell,t5_2qh36,67392,public,self,Is haskell considered a Von Neumann programming language?,0,[],1.0,https://www.reddit.com/r/haskell/comments/qz6fzt/is_haskell_considered_a_von_neumann_programming/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
954.0,[],False,isovector,,[],,text,t2_pir4g,False,False,False,[],False,False,1637530946,reasonablypolymorphic.com,https://www.reddit.com/r/haskell/comments/qz56kk/automatically_migrating_eq_of_no_reasonably/,{},qz56kk,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,5,0,False,all_ads,/r/haskell/comments/qz56kk/automatically_migrating_eq_of_no_reasonably/,False,,,6,1637530957,1,,True,False,False,haskell,t5_2qh36,67391,public,default,Automatically Migrating Eq of No (/=) :: Reasonably Polymorphic,0,[],1.0,https://reasonablypolymorphic.com/blog/comby,all_ads,6,,,https://reasonablypolymorphic.com/blog/comby,,,,,,,,,,,,,,,,,
955.0,[],False,alexeyr,,[],,text,t2_37mmv,False,False,False,[],False,False,1637529713,tweag.io,https://www.reddit.com/r/haskell/comments/qz4ra9/denotational_homomorphic_property_testing/,{},qz4ra9,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/qz4ra9/denotational_homomorphic_property_testing/,False,link,"{'enabled': False, 'images': [{'id': '0Evd6UWXs4A11yT0I3bSUdOWKNqr9Az0qWvc-WhxMes', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a559bb4d890ff015d6259a06083f8cea81389ab2', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b67964ddc7f6a4e974672b382f7c786c8d3526fe', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=61e37c5f638b0d156c5fdcbc1a5335a3bdbb8729', 'width': 320}, {'height': 640, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=298dca15f47ae031413bbd031ffd301b05793915', 'width': 640}, {'height': 960, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=81eb47deb6039cc11cc169b056aee661e37b1789', 'width': 960}, {'height': 1080, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3b60b078d6771ef7f153290885f77a8f50774cdb', 'width': 1080}], 'source': {'height': 4096, 'url': 'https://external-preview.redd.it/Bj50fREKn41m6v1UPb2_hlrczuDz1nxR1tSRjFf-mzU.jpg?auto=webp&amp;s=6803e63008eaa75aac55167a9225dd6c2f0316a7', 'width': 4096}, 'variants': {}}]}",6,1637529724,1,,True,False,False,haskell,t5_2qh36,67391,public,default,Denotational homomorphic property testing,0,[],1.0,https://www.tweag.io/blog/2021-10-13-homomorphic-testing/,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://www.tweag.io/blog/2021-10-13-homomorphic-testing/,140.0,140.0,,,,,,,,,,,,,,,
956.0,[],False,tomejaguar,,[],,text,t2_45sug,False,False,False,[],False,False,1637521391,self.haskell,https://www.reddit.com/r/haskell/comments/qz1uo6/the_current_implementation_of_hascallstack_breaks/,{},qz1uo6,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,30,0,False,all_ads,/r/haskell/comments/qz1uo6/the_current_implementation_of_hascallstack_breaks/,False,,,6,1637521404,1,"For example

    import GHC.Stack
    
    x :: HasCallStack =&gt; Int
    x = (srcLocStartLine . snd . last . getCallStack) callStack

    main = do
      print x
      print x
      print x

results in

    7
    8
    9

and after rewriting with a rewrite rule we take for granted:

    import GHC.Stack
    
    x :: HasCallStack =&gt; Int
    x = (srcLocStartLine . snd . last . getCallStack) callStack
    
    main = do
      let y = x
      print y
      print y
      print y

outputs

    7
    7
    7

That is to say, referential transparency is violated. There's an easy fix: change the type of [`callStack`](https://www.stackage.org/haddock/lts-18.17/base-4.14.3.0/GHC-Stack.html#v:callStack) from

    callStack :: HasCallStack =&gt; CallStack

to

    callStack :: HasCallStack =&gt; IO CallStack

Observing call stacks in `IO` is perfectly reasonable. (So technically it's not `HasCallStack` that breaks referential transparency, but `callStack`.)

But I can't be the first person to make this objection. It must have been made before the proposal to add `HasCallStack` was accepted. What was the explanation for dismissing it? I can't [find the proposal in the ghc-proposals](https://github.com/ghc-proposals/ghc-proposals/search?q=HasCallStack&amp;type=issues) repo. Perhaps the functionality predates that repo.",True,False,False,haskell,t5_2qh36,67388,public,self,The current implementation of HasCallStack breaks referential transparency,0,[],1.0,https://www.reddit.com/r/haskell/comments/qz1uo6/the_current_implementation_of_hascallstack_breaks/,all_ads,6,,,,,,,,,,,,,,,,,,,,
957.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1637514058,github.com,https://www.reddit.com/r/haskell/comments/qyz7dg/migration_guide_for_eq_of_no/,{},qyz7dg,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,11,0,False,all_ads,/r/haskell/comments/qyz7dg/migration_guide_for_eq_of_no/,False,link,"{'enabled': False, 'images': [{'id': 'okUjkSjq9fw45j-sBKWqpG4XykIp7X9Ww_w9f1Vkp2g', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/ZQLljKRjeqZ17YPZFinflpgnJ9gmmN9_n7QCrIG6TAE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=bb57055958a544903c3073130b20154670376cb5', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/ZQLljKRjeqZ17YPZFinflpgnJ9gmmN9_n7QCrIG6TAE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=83625ff1b50d5eb3719b4c4bb1bc378915c68b2f', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/ZQLljKRjeqZ17YPZFinflpgnJ9gmmN9_n7QCrIG6TAE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ce96b3c5a35312f46aac238e9699e3b27615b87b', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/ZQLljKRjeqZ17YPZFinflpgnJ9gmmN9_n7QCrIG6TAE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=ffbd7eec5c7a559320b2b6df6d0e0d879707aaa1', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/ZQLljKRjeqZ17YPZFinflpgnJ9gmmN9_n7QCrIG6TAE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=d3815055e6d4ca5964ab17aa3777fb9bafcc0cf5', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/ZQLljKRjeqZ17YPZFinflpgnJ9gmmN9_n7QCrIG6TAE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=12194c8f9c9e6c69c9e81497cac36274887cbfcb', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/ZQLljKRjeqZ17YPZFinflpgnJ9gmmN9_n7QCrIG6TAE.jpg?auto=webp&amp;s=ba6e01c050d4045b126987b0709362f5340c6e9e', 'width': 1200}, 'variants': {}}]}",6,1637514070,1,,True,False,False,haskell,t5_2qh36,67387,public,default,Migration guide for Eq of no (/=),0,[],1.0,https://github.com/haskell/core-libraries-committee/blob/main/guides/no-noneq-in-eq.md,all_ads,6,,,https://github.com/haskell/core-libraries-committee/blob/main/guides/no-noneq-in-eq.md,70.0,140.0,,,,,,,,,,,,,,,
958.0,[],False,bitconnor,,[],,text,t2_be0esdi4,False,False,False,[],False,False,1637512433,hexgrip.com,https://www.reddit.com/r/haskell/comments/qyymr6/ann_hexgrip_commercial_haskell_ide_preview/,{},qyymr6,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,44,0,False,all_ads,/r/haskell/comments/qyymr6/ann_hexgrip_commercial_haskell_ide_preview/,False,link,"{'enabled': False, 'images': [{'id': 'xxDqsdw0IhWY0ge_keHRQbxrSyZN3xxqim1QYsjF5Ko', 'resolutions': [{'height': 85, 'url': 'https://external-preview.redd.it/GhKDEj_sqaTAenHbQg4OPRh_rHqai8Gvom87AvvQkyc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=12e5c79ce9f3f41de87d81a7046f743a7c2f3949', 'width': 108}, {'height': 171, 'url': 'https://external-preview.redd.it/GhKDEj_sqaTAenHbQg4OPRh_rHqai8Gvom87AvvQkyc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=35b68529bff99aff3d115d5827b2c4cc0f91a3c7', 'width': 216}, {'height': 253, 'url': 'https://external-preview.redd.it/GhKDEj_sqaTAenHbQg4OPRh_rHqai8Gvom87AvvQkyc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=debc1481c0d900119cfc88c079e40a09b03cd9c7', 'width': 320}, {'height': 507, 'url': 'https://external-preview.redd.it/GhKDEj_sqaTAenHbQg4OPRh_rHqai8Gvom87AvvQkyc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7c700df858ba331067aaf2bc1f5d755b801c3b83', 'width': 640}, {'height': 761, 'url': 'https://external-preview.redd.it/GhKDEj_sqaTAenHbQg4OPRh_rHqai8Gvom87AvvQkyc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=637f37128ec8a888b2160798cb4be46a29830c84', 'width': 960}, {'height': 856, 'url': 'https://external-preview.redd.it/GhKDEj_sqaTAenHbQg4OPRh_rHqai8Gvom87AvvQkyc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=d798c788586b715b7fc1496d095e58e380c05034', 'width': 1080}], 'source': {'height': 1006, 'url': 'https://external-preview.redd.it/GhKDEj_sqaTAenHbQg4OPRh_rHqai8Gvom87AvvQkyc.jpg?auto=webp&amp;s=87df3f0af55f2ee965fd96abb4640602fa79deaf', 'width': 1268}, 'variants': {}}]}",6,1637512444,1,,True,False,False,haskell,t5_2qh36,67386,public,default,[ANN] Hexgrip: Commercial Haskell IDE (preview),0,[],1.0,https://www.hexgrip.com/,all_ads,6,,,https://www.hexgrip.com/,111.0,140.0,,,,,,,,,,,,,,,
959.0,[],False,Sad_Illustrator4381,,[],,text,t2_clyxynjf,False,False,False,[],False,False,1637491629,self.haskell,https://www.reddit.com/r/haskell/comments/qysisn/how_to_play_with_imported_text_in_ghci/,{},qysisn,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,3,0,False,all_ads,/r/haskell/comments/qysisn/how_to_play_with_imported_text_in_ghci/,False,,,6,1637491640,1,"I have been playing with some text processing in Haskell, and I would like to import a text file \`""AliceInWonderland.txt""\` and see how my functions perform. However, when I try to read the file \`alice = readFile ""AliceInWonderland.txt""\` I naturally encounter the obstacle that \`alice\` is not a \`String\` but rather an \`IO String\` on which I cannot readily apply my \`functions :: String -&gt; Whatever\`, nor can I \`show\` their result if I lift their return value to IO (\`liftedFun x = return $ functions x\` can then be composed as \`alice &gt;&gt;= liftedFun\`). Aside: Is there a better way to lift a function than \`liftedFun x = return $ functions x\`?

  
Is there a good way around this? I would like to just import the text and keep playing and testing my code, preferably without having to play laborious for every step.",True,False,False,haskell,t5_2qh36,67378,public,self,How to play with imported text in GHCI,0,[],1.0,https://www.reddit.com/r/haskell/comments/qysisn/how_to_play_with_imported_text_in_ghci/,all_ads,6,,,,,,,,,,,,,,,,,,,,
960.0,[],False,szpaceSZ,,[],,text,t2_11ogx3,False,False,False,[],False,False,1637477349,reddit.com,https://www.reddit.com/r/haskell/comments/qyp93x/metapackage_to_cabalfriendly_document_which/,{},qyp93x,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,True,2,0,False,all_ads,/r/haskell/comments/qyp93x/metapackage_to_cabalfriendly_document_which/,False,,,6,1637477359,1,,False,False,False,haskell,t5_2qh36,67374,public,default,Meta-package to cabal-friendly document which base-version aGHC came with,0,[],1.0,https://www.reddit.com/r/haskell/comments/4oc9dh/comment/d4bcezp/,all_ads,6,a01b58a0-6553-11eb-b2eb-0eb19e8d97a5,RFC,https://www.reddit.com/r/haskell/comments/4oc9dh/comment/d4bcezp/,,,,reddit,,,,,,,,,,,,,
961.0,[],False,webNoob13,,[],,text,t2_7bmygxmk,False,False,False,[],False,False,1637473590,self.haskell,https://www.reddit.com/r/haskell/comments/qyoar7/scanl_is_confusing_me_about_foldl/,{},qyoar7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,6,0,False,all_ads,/r/haskell/comments/qyoar7/scanl_is_confusing_me_about_foldl/,False,,,6,1637473601,1,"This is throwing me off:

    ghci &gt; scanl ( flip (:)) [] [3 ,2 ,1]
    [[] ,[3] ,[2 ,3] ,[1 ,2 ,3]]
    

scanl is like foldl, so isn't the first call to the lambda have 2 parameters \[\] and 3?

The accumulator and x like:

    (/acc x -&gt; x : acc) --so why is it giving [] as the first element of result?",True,False,False,haskell,t5_2qh36,67374,public,self,scanl is confusing me about foldl,0,[],1.0,https://www.reddit.com/r/haskell/comments/qyoar7/scanl_is_confusing_me_about_foldl/,all_ads,6,,,,,,,,,,,,,,,,,,,,
962.0,[],False,jmite,,[],,text,t2_8xyym,False,False,False,[],False,False,1637470397,reddit.com,https://www.reddit.com/r/haskell/comments/qyng1h/help_the_proof_assistants_stack_exchange_reach/,{},qyng1h,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/qyng1h/help_the_proof_assistants_stack_exchange_reach/,False,link,"{'enabled': False, 'images': [{'id': 'DHpjzjfDcIH7XGRVkDn-Jxt_sNkKS7__0kdJkEDU268', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/5JzsBaoItxk8b1PfNgO6G5WdxYeXaXjOzf979GMaaF8.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8e7949509ca7cd44cb71f973397df74212becd88', 'width': 108}], 'source': {'height': 158, 'url': 'https://external-preview.redd.it/5JzsBaoItxk8b1PfNgO6G5WdxYeXaXjOzf979GMaaF8.jpg?auto=webp&amp;s=975bafe2a6f131ab8663e2f2386385a3080f3739', 'width': 158}, 'variants': {}}]}",6,1637470408,1,,True,False,False,haskell,t5_2qh36,67371,public,default,Help the Proof Assistants Stack Exchange reach Beta! [x-post r/dependent_types],0,[],1.0,https://www.reddit.com/r/dependent_types/comments/qynfka/help_the_proof_assistants_stack_exchange_reach/,all_ads,6,,,https://www.reddit.com/r/dependent_types/comments/qynfka/help_the_proof_assistants_stack_exchange_reach/,140.0,140.0,,,,,,,,,,,,,,,
963.0,[],False,webNoob13,,[],,text,t2_7bmygxmk,False,False,False,[],False,False,1637468956,self.haskell,https://www.reddit.com/r/haskell/comments/qyn207/re_which_syntax_is_preferred_for_folds/,{},qyn207,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/qyn207/re_which_syntax_is_preferred_for_folds/,False,,,6,1637468967,1,"    headRight1 :: [a] -&gt; a
    headRight1 xs = foldr1 (\x _ -&gt; x) xs
    lastLeft1 :: [a] -&gt; a
    lastLeft1 xs = foldl1 (\_ x -&gt; x) xs
    

or 

    head ’ :: [ a ] -&gt; a
    head ’ = foldr1 (\ x _ -&gt; x )
    last ’ :: [ a ] -&gt; a
    last ’ = foldl1 (\ _ x -&gt; x )
    

I like the first one because then I know without looking at the right hand side that the parameter is a List.  But Learn You a Haskell does the latter.",True,False,False,haskell,t5_2qh36,67371,public,self,re: which syntax is preferred for folds?,0,[],1.0,https://www.reddit.com/r/haskell/comments/qyn207/re_which_syntax_is_preferred_for_folds/,all_ads,6,,,,,,,,,,,,,,,,,,,,
964.0,[],False,someacnt,,[],,text,t2_euebihog,False,False,False,[],False,False,1637460205,self.haskell,https://www.reddit.com/r/haskell/comments/qykhlg/alternatives_for_iconv_library/,{},qykhlg,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/qykhlg/alternatives_for_iconv_library/,False,,,6,1637460216,1,[removed],True,False,False,haskell,t5_2qh36,67370,public,self,Alternatives for iconv library?,0,[],1.0,https://www.reddit.com/r/haskell/comments/qykhlg/alternatives_for_iconv_library/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
965.0,[],False,Chrisdone2,,[],,text,t2_1271rt,False,False,False,[],False,False,1637451439,gist.github.com,https://www.reddit.com/r/haskell/comments/qyht06/immutable_publishing_policy/,{},qyht06,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,22,0,False,all_ads,/r/haskell/comments/qyht06/immutable_publishing_policy/,False,link,"{'enabled': False, 'images': [{'id': 'OAXSl8SY6T3JK9MGQyKxkoYbqZ71HQRYXLeB8CV0NXg', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d5811c5bda5fece1040636a6af8702ba790f0fd4', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=eee576fd4da7535eb53ceb88dd8b52f073048441', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=72872d880460efa723918c000adca0ed259cf775', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f3545b9335d763c9da9c16bf7bf9a3f907dbd6f6', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=2d241ace0f1c07088fac3f8469dbad3b05d2d419', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=9055f11bdc00beb0b3589e1cae5817d6070d83bc', 'width': 1080}], 'source': {'height': 640, 'url': 'https://external-preview.redd.it/4-DxLM-C2Ve3tHmVL5ITI6GRtMVG8PzzdBuCKiaabfE.jpg?auto=webp&amp;s=079a7260ec149880c73263d64811698adb22760a', 'width': 1280}, 'variants': {}}]}",6,1637451450,1,,False,False,False,haskell,t5_2qh36,67367,public,default,Immutable Publishing Policy,0,[],1.0,https://gist.github.com/chrisdone/f71a2eca728a805c181091863c339fc2,all_ads,6,,,https://gist.github.com/chrisdone/f71a2eca728a805c181091863c339fc2,70.0,140.0,,,,,,,,,,,,,,,
966.0,[],False,MippsTT,,[],,text,t2_6anvx1de,False,False,False,[],False,False,1637446284,self.haskell,https://www.reddit.com/r/haskell/comments/qyg448/reinstalling_haskell_not_working_win10/,{},qyg448,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/qyg448/reinstalling_haskell_not_working_win10/,False,,,6,1637446295,1,"After Reinstalling Haskell with chocolatey ("" choco install haskell-dev haskell-stack"") followed by ""refreshenv"" windows seems to not get the ""news""

*&gt;ghci*

*Cannot find file at '..\\\\lib\\ghc\\tools\\ghc-8.10.4\\bin\\ghci.exe' (C:\\ProgramData\\chocolatey\\lib\\ghc\\tools\\ghc-8.10.4\\bin\\ghci.exe). This usually indicates a missing or moved file.*

(should be 9.2.1)

nevertheless the auraenv is set correct to the new installation folder",True,False,False,haskell,t5_2qh36,67364,public,self,Reinstalling Haskell not working (Win10),0,[],1.0,https://www.reddit.com/r/haskell/comments/qyg448/reinstalling_haskell_not_working_win10/,all_ads,6,,,,,,,,,,,,,,,,,,,,
967.0,[],False,fromRustvalley,,[],,text,t2_f17q4m47,False,False,False,[],False,False,1637436785,i.redd.it,https://www.reddit.com/r/haskell/comments/qycx0u/new_haskell_i_got_this_error_while_trying_to/,{},qycx0u,False,False,False,False,True,False,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/qycx0u/new_haskell_i_got_this_error_while_trying_to/,False,image,"{'enabled': True, 'images': [{'id': 'jTWSGrn8FJ-iVYpwDTFXWkJWyZ6_fCP81oNpNM22d0Y', 'resolutions': [{'height': 81, 'url': 'https://preview.redd.it/vlipbzqpys081.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4d408dcf7905ffe4a0118fc7aa0c71c86c084764', 'width': 108}, {'height': 162, 'url': 'https://preview.redd.it/vlipbzqpys081.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d604cec046692dc8b5df5da91d2a5c52f19182cd', 'width': 216}, {'height': 240, 'url': 'https://preview.redd.it/vlipbzqpys081.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=8403f17aa7914632d999573545952954e972b51a', 'width': 320}, {'height': 480, 'url': 'https://preview.redd.it/vlipbzqpys081.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=f4299d6995d4a462bac3faa515ce02e894c2c5e9', 'width': 640}, {'height': 720, 'url': 'https://preview.redd.it/vlipbzqpys081.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=dfea5d7fec41c16aa0173af38f9a5e6c804240b5', 'width': 960}, {'height': 810, 'url': 'https://preview.redd.it/vlipbzqpys081.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=f465c192ecd2f7ef4279fe53cba09c6da9cca7f2', 'width': 1080}], 'source': {'height': 3024, 'url': 'https://preview.redd.it/vlipbzqpys081.jpg?auto=webp&amp;s=186464ec4215c64f5480149094a33c0cb569b0b1', 'width': 4032}, 'variants': {}}]}",6,1637436796,1,,True,False,False,haskell,t5_2qh36,67355,public,image,"New haskell, i got this error while trying to install ghcup on my new system",0,[],1.0,https://i.redd.it/vlipbzqpys081.jpg,all_ads,6,,,https://i.redd.it/vlipbzqpys081.jpg,105.0,140.0,,moderator,,,,,,,,,,,,,
968.0,[],False,agnishom,,[],,text,t2_4myyc,False,False,False,[],False,False,1637433804,codereview.stackexchange.com,https://www.reddit.com/r/haskell/comments/qybw67/any_feedback_on_my_tictactoe_program_is_welcome/,{},qybw67,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/qybw67/any_feedback_on_my_tictactoe_program_is_welcome/,False,link,"{'enabled': False, 'images': [{'id': 'tUaCKbzGcMwqtCai2n0ncjF3FrLleRRIsSMVdwSGdnE', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/CXIZ_zPkGJo7LskSUmRPG0apfLKOflHOussQpRy_ePc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3b673b8159543cad876389f37e9f4781735dc3e6', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/CXIZ_zPkGJo7LskSUmRPG0apfLKOflHOussQpRy_ePc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=98b1177db7d57bdafbb7c8d3e7634d369a4690a5', 'width': 216}], 'source': {'height': 316, 'url': 'https://external-preview.redd.it/CXIZ_zPkGJo7LskSUmRPG0apfLKOflHOussQpRy_ePc.jpg?auto=webp&amp;s=43be128a8428f7cd410309456eafe1232441035b', 'width': 316}, 'variants': {}}]}",6,1637433815,1,,True,False,False,haskell,t5_2qh36,67353,public,default,Any feedback on my tic-tac-toe program is welcome!,0,[],1.0,https://codereview.stackexchange.com/questions/269850/haskell-tic-tac-toe-with-automation-and-gui,all_ads,6,,,https://codereview.stackexchange.com/questions/269850/haskell-tic-tac-toe-with-automation-and-gui,140.0,140.0,,,,,,,,,,,,,,,
969.0,[],False,lutinos,,[],,text,t2_3ud78cox,False,False,False,[],False,False,1637431673,self.haskell,https://www.reddit.com/r/haskell/comments/qyb5tb/career_choice_conundrum/,{},qyb5tb,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,29,0,False,all_ads,/r/haskell/comments/qyb5tb/career_choice_conundrum/,False,,,6,1637431684,1,"Hello Haskellers of Reddit,

This may be an inappropriate question for this subreddit, if so let me know and I will take it down right away, but this is a community who's opinions on this matter I respect.

I love math and computer science and their intersection, and I have a career choice conundrum. Here is what I want: my dream is to work towards a garageband hedgefund. I love the math and programming challenges in finance, I love the control you get over the direction you take, I love the immediate and fast feedback on your work, I love the excitement and the power and the challenge, I love the data accumulation and processing infrastructure you can create, I love the high and low level thinking involved. I want to be able to whole heartedly work towards a career in this field.

Here is another set of desires: I also want to contribute to society. I want to work towards making peoples lives better. I want to deepen as a person and work towards being a human of heart.

These two ideas seem to be in direct conflict and have left me floundering directionless during my Masters degree in software and math. I would really appreciate thoughts from this community which seems to straddle a line between math, programming, and passion.",True,False,False,haskell,t5_2qh36,67349,public,self,Career Choice Conundrum,0,[],1.0,https://www.reddit.com/r/haskell/comments/qyb5tb/career_choice_conundrum/,all_ads,6,,,,,,,,,,,,,,,,,,,,
970.0,[],False,Soham-Chatterjee,,[],,text,t2_8jz7vexo,False,False,False,[],False,False,1637406106,self.haskell,https://www.reddit.com/r/haskell/comments/qy3cvu/explain_pattern_matching_works_only_on/,{},qy3cvu,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,16,0,False,all_ads,/r/haskell/comments/qy3cvu/explain_pattern_matching_works_only_on/,False,,,6,1637406117,1,"I was reading Learn You a Haskell for Great Good. There was this line

&gt;Notice how we pattern matched on `(x :-: xs)` . That works because pattern matching is actually about matching constructors. We can match on `:-:` because it is a constructor for our own list type and we can also match on : because it is a constructor for the built-in list type. Same goes for `[]`. Because pattern matching works (only) on constructors, we can match for stuff like that, normal prefix constructors or stuff like `8` or `'a'`, which are basically constructors for the numeric and character types, respectively.

Here the code comes from
```
infixr 5 :-:
data List a = Empty | a :-: (List a) deriving (Show, Read, Eq, Ord)
```

Can you please elaborate this section please.",True,False,False,haskell,t5_2qh36,67339,public,self,"Explain ""Pattern matching works (only) on constructors""",0,[],1.0,https://www.reddit.com/r/haskell/comments/qy3cvu/explain_pattern_matching_works_only_on/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
971.0,[],False,n00bomb,,[],,text,t2_fhy7z,False,False,False,[],False,False,1637396864,youtube.com,https://www.reddit.com/r/haskell/comments/qy19wz/programming_with_tactics/,{},qy19wz,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/qy19wz/programming_with_tactics/,False,rich:video,"{'enabled': False, 'images': [{'id': 'e1jxRQnNMrOvY2Dci1KZjFA3ldL-LeMxJCn4ndNcIzM', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/wo8LEVWz_Y3g2DVFlB4FIAH7CWfndwc1xD3qBwQnCyo.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=361c8435dd072acb261427039cc67157039b7777', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/wo8LEVWz_Y3g2DVFlB4FIAH7CWfndwc1xD3qBwQnCyo.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2bc42b800dd4eaa06cbcbd7673b021e1993d3dd2', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/wo8LEVWz_Y3g2DVFlB4FIAH7CWfndwc1xD3qBwQnCyo.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=39536a19473df5db942aa1d54eb75de3ef2eab74', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/wo8LEVWz_Y3g2DVFlB4FIAH7CWfndwc1xD3qBwQnCyo.jpg?auto=webp&amp;s=8276c06dae20c9e38a21745e4f9ca625f5650c47', 'width': 480}, 'variants': {}}]}",6,1637396875,1,,False,False,False,haskell,t5_2qh36,67337,public,image,Programming with Tactics,0,[],1.0,https://www.youtube.com/watch?v=BiH_A36zKwI,all_ads,6,,,https://www.youtube.com/watch?v=BiH_A36zKwI,105.0,140.0,,,,,,,"{'oembed': {'author_name': 'Boston Haskell', 'author_url': 'https://www.youtube.com/c/BostonHaskell', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/BiH_A36zKwI?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/BiH_A36zKwI/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Programming with Tactics', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/BiH_A36zKwI?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'Boston Haskell', 'author_url': 'https://www.youtube.com/c/BostonHaskell', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/BiH_A36zKwI?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/BiH_A36zKwI/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Programming with Tactics', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/BiH_A36zKwI?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/qy19wz', 'scrolling': False, 'width': 356}",,,,,
972.0,[],False,cloakcsgo,,[],,text,t2_stlql2,False,False,False,[],False,False,1637368290,self.haskell,https://www.reddit.com/r/haskell/comments/qxtjfr/uninstalling_haskellcabal/,{},qxtjfr,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,10,0,False,all_ads,/r/haskell/comments/qxtjfr/uninstalling_haskellcabal/,False,,,6,1637368302,1,Ive realised ive got some old versions of haskell installed and i cant find an easy way to remove then so i wanted to do a clean install of haskell but i cant find an easy way to uninstall everything first. How tf do i uninstall haskell?,True,False,False,haskell,t5_2qh36,67332,public,self,uninstalling haskell/cabal?,0,[],1.0,https://www.reddit.com/r/haskell/comments/qxtjfr/uninstalling_haskellcabal/,all_ads,6,,,,,,,,,,,,,,,,,,,,
973.0,[],False,brandonchinn178,,[],,text,t2_ognt1qc,False,False,False,[],False,False,1637361931,self.haskell,https://www.reddit.com/r/haskell/comments/qxrizc/how_to_scrape_hackage/,{},qxrizc,False,True,False,False,False,True,True,False,,[],dark,text,False,False,False,6,0,False,all_ads,/r/haskell/comments/qxrizc/how_to_scrape_hackage/,False,,,6,1637361942,1,"In GHC proposal docs, I've seen people say things like ""I searched through X packages on Hackage and found that Y% of them use syntax A over B"". Is there a tool that people use for this, or do I need to just write a script to iterate over packages in my local Hackage index, download the package, and grep the source code myself?",True,False,False,haskell,t5_2qh36,67329,public,self,How to scrape Hackage?,0,[],1.0,https://www.reddit.com/r/haskell/comments/qxrizc/how_to_scrape_hackage/,all_ads,6,,,,,,,,,,,,,,,,,,,,
974.0,[],False,syedajafri1992,,[],,text,t2_ldr0k,False,False,False,[],False,False,1637361680,self.haskell,https://www.reddit.com/r/haskell/comments/qxrg0p/how_can_we_represent_semver/,{},qxrg0p,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/qxrg0p/how_can_we_represent_semver/,False,,,6,1637361691,1,"Hi, we were trying to figure out an ideal way to represent Semver. There are a few ways we've tried representing semver however each has its drawbacks. Here are the 3 possible implementations we've considered each of them have drawbacks:

1. Simple data type `data Version Natural Natural Natural`

2. Sum type `data Version = Major0Minor1Patch0 | Major0Minor2Patch0 | Major1Minor0Patch0 | Major1Minor1Patch0`

3. Use a sum type on each major minor patch version. This is the approach we are currently taking:
```

data Patch

  = Patch0

  deriving (Eq, Show, Generic, Enum, Bounded)



data Minor

  = Minor0

  | Minor1

  deriving (Eq, Show, Generic, Enum, Bounded)



data Major

  = Major0

  deriving (Eq, Show, Generic, Enum, Bounded)

data Version = Version

  { major :: Major

  , minor :: Minor

  , patch :: Patch

  }

  deriving (Generic, Eq, Show)

```

## Requirements:

### Serialization/deserialization via aeson

### Complicated pattern matching

This is important with event sourcing as some consumers may not care about minor version changes only major version changes.

If we have a new major version and we don't handle it then we want to fail to compile.

1: Wouldn't give us strong compile-time guarantees. I don't know all actual versions we have.

2: Forces us to handle all versions even if the consumer does not care. I don't have a way to say I only care about Major versions.

3: Let's us handle only major version changes, and we know all possible major versions. However, we are representing a product and can introduce versions that don't really exist. e.g. if we have 0.1.0, 1.0.0, 1.1.0 then if we create a 1.2.0 we are now also representing 0.2.0.

I'm curious if anyone has an alternative representation that might be better. Thanks!",True,False,False,haskell,t5_2qh36,67329,public,self,How can we represent semver,0,[],1.0,https://www.reddit.com/r/haskell/comments/qxrg0p/how_can_we_represent_semver/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
975.0,[],False,TechnoEmpress,,[],,text,t2_8nmmm9k7,False,False,False,[],False,False,1637353618,discourse.haskell.org,https://www.reddit.com/r/haskell/comments/qxos3z/haskell_foundation_board_meeting_minutes_20211118/,{},qxos3z,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/qxos3z/haskell_foundation_board_meeting_minutes_20211118/,False,link,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1637353629,1,,False,False,False,haskell,t5_2qh36,67323,public,default,Haskell Foundation Board meeting minutes 2021-11-18,0,[],1.0,https://discourse.haskell.org/t/haskell-foundation-board-meeting-minutes-2021-11-18/3694,all_ads,6,583064c4-db4d-11e7-af6d-0ef9fea3bd12,pdf,https://discourse.haskell.org/t/haskell-foundation-board-meeting-minutes-2021-11-18/3694,140.0,140.0,,,,,,,,,,,,,,,
976.0,[],False,Bodigrim,,[],,text,t2_qou7f,False,False,False,[],False,False,1637349614,self.haskell,https://www.reddit.com/r/haskell/comments/qxnfkc/text20rc1_with_utf8_underlying_representation_is/,{},qxnfkc,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,12,0,False,all_ads,/r/haskell/comments/qxnfkc/text20rc1_with_utf8_underlying_representation_is/,False,,,6,1637349625,1,"I'm happy to announce that the first release candidate for upcoming `text-2.0` with UTF-8 underlying representation has been just uploaded on Hackage: [https://hackage.haskell.org/package/text-2.0/candidate](https://hackage.haskell.org/package/text-2.0/candidate)

Changelog: [https://hackage.haskell.org/package/text-2.0/candidate/changelog](https://hackage.haskell.org/package/text-2.0/candidate/changelog)

Please give it a try.

**What's next?**

In the next couple of months I'll be working with maintainers of downstream packages to identify migration opportunities. The plan is to patch entire [`head.hackage`](https://gitlab.haskell.org/ghc/head.hackage/-/tree/master/patches) (which includes, for instance, `pandoc`) before cutting a final release of `text-2.0`.

Thanks to Ben Gamari's efforts, `text` submodule in GHC source tree has been already bumped to `2.0-rc1`. The next major release of GHC (9.4, \~Q3 2022) will ship with `text-2.0`.",True,False,False,haskell,t5_2qh36,67324,public,self,text-2.0-rc1 with UTF8 underlying representation is available for testing!,0,[],1.0,https://www.reddit.com/r/haskell/comments/qxnfkc/text20rc1_with_utf8_underlying_representation_is/,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,,,,,,,,,,,,,,,,,,
977.0,[],False,arnemcnuggets,,[],,text,t2_7egzysxc,False,False,False,[],False,False,1637345572,i.redd.it,https://www.reddit.com/r/haskell/comments/qxm1bg/whats_the_problem/,{},qxm1bg,False,False,False,False,True,False,False,False,,[],dark,text,False,False,True,1,0,False,all_ads,/r/haskell/comments/qxm1bg/whats_the_problem/,False,image,"{'enabled': True, 'images': [{'id': 'IPxZLev1cxWj9rbcrtupZXZzMb06Gs6GMmvNIXIEtfU', 'resolutions': [{'height': 133, 'url': 'https://preview.redd.it/03klxguhfl081.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=cab499cade4e52bf61c5a9d58f544fb37f972e03', 'width': 108}, {'height': 266, 'url': 'https://preview.redd.it/03klxguhfl081.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7d31088539823bdd63efe29b36a4c67d9a19d726', 'width': 216}, {'height': 395, 'url': 'https://preview.redd.it/03klxguhfl081.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7fa915a636c2d58227e76b8f0c68e5d0bea85292', 'width': 320}, {'height': 790, 'url': 'https://preview.redd.it/03klxguhfl081.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=854ca5ba1cead99a9b9fa9b2bb596bd10cfce531', 'width': 640}], 'source': {'height': 1046, 'url': 'https://preview.redd.it/03klxguhfl081.jpg?auto=webp&amp;s=a74349e4c087555de11b328dc9997b4e45278d96', 'width': 847}, 'variants': {}}]}",6,1637345584,1,,True,False,False,haskell,t5_2qh36,67323,public,image,What's the problem?,0,[],1.0,https://i.redd.it/03klxguhfl081.jpg,all_ads,6,,,https://i.redd.it/03klxguhfl081.jpg,140.0,140.0,,moderator,,,,,,,,,,,,,
978.0,[],False,Soham-Chatterjee,,[],,text,t2_8jz7vexo,False,False,False,[],False,False,1637343514,self.haskell,https://www.reddit.com/r/haskell/comments/qxlb2d/why_is_have_to_put_show_a_here/,{},qxlb2d,False,True,False,False,False,True,True,False,#646d73,[],light,text,False,False,True,9,0,False,all_ads,/r/haskell/comments/qxlb2d/why_is_have_to_put_show_a_here/,False,,,6,1637343526,1,"In the following code

`data Car = Car { company :: String`

`, model :: String`

`, year :: Int`

`} deriving (Show)`

&amp;#x200B;

`tellCar :: Car -&gt; String`

`tellCar (Car {company = c, model = m, year = y}) = ""This "" ++ c ++ "" "" ++ m ++ "" was made in "" ++ show y`

&amp;#x200B;

&amp;#x200B;

`data Car' a b c = Car' { company' :: a`

`, model' :: b`

`, year' :: c`

`} deriving (Show)`

&amp;#x200B;

`tellCar' :: Car' String String a -&gt; String`

`tellCar' (Car' {company' = c, model' = m, year' = y}) = ""This "" ++ c ++ "" "" ++ m ++ "" was made in "" ++ show y`

&amp;#x200B;

Why it is showing me this error

&amp;#x200B;

`No instance for (Show a) arising from a use of ‘show’`

  `Possible fix:`

`add (Show a) to the context of`

`the type signature for:`

`tellCar' :: forall a. Car' String String a -&gt; String`

&amp;#x200B;

Where i have written `deriving(Show)` in the defination of `Car'`",True,False,False,haskell,t5_2qh36,67322,public,self,Why is have to put (Show a) =&gt; here,0,[],1.0,https://www.reddit.com/r/haskell/comments/qxlb2d/why_is_have_to_put_show_a_here/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,,,,,,,,,,,,,,
979.0,[],False,sridfr,,[],,text,t2_f1wkk8ou,False,False,False,[],False,False,1637331110,github.com,https://www.reddit.com/r/haskell/comments/qxh13s/haskell_cryptocurrency_course_by_lars_brünjes/,{},qxh13s,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,3,0,False,all_ads,/r/haskell/comments/qxh13s/haskell_cryptocurrency_course_by_lars_brünjes/,False,link,"{'enabled': False, 'images': [{'id': '1-A99qqPN7f2TWKJvNbJ2z6b6JZfRF_w6G_jzBK1i6Q', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/TKAe9pc-CIrJm_LpPNNvLzgqCFBTr5yGKIAZ6RljLVc.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3d92736a50cc2d7c57ce6c7f429041ccd4883f04', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/TKAe9pc-CIrJm_LpPNNvLzgqCFBTr5yGKIAZ6RljLVc.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8ea2409c8a91d293a6fd93ef8d36497d4b3c5194', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/TKAe9pc-CIrJm_LpPNNvLzgqCFBTr5yGKIAZ6RljLVc.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=92bcfe8bcb644ad044e2153fb07e0a5637b56760', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/TKAe9pc-CIrJm_LpPNNvLzgqCFBTr5yGKIAZ6RljLVc.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7c70fc5c617a3aef95b12fac08da3d552e64e595', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/TKAe9pc-CIrJm_LpPNNvLzgqCFBTr5yGKIAZ6RljLVc.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a05a663a63074e0b3ac0876da75814d4381bcb9c', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/TKAe9pc-CIrJm_LpPNNvLzgqCFBTr5yGKIAZ6RljLVc.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=c0a819102a6e29466aba9d16bcc4a9545891580d', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/TKAe9pc-CIrJm_LpPNNvLzgqCFBTr5yGKIAZ6RljLVc.jpg?auto=webp&amp;s=0bfaa3f7ed9de533c8d985cbf61d70755e5f8910', 'width': 1200}, 'variants': {}}]}",6,1637331123,1,,False,False,False,haskell,t5_2qh36,67321,public,default,Haskell &amp; Cryptocurrency course by Lars Brünjes &amp; Andres Löh,0,[],1.0,https://github.com/iohkedu/haskell-2020,all_ads,6,,,https://github.com/iohkedu/haskell-2020,70.0,140.0,,,,,,,,,,,,,,,
980.0,[],False,lowercrawl,,[],,text,t2_8941plrf,False,False,True,[],False,False,1637329229,self.haskell,https://www.reddit.com/r/haskell/comments/qxgf83/two_quidomains_applet_icons_appearing_in_the/,{},qxgf83,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,2,0,False,all_ads,/r/haskell/comments/qxgf83/two_quidomains_applet_icons_appearing_in_the/,False,,,6,1637329241,1,"Hi All,

Has anyone else encountered this? Any known resolution steps?

The Panel properties only lists 'Qui-domains' once, and if I click the checkmark to hide it both icons appear simultaneously. Not sure where else to look.

This only just started happening a couple days ago (coincidentally, a day or two after upgrading most App templates to Fedora34 but I can't see how that would be related).

Thanks",True,False,False,haskell,t5_2qh36,67320,public,self,Two Qui-domains applet icons appearing in the Notification Bar,0,[],1.0,https://www.reddit.com/r/haskell/comments/qxgf83/two_quidomains_applet_icons_appearing_in_the/,all_ads,6,,,,,,,,,,,,,,,,,,,,
981.0,[],False,NorfairKing2,,[],,text,t2_154rv6yi,False,False,False,[],False,False,1637328511,cs-syd.eu,https://www.reddit.com/r/haskell/comments/qxg7i9/cs_syd_announcing_autodocodec/,{},qxg7i9,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/qxg7i9/cs_syd_announcing_autodocodec/,False,link,"{'enabled': False, 'images': [{'id': 'AZiC4EqyPg_ghvXw8aUGUmh-u9iMICh7BdJhJDfwui4', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/5IXSfPbPyxuhjUjJk9rfwDTz2CmBC-U03jflwAT7gYU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=34bf8400eedda89affb42c6fe90374ec72904c29', 'width': 108}, {'height': 163, 'url': 'https://external-preview.redd.it/5IXSfPbPyxuhjUjJk9rfwDTz2CmBC-U03jflwAT7gYU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=74cea4c152b3f2635d8a8789adebc75736f06c99', 'width': 216}, {'height': 241, 'url': 'https://external-preview.redd.it/5IXSfPbPyxuhjUjJk9rfwDTz2CmBC-U03jflwAT7gYU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=1ca35e23c1bb7f0f0840e261921f248e79ca5579', 'width': 320}, {'height': 483, 'url': 'https://external-preview.redd.it/5IXSfPbPyxuhjUjJk9rfwDTz2CmBC-U03jflwAT7gYU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=d3d363aea90f2cf10e73f1a89be6acadf0d782d4', 'width': 640}, {'height': 725, 'url': 'https://external-preview.redd.it/5IXSfPbPyxuhjUjJk9rfwDTz2CmBC-U03jflwAT7gYU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=bbcaa0038aaa1750136087acc795c411c13d56d3', 'width': 960}], 'source': {'height': 784, 'url': 'https://external-preview.redd.it/5IXSfPbPyxuhjUjJk9rfwDTz2CmBC-U03jflwAT7gYU.jpg?auto=webp&amp;s=8980c9b8ababa2a1c16846fbe502bedeb7f0c982', 'width': 1038}, 'variants': {}}]}",6,1637328522,1,,True,False,False,haskell,t5_2qh36,67320,public,default,CS SYD - Announcing `autodocodec`,0,[],1.0,https://cs-syd.eu/posts/2021-11-19-autodocodec?source=reddit,all_ads,6,,,https://cs-syd.eu/posts/2021-11-19-autodocodec?source=reddit,105.0,140.0,,,,,,,,,,,,,,,
982.0,[],False,tomejaguar,,[],,text,t2_45sug,False,False,False,[],False,False,1637327034,h2.jaguarpaw.co.uk,https://www.reddit.com/r/haskell/comments/qxfs2d/make_invalid_laziness_unrepresentable/,{},qxfs2d,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,84,0,False,all_ads,/r/haskell/comments/qxfs2d/make_invalid_laziness_unrepresentable/,False,,,6,1637327045,1,,False,False,False,haskell,t5_2qh36,67319,public,default,Make invalid laziness unrepresentable,0,[],1.0,http://h2.jaguarpaw.co.uk/posts/make-invalid-laziness-unrepresentable/,all_ads,6,,,http://h2.jaguarpaw.co.uk/posts/make-invalid-laziness-unrepresentable/,,,,,,,,,,,,,,,,,
983.0,[],False,adeldude3,,[],,text,t2_7zkujrmi,False,False,False,[],False,False,1637313982,self.haskell,https://www.reddit.com/r/haskell/comments/qxclaj/what_can_i_do_with_haskell/,{},qxclaj,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/qxclaj/what_can_i_do_with_haskell/,False,,,6,1637314240,0,What can be done with this languge?,True,False,False,haskell,t5_2qh36,67317,public,self,What can i do with haskell?,0,[],0.5,https://www.reddit.com/r/haskell/comments/qxclaj/what_can_i_do_with_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
984.0,[],False,Advanced_Put_2880,,[],,text,t2_e2qhmcoq,False,False,False,[],False,False,1637311525,self.haskell,https://www.reddit.com/r/haskell/comments/qxc1ef/does_anyone_use_sublime_as_their_primary/,{},qxc1ef,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,4,0,False,all_ads,/r/haskell/comments/qxc1ef/does_anyone_use_sublime_as_their_primary/,False,,,6,1637311536,1,"Does anyone use Sublime as their primary environment for Haskell learning as a beginner ?  
What packages you use, which linter, etc. What other helpful things do you use ?  


P.S: I googled around for some tutorials but most seem outdated, I know I can use some more specific IDE's but I would like to continue using Sublime.",True,False,False,haskell,t5_2qh36,67318,public,self,Does anyone use Sublime as their primary environment for Haskell learning as a beginner,0,[],1.0,https://www.reddit.com/r/haskell/comments/qxc1ef/does_anyone_use_sublime_as_their_primary/,all_ads,6,,,,,,,,,,,,,,,,,,,,
985.0,[],False,teilchen010,,[],,text,t2_a8zynd1e,False,False,False,[],False,False,1637295583,self.haskell,https://www.reddit.com/r/haskell/comments/qx81xz/haskell_sum_types_from_set_theorys_disjoint_union/,{},qx81xz,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,8,0,False,all_ads,/r/haskell/comments/qx81xz/haskell_sum_types_from_set_theorys_disjoint_union/,False,self,"{'enabled': False, 'images': [{'id': '1WV6gofF9qeifFXEGh_GV9DvSFtWcIbe64R8sgbCq6A', 'resolutions': [], 'source': {'height': 40, 'url': 'https://external-preview.redd.it/yGe4dhiOUhgnxfZVoHDFZ2lEQdi1dNWYgYPDcYXbagM.jpg?auto=webp&amp;s=445a9710eeab032caf70255ed7d4bb4215a40832', 'width': 40}, 'variants': {}}]}",6,1637295607,1,"So as I understand, something like this

    data List a = Nil | Cons a (List a)

is considered a sum type because it is a sort of set theory ""sum"" or ""disjoint union"" of the two constructors. A disjoint union, as I understand, is just when you have a union of sets that have nothing shared; you ""summed"" the sets. So we imagine our `List` above a sort of disjoint union of `Nil` and `Cons a (List a)`.  Correct? What gets confusing is from a Wikipedia article on [Algebraic data types](https://en.wikipedia.org/wiki/Algebraic_data_type) :

&gt;In [set theory](https://en.wikipedia.org/wiki/Set_theory) the equivalent of a sum type is a [disjoint union](https://en.wikipedia.org/wiki/Disjoint_union), a set whose elements are pairs consisting of a tag (equivalent to a constructor) and an object of a type corresponding to the tag (equivalent to the constructor arguments).

The disjoint union article was fairly understandable, but I'm not making the connection between my `List` above and this quote above about tags and constructors and constructor arguments. Nice if someone could shine some light on this for me.",True,False,False,haskell,t5_2qh36,67316,public,self,Haskell sum types from set theory's disjoint union,0,[],1.0,https://www.reddit.com/r/haskell/comments/qx81xz/haskell_sum_types_from_set_theorys_disjoint_union/,all_ads,6,,,,,,,,,,,,,,,,,,,,
986.0,[],False,drewolson,,[],,text,t2_enkcm,False,False,False,[],False,False,1637291633,blog.drewolson.org,https://www.reddit.com/r/haskell/comments/qx6v44/parsing_permutations/,{},qx6v44,False,True,False,False,False,True,False,False,,[],dark,text,False,False,False,3,0,False,all_ads,/r/haskell/comments/qx6v44/parsing_permutations/,False,,,6,1637292363,1,,True,False,False,haskell,t5_2qh36,67312,public,default,Parsing Permutations,0,[],1.0,https://blog.drewolson.org/parsing-permutations,all_ads,6,,,https://blog.drewolson.org/parsing-permutations,,,,,,,,,,,,,,,,,
987.0,[],False,emilypii,,[],,text,t2_rs0av,False,False,False,[],False,False,1637282383,discourse.haskell.org,https://www.reddit.com/r/haskell/comments/qx3ze9/ann_release_candidate_for_mtl23/,{},qx3ze9,False,True,False,False,False,True,False,False,#646d73,[],light,text,False,False,False,2,0,False,all_ads,/r/haskell/comments/qx3ze9/ann_release_candidate_for_mtl23/,False,link,"{'enabled': False, 'images': [{'id': 'XhnL6WWJsiTBiFZNDaVBos6LZEHC-CwcU8a-GfAbSI0', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=357339a94c322654e0281db4a1892fab73d790c5', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2d9ea710376fee59a8845edeed4c447807d59577', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e0c57cabee856b6f52fa45e4490c630ba7356457', 'width': 320}], 'source': {'height': 512, 'url': 'https://external-preview.redd.it/uUxcC4pq2wPNhEfNaesM3eWEpkU7wsrPRqmskOz28TI.jpg?auto=webp&amp;s=9fbd287efb137f61b5c25ef11bea05bb241003d0', 'width': 512}, 'variants': {}}]}",6,1637283685,2,,True,False,False,haskell,t5_2qh36,67309,public,default,[ANN] Release Candidate for `mtl-2.3`,0,[],1.0,https://discourse.haskell.org/t/ann-release-candidate-for-mtl-2-3/3687,all_ads,6,fd84a740-e679-11e8-ae50-0eda5d02591a,announcement,https://discourse.haskell.org/t/ann-release-candidate-for-mtl-2-3/3687,140.0,140.0,,,,,,,,,,,,,,,
988.0,[],False,agnishom,,[],,text,t2_4myyc,False,False,False,[],False,False,1637279940,github.com,https://www.reddit.com/r/haskell/comments/qx36r2/i_looked_at_my_haskell_code_from_5_years_ago_i/,{},qx36r2,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,5,0,False,all_ads,/r/haskell/comments/qx36r2/i_looked_at_my_haskell_code_from_5_years_ago_i/,False,link,"{'enabled': False, 'images': [{'id': '-C21GAz6VRoTK5h3lNOZDRGDlf0EkVuyN7C_EXiAdmk', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/xQQgMBM1E6ihTf5-3EFAI2EZXzkrenhFJ-6EUWue3jE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=403ecf333af09c4264ed90c7d6abf775cb74d5e0', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/xQQgMBM1E6ihTf5-3EFAI2EZXzkrenhFJ-6EUWue3jE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=53409a72e0a29f545adf4170e1df9fea680fc637', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/xQQgMBM1E6ihTf5-3EFAI2EZXzkrenhFJ-6EUWue3jE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=f8ff7102300026e2dc99069d1c47eda9b1d4786d', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/xQQgMBM1E6ihTf5-3EFAI2EZXzkrenhFJ-6EUWue3jE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e656ffde4899b552de806a63a76c638fb85bf0a0', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/xQQgMBM1E6ihTf5-3EFAI2EZXzkrenhFJ-6EUWue3jE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=00dbcc3f9dec693e8d06014a91a7b7d311225ee5', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/xQQgMBM1E6ihTf5-3EFAI2EZXzkrenhFJ-6EUWue3jE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=291a8a81872b8cc67976a632271915b4a44146de', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/xQQgMBM1E6ihTf5-3EFAI2EZXzkrenhFJ-6EUWue3jE.jpg?auto=webp&amp;s=f49498d311cb416ada86386008abf32de4c3d6a1', 'width': 1200}, 'variants': {}}]}",6,1637280797,1,,True,False,False,haskell,t5_2qh36,67309,public,default,I looked at my Haskell code from 5 years ago. I hope I have learnt a few things,0,[],1.0,https://github.com/Agnishom/HaskellBF/commit/c3c7de723cc99ce48a8816cc2c3ac146ff41ef00,all_ads,6,,,https://github.com/Agnishom/HaskellBF/commit/c3c7de723cc99ce48a8816cc2c3ac146ff41ef00,70.0,140.0,,,,,,,,,,,,,,,
989.0,[],False,joagama,,[],,text,t2_138dds,False,False,False,[],False,False,1637271966,self.haskell,https://www.reddit.com/r/haskell/comments/qx0guu/equivalent_of_python_shelve_in_haskell_is_it_vault/,{},qx0guu,False,False,False,False,False,False,True,False,,[],dark,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/qx0guu/equivalent_of_python_shelve_in_haskell_is_it_vault/,False,self,"{'enabled': False, 'images': [{'id': 'ZoDgw9-9a-AA7u8HiI7iPm-Uc_QPM-QB2cN1OCZxtJw', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/puLexdMsdLUdHKgxh41vgm3I8BmxcSxssF_U3rDdGnA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=625bac45b2c602725f0f3ab63b51c842d5ed7a8b', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/puLexdMsdLUdHKgxh41vgm3I8BmxcSxssF_U3rDdGnA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ec75e19a43d03d8f16ea785d1ba2c2b57be56499', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/puLexdMsdLUdHKgxh41vgm3I8BmxcSxssF_U3rDdGnA.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=60e59de76053c972369ca34b8a8b04bc78f7eb84', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/puLexdMsdLUdHKgxh41vgm3I8BmxcSxssF_U3rDdGnA.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=915fbf13fd66f3e9d79a43db0d8d28329a5c534c', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/puLexdMsdLUdHKgxh41vgm3I8BmxcSxssF_U3rDdGnA.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=4d07576570992d18e9a8ab3f9737fada0ade3cd5', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/puLexdMsdLUdHKgxh41vgm3I8BmxcSxssF_U3rDdGnA.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=fc91be80ec9794d1a3361748fa4f1f1f00d9646f', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/puLexdMsdLUdHKgxh41vgm3I8BmxcSxssF_U3rDdGnA.jpg?auto=webp&amp;s=a888cf118b8d539753532704be2fe8758558a0c5', 'width': 1200}, 'variants': {}}]}",6,1637271977,1,[removed],True,False,False,haskell,t5_2qh36,67307,public,self,Equivalent of Python Shelve in Haskell? (Is it Vault?),0,[],1.0,https://www.reddit.com/r/haskell/comments/qx0guu/equivalent_of_python_shelve_in_haskell_is_it_vault/,all_ads,6,,,,,,,reddit,,,,,,,,,,,,,
990.0,[],False,jneira,,[],,text,t2_3pbai,False,False,False,[],False,False,1637266766,self.haskell,https://www.reddit.com/r/haskell/comments/qwyltc/ann_haskelllanguageserver150_release/,{},qwyltc,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,15,0,False,all_ads,/r/haskell/comments/qwyltc/ann_haskelllanguageserver150_release/,False,self,"{'enabled': False, 'images': [{'id': 'pOu8WwEUKKAfs4yvruYEjdAIaB8n7AA8pv0d2eaG_WQ', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/qw2_55Huyyw9IkqGsCa7gyHqCoJ1jVHj_lEa7lnEviY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=a056cbaf232cca4175f4afe6dfa5f4add7ae222f', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/qw2_55Huyyw9IkqGsCa7gyHqCoJ1jVHj_lEa7lnEviY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f2aafa65bc45ebdca6396623a934c3cc7377c617', 'width': 216}, {'height': 320, 'url': 'https://external-preview.redd.it/qw2_55Huyyw9IkqGsCa7gyHqCoJ1jVHj_lEa7lnEviY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0c52eaa12a7508b01653f07550d2c31e4777a3b0', 'width': 320}], 'source': {'height': 460, 'url': 'https://external-preview.redd.it/qw2_55Huyyw9IkqGsCa7gyHqCoJ1jVHj_lEa7lnEviY.jpg?auto=webp&amp;s=218e333cbce7f86c55763326220b4f98c2fa0761', 'width': 460}, 'variants': {}}]}",6,1637266777,1,"Time for another hls release!:

- [@pepeiborra](https://github.com/pepeiborra) has done an epic work to improve performance, redefining some of the core pieces of HLS
  - You can take an overall look to improvements in [these slides](https://drive.google.com/file/d/16FpmiHXX_rd2gAf5XVgWAIr4kg-AkUqX/view)
  - Performance would be noticeable in large projects without too much template haskell usage
- We have fourmolu support for ghc-9.0.1 thanks to [@georgefst](https://github.com/georgefst)
- We have got improvements over import suggestions thanks to [@yoshitsugu](https://github.com/yoshitsugu) and [@alexnaspo](https://github.com/alexnaspo)
- Completions also has been improved in general thanks again to [@pepeiborra](https://github.com/pepeiborra)

https://github.com/haskell/haskell-language-server/releases/tag/1.5.0",True,False,False,haskell,t5_2qh36,67305,public,self,[ANN] haskell-language-server-1.5.0 release,0,[],1.0,https://www.reddit.com/r/haskell/comments/qwyltc/ann_haskelllanguageserver150_release/,all_ads,6,,,,,,,,,,,,,,,,,,,,
991.0,[],False,_query,,[],,text,t2_fjd8s,False,False,False,[],False,False,1637263515,self.haskell,https://www.reddit.com/r/haskell/comments/qwxfi7/digitally_induced_is_hiring_haskell_and_ihp/,{},qwxfi7,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,4,0,False,all_ads,/r/haskell/comments/qwxfi7/digitally_induced_is_hiring_haskell_and_ihp/,False,self,"{'enabled': False, 'images': [{'id': 'rs9gSfM0Jm47Vcpv40I57rDl0N2zVefVnt3WDsUkFgs', 'resolutions': [{'height': 108, 'url': 'https://external-preview.redd.it/qBAW1E81hF-IVLf4-0SFz9jiTtvkHYTE0UcjGVBxXIA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=9fe746e09bf862cd63e9e1dce75a7ff7099ad7dd', 'width': 108}, {'height': 216, 'url': 'https://external-preview.redd.it/qBAW1E81hF-IVLf4-0SFz9jiTtvkHYTE0UcjGVBxXIA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7330211705b41952701ee32d027cf017482aae31', 'width': 216}], 'source': {'height': 224, 'url': 'https://external-preview.redd.it/qBAW1E81hF-IVLf4-0SFz9jiTtvkHYTE0UcjGVBxXIA.jpg?auto=webp&amp;s=02157ed703a568f74532f393f644afe60450cc6a', 'width': 224}, 'variants': {}}]}",6,1637263526,1,"Hey all, digitally induced is growing and we're currently looking for a full time haskell / IHP developer for working on one of our client's project and help to drive the adoption of Haskell in the software world.

If you're interested, you can apply using this link: [https://digitallyinduced.join.com/jobs/3324815-software-developer-ihp-haskell](https://digitallyinduced.join.com/jobs/3324815-software-developer-ihp-haskell) 🚀

Position can be remote, but near the office in Ennepetal, Germany is preferred (we're also two people in Berlin).

If it's not a good time right now, you can also subscribe to our jobs newsletter at  
 [https://www.digitallyinduced.com/JobPositions](https://www.digitallyinduced.com/JobPositions) (at the bottom of the page) and we'll send you an email when have new job positions in the future.",True,False,False,haskell,t5_2qh36,67304,public,self,digitally induced is hiring Haskell and IHP developers in Ennepetal and remote,0,[],1.0,https://www.reddit.com/r/haskell/comments/qwxfi7/digitally_induced_is_hiring_haskell_and_ihp/,all_ads,6,,,,,,,,,,,,,,,,,,,,
992.0,[],False,xeltius,,[],,text,t2_4mwj7,False,False,False,[],False,False,1637258404,self.haskell,https://www.reddit.com/r/haskell/comments/qwvj0k/does_anyone_know_the_best_way_to_build_a_haskell/,{},qwvj0k,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,18,0,False,all_ads,/r/haskell/comments/qwvj0k/does_anyone_know_the_best_way_to_build_a_haskell/,False,,,6,1637258416,1,"There's lots of change as things are updated for the new arch. It seems that some people have managed to get things built. Most of the options I have tried have failed to produce any builds at all. I've been on nix. Someone's gotten that to work, but the canonical sources for installing have not allowed me to build even a basic Hello World project. 

My goal is to code with Haskell. I'm willing to do any hacks to just compile my code and explore. Tips?",True,False,False,haskell,t5_2qh36,67302,public,self,Does anyone know the best way to build a Haskell project on M1 today?,0,[],1.0,https://www.reddit.com/r/haskell/comments/qwvj0k/does_anyone_know_the_best_way_to_build_a_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
993.0,[],False,LogarithmeNeper,,[],,text,t2_15vbkram,False,False,False,[],False,False,1637251241,self.haskell,https://www.reddit.com/r/haskell/comments/qwsvg4/minttywin32/,{},qwsvg4,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,4,0,False,all_ads,/r/haskell/comments/qwsvg4/minttywin32/,False,,,6,1637251253,1,"Hey there,

I am currently working on a project for College involving Scotty/Blaze libraries for web server needs. When I began working on the project, I could build the application using stack, with no problem at all, and recently, I moved the project for other reason and it won't compile anymore, saying the following. On other computers, it works well, so I am wondering where I did wrong...

I tried to install the correct version Win32 using stack install Win32-2.13.1 yet it did not helped much, and also tried to purge my Haskell installation from my computer, yet it did not solve a bit.

Please remove if not relevant to the r/, I am so frustrated right now...  

[A picture showing the error on building \(could not find module + warning of version\)](https://preview.redd.it/vuxli0tfmd081.png?width=1480&amp;format=png&amp;auto=webp&amp;s=eaf4e16c5e888f963ae96faa87e29b33bd463a7d)",True,False,False,haskell,t5_2qh36,67298,public,self,MinTTY/Win32,0,[],1.0,https://www.reddit.com/r/haskell/comments/qwsvg4/minttywin32/,all_ads,6,,,,46.0,140.0,"{'vuxli0tfmd081': {'e': 'Image', 'id': 'vuxli0tfmd081', 'm': 'image/png', 'p': [{'u': 'https://preview.redd.it/vuxli0tfmd081.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=df20e957afb3ebe65d7f553fcbe79e745e75aa28', 'x': 108, 'y': 35}, {'u': 'https://preview.redd.it/vuxli0tfmd081.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=b1fa3141347bc17266d06d5e40f92a643b32715f', 'x': 216, 'y': 71}, {'u': 'https://preview.redd.it/vuxli0tfmd081.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=a2bc5b70f6a5a6ee473d8d4946b95de45c01a278', 'x': 320, 'y': 106}, {'u': 'https://preview.redd.it/vuxli0tfmd081.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=41e4ba9b4bee94047fa18bf21709696d359cdfdb', 'x': 640, 'y': 213}, {'u': 'https://preview.redd.it/vuxli0tfmd081.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=e4d01aa0ce661d65dd3b88950ec742f860dc33b4', 'x': 960, 'y': 319}, {'u': 'https://preview.redd.it/vuxli0tfmd081.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=6bc5bf12016c72ee90687be0172cfa927837dc70', 'x': 1080, 'y': 359}], 's': {'u': 'https://preview.redd.it/vuxli0tfmd081.png?width=1480&amp;format=png&amp;auto=webp&amp;s=eaf4e16c5e888f963ae96faa87e29b33bd463a7d', 'x': 1480, 'y': 493}, 'status': 'valid'}}",,,,,,,,,,,,,,
994.0,[],False,hedgehog0,,[],,text,t2_yjt5w,False,False,False,[],False,False,1637239484,self.haskell,https://www.reddit.com/r/haskell/comments/qwoy2i/cannot_install_ghc_on_my_mac_via_stack/,{},qwoy2i,False,False,False,False,False,False,True,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/qwoy2i/cannot_install_ghc_on_my_mac_via_stack/,False,,,6,1637239496,1,[removed],True,False,False,haskell,t5_2qh36,67294,public,self,Cannot install GHC on my Mac via Stack,0,[],1.0,https://www.reddit.com/r/haskell/comments/qwoy2i/cannot_install_ghc_on_my_mac_via_stack/,all_ads,6,cceadda8-25af-11eb-ba66-0e76c7963e23,question,,,,,reddit,,,,,,,,,,,,,
995.0,[],False,peargreen,,[],,text,t2_istrr,False,False,False,[],False,False,1637235748,github.com,https://www.reddit.com/r/haskell/comments/qwnyfa/opensourcing_a_social_notetaking_webapp_written/,{},qwnyfa,False,True,False,False,False,True,False,False,,[],dark,text,False,False,True,13,0,False,all_ads,/r/haskell/comments/qwnyfa/opensourcing_a_social_notetaking_webapp_written/,False,link,"{'enabled': False, 'images': [{'id': '71hmjX8ADQbtgYQ5K4yLnMPa5zFS63iKybYTmbhMhEo', 'resolutions': [{'height': 54, 'url': 'https://external-preview.redd.it/enPn4VD-ARLtfJgjFbx4RNLd3N_JBxYZ4YW-MR9Keaw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=47ae70b3ac489266e3cc420bc6d7630c74812064', 'width': 108}, {'height': 108, 'url': 'https://external-preview.redd.it/enPn4VD-ARLtfJgjFbx4RNLd3N_JBxYZ4YW-MR9Keaw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b00a5e47373dff6119464dd12f24da30edd7ab82', 'width': 216}, {'height': 160, 'url': 'https://external-preview.redd.it/enPn4VD-ARLtfJgjFbx4RNLd3N_JBxYZ4YW-MR9Keaw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=6d479f9bebca32fccf097384538b3c3e0eed08b7', 'width': 320}, {'height': 320, 'url': 'https://external-preview.redd.it/enPn4VD-ARLtfJgjFbx4RNLd3N_JBxYZ4YW-MR9Keaw.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=8e4ee02407217417cb34d9815250af945b2aa233', 'width': 640}, {'height': 480, 'url': 'https://external-preview.redd.it/enPn4VD-ARLtfJgjFbx4RNLd3N_JBxYZ4YW-MR9Keaw.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b23a3d150531165031b0914638eefb8bf81c5a08', 'width': 960}, {'height': 540, 'url': 'https://external-preview.redd.it/enPn4VD-ARLtfJgjFbx4RNLd3N_JBxYZ4YW-MR9Keaw.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=5a90c17bfa5cacf0f135d727e2bab8261a83be92', 'width': 1080}], 'source': {'height': 600, 'url': 'https://external-preview.redd.it/enPn4VD-ARLtfJgjFbx4RNLd3N_JBxYZ4YW-MR9Keaw.jpg?auto=webp&amp;s=2bf892ecc155973918fedb65ca23a9d60369fde5', 'width': 1200}, 'variants': {}}]}",6,1637235760,1,,True,False,False,haskell,t5_2qh36,67294,public,default,Open-sourcing a social note-taking webapp written with IHP,0,[],1.0,https://github.com/windorg/app,all_ads,6,,,https://github.com/windorg/app,70.0,140.0,,,,,,,,,,,,,,,
996.0,[],False,ysangkok,,[],,text,t2_4qktt,False,False,False,[],False,False,1637192872,youtube.com,https://www.reddit.com/r/haskell/comments/qwcami/simon_peyton_jones_provably_correct/,{},qwcami,False,False,False,False,False,False,False,False,#646d73,[],light,text,False,False,True,0,0,False,all_ads,/r/haskell/comments/qwcami/simon_peyton_jones_provably_correct/,False,rich:video,"{'enabled': False, 'images': [{'id': 'XaIPMvccs1OdmXGeFJvnuXX26Has5SNaH8licdESg-I', 'resolutions': [{'height': 81, 'url': 'https://external-preview.redd.it/1QldklNLgMN0lmPYJlVGJNPxnZa0CjG5Syc-McDp9yE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4fb728921522c33ef40feee9b47a9a89cbe40f6c', 'width': 108}, {'height': 162, 'url': 'https://external-preview.redd.it/1QldklNLgMN0lmPYJlVGJNPxnZa0CjG5Syc-McDp9yE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=458c316e8b7f488465b127569f1659a59d1cae92', 'width': 216}, {'height': 240, 'url': 'https://external-preview.redd.it/1QldklNLgMN0lmPYJlVGJNPxnZa0CjG5Syc-McDp9yE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=33a7ed6aec2e3376957c210cdabbb1cd0eb7d617', 'width': 320}], 'source': {'height': 360, 'url': 'https://external-preview.redd.it/1QldklNLgMN0lmPYJlVGJNPxnZa0CjG5Syc-McDp9yE.jpg?auto=webp&amp;s=c40cb53f17e57465e5dc341a290bd957047d7498', 'width': 480}, 'variants': {}}]}",6,1637192882,1,,True,False,False,haskell,t5_2qh36,67284,public,image,"Simon Peyton Jones: Provably correct, asymptotically efficient, higher-order reverse-mode automatic differentiation",0,[],1.0,https://www.youtube.com/watch?v=EPGqzkEZWyw,all_ads,6,be2af704-5664-11eb-8e65-0ecd290c3053,video,https://www.youtube.com/watch?v=EPGqzkEZWyw,105.0,140.0,,reddit,,,,,"{'oembed': {'author_name': 'Skills Matter (formerly YOW! Conferences)', 'author_url': 'https://www.youtube.com/c/YOWConferences', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/EPGqzkEZWyw?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/EPGqzkEZWyw/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Provably correct, asymptotically efficient, higher-order reverse-mode automatic differentiation', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/EPGqzkEZWyw?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'scrolling': False, 'width': 356}","{'oembed': {'author_name': 'Skills Matter (formerly YOW! Conferences)', 'author_url': 'https://www.youtube.com/c/YOWConferences', 'height': 200, 'html': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/EPGqzkEZWyw?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'provider_name': 'YouTube', 'provider_url': 'https://www.youtube.com/', 'thumbnail_height': 360, 'thumbnail_url': 'https://i.ytimg.com/vi/EPGqzkEZWyw/hqdefault.jpg', 'thumbnail_width': 480, 'title': 'Provably correct, asymptotically efficient, higher-order reverse-mode automatic differentiation', 'type': 'video', 'version': '1.0', 'width': 356}, 'type': 'youtube.com'}","{'content': '&lt;iframe width=""356"" height=""200"" src=""https://www.youtube.com/embed/EPGqzkEZWyw?feature=oembed&amp;enablejsapi=1"" frameborder=""0"" allow=""accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"" allowfullscreen&gt;&lt;/iframe&gt;', 'height': 200, 'media_domain_url': 'https://www.redditmedia.com/mediaembed/qwcami', 'scrolling': False, 'width': 356}",,,,,
997.0,[],False,techmindful,,[],,text,t2_csictvz2,False,False,False,[],False,False,1637182153,techmindful.blog,https://www.reddit.com/r/haskell/comments/qw8mw1/websockets_with_haskell_servant/,{},qw8mw1,False,True,False,True,False,True,False,False,#646d73,[],light,text,False,False,True,6,0,False,all_ads,/r/haskell/comments/qw8mw1/websockets_with_haskell_servant/,False,,,6,1637182164,1,,True,False,False,haskell,t5_2qh36,67283,public,default,WebSockets with Haskell Servant,0,[],1.0,https://www.techmindful.blog/blog/websockets-in-servant,all_ads,6,b4fae568-5d7b-11eb-80e1-0e53f0c0c9d5,blog,https://www.techmindful.blog/blog/websockets-in-servant,,,,,,,,,,,,,,,,,
998.0,[],False,touchmelenny,,[],,text,t2_e5ve0flz,False,False,False,[],False,False,1637172516,self.haskell,https://www.reddit.com/r/haskell/comments/qw5775/hi_could_someone_explain_me_how_does_the_third/,{},qw5775,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,6,0,False,all_ads,/r/haskell/comments/qw5775/hi_could_someone_explain_me_how_does_the_third/,False,,,6,1637172527,1,"divisors : : Int -&gt; [Int]
divisors 0 = [0]
Divisors x = filter (( == 0) . (mod x)) [1 .. x]",True,False,False,haskell,t5_2qh36,67281,public,self,"Hi, could someone explain me how does the third line works in this code. I'm extremely new at haskell",0,[],1.0,https://www.reddit.com/r/haskell/comments/qw5775/hi_could_someone_explain_me_how_does_the_third/,all_ads,6,,,,,,,,,,,,,,,,,,,,
999.0,[],False,have-ahappygenocide,,[],,text,t2_by6vp5dn,False,False,False,[],False,False,1637156808,self.haskell,https://www.reddit.com/r/haskell/comments/qvzms9/migrating_a_small_company_to_haskell/,{},qvzms9,False,True,False,False,False,True,True,False,,[],dark,text,False,False,True,36,0,False,all_ads,/r/haskell/comments/qvzms9/migrating_a_small_company_to_haskell/,False,,,6,1637156819,1,"I work for a tiny company (7 developers) which offers a sophisticated financial model. Our core software was written 20 years ago in C, and our new development is in a proprietary scripting language. This scripting language was never really meant to be used so widely, and it's becoming difficult/painful to maintain. I have gotten really into functional programming lately so I started thinking about it as a solution. Specifically, I want to slowly replace all this code in our proprietary language with code in an off-the-shelf, functional language. Enter Haskell: from all my research, it emerged as my favorite choice. Fundamentally, our model just does a bunch of math on many lists of numbers (to give more context: the big competitors to our model are Excel spreadsheets). Haskell seems well suited to this, and I hope it will be much more reliable and maintainable than what we currently have. I'm committed to writing purely functional code, because I've spent years experiencing the miseries of imperative code riddled with side-effects and global state. I'm shy about using all the advanced language features of Haskell, because I'm not that interested to learn them and I'd rather write plain code. I'm not a mathematician or researcher, just a guy who wants code that's concise, clean, and easy to deal with. Right now I have convinced my colleagues and bosses to join me in taking the CIS194 '13 course to learn Haskell. Once that's done, hopefully they're all so convinced of its usefulness that my bosses will commit to writing an FFI to the legacy C code. Once we have that, we can start writing production Haskell! Here are my questions: does anyone else have experience with a transition like this? Or at least have experience using Haskell in production? How‍ has that been going? Do you have any advice for me as I try to bring the rest of my company along? Thanks very much. **TLDR -** Beginner Haskeller at small company wants to convince colleagues to switch to Haskell. Any advice?",True,False,False,haskell,t5_2qh36,67275,public,self,Migrating A Small Company to Haskell.,0,[],1.0,https://www.reddit.com/r/haskell/comments/qvzms9/migrating_a_small_company_to_haskell/,all_ads,6,,,,,,,,,,,,,,,,,,,,
